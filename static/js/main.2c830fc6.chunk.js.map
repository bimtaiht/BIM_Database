{"version":3,"sources":["model/text/TextState.js","model/text/TextVM.js","model/text/TextVMUtil.js","model/input/InputView.js","util/apiUtil.js","model/main/entity/mass/MassType.js","model/main/entity/mass/item/MassItemField.js","util/generalUtil.js","model/main/entity/mass/table/MassColumn.js","model/text/TextView.js","model/main/single/model/CategoryData.js","model/main/single/model/CategoryDataUtil.js","model/main/entity/filter/FilterCategoryType.js","model/main/entity/filter/FilterValueType.js","model/main/entity/filter/StringFilterType.js","model/main/entity/filter/NumberFilterType.js","model/main/entity/filter/EntFilterUtil.js","model/main/entity/filter/EntFilter.js","model/main/entity/mass/table/rowgroup/MGI_I_CreateType.js","model/main/entity/mass/table/rowgroup/MGI_ItemUtil.js","model/main/entity/mass/table/rowgroup/MGI_Item.js","model/main/entity/mass/table/rowgroup/MassGroupItem.js","model/main/entity/mass/table/rowgroup/MassGroupComponent.js","model/main/entity/mass/table/rowgroup/MassGroupComponentUtil.js","model/main/entity/mass/table/rowgroup/MassGroupItemUtil.js","model/select/MultiSelectVMUtil.js","model/select/MultiSelectVM.js","model/select/MultiSelectView.js","model/hover/EntHoverVM.js","model/hover/EntHoverView.js","model/select/SelectVMUtil.js","model/select/SelectVM.js","model/float/FloatItemVM.js","model/float/FloatItemVMUtil.js","model/float/FloatItemView.js","model/select/SelectView.js","model/main/entity/mass/table/location/RRLF_LocationType.js","model/main/entity/mass/table/location/ReplaceRowLocationFactory.js","model/main/entity/mass/table/location/ReplaceRowLocationFactoryUtil.js","model/main/entity/mass/table/MassRow.js","model/main/entity/mass/table/MassRowUtil.js","model/main/entity/mass/table/MassCell.js","model/main/entity/mass/table/MassCellUtil.js","model/main/entity/mass/table/MassTableUtil.js","model/main/entity/setting/base/SettingType.js","model/main/entity/setting/base/Setting.js","model/main/entity/setting/massGroup/MassGroupSettingData.js","model/main/entity/mass/MassPropertyName.js","model/main/entity/setting/massGroup/MassGroupSettingDataUtil.js","model/main/entity/setting/massGroup/MassGroupSetting.js","model/main/entity/setting/massGroup/MassGroupSettingUtil.js","model/main/entity/workpackage/WorkpackageVM.js","model/main/entity/workpackage/WorkpackageVMUtil.js","model/checkbox/CheckboxVM.js","model/checkbox/CheckboxVMUtil.js","model/main/entity/workpackage/WorkpackageInputVM.js","model/main/entity/workpackage/WorkpackageInputVMUtil.js","model/main/entity/workpackage/Workpackage_DictVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSetting_DictVM.js","model/main/entity/setting/base/SettingVM.js","model/main/entity/setting/elementFilter/ElementFilterSettingVM.js","model/main/entity/filter/EntFilterVM.js","model/main/entity/filter/EntFilterVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataVM.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingVMUtil.js","model/main/entity/setting/base/SettingVMUtil.js","model/main/entity/setting/base/SettingInputVM.js","model/main/entity/setting/elementFilter/ElementFilterSettingInputVM.js","model/main/entity/setting/elementFilter/ElementFilterSetting_DictVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingInputVMUtil.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingVM.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingVMUtil.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSetting.js","model/main/entity/setting/massExport/exportSetting/MES_ValueRetrieveType.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingUtil.js","model/main/entity/setting/massExport/MassExportSettingDataVM.js","model/main/entity/setting/massExport/MassExportSettingDataVMUtil.js","model/main/entity/setting/massExport/MassExportSettingVM.js","model/main/entity/setting/massExport/MassExportSettingVMUtil.js","model/main/entity/setting/massExport/MassExportSettingInputVM.js","model/main/entity/setting/massExport/MassExportSetting_DictVM.js","model/main/entity/setting/massExport/MassExportSetting_DictVMUtil.js","model/main/entity/setting/massExport/MassExportSettingInputVMUtil.js","model/main/entity/setting/massGroup/MassGroupSetting_DictVM.js","model/main/entity/setting/massGroup/MassGroupSetting_DictVMUtil.js","model/main/entity/phase/PhaseVM.js","model/main/entity/phase/PhaseVMUtil.js","model/main/entity/state/StateType.js","model/main/entity/phase/Phase_DictVM.js","model/main/entity/phase/PhaseInputVM.js","model/main/entity/phase/Phase_DictVMUtil.js","model/main/entity/phase/PhaseInputVMUtil.js","model/main/entity/project/ProjectVM.js","model/input/NewInputView.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemStateType.js","model/checkbox/CheckboxView.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupVM.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupVMUtil.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValue_InputType.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValueVM.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValueVMUtil.js","model/main/entity/setting/typicallevel/filter/TLS_FilterVM.js","model/main/entity/setting/typicallevel/filter/TLS_FilterVMUtil.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemVM.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemVMUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataVM.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataVMUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSettingVM.js","model/main/entity/setting/typicallevel/TypicalLevelSettingVMUtil.js","model/main/entity/project/ProjectVMUtil.js","model/main/entity/project/Project_DictVM.js","model/main/entity/project/Project_DictVMUtil.js","model/main/entity/mass/result/MassResultCompVM.js","model/main/entity/mass/result/MassResultCompVMUtil.js","model/table/RenderState.js","model/table/RenderItem.js","model/table/RenderItemUtil.js","model/table/Render_Dict.js","model/table/TableColumn.js","model/table/TableColumnUtil.js","model/table/TableRow.js","model/table/TableCell.js","model/table/TableRowUtil.js","model/table/TableCellUtil.js","model/table/TableVM.js","model/table/TableVMUtil.js","model/main/entity/setting/workitemexport/WorkItemExportDataVM.js","model/main/entity/setting/workitemexport/WorkItemExportSettingVM.js","model/main/entity/setting/workitemexport/WorkItemExportSettingVMUtil.js","model/main/entity/setting/workitemexport/WorkItemExportDataVMUtil.js","model/main/entity/setting/workitemexport/WorkItemExportSetting.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_DictVM.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_DictVMUtil.js","model/main/single/form/PMDataVMUtil.js","model/main/single/form/PMDataVM.js","model/main/entity/setting/massGroup/field/MGS_FieldVM.js","model/main/entity/setting/massGroup/field/MGS_FieldVMUtil.js","model/main/entity/setting/massGroup/MassGroupSettingDataVM.js","model/main/entity/setting/massGroup/MassGroupSettingDataVMUtil.js","model/main/entity/setting/massGroup/MassGroupSettingVM.js","model/main/entity/setting/massGroup/MassGroupSettingVMUtil.js","model/main/entity/mass/table/MassTable.js","model/main/entity/mass/table/MassColumnUtil.js","model/main/entity/mass/item/MassItem_Dict.js","model/main/entity/mass/item/MassItem.js","model/main/entity/mass/item/phaseValue/MIPh_Item.js","model/main/entity/mass/item/phaseValue/MIPh_ItemUtil.js","model/main/entity/mass/item/MassItemUtil.js","model/main/entity/mass/result/MassResultComp.js","model/main/entity/mass/result/MassResultCompUtil.js","model/main/entity/mass/rebar/RebarMass_DictUtil.js","model/main/entity/value/ValueUnit.js","model/main/entity/mass/rebar/RebarMass_Dict.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroup.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupUtil.js","model/main/entity/setting/typicallevel/filter/TLS_Filter.js","model/main/entity/setting/typicallevel/filter/TLS_FilterUtil.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItem.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSettingData.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSetting.js","model/main/entity/setting/typicallevel/TypicalLevelSettingUtil.js","model/main/entity/phase/Phase.js","model/main/entity/phase/PhaseUtil.js","model/main/entity/phase/Phase_Dict.js","model/main/entity/setting/base/SettingUtil.js","model/main/entity/phase/PhaseInput.js","model/main/entity/phase/Phase_DictUtil.js","model/main/entity/phase/PhaseInputUtil.js","model/main/entity/project/Project.js","model/main/entity/exportset/ExportSet.js","model/main/entity/exportset/ExportSetVersion.js","model/main/entity/exportset/ExportSetVersionUtil.js","model/main/entity/exportset/ExportSetUtil.js","model/main/entity/level/Level_Dict.js","model/main/entity/level/Level.js","model/main/entity/level/LevelUtil.js","model/main/entity/project/ProjectUtil.js","model/main/entity/value/ValueRetrieveFrom.js","model/main/entity/level/Level_DictUtil.js","model/main/entity/project/Project_Dict.js","model/main/entity/setting/elementFilter/ElementFilterSetting.js","model/main/entity/setting/elementFilter/ElementFilterSettingData.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingUtil.js","model/main/entity/setting/base/SettingInput.js","model/main/entity/setting/base/SettingInputUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingInput.js","model/main/entity/setting/elementFilter/ElementFilterSettingInputUtil.js","model/main/entity/setting/elementFilter/ElementFilterSetting_Dict.js","model/main/entity/setting/massExport/MassExportSettingData.js","model/main/entity/setting/massExport/MassExportSettingDataUtil.js","model/main/entity/setting/massExport/MassExportSetting.js","model/main/entity/setting/massExport/MassExportSettingUtil.js","model/main/entity/setting/massExport/MassExportSettingInput.js","model/main/entity/setting/massExport/MassExportSettingInputUtil.js","model/main/entity/setting/massExport/MassExportSetting_Dict.js","model/main/entity/setting/massGroup/MassGroupSetting_Dict.js","model/main/entity/setting/versionCompare/VCS_Item.js","model/main/entity/setting/versionCompare/VersionCompareSetting.js","model/main/entity/setting/versionCompare/VersionCompareSettingUtil.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_Dict.js","model/main/entity/tracking/TrackingItem.js","model/main/entity/tracking/Tracking.js","model/main/entity/workpackage/WorkpackageInput.js","model/main/entity/workpackage/Workpackage_Dict.js","model/main/single/model/PMDataUtil.js","model/main/single/model/PMData.js","model/main/entity/workpackage/Workpackage.js","model/main/entity/workpackage/WorkpackageUtil.js","model/main/entity/workpackage/Workpackage_DictVM.js","model/main/entity/workpackage/Workpackage_DictView.js","model/main/entity/filter/EntFilterView.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataView.js","model/main/entity/setting/elementFilter/ElementFilterSetting_DictView.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingView.js","model/main/entity/setting/massExport/MassExportSettingDataView.js","model/main/entity/setting/massExport/MassExportSetting_DictView.js","model/main/entity/mass/table/MassCellView.js","model/main/entity/mass/table/MassRowView.js","model/main/entity/mass/table/MassTableView.js","model/main/entity/mass/result/MassResultCompView.js","model/table/TableView.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_DictView.js","model/main/single/form/PMDataView.js","model/view/TestView.js","model/table/CellVM.js","model/table/ColumnVM.js","model/table/RowVM.js","model/main/entity/mass/detail/MassDetailTableUtil.js","model/main/entity/mass/detail/MassDetailTable.js","model/main/entity/mass/detail/MassDetailVM.js","model/main/entity/mass/detail/MassDetailTableView.js","model/main/entity/mass/detail/MassDetailView.js","model/main/entity/project/comp/ProjectCompVM.js","model/main/entity/project/comp/ProjectCompVMUtil.js","model/main/entity/phase/Phase_DictView.js","model/main/entity/mass/rebar/RebarMass_DictView.js","model/main/entity/level/Level_DictView.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupView.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValueView.js","model/main/entity/setting/typicallevel/filter/TLS_FilterView.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemView.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataView.js","model/main/entity/setting/typicallevel/TypicalLevelSettingView.js","model/main/entity/project/comp/ProjectCompView.js","App.js","reportWebVitals.js","index.js"],"names":["text","password","TextVM","content","undefined","placeholder","State","ts","makeObservable","this","observable","v","onSetContent","style","inputStyle","wrapper","position","get","q","qI","InputView","props","onChange","e","value","target","state","Content","store","textVMUtil","data","Password","Component","observer","http","timeout","axios","create","baseURL","Accept","handleResponse","response","success","status","message","statusText","callApi","action","a","err","error","timeout_default","url","config","put","payload","result","post","concrete","formwork","rebar","Project","Phase","Workpackage","Value","Unit","partition","rebarType","elementName","MassType","workItem","level","diameter","GetValueString","massFieldValue","field","Name","FullName","GetListForTypicalLevelFilter","randomId","Intl","DateTimeFormat","Math","random","toString","substr","newGUID","replace","c","crypto","getRandomValues","Uint8Array","UpdateFromModel","obj","M2VM","MoveItem","list","oldIndex","newIndex","temp","IsSameValues","list1","list2","isValidCheck","isSame","length","forEach","x","i","includes","Remove","dict","key","index","findIndex","Key","splice","Add","func","isDelete","newfunc","push","MassColumn","Cells","_id","genUtil","Dict","Columns","indexOf","TextView","getWrapperContent","CategoryData","categoryNames","instance","category","family","parameter","bystring","bynumber","byequal","bycontain","bynotcontain","bysmaller","bybigger","bybetween","categoryType","EntFilter","ValueType","valueType","NumberFilterType","numberFilterType","StringFilterType","stringFilterType","Values","values","CategoryType","GetValueStorageList","fct","Instance","CategoryNames","PMData","ParameterNames","IsValid","filter","isValid","filterValues","fvt","sft","lowerVal","toLowerCase","isNaN","nft","leftVal","rightVal","IsEqualLeft","IsEqualRight","valueStorageList","util","byuser","byauto","mgi","createType","MGI_Item","MassGroupItem","CreateType","ct","Title","Delete","Items","Index","title","newMGI","newMGI_id","SupComponent","AllItems","id","SubComponents","NotIncludeValues","AddNotIncludeValue","GetItem","item","itemUtil","OnIsFirstSetSupRow_Funcs","HandleCreatedByUserRows","mgii_ct","addRow","supRow","row","Table","GetRow","FullValue","IsCreatedByUser","handleRow","handleNonField","subMgcIndex","y","Filter","SupRow","replaceMgi","NewMGI","Handle_ReplaceMGI","map","items","ApiData","Field","subComponents","valueOrders","ValueOrders","notIncludeValues","IsFirstSetSupRow","isFirstSetSupRow","IsHaveMassItem","table","MassGroupComponent","originComponent","OriginComponent","AllSubItems","apply","supItem","filterUtil","SupItem","Clone","GetOriginComponent","subComps","supCom","getFromDb","compUtil","IsHaveValueOrder","GetTable","initialItems","MultiSelectVM","InitialItems","GetInitialIndexs","selectedIndexs","GetSelectedItems","SelectedIndexs","open","canOpen","InitialIndexs","initialIndexs","SelectedItems","selectedItems","OnSelectedItemChanged","titleRender","DisplayContent","OnSetOpen","Option","Select","MultiSelectView","onValueChange","onDropdownVisibleChange","Open","width","Placeholder","elems","displayContent","TitleRender","mode","optionFilterProp","filterOption","input","option","children","CanOpen","EntHoverVM","IsElementVisible","ShowElement","HideElement","EntHoverView","minWidth","onMouseEnter","onMouseLeave","Element","initialItem","SelectVM","InitialItem","GetInitialIndex","selectedIndex","GetSelectedItem","SelectedIndex","CanClear","Clear","InitialIndex","initialIndex","SelectedItem","selectedItem","padding","FloatItemVM","getClassName","className","location","loc","FloatItemView","floatItemVMUtil","SelectView","floatElem","floatItemStore","size","type","onClick","DivStyle","showSearch","inside","lower","ReplaceRowLocationFactory","Location","lt","ToggleLocation","backgroundColor","Color","border","MassRow","SubItems","isShowSub","rank","isHaveSub","IsToolVisible","GetCellByColumn","col","Column","UpdateData","Rank","IsHaveSub","ToggleSub","IsShowSub","SetSubFields","tempSubFields","TempSubFields","SubFields","supMgi","mgc","SubItem","subMgis","mgiUtil","SubMassGroupComponent","SubMassGroupItem","ColumnField","mif","ValidPhasesByInput","HandleItem","GetValue","MoveUp","CurrentList","orderItems","OrderMGI","OrderItems","orderValues","OrderValues","mgiIndex1","mgiIndex2","MoveDown","AddSub","SubCells","GetSubCells","totalValues","TotalValue","reduce","b","ContentVM","ValueString","ReplaceOK","factory","ReplaceFactory","refRow","ReferenceRow","rrlf_lt","Replace","oldMgi","newMgi","MainMGI","ReplaceMGI","IsShowSubFieldSelect","IsModalVisible","OpenModal","TitleVM","SubFieldSelectVM","locSelectVM","LocationSelectVM","LocationStorageList","ModalOK","ModalCancel","currentList","MainRows","concat","massGroupItem","subMassGroupItem","subFields","ToggleButtonContentVM","toggleButtonContent","toggleButtonContentVM","ToggleButtonContent","OnSetContent","subFieldSelectVM","AllRows","locationSelectVM","titleVM","replaceFactory","visible","onOk","onCancel","gutter","marginTop","flex","ButtonStyle","ToolElement","display","marginLeft","UpCircleOutlined","DownCircleOutlined","danger","GetRank","GetStyle","GetIsHaveSub","GetToggleButtonContent","GetSubFieldSelectVM","storageList","MassItemFields","multiSelectUtil","Order","sort","GetLocationSelectVM","selectUtil","GetSubMassGroupItem","subItems","GetSubFields","subMGI","mgis","lastValidIndex","isValidHandle","HaveMassItemSubComponents","currentIndex","CreateSubMassGroupItem","mgcIndex","mgi_I","mgi_iUtil","MassCell","GetUnit","unit","OnGet_TotalValue_Func_Dict","totalValue","subRows","Row","AsString","console","log","IsHaveVCS_Item","ShowDetail","process","openTabFunc","window","getUrl","viewDetailId","GetViewDetailId","vcs_Item","valueColor","tdBgColor","massIds","massType","handle","apiData","api","then","OnGet_TLS_LevelGroups_Func_Dict","isHaveWarning","tls_LevelGroup_Descriptions","unitVM","Get_TotalValue","contentVM","formatValue","toLocaleString","maximumFractionDigits","subCells","isHaveVCS_Item","ValueColor","TDBgColor","color","fontWeight","tls_LevelGroups","Get_TLS_LevelGroups","pmData","GetIsHaveVCS_Item","MassResultComp","Phases","ColumnIndex","GetValueColor","VCS_Item","GetTDBgColor","Handle_VCS_Item","VersionCompareSetting","cells","compareIndex","compareItem","getItem","ratio","GetMassType","isPending","Handle_TLS_LevelGroups","IsGet_TLS_LevelGroups","handledCount","count","checkadd_Val","val","handle_Val","Array","isArray","TLS_LevelGroups","TLS_LevelGroup","targetObj","GetPhaseItem","Get_TLS_LevelGroup","OnGet_TLS_LevelGroup_Func_Dict","Handle_TotalValue","IsGet_TotalValue","checkedList","totalVal","Number","OnGet_FullValue_Func_Dict","GetIsHaveWarning","getWarningFunc","levelGroups","IsHaveWarning","Handle_TLS_LevelGroup_Descriptions","IsGet_TLS_LevelGroup_Descriptions","TLS_LevelGroup_Descriptions","getDescFunc","FullDescription","OnGetLevelStorageList_Func_Dict","OnGet_TLS_LevelGroups_Funcs","GetMassGroupName","MassGroupSetting","GetMainMGI","MainMGC","elementfilter","massexport","massgroup","Setting","OnDelete","Input","EditItemId","name","OnNameChanged","description","OnDescriptionChanged","OnDataChanged","projectId","settingType","SettingType","Description","Data","MassGroupSettingData","AddNewField","MassPropertyNames","Fields","fields","Category","GetDefaultFields","mpn","massGroupCompUtil","massGroupComponent","dataUtil","WorkpackageVM","code","fullName","WorkpackageVMs","Code","codeVM","nameVM","descriptionVM","OnCodeChanged","OnFullNameChanged","GetSupItem","supWp","PMDataVM","Workpackage_DictVM","CheckboxVM","Cancel","ischecked","isDisable","onCheckChange","WorkpackageInputVM","workpackageVMStorageList","isNew","commandName","IsNew","AddDatabase","WorkpackageInput","DeleteFunc","CodeVM","NameVM","DescriptionVM","IsNewVM","Ischecked","selectVM","SupItemSelectVM","supItemSelectVM","selectVMUtil","WorkpackageVMStorageList","CommandVM","workpackageVM","isNewVM","checkboxVMUtil","commandVM","CommandName","pmDataVM","GetCommandName","GetWorkpackageVMStorageList","GetWorkpackageInputVM","dictVM","OnGetItemsDone_Funcs","OnAddDatabaseDone","command","OnAdd","workpackageInputVMUtil","Workpackage_Dict","ElementFilterSetting_DictVM","ModelItem","OnGetItemsDone","currentItem","CurrentItem","EditItem","SettingVM","GetDataVM","OnGetDataVM","textUtil","dataVM","OnInitialSetDataVM","ElementFilterSettingVM","cateFilterVM","CategoryFilterVM","OnInitialData","famFilterVM","FamilyFilterVM","EntFilterVM","SetData","ValueTypeSelectVM","StringFilterTypeSelectVM","ValuesSelectVM","ValueStorageList","valueTypeSelectVM","FilterValueTypes","stringFilterTypeSelectVM","StringFilterTypes","valuesSelectVM","multiSelectVMUtil","ValueSelectPlaceholder","ElementFilterSettingDataVM","GetCategoryFilterVM","CategoryFilter","filterVMUtil","isHaveFamilyFilter","GetFamilyFilterVM","FamilyFilter","IsHaveFamilyFilter","IsHaveFamilyFilterVM","categoryFilterVM","familyFilterVM","isHaveFamilyFilterVM","DataVM","dataVMUtil","SettingInputVM","settingTypeVM","editItem","SettingTypeVM","ElementFilterSettingInputVM","GetItems","itemVMUtil","GetInput","inputVMUtil","MES_ValueSettingVM","ValueSettingVMs","RetrieveTypeSelectVM","RetrieveType","ValueFilterVM","WorkpackageSelectVM","MassTypeSelectVM","retrieveType","retrieveTypeSelectVM","RetrieveTypeStorageList","valueFilterVM","ValueFilter","modelItem","workpackageSelectVM","massTypeSelectVM","MassTypeStorageList","GetRetrieveTypeStorageList","ValueRetrieveTypes","GetWorkpackageVM","workpackage","GetMassTypeStorageList","MassTypes","MES_ValueSetting","ValueSettings","workpackageId","byparameter","GetDefault","vrt","valueFilter","GetWorkpackage","Workpackages","GetApiData","MassExportSettingDataVM","elementFilterVMStorageList","valueSettingVMs","AddNewValueSettingVM","AddNewValueSetting","itemView","valueSettingVMUtil","ElementFilterSelectVM","ElementFilterVM","elementFilterVM","ElementFilter","elementFilterSelectVM","ElementFilterVMStorageList","modelList","oldCount","newCount","delta","abs","originItemVM","valueSettingUtil","itemVM","GetElementFilterVMStorageList","GetElementFilterVM","elemFilter","GetValueSettingVMs","MassExportSettingVM","MassExportSettingInputVM","MassExportSetting_DictVM","MassGroupSetting_DictVM","PhaseVM","addversion","Phase_DictVM","AddVersion","stateType","OK","AddMassVersion","warning","PhaseInputVM","ProjectVM","typicalLevelSetting","typicalLevelSetting_ForEdit","phase_DictVM","rebarMass_Dict","RebarMass_Dict","InputExportSet","Level_Dict","Url","NewInputView","handleChange","contentEditable","React","createRef","fontFamily","innerRef","html","CheckboxView","onCheckedChange","checked","OnCheckChanging","disabled","LevelGroupVM","LevelGroups","Primary","primary","isSelectOpen","LevelStorageList","Levels","levelSelectVM","OnGetLevelStorageList_Funcs","triggerVM","IsSelectOpen","buttonTypeVM","addContentVM","trigger","GetDefaultPrimary","select","TLS_FilterValueVM","InputType","it","ToggleInputType","ValueVM","SwitchChecked_Funcs","valueVM","SelectOpen","selectOpen","PopoverState","popoverState","GetPopoverState","TLS_FilterVM","Filters","AddValue","valueUtil","FieldFilterStorageList","fieldSelectVM","FieldStorageList","GetValues","TLS_PageItemVM","st","ToggleState","NameOK","NameCancel","isLast","IsLast","PageItems","AllTabs","IsModelChangePageKey","CurrentPageKey","AddLevelGroup","levelGroupUtil","filters","AddFilter","delElem","InputToolElement","InputElement","GetLevelGroups","GetFilters","TypicalLevelSettingDataVM","pageItems","AddPageItem","pageItemUtil","IsHaveAddCommandTab","allTabs","currentPageKey","ChangePageKey","addCommandTab","TitleElement","AddCommandTab","GetPageItems","TypicalLevelSettingVM","Save","project","GetPhase_DictVM","GetItemsDone","phaseDictVMUtil","Phase_Dict","GetTypicalLevelSetting_Func","model","typicalLevelUtil","GetTypicalLevelSetting","tls","TypicalLevelSetting","OnGetTypicalLevelSetting_Funcs","GetTypicalLevelSetting_ForEdit","TypicalLevelSetting_ForEdit","Project_DictVM","MassResultCompVM","IsShowProjectSelect","CanHavePhase","isHavePhase","IsDataPending","handledRatio","GetMassData","HandledRatio","projects","Projects","projectVMs","projectVMStorageList","ProjectSelectVM","projectSelectOpen","ProjectPopoverState","projectPopoverState","projectSelectVM","ProjectVMStorageList","ProjectVMs","placement","href","ProjectSelectOpen","phases","phaseVMs","massItem_Dict","MassItem_Dict","phaseVMStorageList","PhaseSelectVM","phaseSelectVM","PhaseVMStorageList","PhaseVMs","IsHavePhase","isShowPhaseSelectVM","massGroupSettingStorageList","MassGroupSettingSelectVM","massGroupSettingSelectVM","MassGroupSettingStorageList","toFixed","loadingSpinTipVM","LoadingSpinTip","LoadingSpinTipVM","isfetchProjects","GetProjectVMStorageList","massTable","MassTable","OnIsUpdateDataDone_Funcs","OnSetHandledRatio_Funcs","GetProjectVMs","GetPhaseVMs","GetMassGroupSettingStorageList","MassGroupSetting_Dict","GetProjectPopoverStateValue","_default","edit","RenderItem","render","Render","GetRender","rs","dataIndex","inputVM","Render_Dict","renderUtil","TableColumn","RenderState","render_Dict","renders","DataIndex","GetActionColumn","CanAdd","add","AddItem","cell","editElem","CanEdit","Edit","CanDelete","DeleteItem","TableRow","Item","TableCell","renderState","GetCells","cellUtil","TableVM","IsShowActionColumn","columns","dataSource","rows","OnGetItemForAdd","DataSource","rowUtil","Rows","OnDeleteItem","OnEditItem","colUtil","ElementName","Diameter","Weight","WorkItemExportDataVM","WorkItemExportSettingVM","IsCategoryChecked","categoryCheckboxVM","checkboxUtil","WorkItemExportSetting","WorkItemExportSetting_DictVM","tableVM","GetTableVM","nameCol","isCateCol","CategoryCheckboxVM","isSubWorkItemCol","GetWorkpackage_DictVM","OnGetWorkpackagesDone","workpackageVMUtil","workpackage_DictVMUtil","GetElementFilterSetting_DictVM","elementFilterSetting_DictVMUtil","ElementFilterSetting_Dict","GetMassExportSetting_DictVM","massExportSetting_DictVMUtil","MassExportSetting_Dict","GetMassGroupSetting_DictVM","massGroupSetting_DictVMUtil","GetProject_DictVM","project_DictVMUtil","Project_Dict","GetWorkItemExportSetting_Dict","wieDictVMUtil","WorkItemExportSetting_Dict","isDebug","workpackage_DictVM","elementFilterSetting_DictVM","massExportSetting_DictVM","massGroupSetting_DictVM","project_DictVM","massResultCompVM","massResultCompVMUtil","filterValueTypes","stringFilterTypes","valueRetrieveTypes","parameterNames","massPropertyNames","massTypes","workItemExportSetting_Dict","IsDebug","MGS_FieldVM","FieldVMs","FieldSelectVM","GetFieldStorageList","MassGroupSettingDataVM","fieldVMs","AddNewFieldVM","fieldVMUtil","GetFieldVMs","MassGroupSettingVM","IsValidTable","columnField","FullRows","Init","GetColumn","GetCell","Build","colField","IsHaveAsyncData","IsOnSaveMassGroup","HandledItems","HandledItemPhases","AddHandledItems","Count","IsUpdateDataDone","colFieldValue","initialRow","HandleRowFieldIndex","GetRow_Value_FieldIndex","rowFieldIndex","itemCount","lastRow","rowField","valueString","fullValue","Handle_AddRow","subMgcs","subIndex","r1","awaitGetSupRowForAdd","r2","SaveMassGroup","massGroupName","MassGroupInputOK","MassGroupName","mgsUtil","mgsVMUtil","MassGroupNameVM","MassGroupInputCancel","AddMainRow","massGroupSetting","mainMGC","mgi1","mainMGI","massGroupNameVM","MassItem","IsGetElement","OnGetElementDone_Funcs","massItem","isFromElement","mt","groupName","getValFunc","DeleteDatabase","IsGet_TLS_LevelGroup","phaseName","PhaseItems","elementId","exportSetId","exportSetVersionId","info","Info","get_TLS_LevelGroup","tls_LevelGroup","get_FullValue","Get_FullValue","phaseItems","MIPh_Item","Handle_TLS_LevelGroup","phase","getLevelGroup_Func","pi","GetValidTLS_PageItem","GetValidTLS_LevelGroup","validPi","IsValidTLS_PageItem","pageItem","validLg","Handle_FullValue","IsGet_FullValue","getFullValue_Func","lg","Elements","GetProject","getByViewDetail","viewDetail","masses","GetPhases","exportSetVersionIds","GetValidPhasesByInput","inputPhases","GetPhaseItems","phaseItemUtil","wp_Dict","IsDataChanged","RefreshData","projectIds","phaseIds","massItemUtil","setExportSetData","exportSet","currentVersion","CurrentVersion","OnGetCurrentVersionDone_Func","inputExportSet","OnGetInputExportSetDone_Funcs","LevelGroup","levels","getLevelStorageList","IsGet_LevelStorageList","GetLevelStorageList","min","LevelIndexs","max","MinLevel","MaxLevel","FilterDescription","TLS_Filter","arr","TLS_PageItem","TypicalLevelSettingData","fieldFilterStorageList","levelStorageList","GetTest","GetFromDb_Async","phaseId","resData","editData","GetFieldFilterStorageList","fieldUtil","SaveDatabase","level_Dict","getLevelsFunc","OnGetExportSetVersions_Func","exportSetVersions","IsOnGetDb_Async","GetExportSetVersionData","ExportSetVersions","GetExportSetVersions","settingUtil","addVersionFunc","PhaseInput","phaseUtil","inputUtil","phase_Dict","phaseDictUtil","GetInputExportSetDone","getInputExportSetDone","ExportSet","GetCurrentVersionDone","ExportSetVersion","RetrieveFrom","retrieveFrom","GetCurrentVersion_Async","versionUtil","AddVersion_Async","addItem","Level","getAll","Elevation","elevation","GetRebarMass_Dict","rebarMassDictUtil","GetInputExportSet_Async","exportSetUtil","GetLevel_Dict","levelDictUtil","ElementFilterSetting","ElementFilterSettingData","categoryFilter","familyFilter","SettingInput","GetData","OnGetData","prefix","UrlPrefix","AddDatabaseDone","NewItem","GetEditItem","Update","urlPrefix","ElementFilterSettingInput","elementFilterSettingUtil","cateFilter","MassExportSettingData","elementFilter","elementFilterId","valueSettings","exportSettings","GetElementFilter","elemFilterId","GetDefaultValueSettings","MassExportSetting","MassExportSettingInput","massExportSettingUtil","TrackingItem","Tracking","WorkpackageId","supId","SupId","NewWorkpackage","workpackageUtil","wp","GetFullName","UpperList","LowerList","wps","GetWorkpackagesDone","workpackageInput","GetFilterValueTypes","GetStringFilterTypes","GetValueRetrieveTypes","GetMassPropertyNames","GetMassItemFields","GetMassTypes","DebugPoints","workpackage_Dict","elementFilterSetting_Dict","massExportSetting_Dict","massGroupSetting_Dict","project_Dict","massResultComp","categoryData","massItemFields","versionCompareSetting","tracking","upperList","lowerList","dbItem","GetSubItems","GetUpperList","GetLowerList","workpackageVMs","CurrentWorkpackage","workpackageInputVM","Workpackage_DictView","CurrentWorkpackageVM","searchName","SearchName","orientation","plain","margin","DeleteView","EntFilterView","test","ItemVMs","CurrentItemVM","ElementFilterSettingDataView","ElementFilterSetting_DictView","MES_ValueSettingView","borderRadius","MassExportSettingDataView","valueSettingElems","MassExportSetting_DictView","MassCellView","TDStyle","InfoCircleOutlined","AStyle","MassRowView","subElems","toggleButton","marginRight","scope","Style","HoverToolElement","ModalElement","j","MassTableView","thElems","tbodyElems","span","MassResultCompView","IsShowPhaseSelectVM","justifyContent","TableView","tableElem","theadElem","tbodyElem","WorkItemExportSetting_DictView","PMDataView","TestView","CellVM","OnGetValueString","ColumnVM","RowVM","GetFields","GetColumns","GetValueTitle","MassDetailTable","GetRows","parseFloat","setValueFunc","MassDetailVM","DetailTable","detailTable","MassDetailTableView","colElems","rowElems","cellElems","MassDetailView","match","params","withRouter","ProjectCompVM","projectVM","projectUtil","projectVMUtil","massResComp","setItemsFuncs","massResutlCompVMUtil","Phase_DictView","PlusCircleOutlined","RebarMass_DictView","Level_DictView","LevelGroupView","LevelSelectVM","DeleteFilled","TLS_FilterValueView","unCheckedChildren","checkedChildren","TLS_FilterView","TLS_PageItemView","Tabs","TabPane","TypicalLevelSettingDataView","onKeyDown","stopPropagation","activeKey","tab","TypicalLevelSettingView","SaveFilled","ProjectCompView","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2c830fc6.chunk.js","sourcesContent":["export const text = 'text'\r\nexport const password = 'password'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as ts from './TextState'\r\n\r\nexport class TextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder : observable,\r\n      State : observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  get Content(){\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  inputStyle\r\n\r\n  style\r\n  get Style() {\r\n    if (!this.style) {\r\n      this.style = this.inputStyle ? this.inputStyle : {};\r\n\r\n      if (this.wrapper) {\r\n        this.style.position = 'relative';\r\n      }\r\n    }\r\n    return this.style;\r\n  }\r\n\r\n  State = ts.text\r\n}","import { TextVM } from \"./TextVM\"\r\n\r\nexport const get = (q, placeholder) => {\r\n  var qI = new TextVM();\r\n  qI.content = q;\r\n  qI.placeholder = placeholder;\r\n  return qI;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport * as ts from '../text/TextState'\r\n\r\nclass InputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    var { value } = e.target;\r\n    this.state.Content = value;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var { content, placeholder } = data;\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <Input value={content} onChange={this.onChange}\r\n            placeholder={placeholder} /> : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password value={content} onChange={this.onChange} /> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(InputView)","import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nexport const API_URL = 'https://api.bimdev.vn/api';\r\n\r\n// const http = axios.create({\r\n//   baseURL: API_URL,\r\n//   Accept: 'application/json',\r\n//   'Content-Type': 'application/json',\r\n//   //timeout: 20000\r\n//   timeout: 20000000\r\n// });\r\n\r\nconst http = (timeout) => axios.create({\r\n    baseURL: API_URL,\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n    timeout\r\n  });\r\n\r\nconst handleNetworkError = (err) => {\r\n  message.error(`Error sending request: ${err}`);\r\n  return {\r\n    success: false\r\n  };\r\n}\r\n\r\nconst handleResponse = (response) => {\r\n  // Parse the axios response\r\n  const success = response.status >= 200 && response.status < 300;\r\n  const data = response.data;\r\n  let message = response.statusText;\r\n  return {\r\n    success,\r\n    data,\r\n    message\r\n  };\r\n}\r\n\r\nexport const callApi = async (action) => {\r\n  try {\r\n    const response = await action;\r\n    return handleResponse(response);\r\n  } catch (err) {\r\n    return handleNetworkError(err);\r\n  } finally { }\r\n}\r\n\r\nexport const timeout_default = 20000\r\n\r\nexport const get = async (url, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  return callApi(http(timeout).get(url, config));\r\n}\r\n\r\nexport const put = async (url, payload, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).put(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const post = async (url, payload, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).post(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const del = async (url, payload,timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).delete(url, payload));\r\n  return result;\r\n}","export const concrete = \"concrete\";\r\nexport const formwork = \"formwork\";\r\nexport const rebar = \"rebar\";\r\n\r\nexport const GetAll = () => {\r\n  return [ concrete, formwork, rebar ];\r\n}\r\n\r\nexport const IsGetElement = (massType) => {\r\n  return massType === concrete || massType === formwork;\r\n}","import * as mt from '../MassType'\r\n\r\nexport const Project = 'Project'\r\nexport const Phase = 'Phase'\r\nexport const Workpackage = 'Workpackage'\r\nexport const Value = 'Value'\r\nexport const Unit = 'Unit'\r\nexport const partition = 'partition'\r\nexport const rebarType = 'rebarType'\r\nexport const elementName = 'elementName'\r\nexport const MassType = 'MassType'\r\nexport const workItem = 'workItem'\r\nexport const level = 'level'\r\nexport const diameter = 'diameter'\r\nexport const block = 'block'\r\nexport const discipline = 'discipline'\r\n\r\nexport const GetAll = () => {\r\n  return [MassType, workItem, level, diameter]\r\n}\r\n\r\nexport const GetDirectiveFields = () => {\r\n  return [Project, Workpackage, Value, Unit];\r\n}\r\n\r\nexport const GetIdentifyFields = () => {\r\n  return [elementName];\r\n}\r\n\r\nexport const GetFullFields = (massItem, field) => {\r\n  switch (field) {\r\n    case Project:\r\n    case Value:\r\n    case Unit:\r\n    case MassType:\r\n    case Phase:\r\n      return {\r\n        fields: [field],\r\n        isFromElement: false\r\n      };\r\n    case workItem:\r\n    case elementName:\r\n    case rebarType:\r\n    case partition:\r\n    case level:\r\n    case diameter:\r\n      var massType = massItem[MassType];\r\n      if (massType === mt.rebar) {\r\n        return {\r\n          fields: ['Info', field],\r\n          isFromElement: false\r\n        };\r\n      } else {\r\n        var groupName = undefined;\r\n        // kiểm tra các phân nhóm trong Element: identify, locate ...\r\n        switch (field) {\r\n          case workItem:\r\n          case elementName:\r\n            groupName = 'identify';\r\n            break;\r\n          case level:\r\n            groupName = 'locate';\r\n            break;\r\n        }\r\n        return {\r\n          fields: ['Element', 'info', groupName, field],\r\n          isFromElement: true\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\nexport const GetValueString = (massFieldValue, field) => {\r\n  var value = undefined;\r\n\r\n  switch (field) {\r\n    case Project:\r\n    case Phase:\r\n      value = massFieldValue.Name;\r\n      break;\r\n    case Workpackage:\r\n      value = massFieldValue.FullName;\r\n      break;\r\n    default:\r\n      value = massFieldValue;\r\n      break;\r\n  }\r\n\r\n  return value ? value : 'undefined';\r\n}\r\n\r\nexport const GetListForTypicalLevelFilter = () => {\r\n  return [workItem, block, discipline]\r\n}\r\n\r\nexport const GetDefaultListValue = (field) => {\r\n  switch (field) {\r\n    case workItem:\r\n      return ['Dầm', 'Sàn', 'Cột', 'Vách'];\r\n    default:\r\n      return [];\r\n  }\r\n}","\r\nexport let dtFormat = new Intl.DateTimeFormat('en-GB');\r\n\r\nexport const deepClone = (q) => {\r\n  return JSON.parse(JSON.stringify(q));\r\n}\r\n\r\nexport const randomId = () => {\r\n  // Math.random should be unique because of its seeding algorithm.\r\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n  // after the decimal.\r\n  return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nexport const newGUID = () => {\r\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n  );\r\n}\r\n\r\nexport const UpdateFromModel = (obj, action) => {\r\n  obj.M2VM = true;\r\n  action();\r\n  obj.M2VM = false;\r\n}\r\n\r\nexport const MoveItem = (list, oldIndex, newIndex) => {\r\n  if (oldIndex === -1 || newIndex === -1 ||\r\n    oldIndex === newIndex) return;\r\n  var temp = list[oldIndex];\r\n  list[oldIndex] = list[newIndex];\r\n  list[newIndex] = temp;\r\n}\r\n\r\nexport const IsEqual = (list1, list2) => {\r\n  if (list1.length !== list2.length) return false;\r\n  var isValidCheck = true;\r\n  var isEqual = true;\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && x !== list2[i]) {\r\n      isValidCheck = false; isEqual = false;\r\n    }\r\n  })\r\n\r\n  return isEqual;\r\n}\r\n\r\nexport const IsSameValues = (list1, list2) => {\r\n  var isValidCheck = true;\r\n  var isSame = true;\r\n\r\n  if (list1.length !== list2.length) return false;\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && !list2.includes(x)) {\r\n      isValidCheck = false; isSame = false;\r\n    }\r\n  })\r\n\r\n  return isSame;\r\n}\r\n\r\nexport const GroupBy = function (xs, key) {\r\n  var groups = [];\r\n\r\n  xs.forEach(x => {\r\n    var val = x[key];\r\n    var group = undefined;\r\n    var index = groups.findIndex(y => val === y.Key);\r\n    if (index === -1) {\r\n      group = {\r\n        Key: val,\r\n        Items: []\r\n      };\r\n      groups.push(group);\r\n    } else {\r\n      group = groups[index];\r\n    }\r\n    group.Items.push(x);\r\n  })\r\n\r\n  return groups;\r\n};\r\n\r\nexport const Remove = (dict, key) => {\r\n  var index = dict.findIndex(x => x.Key === key);\r\n  if (index !== 0) {\r\n    return dict.splice(index, 1);\r\n  }\r\n}\r\n\r\nexport const Add = (dict, func, isDelete = true) => {\r\n  var key = newGUID();\r\n\r\n  var newfunc = () => {\r\n    if (func) {\r\n      func();\r\n    }\r\n    if (isDelete) {\r\n      Remove(dict, key);\r\n    }\r\n  }\r\n\r\n  dict.push({\r\n    Key: newGUID(),\r\n    Value: newfunc\r\n  });\r\n}","import * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport default class MassColumn {\r\n  _id\r\n  get id() {\r\n    if (!this._id){\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index(){\r\n    return this.Dict.Columns.indexOf(this);\r\n  }\r\n\r\n  Cells = []\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from \"antd\";\r\n\r\nclass TextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = {\r\n        content: `Nội dung`\r\n      }\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var { content } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {content}\r\n        {this.getWrapperContent()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TextView)","import * as util from './CategoryDataUtil'\r\n\r\nexport class CategoryData {\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new CategoryData();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = util.GetCategoryNames();\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n}","export const GetCategoryNames = (data) => {\r\n  return ['Floors', 'Structural Framing', 'Walls', 'Structural Columns']\r\n}","export const category = \"category\";\r\nexport const family = \"family\";\r\nexport const parameter = 'parameter'\r\n\r\nexport const GetAll = () => {\r\n  return [ category, family, parameter ];\r\n}","export const bystring = \"bystring\";\r\nexport const bynumber = \"bynumber\";\r\n\r\nexport const GetAll = () => {\r\n  return [ bystring, bynumber ];\r\n}","export const byequal = \"byequal\";\r\nexport const bycontain = \"bycontain\";\r\nexport const bynotcontain = \"bynotcontain\";\r\n\r\nexport const GetAll = () => {\r\n  return [ byequal, bycontain, bynotcontain ];\r\n}","export const byequal = \"byequal\";\r\nexport const bysmaller = \"bysmaller\";\r\nexport const bysmallerorequal = \"bysmallerorequal\";\r\nexport const bybigger = \"bybigger\";\r\nexport const bybiggerorequal = \"bybiggerorequal\";\r\nexport const bybetween = \"bybetween\";\r\n\r\nexport const GetAll = () => {\r\n  return [ byequal, bysmaller, bybigger, bybetween ];\r\n}","import { CategoryData } from \"../../single/model/CategoryData\"\r\nimport { PMData } from \"../../single/model/PMData\";\r\nimport { EntFilter } from \"./EntFilter\"\r\nimport * as fct from './FilterCategoryType'\r\nimport * as fvt from './FilterValueType'\r\nimport * as sft from './StringFilterType'\r\nimport * as nft from './NumberFilterType'\r\n\r\nexport const categoryData = () => {\r\n  return CategoryData.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, categoryType) => {\r\n  var qI = new EntFilter();\r\n  qI.ValueType = q.valueType;\r\n  qI.NumberFilterType = q.numberFilterType;\r\n  qI.StringFilterType = q.stringFilterType;\r\n  qI.Values = q.values;\r\n  qI.CategoryType = categoryType;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q) => {\r\n  if (!q) return q;\r\n  var qI = new EntFilter();\r\n  qI.ValueType = q.ValueType;\r\n  qI.NumberFilterType = q.NumberFilterType;\r\n  qI.StringFilterType = q.StringFilterType;\r\n  qI.Values = [...q.Values];\r\n  qI.CategoryType = q.CategoryType;\r\n  return qI;\r\n}\r\n\r\nexport const GetValueStorageList = (q) => {\r\n  var list = [];\r\n\r\n  switch (q.CategoryType) {\r\n    case fct.category:\r\n      list = categoryData().CategoryNames;\r\n      break;\r\n    case fct.parameter:\r\n      list = pmData().ParameterNames;\r\n      break;\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    valueType: q.ValueType,\r\n    numberFilterType: q.NumberFilterType,\r\n    stringFilterType: q.StringFilterType,\r\n    values: q.Values\r\n  }\r\n}\r\n\r\nexport const IsValid = (filter, value) => {\r\n  if (value === undefined || value === null) return false;\r\n\r\n  var isValid = false;\r\n  var filterValues = filter.Values;\r\n  switch (filter.ValueType) {\r\n    case fvt.bystring:\r\n      if (typeof value === 'string') {\r\n        var filterType = filter.StringFilterType;\r\n        switch (filterType) {\r\n          case sft.byequal:\r\n            filterValues.forEach(x => {\r\n              if (!isValid && x === value) {\r\n                isValid = true;\r\n              }\r\n            })\r\n            break;\r\n          case sft.bycontain:\r\n            var lowerVal = value.toLowerCase();\r\n            filterValues.forEach(x => {\r\n              if (!isValid && lowerVal.includes(x.toLowerCase())) {\r\n                isValid = true;\r\n              }\r\n            })\r\n            break;\r\n          case sft.bynotcontain:\r\n            var lowerVal = value.toLowerCase();\r\n            isValid = true;\r\n            filterValues.forEach(x => {\r\n              if (isValid && lowerVal.includes(x.toLowerCase())) {\r\n                isValid = false;\r\n              }\r\n            })\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    case fvt.bynumber:\r\n      if (!isNaN(value)) {\r\n        var filterType = filter.NumberFilterType;\r\n        switch (filterType) {\r\n          case nft.byequal:\r\n            return value === filterValues[0];\r\n          case nft.bysmaller:\r\n            return value < filterValues[0];\r\n          case nft.bysmallerorequal:\r\n            return value <= filterValues[0];\r\n          case nft.bybigger:\r\n            return value > filterValues[0];\r\n          case nft.bybiggerorequal:\r\n            return value >= filterValues[0];\r\n          case nft.bybetween:\r\n            var leftVal = filterValues[0];\r\n            var rightVal = filterValues[1];\r\n            return (filter.IsEqualLeft && leftVal === value) ||\r\n              leftVal < value && value < rightVal\r\n              || (filter.IsEqualRight && value === rightVal);\r\n        }\r\n      }\r\n      break;\r\n  }\r\n\r\n  L1:\r\n  return isValid;\r\n}","import * as util from './EntFilterUtil'\r\n\r\nexport class EntFilter\r\n{\r\n  ValueType\r\n  NumberFilterType\r\n  StringFilterType\r\n  IsEqualLeft\r\n  IsEqualRight\r\n\r\n  values\r\n  get Values(){\r\n    return this.values;\r\n  }\r\n  set Values(v){\r\n    this.values = v;\r\n  }\r\n\r\n  CategoryType\r\n\r\n  valueStorageList\r\n  get ValueStorageList(){\r\n    if (!this.valueStorageList){\r\n      this.valueStorageList = util.GetValueStorageList(this);\r\n    }\r\n    return this.valueStorageList;\r\n  }\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","export const byuser = 'byuser'\r\nexport const byauto = 'byauto'","import MGI_Item from \"./MGI_Item\";\r\nimport * as ct from './MGI_I_CreateType'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport const create = (mgi, createType) => {\r\n  var qI = new MGI_Item();\r\n  qI.MassGroupItem = mgi;\r\n\r\n  if (!createType) {\r\n    qI.CreateType = ct.byauto;\r\n  }else{\r\n    qI.CreateType = ct.byuser;\r\n    qI.Value = genUtil.newGUID();\r\n    qI.Title = 'Tên đầu mục';\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getFromDb = (data, mgi) => {\r\n  var qI = new MGI_Item();\r\n  qI.Value = data.value;\r\n  qI.Title = data.title;\r\n  qI.newMGI_id = data.newMGI_id;\r\n  qI.MassGroupItem = mgi;\r\n  qI.CreateType = data.createType ? data.createType : ct.byauto\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, mgi) => {\r\n  var qI = new MGI_Item();\r\n  qI.Value = q.Value;\r\n  qI.Title = q.Title;\r\n  qI.newMGI_id = q.newMGI_id;\r\n  qI.MassGroupItem = mgi;\r\n  qI.CreateType = q.CreateType;\r\n  return qI;\r\n}\r\n\r\nexport const GetNewMGI = (q) => {\r\n  var _id = q.newMGI_id;\r\n  if (!_id) return undefined;\r\n  var list = q.MassGroupItem.SupComponent.AllItems;\r\n  \r\n  var index = list.findIndex(x => x._id === _id);\r\n  return index !== -1 ? list[index] : undefined;\r\n}","import * as util from './MGI_ItemUtil'\r\n\r\nexport default class MGI_Item {\r\n  Value\r\n\r\n  get Index() {\r\n    return this.MassGroupItem.Items.indexOf(this);\r\n  }\r\n\r\n  title\r\n  get Title(){\r\n    if (!this.title){\r\n      this.title = this.Value;\r\n    }\r\n    return this.title;\r\n  }\r\n  set Title(v){\r\n    this.title = v;\r\n  }\r\n\r\n  newMGI\r\n  get NewMGI(){\r\n    if (!this.newMGI){\r\n      this.newMGI = util.GetNewMGI(this);\r\n\r\n      if (!this.newMGI && this.newMGI_id){\r\n        this.newMGI_id = undefined;\r\n      }\r\n    }\r\n    return this.newMGI;\r\n  }\r\n  set NewMGI(v){\r\n    this.newMGI = v;\r\n    if (!v || v === this.MassGroupItem){\r\n      this.newMGI_id = undefined;\r\n    }\r\n    else{\r\n      this.newMGI_id = v.id;\r\n    }\r\n  }\r\n\r\n  newMGI_id\r\n\r\n  get ApiData(){\r\n    return {\r\n      value : this.Value,\r\n      title : this.Title,\r\n      newMGI_id : this.newMGI_id,\r\n      createType : this.CreateType\r\n    }\r\n  }\r\n\r\n  Delete = () => {\r\n    this.MassGroupItem.Items.splice(this.Index, 1);\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport MGI_Item from './MGI_Item'\r\nimport * as itemUtil from './MGI_ItemUtil'\r\nimport * as mgii_ct from './MGI_I_CreateType'\r\nimport * as rowUtil from '../MassRowUtil'\r\nimport * as util from './MassGroupItemUtil'\r\n\r\nexport default class MassGroupItem {\r\n  Field\r\n  SubComponents = []\r\n  NotIncludeValues = []\r\n  IsHaveValueOrder\r\n  BindingRows\r\n  SupComponent\r\n\r\n  Items = []\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  get Index() {\r\n    return this.SupComponent.Items.indexOf(this);\r\n  }\r\n\r\n  get OrderItems() {\r\n    return this.Items;\r\n  }\r\n\r\n  get OrderValues() {\r\n    return this.Items.map(x => x.Value);\r\n  }\r\n\r\n  get ApiData() {\r\n    var items = this.Items.map(x => x.ApiData);\r\n\r\n    return {\r\n      _id: this.id,\r\n      field: this.Field,\r\n      subComponents: this.SubComponents.map(x => x.ApiData),\r\n      valueOrders: this.ValueOrders,\r\n      notIncludeValues: this.NotIncludeValues,\r\n      items\r\n    }\r\n  }\r\n\r\n  AddNotIncludeValue = (v) => {\r\n    var index = this.NotIncludeValues.indexOf(v);\r\n    if (index === -1) {\r\n      this.NotIncludeValues.push(v);\r\n    }\r\n  }\r\n\r\n  GetItem = (v, title) => {\r\n    var index = this.Items.findIndex(x => x.Value === v);\r\n    if (index === -1) {\r\n      var item = itemUtil.create(this)\r\n      item.Value = v;\r\n      item.Title = title;\r\n      this.Items.push(item);\r\n      return item;\r\n    }\r\n    return this.Items[index];\r\n  }\r\n\r\n  supRow\r\n  get SupRow() {\r\n    return this.supRow;\r\n  }\r\n  set SupRow(v) {\r\n    this.supRow = v;\r\n    if (!this.IsFirstSetSupRow) {\r\n      this.IsFirstSetSupRow = true;\r\n      this.HandleCreatedByUserRows();\r\n    }\r\n  }\r\n\r\n  OnIsFirstSetSupRow_Funcs = []\r\n\r\n  isFirstSetSupRow\r\n  get IsFirstSetSupRow() {\r\n    return this.isFirstSetSupRow;\r\n  }\r\n  set IsFirstSetSupRow(v) {\r\n    this.isFirstSetSupRow = v;\r\n    this.OnIsFirstSetSupRow_Funcs.forEach(x => x());\r\n  }\r\n\r\n  get HaveMassItemSubComponents() {\r\n    return this.SubComponents.filter(x => x.IsHaveMassItem);\r\n  }\r\n\r\n  table\r\n  get Table() {\r\n    if (!this.table) {\r\n      this.table = util.GetTable(this);\r\n    }\r\n    return this.table;\r\n  }\r\n  set Table(v) {\r\n    this.table = v;\r\n  }\r\n\r\n  HandleCreatedByUserRows = () => {\r\n    var userItems = this.Items\r\n      .filter(x => x.CreateType === mgii_ct.byuser);\r\n\r\n    userItems.forEach(x => {\r\n      var value = x.Value;\r\n\r\n      const addRow = (supRow) => {\r\n        var row = this.Table.GetRow(value, supRow);\r\n        row.FullValue = value;\r\n        row.IsCreatedByUser = true;\r\n        return row;\r\n      }\r\n\r\n      const handleRow = (row) => {\r\n        row.MassGroupItem = this;\r\n        handleNonField(row);\r\n      }\r\n\r\n      const handleNonField = (row) => {\r\n        var subMgcIndex = this.SubComponents.findIndex(y => \r\n          y.Filter.Values.includes(x.Value))\r\n        if (subMgcIndex !== -1){\r\n          var subMgi = this.SubComponents[subMgcIndex].Items[0];\r\n          subMgi.SupRow = row;\r\n        }\r\n      }\r\n\r\n      var replaceMgi = x.NewMGI;\r\n      if (replaceMgi) {\r\n        replaceMgi.GetItem(value);\r\n        this.Table.Handle_ReplaceMGI(replaceMgi, addRow, handleRow);\r\n      } else{\r\n        handleRow(addRow(this.SupRow));\r\n      }\r\n    })\r\n  }\r\n}","import * as util from './MassGroupComponentUtil'\r\n\r\nexport default class MassGroupComponent {\r\n  Filter\r\n  Items\r\n  SupItem\r\n\r\n  originComponent\r\n  get OriginComponent(){\r\n    if (!this.originComponent){\r\n      this.originComponent = util.GetOriginComponent(this);\r\n    }\r\n    return this.originComponent;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      filter : this.Filter ? this.Filter.ApiData : undefined,\r\n      items: this.Items.map(x => x.ApiData)\r\n    }\r\n  }\r\n\r\n  get AllItems(){\r\n    return this.OriginComponent.AllSubItems;\r\n  }\r\n\r\n  get AllSubItems(){\r\n    var list = [...this.Items];\r\n    this.Items.forEach(x => \r\n      x.SubComponents.forEach(y => list.push.apply(list, y.AllSubItems)));\r\n    return list;\r\n  }\r\n}","import MassGroupComponent from \"./MassGroupComponent\"\r\nimport * as filterUtil from '../../../filter/EntFilterUtil'\r\nimport * as itemUtil from './MassGroupItemUtil'\r\nimport { PMData } from \"../../../../single/model/PMData\"\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (data, supItem) => {\r\n  var qI = new MassGroupComponent();\r\n\r\n  qI.Filter = data.filter ? filterUtil.get(data.filter) : undefined;\r\n\r\n  qI.Items = data.items.map(x => itemUtil.getFromDb(x, qI));\r\n  qI.SupItem = supItem;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, supItem) => {\r\n  if (!q) return q;\r\n  var qI = new MassGroupComponent();\r\n  qI.Filter = filterUtil.Clone(q.Filter);\r\n\r\n  qI.Items = q.Items.map(x => itemUtil.Clone(x, qI));\r\n  qI.SupItem = supItem;\r\n  return qI;\r\n}\r\n\r\nexport const GetOriginComponent = (q) => {\r\n  return q.SupItem ? q.SupItem.SupComponent.OriginComponent : q;\r\n}","import MassGroupItem from \"./MassGroupItem\"\r\nimport * as compUtil from './MassGroupComponentUtil'\r\nimport * as itemUtil from './MGI_ItemUtil'\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (field, subComps, supCom) => {\r\n  var qI = new MassGroupItem();\r\n  qI.Field = field;\r\n  qI.SupComponent = supCom;\r\n  if (subComps) {\r\n    qI.SubComponents = subComps;\r\n  }\r\n  return qI;\r\n}\r\n\r\nexport const getFromDb = (data, supCom) => {\r\n  var qI = new MassGroupItem();\r\n  qI._id = data._id;\r\n  qI.Field = data.field;\r\n  qI.SupComponent = supCom;\r\n  qI.SubComponents = data.subComponents ? data.subComponents.map(x => compUtil.get(x, qI))\r\n    : [];\r\n\r\n  if (data.items) {\r\n    qI.Items = data.items.map(x => itemUtil.getFromDb(x, qI))\r\n      .filter(x => x.Value);\r\n    qI.IsHaveValueOrder = true;\r\n  } else {\r\n    qI.Items = []\r\n    qI.IsHaveValueOrder = false;\r\n  }\r\n\r\n  qI.NotIncludeValues = data.notIncludeValues ? data.notIncludeValues : [];\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, supCom) => {\r\n  if (!q) return q;\r\n  var qI = new MassGroupItem();\r\n  qI.id = q.id;\r\n  qI.Field = q.Field;\r\n  qI.Items = q.Items.map(x => itemUtil.Clone(x, qI));\r\n  qI.NotIncludeValues = [...q.NotIncludeValues];\r\n  qI.IsHaveValueOrder = q.IsHaveValueOrder;\r\n  qI.SupComponent = supCom;\r\n  qI.SubComponents = q.SubComponents.map(x => compUtil.Clone(x, qI));\r\n  return qI;\r\n}\r\n\r\nexport const GetTable = (q) => {\r\n  return q.SupComponent.SupItem.Table;\r\n}","import { MultiSelectVM } from \"./MultiSelectVM\";\r\n\r\nexport const get = (items, initialItems) => {\r\n  var qI = new MultiSelectVM();\r\n  qI.Items = items;\r\n  qI.InitialItems = initialItems;\r\n  return qI;\r\n}\r\n\r\nexport const GetTitleRender = (q) => {\r\n  return (item) => item.DisplayContent ? item.DisplayContent : `${item}`;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MultiSelectVMUtil'\r\n\r\nexport class MultiSelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      selectedIndexs: observable,\r\n      open : observable,\r\n      canOpen : observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  initialItems;\r\n  get InitialItems() {\r\n    return this.initialItems;\r\n  }\r\n  set InitialItems(v){\r\n    this.initialItems = v;\r\n    this.InitialIndexs = this.GetInitialIndexs();\r\n    this.SelectedIndexs = this.InitialIndexs;\r\n  }\r\n\r\n  initialIndexs;\r\n  get InitialIndexs() {\r\n    if (!this.initialIndexs) {\r\n      this.initialIndexs = this.GetInitialIndexs();\r\n    }\r\n    return this.initialIndexs;\r\n  }\r\n  set InitialIndexs(v){\r\n    this.initialIndexs = v;\r\n  }\r\n\r\n  GetInitialIndexs =() => {\r\n    var initialItems = this.InitialItems;\r\n    if (!initialItems) return [];\r\n    return initialItems.map(x => this.Items.indexOf(x)).filter(x => x !== -1);\r\n  }\r\n\r\n  selectedIndexs = []\r\n  get SelectedIndexs() {\r\n    return this.selectedIndexs;\r\n  }\r\n  set SelectedIndexs(v) {\r\n    this.selectedIndexs = v;\r\n    this.SelectedItems = this.GetSelectedItems();\r\n  }\r\n\r\n  selectedItems\r\n  get SelectedItems() {\r\n    if (!this.selectedItems) {\r\n      this.selectedItems = this.GetSelectedItems();\r\n    }\r\n    return this.selectedItems;\r\n  }\r\n  set SelectedItems(v) {\r\n    this.selectedItems = v;\r\n    if (this.OnSelectedItemChanged) {\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  GetSelectedItems = () => {\r\n    return this.SelectedIndexs.map(x => this.Items[x]);\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder() {\r\n    if (!this.placeholder) {\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender){\r\n      this.titleRender = util.GetTitleRender(this);\r\n    }\r\n    return this.titleRender;\r\n  }\r\n  set TitleRender (v){\r\n    this.titleRender = v;\r\n  }\r\n\r\n  open = false\r\n  get Open(){\r\n    return this.open;\r\n  }\r\n  set Open(v){\r\n    this.open = v;\r\n    if (this.OnSetOpen){\r\n      this.OnSetOpen(v);\r\n    }\r\n  }\r\n\r\n  canOpen = true\r\n  get CanOpen(){\r\n    return this.canOpen;\r\n  } set CanOpen(v){\r\n    this.canOpen = v;\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { MultiSelectVM } from \"./MultiSelectVM\";\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nconst { Option } = Select;\r\n\r\nclass MultiSelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MultiSelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndexs = v;\r\n  }\r\n\r\n  onDropdownVisibleChange = (v) => {\r\n    var data = this.state;\r\n    data.Open = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var style = this.props.style ? this.props.style : { width: '100%' }; \r\n    var { Placeholder, Items, SelectedIndexs, InitialIndexs } = data;\r\n\r\n    if (SelectedIndexs.length === 0) {\r\n      SelectedIndexs = InitialIndexs;\r\n      data.InitialIndexs = [];\r\n    }\r\n\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = data.TitleRender(item);\r\n\r\n      var id = undefined;\r\n      if (item === undefined){\r\n        id = genUtil.randomId();\r\n      }else if (typeof item === 'string' || !isNaN(item)) {\r\n        id = item;\r\n      } else {\r\n        id = item._id ? item._id : item.id;\r\n      }\r\n      return <Option key={id} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    return (\r\n      <>\r\n        <Select style={style}\r\n          mode=\"multiple\"\r\n          placeholder={Placeholder}\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={SelectedIndexs}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n          open={data.CanOpen && data.Open}\r\n          onDropdownVisibleChange={this.onDropdownVisibleChange}\r\n        >\r\n          {elems}\r\n        </Select>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MultiSelectView)","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class EntHoverVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsElementVisible: observable,\r\n    })\r\n  }\r\n\r\n  IsElementVisible = false;\r\n\r\n  ShowElement = () => {\r\n    this.IsElementVisible =  true;\r\n  }\r\n\r\n  HideElement = () => {\r\n    this.IsElementVisible =  false;\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport EntHoverVM from \"./EntHoverVM\";\r\n\r\nclass EntHoverView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntHoverVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    if (!data.style) {\r\n      var style = this.props.style ? this.props.style : {};\r\n      if (!style.minWidth) {\r\n        style.minWidth = 150;\r\n      }\r\n      data.style = style;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div onMouseEnter={data.ShowElement} style={data.style}\r\n          onMouseLeave={data.HideElement}>\r\n          {data.IsElementVisible ? data.Element : ''}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EntHoverView)","import { SelectVM } from \"./SelectVM\";\r\n\r\nexport const get = (items, initialItem) => {\r\n  var qI = new SelectVM();\r\n  qI.Items = items;\r\n  qI.InitialItem = initialItem;\r\n  return qI;\r\n}\r\n\r\nexport const GetTitleRender = (q) => {\r\n  return (item) => item.DisplayContent ? item.DisplayContent : `${item}`;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './SelectVMUtil'\r\n\r\nexport class SelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable,\r\n      selectedIndex : observable,\r\n      CanClear :observable,\r\n      open : observable,\r\n      canOpen : observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = [];\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n  }\r\n\r\n  initialItem = undefined\r\n  get InitialItem() {\r\n    return this.initialItem;\r\n  }\r\n  set InitialItem(v){\r\n    this.initialItem = v;\r\n    this.InitialIndex = this.GetInitialIndex();\r\n    this.SelectedIndex = this.InitialIndex;\r\n  }\r\n\r\n  initialIndex\r\n  get InitialIndex(){\r\n    if (!this.initialIndex){\r\n      this.initialIndex = this.GetInitialIndex();\r\n    }\r\n    return this.initialIndex;\r\n  }\r\n  set InitialIndex(v){\r\n    this.initialIndex = v;\r\n  }\r\n\r\n  GetInitialIndex = () => {\r\n    var index = this.Items.indexOf(this.InitialItem);\r\n    return index !== -1 ? index : null;\r\n  }\r\n\r\n  selectedIndex = undefined\r\n  get SelectedIndex(){\r\n    return this.selectedIndex;\r\n  }\r\n  set SelectedIndex(v){\r\n    this.selectedIndex = v;\r\n    this.SelectedItem = this.GetSelectedItem();\r\n  }\r\n\r\n  selectedItem\r\n  get SelectedItem (){\r\n    if (!this.selectedItem){\r\n      this.selectedItem = this.GetSelectedItem();\r\n    }\r\n    return this.selectedItem;\r\n  }\r\n  set SelectedItem (v) {\r\n    this.selectedItem = v;\r\n    if (this.OnSelectedItemChanged){\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  GetSelectedItem = () => {\r\n    var index = this.SelectedIndex;\r\n    if (index === -1) return undefined;\r\n    return this.Items[index];\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder(){\r\n    if (!this.placeholder){\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v){\r\n    this.placeholder = v;\r\n  }\r\n\r\n  CanClear = false\r\n\r\n  Clear = () => {\r\n    this.SelectedIndex = null\r\n  }\r\n  \r\n  get DivStyle() {\r\n    return this.CanClear ? { \r\n      position: 'relative', \r\n      padding: '0 22px 0 0' \r\n    } : {};\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender){\r\n      this.titleRender = util.GetTitleRender(this);\r\n    }\r\n    return this.titleRender;\r\n  }\r\n  set TitleRender (v){\r\n    this.titleRender = v;\r\n  }\r\n\r\n  open = false\r\n  get Open(){\r\n    return this.open;\r\n  }\r\n  set Open(v){\r\n    this.open = v;\r\n    if (this.OnSetOpen){\r\n      this.OnSetOpen(v);\r\n    }\r\n  }\r\n\r\n  canOpen = true\r\n  get CanOpen(){\r\n    return this.canOpen;\r\n  } set CanOpen(v){\r\n    this.canOpen = v;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class FloatItemVM {\r\n  location\r\n\r\n  className\r\n  getClassName = () => {\r\n    if (!this.className){\r\n      this.className = `float ${this.location}`;\r\n    }\r\n    return this.className\r\n  }\r\n}","import FloatItemVM from \"./FloatItemVM\";\r\n\r\nexport const get = (loc) => {\r\n  var qI = new FloatItemVM();\r\n  qI.location = loc;\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport * as floatItemVMUtil from './FloatItemVMUtil'\r\n\r\nclass FloatItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = floatItemVMUtil.get('top right', 'Test')\r\n    }else{\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <span className={data.getClassName()}>{this.getWrapperContent()}</span>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FloatItemView);\r\n","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { SelectVM } from \"./SelectVM\";\r\nimport * as floatItemVMUtil from '../float/FloatItemVMUtil'\r\nimport FloatItemView from \"../float/FloatItemView\";\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new SelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  onDropdownVisibleChange = (v) => {\r\n    var data = this.state;\r\n    data.Open = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var className = this.props.className ? this.props.className : ''\r\n    var style = this.props.style ? this.props.style : { width: '100%' };\r\n    var { Placeholder, Items, SelectedIndex, InitialIndex } = data;\r\n\r\n    if (SelectedIndex === -1) {\r\n      SelectedIndex = InitialIndex;\r\n      data.InitialIndex = -1;\r\n    }\r\n\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = data.TitleRender(item);\r\n\r\n      var id = undefined;\r\n      if (item === undefined) {\r\n        id = genUtil.randomId();\r\n      } else if (typeof item === 'string' || !isNaN(item)) {\r\n        id = item;\r\n      } else {\r\n        id = item._id ? item._id : item.id;\r\n      }\r\n      return <Option key={id} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    var floatElem = ''\r\n    if (data.CanClear) {\r\n      var floatItemStore = floatItemVMUtil.get('right')\r\n      floatItemStore.wrapper = <Button size='small' type='primary'\r\n        onClick={data.Clear}>x</Button>\r\n\r\n      floatElem = <FloatItemView store={floatItemStore} />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={className}\r\n          style={data.DivStyle} >\r\n          {floatElem}\r\n          <Select style={style}\r\n            showSearch\r\n            placeholder={Placeholder}\r\n            optionFilterProp=\"children\"\r\n            onChange={this.onValueChange}\r\n            value={SelectedIndex}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            open={data.CanOpen && data.Open}\r\n            onDropdownVisibleChange={this.onDropdownVisibleChange}\r\n          >\r\n            {elems}\r\n          </Select>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(SelectView)","export const inside = 'inside'\r\nexport const lower = 'lower'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ReplaceRowLocationFactoryUtil'\r\nimport { PMData } from '../../../../single/model/PMData';\r\nimport * as lt from './RRLF_LocationType'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance\r\n}\r\n\r\nexport default class ReplaceRowLocationFactory {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Location: observable,\r\n    })\r\n  }\r\n\r\n  ReferenceRow\r\n  Location = lt.inside\r\n\r\n  get Color(){\r\n    return util.GetColor(this);\r\n  }\r\n\r\n  get ButtonStyle(){\r\n    return {\r\n      width: 50,\r\n      backgroundColor: this.Color,\r\n      border: 'none'\r\n    };\r\n  }\r\n\r\n  ToggleLocation = () =>{\r\n    switch (this.Location) {\r\n      case lt.inside:\r\n        this.Location = lt.lower;\r\n        break;\r\n      case lt.lower:\r\n        this.Location = lt.inside;\r\n        break;\r\n    }\r\n  }\r\n}","import * as lt from './RRLF_LocationType'\r\n\r\nexport const GetColor = (v) => {\r\n  switch (v.Location) {\r\n    case lt.inside:\r\n      return \"#52c41a\";\r\n    case lt.lower:\r\n      return \"#faad14\";\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport TextView from '../../../../text/TextView';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil';\r\nimport * as util from './MassRowUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { EntFilter } from '../../filter/EntFilter';\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as mgiUtil from './rowgroup/MassGroupItemUtil'\r\nimport MassGroupComponent from './rowgroup/MassGroupComponent';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport MultiSelectView from '../../../../select/MultiSelectView';\r\nimport { Col, Row, Space, Button } from 'antd';\r\nimport EntHoverVM from '../../../../hover/EntHoverVM';\r\nimport EntHoverView from '../../../../hover/EntHoverView';\r\nimport { DownCircleOutlined, EnterOutlined, UpCircleOutlined } from '@ant-design/icons';\r\nimport SelectView from '../../../../select/SelectView';\r\nimport ReplaceRowLocationFactory from './location/ReplaceRowLocationFactory';\r\nimport * as rrlf_lt from './location/RRLF_LocationType';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport InputView from '../../../../input/InputView';\r\nimport * as mif from '../item/MassItemField'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n\r\nexport default class MassRow {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      rank: observable,\r\n      isShowSub: observable,\r\n      isHaveSub: observable,\r\n      IsToolVisible: observable,\r\n      SubItems: observable,\r\n      IsModalVisible: observable,\r\n      title: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this);\r\n  }\r\n\r\n  supItem\r\n  get SupItem() {\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v) {\r\n    this.supItem = v;\r\n    this.CurrentList = undefined;\r\n    this.Rank = undefined;\r\n  }\r\n\r\n  currentList\r\n  get CurrentList() {\r\n    if (!this.currentList) {\r\n      this.currentList = this.SupItem ? this.SupItem.SubItems : this.Table.MainRows;\r\n    }\r\n    return this.currentList;\r\n  }\r\n  set CurrentList(v) {\r\n    this.currentList = v;\r\n  }\r\n\r\n  get Table() {\r\n    return this.Dict;\r\n  }\r\n\r\n  SubItems = []\r\n\r\n  get AllItems() {\r\n    var list = [];\r\n    list.push(this);\r\n    this.SubItems.forEach(x => {\r\n      list.push.apply(list, x.AllItems)\r\n    });\r\n    return list;\r\n  }\r\n\r\n  Cells = []\r\n\r\n  get Items() {\r\n    var items = this.Cells.reduce((a, b) => a.concat(b.Items), []);\r\n    items = items.filter((x,i,a) => a.indexOf(x) === i);\r\n    return items;\r\n  }\r\n\r\n  massGroupItem\r\n  get MassGroupItem() {\r\n    return this.massGroupItem;\r\n  }\r\n  set MassGroupItem(v) {\r\n    this.massGroupItem = v;\r\n    if (v) {\r\n      var title = v.GetItem(this.FullValue).Title;\r\n      this.Title = title;\r\n    }\r\n  }\r\n\r\n  get Field() {\r\n    return this.MassGroupItem ? this.MassGroupItem.Field : undefined;\r\n  }\r\n\r\n  ReplaceMGI\r\n\r\n  get OrderMGI() {\r\n    return this.ReplaceMGI ? this.ReplaceMGI : this.MassGroupItem;\r\n  }\r\n\r\n  subMassGroupItem\r\n  get SubMassGroupItem() {\r\n    if (!this.subMassGroupItem) {\r\n      this.subMassGroupItem = util.GetSubMassGroupItem(this);\r\n    }\r\n    return this.subMassGroupItem\r\n  }\r\n  set SubMassGroupItem(v) {\r\n    this.subMassGroupItem = v;\r\n  }\r\n\r\n  subFields\r\n  get SubFields() {\r\n    if (!this.subFields) {\r\n      this.subFields = util.GetSubFields(this);\r\n    }\r\n    return this.subFields;\r\n  }\r\n  set SubFields(v) {\r\n    this.subFields = v;\r\n  }\r\n\r\n  TempSubFields\r\n\r\n  isShowSub = true\r\n  get IsShowSub() {\r\n    return this.isShowSub;\r\n  }\r\n  set IsShowSub(v) {\r\n    this.isShowSub = v;\r\n    this.ToggleButtonContentVM.Content = util.GetToggleButtonContent(this);\r\n  }\r\n\r\n  toggleButtonContent\r\n  get ToggleButtonContent() {\r\n    if (!this.toggleButtonContent) {\r\n      this.toggleButtonContent = util.GetToggleButtonContent(this);\r\n    }\r\n    return this.toggleButtonContent;\r\n  }\r\n  set ToggleButtonContent(v) {\r\n    this.toggleButtonContent = v;\r\n  }\r\n\r\n  toggleButtonContentVM\r\n  get ToggleButtonContentVM() {\r\n    if (!this.toggleButtonContentVM) {\r\n      var obj = this.toggleButtonContentVM = textVMUtil.get(this.ToggleButtonContent);\r\n      obj.OnSetContent = (v) => this.ToggleButtonContent = v;\r\n    }\r\n    return this.toggleButtonContentVM;\r\n  }\r\n\r\n  rank = undefined\r\n  get Rank() {\r\n    if (this.rank === undefined) {\r\n      this.rank = util.GetRank(this);\r\n    }\r\n    return this.rank;\r\n  }\r\n  set Rank(v) {\r\n    this.rank = v;\r\n    this.SubItems.forEach(x => x.Rank = undefined);\r\n  }\r\n\r\n  isHaveSub = undefined\r\n  get IsHaveSub() {\r\n    if (!this.isHaveSub) {\r\n      this.isHaveSub = util.GetIsHaveSub(this);\r\n    }\r\n    return this.isHaveSub;\r\n  }\r\n  set IsHaveSub(v) {\r\n    this.isHaveSub = v;\r\n  }\r\n\r\n  get Style() {\r\n    return util.GetStyle(this);\r\n  }\r\n\r\n  IsToolVisible = false\r\n\r\n  subFieldSelectVM\r\n  get SubFieldSelectVM() {\r\n    if (!this.subFieldSelectVM) {\r\n      this.subFieldSelectVM = util.GetSubFieldSelectVM(this);\r\n    }\r\n    return this.subFieldSelectVM;\r\n  }\r\n\r\n  title = undefined\r\n  get Title() {\r\n    // if (!this.title) {\r\n    //   util.Handle_Title(this);\r\n    // }\r\n    return this.title;\r\n  }\r\n  set Title(v) {\r\n    this.title = v;\r\n    this.TitleVM.Content = v;\r\n  }\r\n\r\n  get LocationStorageList() {\r\n    return this.Table.AllRows;\r\n  }\r\n\r\n  locationSelectVM\r\n  get LocationSelectVM() {\r\n    if (!this.locationSelectVM) {\r\n      this.locationSelectVM = util.GetLocationSelectVM(this);\r\n    }\r\n    return this.locationSelectVM;\r\n  }\r\n\r\n  titleVM\r\n  get TitleVM() {\r\n    if (!this.titleVM) {\r\n      this.titleVM = textVMUtil.get(this.Title, 'tiêu đề');\r\n    }\r\n    return this.titleVM;\r\n  }\r\n\r\n  // Value lồng giữa Row hiện tại và SupRow\r\n  // Ví dụ: concrete__Tầng 6__Dầm\r\n  FullValue\r\n\r\n  GetCellByColumn = (col) => {\r\n    var index = this.Cells.findIndex(x => x.Column === col);\r\n    return index !== -1 ? this.Cells[index] : undefined;\r\n  }\r\n\r\n  UpdateData = () => {\r\n    this.Rank = util.GetRank(this);\r\n    this.IsHaveSub = util.GetIsHaveSub(this);\r\n\r\n    this.SubItems = util.Order(this.SubItems);\r\n    this.SubItems.forEach(x => x.UpdateData());\r\n  }\r\n\r\n  ToggleSub = () => {\r\n    this.IsShowSub = !this.IsShowSub;\r\n  }\r\n\r\n  SetSubFields = () => {\r\n    var tempSubFields = this.TempSubFields ? this.TempSubFields : [];\r\n\r\n    var isSame = true;\r\n    if (this.SubFields.length !== tempSubFields.length) {\r\n      isSame = false;\r\n    } else {\r\n      this.SubFields.forEach((x, i) => {\r\n        if (isSame && x !== tempSubFields[i]) {\r\n          isSame = false;\r\n        }\r\n      })\r\n    }\r\n    if (isSame) return;\r\n    this.SubFields = tempSubFields;\r\n\r\n    var filter = new EntFilter();\r\n    filter.ValueType = fvt.bystring;\r\n    filter.StringFilterType = sft.byequal;\r\n    filter.Values = [this.FullValue];\r\n\r\n    var supMgi = this.MassGroupItem;\r\n\r\n    var mgc = new MassGroupComponent();\r\n    mgc.SubItem = supMgi;\r\n    mgc.Filter = filter;\r\n\r\n    var subMgis = mgc.Items = tempSubFields.map(x => mgiUtil.get(x, null, mgc));\r\n\r\n    var subComps = supMgi.SubComponents;\r\n    if (this.SubMassGroupComponent) {\r\n      var index = subComps.indexOf(this.SubMassGroupComponent);\r\n      subComps[index] = mgc;\r\n    } else {\r\n      subComps.push(mgc);\r\n    }\r\n\r\n    this.SubMassGroupComponent = mgc;\r\n    this.SubItems = [];\r\n    this.SubMassGroupItem = undefined;\r\n\r\n    if (subMgis.length !== 0) {\r\n      var table = this.Table;\r\n      this.Items.forEach(x => {\r\n        // Xử lý Item theo ColumnField: Project ... (single value)\r\n        // hoặc theo Phase (multiple values)\r\n        switch (table.ColumnField) {\r\n          case mif.Phase:\r\n            x.ValidPhasesByInput.forEach(y => \r\n              table.HandleItem(x, y, mgc, this));\r\n            break;\r\n          default:\r\n            table.HandleItem(x, x.GetValue(table.ColumnField), mgc, this);\r\n            break;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  MoveUp = () => {\r\n    var list = this.CurrentList;\r\n    var index = this.Index;\r\n    if (0 === index) return;\r\n\r\n    var orderItems = this.OrderMGI.OrderItems;\r\n    var orderValues = this.OrderMGI.OrderValues;\r\n    var mgiIndex1 = orderValues.indexOf(list[index].FullValue);\r\n    var mgiIndex2 = orderValues.indexOf(list[index - 1].FullValue);\r\n\r\n    genUtil.MoveItem(list, index, index - 1);\r\n    genUtil.MoveItem(orderItems, mgiIndex1, mgiIndex2);\r\n  }\r\n\r\n  MoveDown = () => {\r\n    var list = this.CurrentList;\r\n    var index = this.Index;\r\n    if (list.length - 1 === index) return;\r\n\r\n    var orderItems = this.OrderMGI.OrderItems;\r\n    var orderValues = this.OrderMGI.OrderValues;\r\n    var mgiIndex1 = orderValues.indexOf(list[index].FullValue);\r\n    var mgiIndex2 = orderValues.indexOf(list[index + 1].FullValue);\r\n\r\n    genUtil.MoveItem(list, index, index + 1);\r\n    genUtil.MoveItem(orderItems, mgiIndex1, mgiIndex2);\r\n  }\r\n\r\n  AddSub = () => {\r\n    util.Add(this, this.Table);\r\n  }\r\n\r\n  Delete = () => {\r\n    var supItem = this.SupItem;\r\n    var list = this.CurrentList;\r\n\r\n    if (this.IsCreatedByUser) {\r\n      this.MassGroupItem.GetItem(this.FullValue).Delete();\r\n    } else {\r\n      this.MassGroupItem.AddNotIncludeValue(this.FullValue);\r\n    }\r\n\r\n    list.splice(this.Index, 1);\r\n\r\n    if (supItem) {\r\n      supItem.Cells.forEach(x => {\r\n        x.SubCells = x.GetSubCells();\r\n\r\n        var totalValues = x.SubCells ?\r\n          x.SubCells.map(x => x.TotalValue).filter(x => x) : [];\r\n        x.TotalValue = totalValues.reduce((a, b) => a + b, 0);\r\n\r\n        x.ContentVM.Content = x.ValueString;\r\n      })\r\n    }\r\n  }\r\n\r\n  replaceFactory\r\n  get ReplaceFactory() {\r\n    if (!this.replaceFactory) {\r\n      this.replaceFactory = new ReplaceRowLocationFactory();\r\n    }\r\n    return this.replaceFactory;\r\n  }\r\n\r\n  ReplaceOK = () => {\r\n    var factory = this.ReplaceFactory;\r\n    var refRow = factory.ReferenceRow;\r\n\r\n    if (!refRow) return;\r\n\r\n    var loc = factory.Location;\r\n    if ((refRow === this && loc === rrlf_lt.lower) ||\r\n      (refRow === this.SupItem && loc === rrlf_lt.inside)) {\r\n      return\r\n    }\r\n\r\n    this.Replace(refRow, loc);\r\n\r\n    factory.Location = rrlf_lt.inside;\r\n  }\r\n\r\n  Replace = (refRow, loc) => {\r\n    // Save data\r\n    var oldMgi = this.MassGroupItem;\r\n    var supRow = undefined;\r\n    var newMgi = undefined;\r\n\r\n    switch (loc) {\r\n      case rrlf_lt.inside:\r\n        supRow = refRow;\r\n        break;\r\n      case rrlf_lt.lower:\r\n        supRow = refRow.SupItem;\r\n        break;\r\n    }\r\n\r\n    //var newMgi = supRow ? supRow.SubMassGroupItem : this.Table.MainMGI;\r\n    var newMgi = supRow ?\r\n      (supRow.SubMassGroupItem ? supRow.SubMassGroupItem :\r\n        util.CreateSubMassGroupItem(supRow))\r\n      : this.Table.MainMGI;\r\n    oldMgi.GetItem(this.FullValue).NewMGI = newMgi;\r\n\r\n    this.ReplaceMGI = newMgi;\r\n    this.CurrentList.splice(this.Index, 1);\r\n\r\n    this.SupItem = supRow;\r\n    var list = this.CurrentList;\r\n    list.push(this);\r\n\r\n    this.IsShowSubFieldSelect = false;\r\n  }\r\n\r\n  IsModalVisible = false\r\n\r\n  OpenModal = () => {\r\n    this.IsModalVisible = true\r\n\r\n    this.TitleVM.Content = this.Title;\r\n\r\n    var subFieldSelectVM = this.SubFieldSelectVM;\r\n    subFieldSelectVM.InitialItems = this.SubFields;\r\n\r\n    var locSelectVM = this.LocationSelectVM;\r\n    locSelectVM.Items = this.LocationStorageList\r\n    locSelectVM.InitialItem = undefined;\r\n  }\r\n\r\n  ModalOK = () => {\r\n    this.IsModalVisible = false;\r\n    this.SetSubFields();\r\n    this.ReplaceOK();\r\n\r\n    var title = this.TitleVM.Content;\r\n    this.Title = title;\r\n    this.MassGroupItem.GetItem(this.FullValue).Title = title;\r\n  }\r\n\r\n  ModalCancel = () => {\r\n    this.IsModalVisible = false;\r\n  }\r\n\r\n  get ModalElement() {\r\n    var factory = this.ReplaceFactory;\r\n\r\n    return <Modal title={this.Title} visible={this.IsModalVisible}\r\n      onOk={this.ModalOK} onCancel={this.ModalCancel}>\r\n      <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex=\"165px\">\r\n          <b> Tiêu đề:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <InputView store={this.TitleVM} />\r\n        </Col>\r\n      </Row>\r\n\r\n      {!this.IsCreatedByUser ? <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex=\"165px\">\r\n          <b> Thiết lập phân nhóm:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <MultiSelectView store={this.SubFieldSelectVM} />\r\n        </Col>\r\n      </Row> : ''}\r\n\r\n      <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex=\"165px\">\r\n          <b> Đổi vị trí:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <Row>\r\n            <Col flex='auto'>\r\n              <SelectView store={this.LocationSelectVM} />\r\n            </Col>\r\n            <Col>\r\n              <Button type='primary' size='small'\r\n                style={factory.ButtonStyle} onClick={factory.ToggleLocation}\r\n              >{factory.Location}</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Modal>\r\n  }\r\n\r\n  get HoverToolElement() {\r\n    var obj = new EntHoverVM();\r\n    obj.Element = this.ToolElement;\r\n    return <EntHoverView store={obj} style={{ display: 'flex', marginLeft: 20 }} />\r\n  }\r\n\r\n  get ToolElement() {\r\n    return <>\r\n      <Button size='small' type='primary'\r\n        style={{ backgroundColor: '#52c41a', border: 'none' }}\r\n        onClick={this.MoveUp}>\r\n        <UpCircleOutlined />\r\n      </Button>\r\n      <Button size='small' type='primary'\r\n        style={{ backgroundColor: '#52c41a', border: 'none' }}\r\n        onClick={this.MoveDown}>\r\n        <DownCircleOutlined />\r\n      </Button>\r\n\r\n      <Button type='primary' size='small'\r\n        style={{ backgroundColor: '#faad14', border: 'none' }}\r\n        onClick={this.OpenModal}>...</Button>\r\n\r\n      <Button size='small' type='primary'\r\n        style={{ backgroundColor: '#52c41a', border: 'none' }}\r\n        onClick={this.AddSub}>+</Button>\r\n      <Button type='primary' size='small' danger\r\n        onClick={this.Delete}>x</Button>\r\n    </>\r\n  }\r\n}","import { PMData } from \"../../../single/model/PMData\";\r\nimport MassRow from \"./MassRow\";\r\nimport * as multiSelectUtil from '../../../../select/MultiSelectVMUtil';\r\nimport * as selectUtil from '../../../../select/SelectVMUtil';\r\nimport * as rrlf_lt from './location/RRLF_LocationType';\r\nimport * as mgiUtil from './rowgroup/MassGroupItemUtil'\r\nimport * as mgi_iUtil from './rowgroup/MGI_ItemUtil'\r\nimport * as mgii_ct from './rowgroup/MGI_I_CreateType'\r\nimport * as genUtil from '../../../../../util/generalUtil';\r\nimport { EntFilter } from \"../../filter/EntFilter\";\r\nimport MassGroupComponent from \"./rowgroup/MassGroupComponent\";\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as mif from '../item/MassItemField'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassRow();\r\n  qI.Name = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetRank = (q) => {\r\n  return q.SupItem ? q.SupItem.Rank + 1 : 0;\r\n}\r\n\r\nexport const GetStyle = (q) => {\r\n  return {\r\n    display: 'flex',\r\n    marginLeft: q.Rank * 20\r\n  }\r\n}\r\n\r\nexport const GetIsHaveSub = (q) => {\r\n  return q.SubItems.length !== 0;\r\n}\r\n\r\nexport const GetToggleButtonContent = (q) => {\r\n  return q.IsShowSub ? '-' : '+';\r\n}\r\n\r\nexport const GetSubFieldSelectVM = (q) => {\r\n  var storageList = pmData().MassItemFields;\r\n  var obj = multiSelectUtil.get(storageList, undefined);\r\n  obj.Placeholder = 'chọn phân nhóm'\r\n  obj.OnSelectedItemChanged = (v) => q.TempSubFields = v;\r\n  return obj;\r\n}\r\n\r\nexport const Order = (list) => {\r\n  if (list.length === 0) return list;\r\n\r\n  var firstRow = list[0]\r\n  var mgi = firstRow.OrderMGI;\r\n  if (!mgi.IsHaveValueOrder) return list;\r\n\r\n  var orderValues = mgi.OrderValues;\r\n  return list.sort((a, b) => {\r\n    return orderValues.indexOf(a.FullValue) - orderValues.indexOf(b.FullValue);\r\n  });\r\n}\r\n\r\n// export const GetTitle = (q) => {\r\n//   // Kiểm tra thông tin tầng điển hình trong Cells\r\n\r\n//   return q.Name;\r\n// }\r\n\r\nexport const Handle_Title = (q) => {\r\n  var field = q.MassGroupItem.Field;\r\n  if (field !== mif.level) {\r\n    q.Title = q.Name;\r\n  } else {\r\n    // Xử lý phần tiêu đề của Row dựa trên Name và thông tin Tầng điển hình\r\n    var list = [];\r\n    var handledCount = 0;\r\n    var count = q.Cells.length;\r\n\r\n    const handle_LS = (ls) => {\r\n      if (ls.Description) {\r\n        q.Title = ls.Description;\r\n      } else {\r\n        ls.OnGetLevelStorageList_Funcs.push(() => {\r\n          q.Title = ls.Description;\r\n        })\r\n      }\r\n    }\r\n\r\n    const handle_Val = (val) => {\r\n      handledCount++;\r\n      list.push.apply(list, val);\r\n      if (handledCount === count) {\r\n        if (list.length === 1) {\r\n          handle_LS(list[0]);\r\n        } else {\r\n          q.Title = q.Name;\r\n        }\r\n      }\r\n    }\r\n\r\n    q.Cells.forEach(x => {\r\n      if (x.TLS_LevelGroups) {\r\n        handle_Val(x.TLS_LevelGroups);\r\n      } else {\r\n        x.OnGet_TLS_LevelGroups_Funcs.push(() => {\r\n          handle_Val(x.TLS_LevelGroups);\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const GetLocationSelectVM = (q) => {\r\n  var obj = selectUtil.get([], undefined);\r\n  obj.Placeholder = 'chọn vị trí'\r\n  obj.TitleRender = (item) => {\r\n    var marginLeft = item.Rank * 15;\r\n    return <div\r\n      style={{ marginLeft }}>\r\n      {item.Title}\r\n    </div>\r\n  }\r\n  obj.OnSelectedItemChanged = (v) => {\r\n    var factory = q.ReplaceFactory;\r\n    factory.ReferenceRow = v;\r\n  }\r\n  return obj;\r\n}\r\n\r\nexport const GetSubMassGroupItem = (q) => {\r\n  var subItems = q.SubItems;\r\n  if (subItems.length === 0) return undefined;\r\n  return subItems[0].MassGroupItem;\r\n}\r\n\r\nexport const GetSubFields = (q) => {\r\n  var subMGI = q.SubMassGroupItem;\r\n  if (!subMGI) return [];\r\n  var mgis = subMGI.SupComponent.Items;\r\n\r\n  var lastValidIndex = -1;\r\n  var isValidHandle = true\r\n  mgis.forEach((x, i) => {\r\n    if (isValidHandle && x.HaveMassItemSubComponents.length === 0) {\r\n      lastValidIndex = i;\r\n    } else {\r\n      isValidHandle = false;\r\n    }\r\n  })\r\n\r\n  var currentIndex = mgis.indexOf(q.MassGroupItem);\r\n  if (lastValidIndex === -1) return [subMGI.Field];\r\n  var fields = mgis.filter((x, i) =>\r\n    (currentIndex === -1 || currentIndex < i) &&\r\n    i <= lastValidIndex)\r\n    .map(x => x.Field);\r\n  return fields;\r\n}\r\n\r\nexport const CreateSubMassGroupItem = (q) => {\r\n  var filter = new EntFilter();\r\n  filter.ValueType = fvt.bystring;\r\n  filter.StringFilterType = sft.byequal;\r\n  filter.Values = [q.FullValue];\r\n\r\n  var supMgi = q.MassGroupItem;\r\n\r\n  var mgc = undefined;\r\n  var mgcIndex = supMgi.SubComponents\r\n    .findIndex(x => genUtil.IsSameValues(x.Filter.Values, filter.Values));\r\n\r\n  if (mgcIndex !== -1) {\r\n    mgc = supMgi.SubComponents[mgcIndex]\r\n  } else {\r\n    mgc = new MassGroupComponent();\r\n    mgc.SubItem = supMgi;\r\n    mgc.Filter = filter;\r\n    supMgi.SubComponents.push(mgc);\r\n  }\r\n\r\n  var mgi = mgiUtil.get(null, null, mgc);\r\n  mgc.Items = [mgi];\r\n\r\n  q.SubMassGroupItem = mgi;\r\n  return mgi;\r\n}\r\n\r\nexport const Add = (supRow, table) => {\r\n  var mgi = supRow ?\r\n    (supRow.SubMassGroupItem ? supRow.SubMassGroupItem :\r\n      CreateSubMassGroupItem(supRow))\r\n    : table.MainMGI;\r\n\r\n  var mgi_I = mgi_iUtil.create(mgi, mgii_ct.byuser);\r\n  mgi.Items.push(mgi_I);\r\n\r\n  var row = get(mgi_I.Value, table);\r\n  row.FullValue = mgi_I.Value;\r\n  row.IsCreatedByUser = true;\r\n  row.MassGroupItem = mgi;\r\n\r\n  row.SupItem = supRow;\r\n  row.CurrentList.push(row);\r\n  return row;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil'\r\nimport * as api from '../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as mif from '../item/MassItemField'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as util from './MassCellUtil'\r\nimport TextView from '../../../../text/TextView';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassCell {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueColor: observable,\r\n      tdBgColor: observable,\r\n      //totalValue: observable,\r\n      isHaveWarning: observable,\r\n      tls_LevelGroup_Descriptions: observable,\r\n      vcs_Item: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get ColumnIndex() {\r\n    return this.Column.Index;\r\n  }\r\n\r\n  items = []\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  unit\r\n  get Unit() {\r\n    if (!this.unit) {\r\n      this.unit = this.GetUnit();\r\n    }\r\n    return this.unit;\r\n  }\r\n  set Unit(v) {\r\n    this.unit = v;\r\n  }\r\n\r\n  GetUnit = () => {\r\n    if (this.SubCells) {\r\n      var unit = undefined;\r\n      this.SubCells.forEach(x => {\r\n        if (x.Unit) {\r\n          unit = x.Unit;\r\n        }\r\n      })\r\n      return unit;\r\n    }\r\n    return this.Items && this.Items.length !== 0 ? this.Items[0].Unit : undefined;\r\n  }\r\n\r\n  unitVM\r\n  get UnitVM() {\r\n    if (!this.unitVM) {\r\n      this.unitVM = textVMUtil.get(this.Unit);\r\n      this.unitVM.OnSetContent = (v) => this.Unit = v;\r\n    }\r\n    return this.unitVM;\r\n  }\r\n\r\n  OnGet_TotalValue_Func_Dict = []\r\n  set Get_TotalValue(v) {\r\n    this.OnGet_TotalValue_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  totalValue = undefined\r\n  get TotalValue() {\r\n    // Chỉnh sửa Value thành FullValue (chứa khối lượng tầng điển hình)\r\n    //this.TotalValue = this.GetTotalValue();\r\n    if (this.totalValue === undefined) {\r\n      util.Handle_TotalValue(this);\r\n    }\r\n    return this.totalValue;\r\n  }\r\n  set TotalValue(v) {\r\n    this.totalValue = v;\r\n    this.Get_TotalValue = true;\r\n    // Thiết lập phần màu sắc đối với Phase\r\n    if (this.IsHaveVCS_Item) {\r\n      util.Handle_VCS_Item(this);\r\n    }\r\n\r\n    // Thiết lập giá trị Cell\r\n    this.ContentVM.Content = this.ValueString;\r\n  }\r\n\r\n  contentVM\r\n  get ContentVM() {\r\n    if (!this.contentVM) {\r\n      this.contentVM = textVMUtil.get(this.ValueString);\r\n    }\r\n    return this.contentVM;\r\n  }\r\n\r\n  get ValueString() {\r\n    if (this.Row.IsCreatedByUser) return '';\r\n    var totalValue = this.TotalValue;\r\n    if (!totalValue) return '';\r\n\r\n    var unit = this.Unit ? this.Unit : '';\r\n\r\n    var formatValue = totalValue.toLocaleString('en-US', { maximumFractionDigits: 2 });\r\n    return `${formatValue} ${unit}`;\r\n  }\r\n\r\n  subCells\r\n  get SubCells() {\r\n    if (!this.subCells) {\r\n      this.subCells = this.GetSubCells();\r\n    }\r\n    return this.subCells;\r\n  }\r\n  set SubCells(v) {\r\n    this.subCells = v;\r\n  }\r\n\r\n  GetSubCells = () => {\r\n    var subRows = this.Row.SubItems;\r\n    if (subRows && subRows.length !== 0) {\r\n      var col = this.Column;\r\n      return subRows.map(x => x.GetCellByColumn(col))\r\n        .filter(x => x !== undefined);\r\n    }\r\n  }\r\n\r\n  massType\r\n  get MassType() {\r\n    if (!this.massType) {\r\n      this.massType = util.GetMassType(this);\r\n    }\r\n    return this.massType;\r\n  }\r\n  set MassType(v) {\r\n    this.massType = v;\r\n  }\r\n\r\n  AsString = () => {\r\n    console.log(`${this.Column.Name} - ${this.Row.Name} - ${this.TotalValue}`)\r\n  }\r\n\r\n  UpdateData = () => {\r\n    if (this.Row.IsCreatedByUser) {\r\n      return;\r\n    }\r\n\r\n    this.SubCells = this.GetSubCells();\r\n\r\n    this.Unit = this.GetUnit();\r\n    this.MassType = util.GetMassType(this);\r\n    this.IsHaveVCS_Item = util.GetIsHaveVCS_Item(this);\r\n  }\r\n\r\n  ShowDetail = () => {\r\n    var isHash = true;\r\n    var url = `${process.env.PUBLIC_URL}${isHash ? '/#' : ''}/massdetail`;\r\n    var getUrl = (v) => `${url}/${v}`;\r\n    var openTabFunc = (v) =>\r\n      window.open(getUrl(v), \"_blank\");\r\n\r\n    if (!this.viewDetailId) {\r\n      this.GetViewDetailId(data => {\r\n        var _id = this.viewDetailId = data._id;\r\n        openTabFunc(_id);\r\n      })\r\n    } else {\r\n      openTabFunc(this.viewDetailId);\r\n    }\r\n  }\r\n\r\n  viewDetailId\r\n\r\n  get AllItems() {\r\n    if (this.SubCells) {\r\n      return this.SubCells.map(x => x.Items).reduce((a, b) => a.concat(b), []);\r\n    }\r\n    return this.Items;\r\n  }\r\n\r\n  isHaveVCS_Item\r\n  get IsHaveVCS_Item() {\r\n    if (!this.isHaveVCS_Item) {\r\n      this.isHaveVCS_Item = util.GetIsHaveVCS_Item(this);\r\n    }\r\n    return this.isHaveVCS_Item;\r\n  }\r\n  set IsHaveVCS_Item(v) {\r\n    this.isHaveVCS_Item = v;\r\n  }\r\n\r\n  vcs_Item = undefined\r\n  get VCS_Item() {\r\n    return this.vcs_Item;\r\n  }\r\n  set VCS_Item(v) {\r\n    this.vcs_Item = v;\r\n\r\n    this.ValueColor = util.GetValueColor(this);\r\n    this.TDBgColor = util.GetTDBgColor(this)\r\n  }\r\n\r\n  valueColor = '#1890ff'\r\n  get ValueColor() {\r\n    return this.valueColor;\r\n  }\r\n  set ValueColor(v) {\r\n    this.valueColor = v\r\n  }\r\n\r\n  tdBgColor = undefined\r\n  get TDBgColor() {\r\n    return this.tdBgColor;\r\n  }\r\n  set TDBgColor(v) {\r\n    this.tdBgColor = v;\r\n  }\r\n\r\n  get AStyle() {\r\n    return {\r\n      color: this.ValueColor,\r\n      fontWeight: 'bold'\r\n    }\r\n  }\r\n\r\n  get TDStyle() {\r\n    return {\r\n      backgroundColor: this.TDBgColor\r\n    }\r\n  }\r\n\r\n  ApiData = () => {\r\n    var massIds = this.AllItems.map(x => x._id);\r\n    return {\r\n      massType: this.MassType,\r\n      massIds\r\n    };\r\n  }\r\n\r\n  GetViewDetailId = (handle) => {\r\n    var apiData = this.ApiData();\r\n    var url = \"https://api.bimdev.vn/api/hbdv/updatemass\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => handle(data))\r\n  }\r\n\r\n  OnGet_TLS_LevelGroups_Func_Dict = []\r\n  set Get_TLS_LevelGroups(v) {\r\n    this.OnGet_TLS_LevelGroups_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  tls_LevelGroups\r\n  get TLS_LevelGroups() {\r\n    if (!this.tls_LevelGroups) {\r\n      util.Handle_TLS_LevelGroups(this);\r\n    }\r\n    return this.tls_LevelGroups;\r\n  } set TLS_LevelGroups(v) {\r\n    this.tls_LevelGroups = v;\r\n    this.Get_TLS_LevelGroups = true;\r\n  }\r\n\r\n  isHaveWarning = undefined\r\n  get IsHaveWarning() {\r\n    if (this.isHaveWarning === undefined) {\r\n      this.isHaveWarning = util.GetIsHaveWarning(this);\r\n    }\r\n    return this.isHaveWarning;\r\n  } set IsHaveWarning(v) {\r\n    this.isHaveWarning = v;\r\n  }\r\n\r\n  tls_LevelGroup_Descriptions = undefined\r\n  get TLS_LevelGroup_Descriptions() {\r\n    if (!this.tls_LevelGroup_Descriptions) {\r\n      util.Handle_TLS_LevelGroup_Descriptions(this);\r\n    }\r\n    return this.tls_LevelGroup_Descriptions;\r\n  } set TLS_LevelGroup_Descriptions(v) {\r\n    this.tls_LevelGroup_Descriptions = v;\r\n  }\r\n}","import Column from \"antd/lib/table/Column\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport MassCell from \"./MassCell\"\r\nimport * as mif from '../item/MassItemField'\r\nimport * as filterUtil from '../../filter/EntFilterUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (col, row, dict) => {\r\n  var qI = new MassCell();\r\n  qI.Column = col;\r\n  qI.Row = row;\r\n  qI.Dict = dict;\r\n\r\n  col.Cells.push(qI);\r\n  row.Cells.push(qI);\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetIsHaveVCS_Item = (q) => {\r\n  return q.Dict.ColumnField === mif.Phase\r\n    && pmData().MassResultComp.Phases.length === 2\r\n    && q.ColumnIndex === 1;\r\n}\r\n\r\nexport const GetValueColor = (q) => {\r\n  if (q.IsHaveVCS_Item && q.VCS_Item) {\r\n    return '#FFFFFF';\r\n  } else {\r\n    return '#1890ff';\r\n  }\r\n}\r\n\r\nexport const GetTDBgColor = (q) => {\r\n  if (q.IsHaveVCS_Item && q.VCS_Item) {\r\n    return q.VCS_Item.Color;\r\n  } else {\r\n    return '#FFFFFF';\r\n  }\r\n}\r\n\r\n// Liên quan tới việc lấy TotalValue\r\nexport const Handle_VCS_Item = (q) => {\r\n  var list = pmData().VersionCompareSetting.Items;\r\n\r\n  var cells = q.Row.Cells;\r\n  var compareIndex = cells.findIndex(x => x.ColumnIndex === 0);\r\n  if (compareIndex === -1) {\r\n    q.VCS_Item = undefined;\r\n    return\r\n  }\r\n  var compareItem = cells[compareIndex];\r\n\r\n  const getItem = () => {\r\n    var ratio = q.TotalValue / compareItem.TotalValue;\r\n    var index = list\r\n      .findIndex(x => filterUtil.IsValid(x.Filter, ratio));\r\n    return index !== -1 ? list[index] : undefined;\r\n  }\r\n\r\n  if (compareItem.TotalValue !== undefined) {\r\n    q.VCS_Item = getItem();\r\n  } else {\r\n    genUtil.Add(compareItem.OnGet_TotalValue_Func_Dict, () =>\r\n      q.VCS_Item = getItem())\r\n  }\r\n}\r\n\r\nexport const GetMassType = (q) => {\r\n  var massType = undefined\r\n  if (q.SubCells) {\r\n    var isPending = true;\r\n    q.SubCells.forEach(x => {\r\n      if (isPending && x.MassType) {\r\n        massType = x.MassType;\r\n        isPending = false;\r\n      }\r\n    })\r\n  } else {\r\n    if (q.Items && q.Items.length > 0) {\r\n      massType = q.Items[0].MassType;\r\n    }\r\n  }\r\n  return massType;\r\n}\r\n\r\nexport const Handle_TLS_LevelGroups = (q) => {\r\n  if (q.IsGet_TLS_LevelGroups) return undefined;\r\n  q.IsGet_TLS_LevelGroups = true;\r\n\r\n  var list = [];\r\n  var handledCount = 0;\r\n  var count = q.SubCells ?\r\n    q.SubCells.length : q.Items.length;\r\n\r\n  const checkadd_Val = (val, list) => {\r\n    if (list.findIndex(x => x.id === val.id) === -1) {\r\n      list.push(val);\r\n    }\r\n  }\r\n\r\n  const handle_Val = (val) => {\r\n    handledCount++;\r\n    if (val) {\r\n      if (Array.isArray(val)) {\r\n        val.forEach(x => checkadd_Val(x, list));\r\n      } else {\r\n        checkadd_Val(val, list)\r\n      }\r\n    }\r\n    if (handledCount === count) {\r\n      q.TLS_LevelGroups = list;\r\n    }\r\n  }\r\n\r\n  if (q.SubCells) {\r\n    // Tồn tại sub cells\r\n    q.SubCells.forEach(x => {\r\n      if (x.TLS_LevelGroups) {\r\n        handle_Val(x.TLS_LevelGroups);\r\n      } else {\r\n        genUtil.Add(x.OnGet_TLS_LevelGroups_Func_Dict,\r\n          () => handle_Val(x.TLS_LevelGroup));\r\n      }\r\n    })\r\n  } else {\r\n    // Không có sub cells\r\n    q.Items.forEach(x => {\r\n      var targetObj = x;\r\n\r\n      // Kiểm tra value theo Phase hay theo Property khác (Project ...)\r\n      var table = q.Dict;\r\n      var colField = table.ColumnField;\r\n      if (colField === mif.Phase) {\r\n        // Khối lượng theo Phase\r\n        targetObj = x.GetPhaseItem(q.Column.Name);\r\n      } else {\r\n        // Khối lượng theo các thuộc tính khác\r\n      }\r\n\r\n      if (targetObj.TLS_LevelGroup || targetObj.Get_TLS_LevelGroup) {\r\n        handle_Val(targetObj.TLS_LevelGroup);\r\n      } else {\r\n        genUtil.Add(targetObj.OnGet_TLS_LevelGroup_Func_Dict,\r\n          () => handle_Val(targetObj.TLS_LevelGroup));\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const Handle_TotalValue = (q) => {\r\n  if (q.IsGet_TotalValue) return undefined;\r\n  q.IsGet_TotalValue = true;\r\n\r\n  var checkedList = [];\r\n  var totalVal = 0;\r\n  var handledCount = 0;\r\n  var count = q.SubCells ?\r\n    q.SubCells.length : q.Items.length;\r\n\r\n  const handle_Val = (val) => {\r\n    handledCount++;\r\n\r\n    if (!Number.isNaN(val)) {\r\n      totalVal += val;\r\n    }\r\n    checkedList.push(val);\r\n\r\n    if (handledCount === count) {\r\n      q.TotalValue = totalVal;\r\n    }\r\n  }\r\n\r\n  if (q.SubCells) {\r\n    // Tồn tại sub cells\r\n    q.SubCells.forEach(x => {\r\n      if (x.TotalValue) {\r\n        handle_Val(x.TotalValue)\r\n      } else {\r\n        genUtil.Add(x.OnGet_TotalValue_Func_Dict,\r\n          () => {\r\n            handle_Val(x.TotalValue)\r\n          });\r\n      }\r\n    })\r\n  } else {\r\n    // Không có sub cells\r\n    q.Items.forEach(x => {\r\n      var targetObj = x;\r\n\r\n      // Kiểm tra value theo Phase hay theo Property khác (Project ...)\r\n      var table = q.Dict;\r\n      var colField = table.ColumnField;\r\n      if (colField === mif.Phase) {\r\n        // Khối lượng theo Phase\r\n        targetObj = x.GetPhaseItem(q.Column.Name);\r\n      } else {\r\n        // Khối lượng theo các thuộc tính khác\r\n      }\r\n\r\n      if (targetObj.FullValue) {\r\n        handle_Val(targetObj.FullValue)\r\n      } else {\r\n        genUtil.Add(targetObj.OnGet_FullValue_Func_Dict,\r\n          () => {\r\n            handle_Val(targetObj.FullValue)\r\n          });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const GetIsHaveWarning = (q) => {\r\n  if (q.Row.Field !== mif.level) {\r\n    return false\r\n  } else {\r\n    const getWarningFunc = (levelGroups) => {\r\n      return levelGroups.length !== 0;\r\n    }\r\n\r\n    if (q.TLS_LevelGroups) {\r\n      return getWarningFunc(q.TLS_LevelGroups);\r\n    } else {\r\n      genUtil.Add(q.OnGet_TLS_LevelGroups_Func_Dict,\r\n        () => {\r\n          q.IsHaveWarning = getWarningFunc(q.TLS_LevelGroups)\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nexport const Handle_TLS_LevelGroup_Descriptions = (q) => {\r\n  if (q.IsGet_TLS_LevelGroup_Descriptions) return undefined;\r\n  q.IsGet_TLS_LevelGroup_Descriptions = true;\r\n\r\n  const handle_Val = (val, list, handledCount, count) => {\r\n    handledCount++;\r\n    if (list.indexOf(val) === -1) {\r\n      list.push(val);\r\n    }\r\n    if (handledCount === count) {\r\n      q.TLS_LevelGroup_Descriptions = list;\r\n    }\r\n  }\r\n\r\n  const getDescFunc = (levelGroups) => {\r\n    var list = [];\r\n    var handledCount = 0;\r\n    var count = levelGroups.length\r\n\r\n    levelGroups.forEach(x => {\r\n      if (x.FullDescription) {\r\n        handle_Val(x.FullDescription, list, handledCount, count);\r\n      } else {\r\n        // Để false, xử lý nhiều Funcs hơn, nhưng thực thi thành công :v\r\n        genUtil.Add(x.OnGetLevelStorageList_Func_Dict, () => {\r\n          handle_Val(x.FullDescription, list, handledCount, count)\r\n        }, false)\r\n      }\r\n    })\r\n  }\r\n\r\n  if (q.TLS_LevelGroups) {\r\n    getDescFunc(q.TLS_LevelGroups)\r\n  } else {\r\n    q.OnGet_TLS_LevelGroups_Funcs.push(() => {\r\n      getDescFunc(q.TLS_LevelGroups)\r\n    })\r\n  }\r\n}","import * as mif from '../item/MassItemField'\r\nimport { EntFilter } from '../../filter/EntFilter'\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as mt from '../MassType'\r\nimport MassGroupComponent from './rowgroup/MassGroupComponent'\r\nimport MassGroupItem from './rowgroup/MassGroupItem'\r\nimport * as mgiUtil from './rowgroup/MassGroupItemUtil'\r\n\r\nexport const GetMainMGC = (q) => {\r\n  var qI = new MassGroupComponent();\r\n\r\n  var mgi1 = mgiUtil.get(mif.MassType);\r\n  qI.Items = [mgi1];\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetMassGroupName = (q) => {\r\n  return q.MassGroupSetting ? q.MassGroupSetting.Name\r\n    : '';\r\n}\r\n\r\nexport const GetAllRows = (q) => {\r\n  var list = [];\r\n  q.MainRows.forEach(x => {\r\n    list.push.apply(list, x.AllItems)\r\n  });\r\n  return list;\r\n}\r\n\r\nexport const GetMainMGI = (q) => {\r\n  var qI = q.MainMGC?.Items[0];\r\n  qI.Table = q;\r\n  qI.SupRow = undefined;\r\n  return qI;\r\n}","export const elementfilter = \"elementfilter\";\r\nexport const massexport = \"massexport\";\r\nexport const massgroup = \"massgroup\";\r\nexport const typicallevel = \"typicallevel\";","import { message } from 'antd'\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\nexport default class Setting{\r\n  name\r\n  get Name(){\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    if (this.OnNameChanged){\r\n      this.OnNameChanged(v);\r\n    }\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    return this.description;\r\n  }\r\n  set Description(v){\r\n    this.description = v;\r\n    if (this.OnDescriptionChanged){\r\n      this.OnDescriptionChanged(v);\r\n    }\r\n  }\r\n\r\n  SettingType\r\n\r\n  data\r\n  get Data(){\r\n    return this.data;\r\n  }\r\n  set Data(v){\r\n    this.data = v;\r\n    if (this.OnDataChanged){\r\n      this.OnDataChanged(v);\r\n    }\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.Name;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    var {_id} = this;\r\n    var apiData = {_id};\r\n\r\n    var  url = \"https://api.bimdev.vn/api/hbs/delete\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => message.success('Delete setting successfully'))\r\n\r\n    this.Dict.Items.splice(this.Index, 1);\r\n\r\n    if (this.OnDelete){\r\n      this.OnDelete();\r\n    }\r\n\r\n    this.Dict.Input.EditItemId = undefined;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      _id : this._id,\r\n      projectId : this.Project._id,\r\n      settingType : this.SettingType,\r\n      name : this.Name,\r\n      description : this.Description,\r\n      data : this.Data.ApiData\r\n    }\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './MassGroupSettingDataUtil'\r\nimport { reaction } from \"mobx\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassGroupSettingData {\r\n  fields\r\n  get Fields(){\r\n    if (!this.fields){\r\n      this.fields = util.GetDefaultFields(this);\r\n    }\r\n    return this.fields;\r\n  }\r\n  set Fields(v){\r\n    this.fields = v;\r\n  }\r\n\r\n  AddNewField = () => {\r\n    var item = pmData().MassPropertyNames[0];\r\n    this.Fields.push(item);\r\n    return item;\r\n  }\r\n}","export const Discipline = \"Discipline\";\r\nexport const Category = \"Category\";\r\n\r\nexport const GetAll = () => {\r\n  return [ Discipline, Category ];\r\n}","import { PMData } from '../../../single/model/PMData';\r\nimport MassGroupSettingData from './MassGroupSettingData';\r\nimport * as mpn from '../../../entity/mass/MassPropertyName'\r\nimport * as massGroupCompUtil from '../../mass/table/rowgroup/MassGroupComponentUtil'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSettingData();\r\n  qI.MassGroupComponent = massGroupCompUtil.get(q.massGroupComponent);\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = () => {\r\n  var qI = new MassGroupSettingData();\r\n  return qI;\r\n}\r\n\r\nexport const GetDefaultFields = () => {\r\n  return [ mpn.Category ]\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport default class MassGroupSetting extends Setting {\r\n  \r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as dataUtil from './MassGroupSettingDataUtil'\r\nimport MassGroupSetting from './MassGroupSetting';\r\nimport { PMData } from '../../../single/model/PMData';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassGroupSetting();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.SettingType = q.settingType;\r\n  qI.Data = dataUtil.get(q.data);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbs/mg/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../text/TextVMUtil'\r\nimport * as util from './WorkpackageVMUtil'\r\n\r\nexport class WorkpackageVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      fullName : observable\r\n    })\r\n  }\r\n\r\n  get _id(){\r\n    return this.Workpackage._id;\r\n  }\r\n\r\n  get Index(){\r\n    return this.Dict.WorkpackageVMs.indexOf(this);\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.Workpackage.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.Workpackage.M2VM = v;\r\n  }\r\n\r\n  Workpackage\r\n\r\n  supItem\r\n  get SupItem(){\r\n    if (!this.supItem){\r\n      this.supItem = util.GetSupItem(this);\r\n    }\r\n    return this.supItem;\r\n  }\r\n\r\n  code = undefined\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.Workpackage.Code;\r\n    }\r\n    return this.code\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Code = v;\r\n    }\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.Workpackage.Name;\r\n    }\r\n    return this.name\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Name = v;\r\n    }\r\n  }\r\n\r\n  description = undefined\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.Workpackage.Description;\r\n    }\r\n    return this.description\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Description = v;\r\n    }\r\n  }\r\n\r\n  fullName = undefined\r\n  get FullName() {\r\n    if (!this.fullName) {\r\n      this.fullName = this.Workpackage.FullName;\r\n    }\r\n    return this.fullName;\r\n  }\r\n  set FullName(v) {\r\n    this.fullName = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.FullName;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.FullName;\r\n  }\r\n\r\n  codeVM\r\n  get CodeVM() {\r\n    if (!this.codeVM) {\r\n      var obj = this.codeVM =\r\n        textVMUtil.get(this.Code, \"mã code\");\r\n      obj.onSetContent = (v) => this.Code = v;\r\n    }\r\n    return this.codeVM;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên công tác\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.WorkpackageVMs.splice(this.Index, 1);\r\n  }\r\n\r\n  AsString = () => {\r\n    console.log(this.Name, this.Code, this.Description);\r\n  }\r\n}","import { WorkpackageVM } from \"./WorkpackageVM\";\r\nimport { PMDataVM } from '../../single/form/PMDataVM'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new WorkpackageVM();\r\n  qI.Workpackage = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnCodeChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Code = v;\r\n    }\r\n  }\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnFullNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.FullName = v;\r\n    }\r\n  }\r\n\r\n  q.OnDelete = () => {\r\n    qI.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSupItem = (q) => {\r\n  var supWp = q.Workpackage.SupItem;\r\n  var list = pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n  var index = list.findIndex(x => x.Workpackage === supWp);\r\n  return index !== -1 ? list[index] : undefined;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class CheckboxVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      ischecked: observable,\r\n      isDisable : observable,\r\n      Cancel : observable\r\n    })\r\n  }\r\n\r\n  name\r\n\r\n  OnCheckChanging\r\n\r\n  Cancel = false;\r\n\r\n  ischecked = undefined\r\n  set Ischecked(v) {\r\n    this.ischecked = v;\r\n    if (this.onCheckChange) {\r\n      this.onCheckChange(v);\r\n    }\r\n  }\r\n\r\n  isDisable = false\r\n}","import { CheckboxVM } from \"./CheckboxVM\"\r\n\r\nexport const get = (name, ischecked) => {\r\n  var qI = new CheckboxVM();\r\n  qI.ischecked = ischecked;\r\n  qI.name = name;\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../text/TextVMUtil'\r\nimport * as checkboxVMUtil from '../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../select/SelectVMUtil'\r\nimport * as util from './WorkpackageInputVMUtil'\r\nimport { Button } from 'antd';\r\n\r\nexport class WorkpackageInputVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isNew: observable\r\n    })\r\n  }\r\n\r\n  WorkpackageInput\r\n\r\n  code = undefined\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.WorkpackageInput.Code;\r\n    }\r\n    return this.code\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    this.WorkpackageInput.Code = v;\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.WorkpackageInput.Name;\r\n    }\r\n    return this.name\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.WorkpackageInput.Name = v;\r\n  }\r\n\r\n  description = undefined\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.WorkpackageInput.Description;\r\n    }\r\n    return this.description\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.WorkpackageInput.Description = v;\r\n  }\r\n\r\n  supItem = undefined\r\n  get SupItem(){\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v){\r\n    this.supItem = v;\r\n    var input = this.WorkpackageInput;\r\n    if (!v) {\r\n      input.SupItem = v;\r\n    }else{\r\n      input.SupItem = v.Workpackage;\r\n    }\r\n  }\r\n\r\n  workpackageVMStorageList = undefined\r\n  get WorkpackageVMStorageList(){\r\n    if (!this.workpackageVMStorageList){\r\n      this.workpackageVMStorageList = util.GetWorkpackageVMStorageList(this);\r\n    }\r\n    return this.workpackageVMStorageList;\r\n  }\r\n  set WorkpackageVMStorageList(v){\r\n    this.workpackageVMStorageList = v;\r\n\r\n    var selectVM = this.SupItemSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItem = this.SupItem;\r\n  }\r\n\r\n  supItemSelectVM\r\n  get SupItemSelectVM(){\r\n    if (!this.supItemSelectVM){\r\n      var obj = this.supItemSelectVM = selectVMUtil.get\r\n        (this.WorkpackageVMStorageList, this.SupItem);\r\n      obj.Placeholder = 'công tác cha'\r\n      obj.CanClear = true;\r\n      obj.OnSelectedItemChanged = (v) => this.SupItem = v;\r\n    }\r\n    return this.supItemSelectVM;\r\n  }\r\n\r\n  isNew = undefined\r\n  get IsNew() {\r\n    if (this.isNew === undefined) {\r\n      this.isNew = this.WorkpackageInput.IsNew;\r\n    }\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v) {\r\n    this.isNew = v;\r\n    this.CommandVM.Content = util.GetCommandName(this);\r\n    this.WorkpackageInput.IsNew = v;\r\n  }\r\n\r\n  commandName = undefined\r\n  get CommandName() {\r\n    if (!this.commandName) {\r\n      this.commandName = util.GetCommandName(this);\r\n    }\r\n    return this.commandName;\r\n  }\r\n  set CommandName(v) {\r\n    this.commandName = v;\r\n  }\r\n\r\n  workpackageVM\r\n  get WorkpackageVM() {\r\n    return this.workpackageVM;\r\n  }\r\n  set WorkpackageVM(v) {\r\n    this.workpackageVM = v;\r\n\r\n    if (!v) {\r\n      this.WorkpackageInput.Workpackage = v;\r\n      this.IsNewVM.Ischecked = true;\r\n    }\r\n    else {\r\n      this.WorkpackageInput.Workpackage = v.Workpackage;\r\n\r\n      var { Code, Name, Description, SupItem } = v;\r\n      this.CodeVM.Content = Code;\r\n      this.NameVM.Content = Name;\r\n      this.DescriptionVM.Content = Description;\r\n\r\n      this.SupItemSelectVM.InitialItem = SupItem;\r\n\r\n      this.IsNewVM.Ischecked = false;\r\n    }\r\n  }\r\n\r\n  codeVM\r\n  get CodeVM() {\r\n    if (!this.codeVM) {\r\n      var obj = this.codeVM =\r\n        textVMUtil.get(this.Code, \"mã code\");\r\n      obj.onSetContent = (v) => this.Code = v;\r\n    }\r\n    return this.codeVM;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên công tác\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  isNewVM\r\n  get IsNewVM() {\r\n    if (!this.isNewVM) {\r\n      var obj = this.isNewVM\r\n        = checkboxVMUtil.get(\"Công tác mới\", this.IsNew);\r\n\r\n      obj.isDisable = true;\r\n      obj.onCheckChange = (v) => {\r\n        this.IsNew = v;\r\n        if (v) {\r\n          obj.isDisable = true;\r\n        } else {\r\n          obj.isDisable = false;\r\n        }\r\n      };\r\n    }\r\n    return this.isNewVM;\r\n  }\r\n\r\n  commandVM\r\n  get CommandVM() {\r\n    if (!this.commandVM) {\r\n      var obj = this.commandVM = textVMUtil.get(this.CommandName);\r\n      obj.onSetContent = (v) => this.CommandName = v;\r\n    }\r\n    return this.commandVM;\r\n  }\r\n\r\n  AsString = () => `${this.Code} ${this.Name} ${this.Description} ${this.IsNew}`\r\n\r\n  AddDatabase = () => {\r\n    this.WorkpackageInput.AddDatabase();\r\n  }\r\n\r\n  deleteView\r\n  get DeleteView() {\r\n    return !this.IsNew ?\r\n      <Button onClick={this.DeleteFunc}>Delete</Button>\r\n      : \"\";\r\n  }\r\n\r\n  DeleteFunc = () => {\r\n    this.WorkpackageVM.Workpackage.Delete();\r\n    this.WorkpackageVM = undefined;\r\n  }\r\n\r\n  Clear = () => {\r\n    this.CodeVM.Content = null;\r\n    this.NameVM.Content = null;\r\n    this.DescriptionVM.Content = null;\r\n    this.IsNewVM.Ischecked = true;\r\n  }\r\n}","import { message } from \"antd\";\r\nimport { PMDataVM } from \"../../single/form/PMDataVM\";\r\nimport { WorkpackageInputVM } from \"./WorkpackageInputVM\";\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new WorkpackageInputVM();\r\n  qI.WorkpackageInput = q;\r\n  qI.Dict = dict;\r\n\r\n  pmDataVM().Workpackage_DictVM.OnGetItemsDone_Funcs.push(() => {\r\n    qI.WorkpackageVMStorageList = GetWorkpackageVMStorageList(qI);\r\n  })\r\n\r\n  q.OnAddDatabaseDone = (v) => {\r\n    var command = qI.CommandName;\r\n    message.success(`${command} workpackage successfully`);\r\n    //qI.clear();\r\n  }\r\n\r\n  dict.OnAdd = (v) => {\r\n    qI.WorkpackageVM = v;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetCommandName = (qI) => {\r\n  var isNew = qI.IsNew;\r\n  return isNew ? \"Create\" : \"Edit\";\r\n}\r\n\r\nexport const GetWorkpackageVMStorageList = (q) => {\r\n  return pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n}","import { Workpackage_DictVM } from \"./Workpackage_DictVM\";\r\nimport * as workpackageVMUtil from './WorkpackageVMUtil';\r\nimport * as workpackageInputVMUtil from './WorkpackageInputVMUtil';\r\n\r\nexport const get = (q) => {\r\n  var qI = new Workpackage_DictVM();\r\n  qI.Workpackage_Dict = q;\r\n\r\n  q.OnGetWorkpackagesDone = (v) => {\r\n    var obj = qI.WorkpackageVMs;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  q.OnAdd = (item) => {\r\n    var itemView = workpackageVMUtil.get(item, qI);\r\n    qI.Add(itemView);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetWorkpackageVMs = (dictVM) => {\r\n  var wps = dictVM.Workpackage_Dict.Workpackages;\r\n  if (!wps) return undefined;\r\n  return wps.map(x => workpackageVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetWorkpackageInputVM= (dictVM) => {\r\n  var input = dictVM.Workpackage_Dict.WorkpackageInput;\r\n  return workpackageInputVMUtil.get(input, dictVM);\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ElementFilterSetting_DictVMUtil'\r\n\r\nexport class ElementFilterSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.ModelItem.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.ModelItem.M2VM = v;\r\n  }\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  items  = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n      this.Input.EditItem = v;\r\n    }\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textUtil from '../../../../text/TextVMUtil';\r\n\r\nexport class SettingVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      name: observable\r\n    })\r\n  }\r\n\r\n  get _id(){\r\n    return this.ModelItem._id;\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.ModelItem.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.ModelItem.M2VM = v;\r\n  }\r\n\r\n  ModelItem\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (!this.M2VM) {\r\n      this.ModelItem.Name = v;\r\n    }\r\n  }\r\n\r\n  nameVM\r\n  get NameVM(){\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM = textUtil.get(this.Name, 'tên thiết lập ...');\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (!this.M2VM) {\r\n      this.ModelItem.Description = v;\r\n    }\r\n  }\r\n\r\n  settingType\r\n  get SettingType() {\r\n    if (!this.settingType) {\r\n      this.settingType = this.ModelItem.SettingType;\r\n    }\r\n    return this.settingType;\r\n  }\r\n  set SettingType(v) {\r\n    this.settingType = v;\r\n    this.ModelItem.SettingType = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.Name;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.Name;\r\n  }\r\n\r\n  data\r\n  get Data(){\r\n    if (!this.data){\r\n      this.data = this.ModelItem.Data;\r\n    }\r\n    return this.data;\r\n  }\r\n  set Data(v) {\r\n    this.data = v;\r\n    if (!this.M2VM){\r\n      this.ModelItem.Data = v;\r\n    }\r\n  }\r\n\r\n  dataVM\r\n  get DataVM() {\r\n    if (!this.dataVM) {\r\n      this.dataVM = this.GetDataVM();\r\n    }\r\n    return this.dataVM;\r\n  }\r\n  set DataVM(v) {\r\n    this.dataVM = v;\r\n\r\n    // Gọi hàm để đổ dữ liệu về\r\n    if (v && this.OnInitialSetDataVM){\r\n      this.OnInitialSetDataVM(v);\r\n    }\r\n\r\n    if (!this.M2VM) {\r\n      if (!v) {\r\n        this.Data = v;\r\n      }\r\n      else {\r\n        this.Data = v.ModelItem;\r\n      }\r\n    }\r\n  }\r\n\r\n  GetDataVM = () => {\r\n    if (this.OnGetDataVM) {\r\n      return this.OnGetDataVM();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.Items.splice(this.Index, 1);\r\n  }\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\n\r\nexport default class ElementFilterSettingVM extends SettingVM {\r\n  OnInitialSetDataVM = (v) => {\r\n    var cateFilterVM = v.CategoryFilterVM;\r\n    if (cateFilterVM) {\r\n      cateFilterVM.OnInitialData();\r\n    }\r\n\r\n    var famFilterVM = v.FamilyFilterVM;\r\n    if (famFilterVM) {\r\n      famFilterVM.OnInitialData();\r\n    }\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../single/form/PMDataVM'\r\nimport * as selectVMUtil from '../../../select/SelectVMUtil'\r\nimport * as multiSelectVMUtil from '../../../select/MultiSelectVMUtil'\r\n\r\nexport class EntFilterVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  get pmDataVM () { return PMDataVM.Instance};\r\n\r\n  valueType\r\n  get ValueType() {\r\n    if (!this.valueType) {\r\n      this.valueType = this.ModelItem.ValueType;\r\n    }\r\n    return this.valueType;\r\n  }\r\n  set ValueType(v) {\r\n    this.valueType = v;\r\n    this.ModelItem.ValueType = v;\r\n  }\r\n\r\n  numberFilterType\r\n  get NumberFilterType() {\r\n    if (!this.numberFilterType) {\r\n      this.numberFilterType = this.ModelItem.NumberFilterType;\r\n    }\r\n    return this.numberFilterType;\r\n  }\r\n  set NumberFilterType(v) {\r\n    this.numberFilterType = v;\r\n    this.ModelItem.NumberFilterType = v;\r\n  }\r\n\r\n  stringFilterType\r\n  get StringFilterType() {\r\n    if (!this.stringFilterType) {\r\n      this.stringFilterType = this.ModelItem.StringFilterType;\r\n    }\r\n    return this.stringFilterType;\r\n  }\r\n  set StringFilterType(v) {\r\n    this.stringFilterType = v;\r\n    this.ModelItem.StringFilterType = v;\r\n  }\r\n\r\n  values\r\n  get Values() {\r\n    if (!this.values) {\r\n      this.values = this.ModelItem.Values;\r\n    }\r\n    return this.values;\r\n  }\r\n  set Values(v) {\r\n    this.values = v;\r\n    this.ModelItem.Values = v;\r\n  }\r\n\r\n  valueStorageList\r\n  get ValueStorageList() {\r\n    if (!this.valueStorageList){\r\n      this.valueStorageList = this.ModelItem.ValueStorageList;\r\n    }\r\n    return this.valueStorageList;\r\n  }\r\n\r\n  ValueSelectPlaceholder\r\n\r\n  valueTypeSelectVM\r\n  get ValueTypeSelectVM() {\r\n    if (!this.valueTypeSelectVM) {\r\n      var obj =this.valueTypeSelectVM = selectVMUtil.get(this.pmDataVM.FilterValueTypes, this.ValueType);\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.ValueType = v;\r\n      }\r\n    }\r\n    return this.valueTypeSelectVM;\r\n  }\r\n\r\n  stringFilterTypeSelectVM\r\n  get StringFilterTypeSelectVM() {\r\n    if (!this.stringFilterTypeSelectVM){\r\n      var obj = this.stringFilterTypeSelectVM = selectVMUtil.get(this.pmDataVM.StringFilterTypes, this.StringFilterType);\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.StringFilterType = v;\r\n      }\r\n    }\r\n    return this.stringFilterTypeSelectVM;\r\n  }\r\n\r\n  valuesSelectVM\r\n  get ValuesSelectVM() {\r\n    if (!this.valuesSelectVM){\r\n      var obj = this.valuesSelectVM = multiSelectVMUtil.get(this.ValueStorageList, this.Values);\r\n\r\n      if (this.ValueSelectPlaceholder){\r\n        obj.Placeholder = this.ValueSelectPlaceholder;\r\n      }\r\n\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.Values = v;\r\n      }\r\n    }\r\n    return this.valuesSelectVM;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    if (!v) return;\r\n\r\n    var {ValueType, NumberFilterType, StringFilterType, Values} = v;\r\n    this.ValueTypeSelectVM.InitialItem = ValueType;\r\n    this.StringFilterTypeSelectVM.InitialItem = StringFilterType;\r\n    this.ValuesSelectVM.InitialItems = Values;\r\n  }\r\n\r\n  OnInitialData = () => {\r\n    var valueType = this.ValueType;\r\n    var numberFilterType = this.NumberFilterType;\r\n    var stringFilterType = this.StringFilterType;\r\n    var values = this.Values;\r\n  }\r\n}","import { SettingVM } from \"../setting/base/SettingVM\";\r\nimport { EntFilterVM } from \"./EntFilterVM\";\r\n\r\nexport const get = (q) => {\r\n  if (!q) return undefined;\r\n  var qI = new EntFilterVM();\r\n  qI.ModelItem = q;\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\n\r\nexport default class ElementFilterSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isHaveFamilyFilter : observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  categoryFilterVM\r\n  get CategoryFilterVM(){\r\n    if (!this.categoryFilterVM && this.ModelItem){\r\n      this.categoryFilterVM = this.GetCategoryFilterVM();\r\n    }\r\n    return this.categoryFilterVM;\r\n  }\r\n\r\n  GetCategoryFilterVM = () => {\r\n    var filter = this.ModelItem.CategoryFilter;\r\n    return filterVMUtil.get(filter);\r\n  }\r\n\r\n  isHaveFamilyFilter = undefined\r\n  get IsHaveFamilyFilter(){\r\n    if (!this.isHaveFamilyFilter){\r\n      this.isHaveFamilyFilter = this.ModelItem.IsHaveFamilyFilter;\r\n    }\r\n    return this.isHaveFamilyFilter;\r\n  }\r\n  set IsHaveFamilyFilter(v){\r\n    this.isHaveFamilyFilter = v;\r\n    this.ModelItem.IsHaveFamilyFilter = v;\r\n  }\r\n\r\n  familyFilterVM\r\n  get FamilyFilterVM(){\r\n    if (!this.familyFilterVM && this.ModelItem){\r\n      this.familyFilterVM = this.GetFamilyFilterVM();\r\n    }\r\n    return this.familyFilterVM;\r\n  }\r\n\r\n  GetFamilyFilterVM = () => {\r\n    var filter = this.ModelItem.FamilyFilter;\r\n    return filterVMUtil.get(filter);\r\n  }\r\n\r\n  isHaveFamilyFilterVM\r\n  get IsHaveFamilyFilterVM() {\r\n    if (!this.isHaveFamilyFilterVM) {\r\n      var obj = this.isHaveFamilyFilterVM\r\n        = checkboxVMUtil.get(\"Thiết lập lọc Family\", this.IsHaveFamilyFilter);\r\n\r\n      obj.onCheckChange = (v) => {\r\n        this.IsHaveFamilyFilter = v;\r\n      };\r\n    }\r\n    return this.isHaveFamilyFilterVM;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.CategoryFilterVM.SetData(v.CategoryFilterVM);\r\n\r\n    var ischecked = v.IsHaveFamilyFilter === true;\r\n    this.IsHaveFamilyFilterVM.Ischecked = ischecked;\r\n    \r\n    this.FamilyFilterVM.SetData(v.FamilyFilterVM);\r\n  }\r\n}","import ElementFilterSettingDataVM from './ElementFilterSettingDataVM';\r\n\r\nexport const get = (q) => {\r\n  var qI = new ElementFilterSettingDataVM();\r\n  qI.ModelItem = q;\r\n  return qI;\r\n}","import ElementFilterSettingVM from \"./ElementFilterSettingVM\"\r\nimport * as dataVMUtil from './ElementFilterSettingDataVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new ElementFilterSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import { message } from \"antd\";\r\nimport { SettingVM } from \"./SettingVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new SettingVM();\r\n  qI.Setting = q;\r\n\r\n  q.OnDelete = () => {\r\n    qI.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetCommandName = (qI) => {\r\n  var isNew = qI.IsNew;\r\n  return isNew ? \"Create\" : \"Edit\";\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil'\r\nimport * as util from './SettingVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport { Button, message } from 'antd';\r\n\r\nexport default class SettingInputVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      dataVM : observable,\r\n      isNew: observable\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  name\r\n  get Name(){\r\n    if(!this.name){\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    if (!this.description){\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  settingType\r\n  get SettingType(){\r\n    if (!this.settingType){\r\n      this.settingType = this.ModelItem.SettingType;\r\n    }\r\n    return this.settingType;\r\n  }\r\n  set SettingType(v){\r\n    this.settingType = v;\r\n    this.ModelItem.SettingType = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.Name;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên bộ lọc\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM){\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  settingTypeVM\r\n  get SettingTypeVM() {\r\n    if (!this.settingTypeVM){\r\n      var obj = this.settingTypeVM = \r\n        textVMUtil.get(this.SettingType, \"loại thiết lập\");\r\n      obj.onSetContent = (v) => this.SettingType = v;\r\n    }\r\n    return this.settingTypeVM;\r\n  }\r\n\r\n  dataVM = undefined\r\n  get DataVM(){\r\n    if (!this.dataVM){\r\n      this.dataVM = this.GetDataVM();\r\n    }\r\n    return this.dataVM;\r\n  }\r\n  set DataVM (v){\r\n    if (this.DataVM.SetData){\r\n      this.DataVM.SetData(v);\r\n    }\r\n  }\r\n\r\n  GetDataVM = () => {\r\n    if (this.OnGetDataVM){\r\n      var dataVM = this.OnGetDataVM();\r\n      return dataVM;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  editItem\r\n  get EditItem() {\r\n    return this.editItem;\r\n  }\r\n  set EditItem(v) {\r\n    this.editItem = v;\r\n\r\n    var input = this.ModelItem;\r\n    if (!v) {\r\n      input.EditItem = v;\r\n      this.IsNewVM.Ischecked = true;\r\n    }\r\n    else {\r\n      input.EditItem = v.ModelItem;\r\n\r\n      var { Name, Description, SettingType } = v;\r\n      this.NameVM.Content = Name;\r\n      this.DescriptionVM.Content = Description;\r\n      this.SettingTypeVM.Content = SettingType;\r\n\r\n      this.DataVM = v.DataVM;\r\n      this.IsNewVM.Ischecked = false;\r\n    }\r\n  }\r\n\r\n  isNew = undefined\r\n  get IsNew() {\r\n    if (this.isNew === undefined) {\r\n      this.isNew = this.ModelItem.IsNew;\r\n    }\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v) {\r\n    this.isNew = v;\r\n    this.CommandVM.Content = util.GetCommandName(this);\r\n    this.ModelItem.IsNew = v;\r\n  }\r\n\r\n  isNewVM\r\n  get IsNewVM() {\r\n    if (!this.isNewVM) {\r\n      var obj = this.isNewVM\r\n        = checkboxVMUtil.get(\"Thiết lập mới\", this.IsNew);\r\n\r\n      obj.isDisable = true;\r\n      obj.onCheckChange = (v) => {\r\n        this.IsNew = v;\r\n        if (v) {\r\n          obj.isDisable = true;\r\n        } else {\r\n          obj.isDisable = false;\r\n        }\r\n      };\r\n    }\r\n    return this.isNewVM;\r\n  }\r\n\r\n  commandName = undefined\r\n  get CommandName() {\r\n    if (!this.commandName) {\r\n      this.commandName = util.GetCommandName(this);\r\n    }\r\n    return this.commandName;\r\n  }\r\n  set CommandName(v) {\r\n    this.commandName = v;\r\n  }\r\n\r\n  commandVM\r\n  get CommandVM() {\r\n    if (!this.commandVM) {\r\n      var obj = this.commandVM = textVMUtil.get(this.CommandName);\r\n      obj.onSetContent = (v) => this.CommandName = v;\r\n    }\r\n    return this.commandVM;\r\n  }\r\n\r\n  deleteView\r\n  get DeleteView() {\r\n    return !this.IsNew ?\r\n      <Button onClick={this.DeleteFunc}>Delete</Button>\r\n      : \"\";\r\n  }\r\n\r\n  \r\n  DeleteFunc = () => {\r\n    this.EditItem.ModelItem.Delete();\r\n    this.EditItem.Delete();\r\n    this.EditItem = undefined;\r\n  }\r\n\r\n  AddDatabase = () => {\r\n    this.ModelItem.AddDatabase();\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInputVM from \"../base/SettingInputVM\";\r\n\r\nexport default class ElementFilterSettingInputVM extends SettingInputVM {\r\n  \r\n}","import { ElementFilterSetting_DictVM } from \"./ElementFilterSetting_DictVM\";\r\nimport * as itemVMUtil from './ElementFilterSettingVMUtil'\r\nimport * as inputVMUtil from './ElementFilterSettingInputVMUtil'\r\n\r\nexport const get = (q) => {\r\n  var qI = new ElementFilterSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (dictVM) => {\r\n  var input = dictVM.ModelItem.Input;\r\n  return inputVMUtil.get(input, dictVM);\r\n}","import SettingInputVM from \"../base/SettingInputVM\";\r\nimport ElementFilterSettingInputVM from \"./ElementFilterSettingInputVM\"\r\nimport * as dataVMUtil from './ElementFilterSettingDataVMUtil'\r\nimport { message } from \"antd\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new ElementFilterSettingInputVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnAddDatabaseDone = (v) => {\r\n    var command = qI.CommandName;\r\n    message.success(`${command} element filter setting successfully`);\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../../filter/EntFilterVMUtil'\r\nimport * as util from './MES_ValueSettingVMUtil'\r\nimport * as selectVMUtil from '../../../../../select/SelectVMUtil'\r\n\r\nexport default class MES_ValueSettingVM {\r\n  // constructor() {\r\n  //   makeObservable(this, {\r\n\r\n  //   })\r\n  // }\r\n\r\n  get Index() {\r\n    return this.Dict.ValueSettingVMs.indexOf(this);\r\n  }\r\n\r\n  retrieveType\r\n  get RetrieveType() {\r\n    if (!this.retrieveType) {\r\n      this.retrieveType = this.ModelItem.RetrieveType;\r\n    }\r\n    return this.retrieveType;\r\n  }\r\n  set RetrieveType(v) {\r\n    this.retrieveType = v;\r\n    this.ModelItem.RetrieveType = v;\r\n  }\r\n\r\n  get RetrieveTypeStorageList() {\r\n    return util.GetRetrieveTypeStorageList(this);\r\n  }\r\n\r\n  retrieveTypeSelectVM\r\n  get RetrieveTypeSelectVM() {\r\n    if (!this.retrieveTypeSelectVM) {\r\n      var obj = this.retrieveTypeSelectVM = selectVMUtil.get(this.RetrieveTypeStorageList, this.RetrieveType);\r\n      obj.OnSelectedItemChanged = (v) => this.RetrieveType = v;\r\n    }\r\n    return this.retrieveTypeSelectVM;\r\n  }\r\n\r\n  valueFilterVM\r\n  get ValueFilterVM() {\r\n    if (!this.valueFilterVM) {\r\n      var obj = this.valueFilterVM = filterVMUtil.get(this.ModelItem.ValueFilter);\r\n      obj.ValueSelectPlaceholder = 'giá trị parameter';\r\n    }\r\n    return this.valueFilterVM;\r\n  }\r\n  set ValueFilterVM(v) {\r\n    this.valueFilterVM = v;\r\n    if (!v) {\r\n      this.ModelItem.ValueFilter = v;\r\n    }\r\n    else {\r\n      this.ModelItem.ValueFilter = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  workpackageVM\r\n  get WorkpackageVM() {\r\n    if (!this.workpackageVM) {\r\n      this.workpackageVM = util.GetWorkpackageVM(this);\r\n    }\r\n    return this.workpackageVM;\r\n  }\r\n  set WorkpackageVM(v) {\r\n    this.workpackageVM = v;\r\n    var modelItem = this.ModelItem;\r\n    if (!v) {\r\n      modelItem.Workpackage = v;\r\n    }\r\n    else {\r\n      this.ModelItem.Workpackage = v.Workpackage;\r\n    }\r\n  }\r\n\r\n  workpackageVMStorageList = undefined;\r\n  get WorkpackageVMStorageList() {\r\n    if (!this.workpackageVMStorageList) {\r\n      this.workpackageVMStorageList = util.GetWorkpackageVMStorageList(this);\r\n    }\r\n    return this.workpackageVMStorageList;\r\n  }\r\n  set WorkpackageVMStorageList(v) {\r\n    this.workpackageVMStorageList = v;\r\n\r\n    var selectVM = this.WorkpackageSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.SelectedIndex = -1;\r\n  }\r\n\r\n  workpackageSelectVM\r\n  get WorkpackageSelectVM() {\r\n    if (!this.workpackageSelectVM) {\r\n      var storageList = this.WorkpackageVMStorageList ?\r\n        this.WorkpackageVMStorageList : [];\r\n\r\n      var obj = this.workpackageSelectVM = selectVMUtil.get\r\n        (storageList, this.WorkpackageVM);\r\n      obj.Placeholder = 'chọn công tác';\r\n      obj.OnSelectedItemChanged = (v) => this.WorkpackageVM = v;\r\n    }\r\n\r\n    return this.workpackageSelectVM;\r\n  }\r\n\r\n  massType\r\n  get MassType() {\r\n    if (!this.massType) {\r\n      this.massType = this.ModelItem.MassType;\r\n    }\r\n    return this.massType;\r\n  }\r\n  set MassType(v) {\r\n    this.massType = v;\r\n    this.ModelItem.MassType = v;\r\n  }\r\n\r\n  get MassTypeStorageList() {\r\n    return util.GetMassTypeStorageList(this);\r\n  }\r\n\r\n  massTypeSelectVM\r\n  get MassTypeSelectVM() {\r\n    if (!this.massTypeSelectVM) {\r\n      var obj = this.massTypeSelectVM = selectVMUtil.get(this.MassTypeStorageList, \r\n        this.MassType);\r\n      obj.Placeholder = 'loại khối lượng';\r\n      obj.OnSelectedItemChanged = (v) => this.MassType = v;\r\n    }\r\n    return this.massTypeSelectVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n    var list = this.Dict.ValueSettingVMs;\r\n    list.splice(this.Index, 1);\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.RetrieveTypeSelectVM.InitialItem = v.RetrieveType;\r\n    this.ValueFilterVM.SetData(v.ValueFilterVM);\r\n    this.WorkpackageSelectVM.InitialItem = v.WorkpackageVM;\r\n    this.MassTypeSelectVM.InitialItem = v.MassType;\r\n  }\r\n}","import { PMDataVM } from \"../../../../single/form/PMDataVM\";\r\nimport MES_ValueSettingVM from \"./MES_ValueSettingVM\"\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MES_ValueSettingVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  pmDataVM().Workpackage_DictVM.OnGetItemsDone_Funcs.push((v) => {\r\n    qI.WorkpackageVMStorageList = GetWorkpackageVMStorageList(qI);\r\n  });\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetRetrieveTypeStorageList = (q) => {\r\n  return pmDataVM().ValueRetrieveTypes;\r\n}\r\n\r\nexport const GetWorkpackageVM = (q) => {\r\n  var workpackage = q.ModelItem.Workpackage;\r\n  if (!workpackage) return undefined;\r\n\r\n  var list = pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x.Workpackage === workpackage);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetWorkpackageVMStorageList = (q) => {\r\n  return pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n}\r\n\r\nexport const GetMassTypeStorageList = (q) => {\r\n  return pmDataVM().MassTypes;\r\n}","import * as util from './MES_ValueSettingUtil'\r\n\r\nexport default class MES_ValueSetting{\r\n  get Index() {\r\n    return this.Dict.ValueSettings.indexOf(this);\r\n  }\r\n\r\n  RetrieveType\r\n\r\n  MassType\r\n  \r\n  ValueFiter\r\n\r\n  workpackageId\r\n  \r\n  workpackage\r\n  get Workpackage(){\r\n    if (!this.workpackage){\r\n      this.workpackage = util.GetWorkpackage(this);\r\n    }\r\n    return this.workpackage;\r\n  }\r\n  set Workpackage(v){\r\n    this.workpackage = v;\r\n    if (!v){\r\n      this.workpackageId = undefined;\r\n    }\r\n    else{\r\n      this.workpackageId = v._id;\r\n    }\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.ValueSettings.splice(this.Index, 1);\r\n  }\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","export const byparameter = \"byparameter\";\r\nexport const bymaterial = \"bymaterial\";\r\nexport const byrebar = \"byrebar\";\r\n\r\nexport const GetAll = () => {\r\n  return [byparameter, bymaterial, byrebar]\r\n}","import MES_ValueSetting from './MES_ValueSetting'\r\nimport * as filterUtil from '../../../filter/EntFilterUtil'\r\nimport * as vrt from './MES_ValueRetrieveType'\r\nimport * as fvt from '../../../filter/FilterValueType'\r\nimport * as sft from '../../../filter/StringFilterType'\r\nimport * as fct from '../../../filter/FilterCategoryType'\r\nimport { EntFilter } from '../../../filter/EntFilter';\r\nimport { PMData } from '../../../../single/model/PMData'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MES_ValueSetting();\r\n  qI.RetrieveType = q.retrieveType;\r\n  qI.MassType = q.massType;\r\n  qI.ValueFilter = filterUtil.get(q.valueFilter, fct.parameter);\r\n  qI.workpackageId = q.workpackageId;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, dict) => {\r\n  var qI = new MES_ValueSetting();\r\n  qI.RetrieveType = q.RetrieveType;\r\n  qI.MassType = q.MassType;\r\n  qI.ValueFilter = q.ValueFilter;\r\n  qI.Workpackage = q.Workpackage;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new MES_ValueSetting();\r\n  qI.RetrieveType = vrt.byparameter;\r\n  qI.Dict = dict;\r\n  \r\n  var valueFilter = new EntFilter();\r\n  valueFilter.CategoryType = fct.parameter;\r\n  valueFilter.ValueType = fvt.bystring;\r\n  valueFilter.StringFilterType = sft.byequal;\r\n  valueFilter.Values = [ 'Volume' ];\r\n\r\n  qI.ValueFilter = valueFilter;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetWorkpackage = (q) => {\r\n  var workpackageId = q.workpackageId;\r\n  if (!workpackageId) return undefined;\r\n\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x._id === workpackageId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    retrieveType : q.RetrieveType,\r\n    massType : q.MassType,\r\n    valueFilter: q.ValueFilter.ApiData,\r\n    workpackageId : q.workpackageId\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as util from './MassExportSettingDataVMUtil'\r\nimport * as valueSettingVMUtil from './exportSetting/MES_ValueSettingVMUtil'\r\nimport * as valueSettingUtil from './exportSetting/MES_ValueSettingUtil'\r\n\r\nexport default class MassExportSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueSettingVMs: observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  elementFilterVM\r\n  get ElementFilterVM() {\r\n    if (!this.elementFilterVM) {\r\n      this.elementFilterVM = util.GetElementFilterVM(this);\r\n    }\r\n    return this.elementFilterVM;\r\n  }\r\n  set ElementFilterVM(v) {\r\n    this.elementFilterVM = v;\r\n    var modelItem = this.ModelItem;\r\n    if (!v) {\r\n      modelItem.ElementFilter = v;\r\n    }\r\n    else {\r\n      modelItem.ElementFilter = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  elementFilterVMStorageList = undefined\r\n  get ElementFilterVMStorageList() {\r\n    if (!this.elementFilterVMStorageList) {\r\n      this.elementFilterVMStorageList = util.GetElementFilterVMStorageList(this);\r\n    }\r\n    return this.elementFilterVMStorageList;\r\n  }\r\n  set ElementFilterVMStorageList(v) {\r\n    this.elementFilterVMStorageList = v;\r\n\r\n    var selectVM = this.ElementFilterSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.SelectedIndex = 0;\r\n  }\r\n\r\n  elementFilterSelectVM\r\n  get ElementFilterSelectVM() {\r\n    if (!this.elementFilterSelectVM) {\r\n      var storageList = this.ElementFilterVMStorageList ? this.ElementFilterVMStorageList : [];\r\n\r\n      var obj = this.elementFilterSelectVM = selectVMUtil.get(storageList, this.ElementFilterVM);\r\n      obj.Placeholder = 'chọn bộ lọc'\r\n      obj.OnSelectedItemChanged = (v) => this.ElementFilterVM = v;\r\n    }\r\n    return this.elementFilterSelectVM;\r\n  }\r\n\r\n  valueSettingVMs = undefined\r\n  get ValueSettingVMs() {\r\n    if (!this.valueSettingVMs) {\r\n      this.valueSettingVMs = util.GetValueSettingVMs(this);\r\n    }\r\n    return this.valueSettingVMs;\r\n  }\r\n  set ValueSettingVMs(v) {\r\n    var list = this.valueSettingVMs;\r\n    var modelList = this.ModelItem.ValueSettings;\r\n\r\n    var oldCount = list.length;\r\n    var newCount = v.length;\r\n\r\n    list.forEach((x, i) => {\r\n      if (i >= newCount) return;\r\n      x.SetData(v[i]);\r\n    });\r\n\r\n    var delta = Math.abs(oldCount - newCount);\r\n    if (oldCount > newCount) {\r\n      list.splice(newCount, delta);\r\n      modelList.splice(newCount, delta);\r\n    }\r\n    else if (oldCount < newCount) {\r\n      for (var i = 0; i < delta; i++) {\r\n        var originItemVM = v[oldCount + i];\r\n\r\n        var item = valueSettingUtil.Clone\r\n          (originItemVM.ModelItem, this.ModelItem);\r\n        modelList.push(item);\r\n\r\n        var itemVM = valueSettingVMUtil.get(item, this);\r\n        list.push(itemVM);\r\n      }\r\n    }\r\n  }\r\n\r\n  AddNewValueSettingVM = () => {\r\n    var item = this.ModelItem.AddNewValueSetting();\r\n    var itemView = valueSettingVMUtil.get(item, this);\r\n    this.ValueSettingVMs.push(itemView);\r\n    return itemView;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.ElementFilterSelectVM.InitialItem = v.ElementFilterVM;\r\n    this.ValueSettingVMs = v.ValueSettingVMs;\r\n  }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport MassExportSettingDataVM from './MassExportSettingDataVM';\r\nimport * as valueSettingVMUtil from './exportSetting/MES_ValueSettingVMUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassExportSettingDataVM();\r\n  qI.ModelItem = q;\r\n\r\n  pmDataVM().ElementFilterSetting_DictVM.OnGetItemsDone = (v) => {\r\n    qI.ElementFilterVMStorageList = GetElementFilterVMStorageList(qI);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetElementFilterVM = (q) => {\r\n  var elemFilter = q.ModelItem.ElementFilter;\r\n  if (!elemFilter) return undefined;\r\n\r\n  var list = pmDataVM().ElementFilterSetting_DictVM.Items;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x.ModelItem === elemFilter);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetElementFilterVMStorageList = (q) => {\r\n  return pmDataVM().ElementFilterSetting_DictVM.Items;\r\n}\r\n\r\nexport const GetValueSettingVMs = (q) => {\r\n  var valueSettings = q.ModelItem.ValueSettings;\r\n  return valueSettings.map(x => valueSettingVMUtil.get(x, q));\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\n\r\nexport default class MassExportSettingVM extends SettingVM {\r\n  OnInitialSetDataVM = (v) => {\r\n    var valueSettingVMs = v.ValueSettingVMs;\r\n  }\r\n}","import * as dataVMUtil from './MassExportSettingDataVMUtil'\r\nimport MassExportSettingVM from \"./MassExportSettingVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassExportSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInputVM from \"../base/SettingInputVM\";\r\n\r\nexport default class MassExportSettingInputVM extends SettingInputVM {\r\n  \r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassExportSetting_DictVMUtil'\r\n\r\nexport class MassExportSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n      this.Input.EditItem = v;\r\n    }\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","import * as itemVMUtil from './MassExportSettingVMUtil'\r\nimport * as inputVMUtil from './MassExportSettingInputVMUtil'\r\nimport { MassExportSetting_DictVM } from \"./MassExportSetting_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassExportSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (dictVM) => {\r\n  var input = dictVM.ModelItem.Input;\r\n  return inputVMUtil.get(input, dictVM);\r\n}","import SettingInputVM from \"../base/SettingInputVM\";\r\nimport * as dataVMUtil from './MassExportSettingDataVMUtil'\r\nimport { message } from \"antd\";\r\nimport MassExportSettingInputVM from \"./MassExportSettingInputVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassExportSettingInputVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnAddDatabaseDone = (v) => {\r\n    var command = qI.CommandName;\r\n    message.success(`${command} setting successfully`);\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassGroupSetting_DictVMUtil'\r\n\r\nexport class MassGroupSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","import * as itemVMUtil from './MassGroupSettingVMUtil'\r\nimport { MassGroupSetting_DictVM } from \"./MassGroupSetting_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n","\r\nexport default class PhaseVM {\r\n  get _id(){\r\n    return this.ModelItem._id;\r\n  }\r\n\r\n  name\r\n  get Name(){\r\n    if(!this.name){\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    if (!this.description){\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v){\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  get DisplayContent () {\r\n    return `${this.Name}`;\r\n  }\r\n}","import PhaseVM from \"./PhaseVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  var qI = new PhaseVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;  \r\n\r\n  return qI;\r\n}","export const addversion = 'addversion'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Phase_DictVMUtil'\r\nimport * as stateType from '../state/StateType'\r\nimport { message } from 'antd';\r\n\r\nexport class Phase_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable,\r\n      state : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  state = undefined\r\n  get State(){\r\n    return this.state;\r\n  }\r\n  set State(v){\r\n    this.state = v;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n\r\n  AddVersion = () => {\r\n    this.State = stateType.addversion;\r\n  }\r\n\r\n  Cancel = () => {\r\n    this.State = undefined;\r\n  }\r\n\r\n  OK = () => {\r\n    var name = this.Input.Name;\r\n    var index = this.Items.findIndex(x => x.Name === name);\r\n    if (index !== -1){\r\n      message.warning('version name already exists!');\r\n      return;\r\n    }\r\n\r\n    this.State = undefined;\r\n    this.ModelItem.AddMassVersion();\r\n  }\r\n}","import * as textVMUtil from '../../../text/TextVMUtil'\r\n\r\nexport default class PhaseInputVM {\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên version\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM){\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n}","import * as itemVMUtil from './PhaseVMUtil'\r\nimport { Phase_DictVM } from \"./Phase_DictVM\";\r\nimport * as inputVMUtil from './PhaseInputVMUtil'\r\n\r\nexport const get = (q) => {\r\n  var qI = new Phase_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone_Funcs.push((v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  });\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (q) => {\r\n  return inputVMUtil.get(q.ModelItem.Input, q);\r\n}","import PhaseInputVM from \"./PhaseInputVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new PhaseInputVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ProjectVMUtil'\r\n\r\nexport default class ProjectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      typicalLevelSetting: observable,\r\n      typicalLevelSetting_ForEdit: observable\r\n    })\r\n  }\r\n\r\n  get _id() {\r\n    return this.ModelItem._id;\r\n  }\r\n\r\n  name\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  code\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.ModelItem.Code;\r\n    }\r\n    return this.code;\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    this.ModelItem.Code = v;\r\n  }\r\n\r\n  phase_DictVM\r\n  get Phase_DictVM() {\r\n    if (!this.phase_DictVM) {\r\n      this.phase_DictVM = util.GetPhase_DictVM(this);\r\n    }\r\n    return this.phase_DictVM;\r\n  }\r\n\r\n  rebarMass_Dict\r\n  get RebarMass_Dict() {\r\n    if (!this.rebarMass_Dict) {\r\n      this.rebarMass_Dict = this.ModelItem.RebarMass_Dict;\r\n    }\r\n    return this.rebarMass_Dict;\r\n  }\r\n\r\n  get InputExportSet() {\r\n    return this.ModelItem.InputExportSet;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return `${this.Code} - ${this.Name}`;\r\n  }\r\n\r\n  get Level_Dict() {\r\n    return this.ModelItem.Level_Dict;\r\n  }\r\n\r\n  typicalLevelSetting = undefined\r\n  get TypicalLevelSetting() {\r\n    if (!this.typicalLevelSetting) {\r\n      this.typicalLevelSetting = util.GetTypicalLevelSetting(this);\r\n    }\r\n    return this.typicalLevelSetting;\r\n  } set TypicalLevelSetting(v) {\r\n    this.typicalLevelSetting = v;\r\n  }\r\n\r\n  typicalLevelSetting_ForEdit = undefined\r\n  get TypicalLevelSetting_ForEdit() {\r\n    if (!this.typicalLevelSetting_ForEdit) {\r\n      this.typicalLevelSetting_ForEdit = util.GetTypicalLevelSetting_ForEdit(this);\r\n    }\r\n    return this.typicalLevelSetting_ForEdit;\r\n  } set TypicalLevelSetting_ForEdit(v) {\r\n    this.typicalLevelSetting_ForEdit = v;\r\n  }\r\n\r\n  get Url(){\r\n    return this.ModelItem.Url;\r\n  }\r\n}","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport * as ts from '../text/TextState'\r\n\r\nclass NewInputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.contentEditable = React.createRef();\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    var data = this.state;\r\n    data.Content = e.target.value;\r\n  };\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var Content = data.Content;\r\n    var style = this.props.style ? this.props.style : {};\r\n    if (!style.minWidth) {\r\n      style.minWidth = 150\r\n      style.fontFamily = 'password'\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <ContentEditable className='ant-input' innerRef={this.contentEditable}\r\n            placeholder={data.Placeholder}\r\n            style={style}\r\n            html={Content ? Content : ''}\r\n            onChange={this.handleChange} />\r\n          : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password value={Content} onChange={this.handleChange} /> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(NewInputView)","export const text = 'text'\r\nexport const input = 'input'","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as checkboxVMUtil from './CheckboxVMUtil'\r\nimport './Checkbox.css'\r\n\r\nclass CheckboxView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = checkboxVMUtil.get(false);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onCheckedChange = (e) => {\r\n    var data = this.state;\r\n    var { checked } = e.target;\r\n\r\n    if (data.OnCheckChanging) {\r\n      data.OnCheckChanging(checked);\r\n    }\r\n\r\n    if (!data.Cancel) {\r\n      data.Ischecked = checked;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { ischecked, name, isDisable } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <label>\r\n          <input type=\"checkbox\"\r\n            checked={ischecked}\r\n            onChange={this.onCheckedChange} disabled={isDisable} />\r\n          <span className='checkbox__title'>{name}</span>\r\n        </label>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(CheckboxView)","import { Button, Popover } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport CheckboxView from '../../../../../checkbox/CheckboxView';\r\nimport * as checkBoxUtil from '../../../../../checkbox/CheckboxVMUtil';\r\nimport * as multiSelectUtil from \"../../../../../select/MultiSelectVMUtil\";\r\nimport * as textUtil from \"../../../../../text/TextVMUtil\";\r\nimport { text } from '../pageItem/TLS_PageItemStateType';\r\nimport * as util from './LevelGroupVMUtil'\r\n\r\nexport class LevelGroupVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      primary: observable,\r\n      isSelectOpen: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n\r\n  get Levels() {\r\n    return this.ModelItem.Levels;\r\n  } set Levels(v) {\r\n    this.ModelItem.Levels = v;\r\n  }\r\n\r\n  get SettingVM() {\r\n    return this.Dict.SettingVM;\r\n  }\r\n\r\n  levelSelectVM\r\n  get LevelSelectVM() {\r\n    if (!this.levelSelectVM) {\r\n      var list = this.LevelStorageList;\r\n      if (!list) {\r\n        this.SettingVM.ModelItem.OnGetLevelStorageList_Funcs.push(() => {\r\n          var obj = this.levelSelectVM;\r\n          obj.Items = this.LevelStorageList;\r\n          obj.InitialItems = this.Levels;\r\n        })\r\n      }\r\n\r\n      list = list ? list : []\r\n      var obj = this.levelSelectVM = multiSelectUtil.get(list, this.Levels);\r\n      obj.Placeholder = 'chọn level ...';\r\n\r\n      obj.TitleRender = (item) => {\r\n        const getTriggerContent = () => {\r\n          return this.IsSelectOpen || this.Primary === item ? 'click' : 'hover';\r\n        }\r\n        var triggerVM = textUtil.get(getTriggerContent())\r\n\r\n        const getButtonType = () => {\r\n          return this.Primary === item ? 'primary' : 'dashed'\r\n        }\r\n        var buttonTypeVM = textUtil.get(getButtonType())\r\n\r\n        const getAddContent = () => {\r\n          return this.Primary === item ? '' : 'Set'\r\n        }\r\n        var addContentVM = textUtil.get(getAddContent())\r\n\r\n        const getItemCss = () => {\r\n          return this.Primary === item ? 'levelgroup__primary' : '';\r\n        }\r\n\r\n        return <Popover trigger={triggerVM.Content}\r\n          content={\r\n            <span>\r\n              {this.Primary !== item ?\r\n                <span className='levelgroup__addtext'>{addContentVM.Content}</span>\r\n                : ''}\r\n              <Button size='small'\r\n                type={buttonTypeVM.Content}\r\n                onClick={() => {\r\n                  this.Primary = item;\r\n                }}>Primary</Button>\r\n            </span>\r\n          }>\r\n          <span className={getItemCss()}>{item}</span>\r\n        </Popover>\r\n      }\r\n\r\n      obj.OnSetOpen = (v) => this.IsSelectOpen = v;\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.Levels = v;\r\n        if (this.Levels.indexOf(this.Primary) === -1) {\r\n          this.Primary = util.GetDefaultPrimary(this);\r\n        }\r\n      }\r\n    }\r\n    return this.levelSelectVM;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.LevelGroups.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n    var list = this.Dict.LevelGroups;\r\n    list.splice(this.Index, 1);\r\n\r\n    this.Primary = util.GetDefaultPrimary(this);\r\n  }\r\n\r\n  primary = undefined\r\n  get Primary() {\r\n    if (!this.primary) {\r\n      this.primary = this.ModelItem.Primary;\r\n    }\r\n    return this.primary\r\n  } set Primary(v) {\r\n    this.primary = this.ModelItem.Primary = v;\r\n  }\r\n\r\n  isSelectOpen = undefined\r\n  get IsSelectOpen() {\r\n    return this.isSelectOpen\r\n  } set IsSelectOpen(v) {\r\n    this.isSelectOpen = v;\r\n  }\r\n}","import { LevelGroupVM } from \"./LevelGroupVM\"\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new LevelGroupVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefaultPrimary = (q) => {\r\n  if (q.Levels && q.Levels.length !== 0) {\r\n    return q.Levels[0];\r\n  }\r\n}","export const input = 'input'\r\nexport const select = 'select'","import * as textUtil from \"../../../../../text/TextVMUtil\";\r\nimport * as genUtil from \"../../../../../../util/generalUtil\";\r\nimport * as it from './TLS_FilterValue_InputType'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport NewInputView from \"../../../../../input/NewInputView\";\r\nimport SelectView from \"../../../../../select/SelectView\";\r\nimport * as selectUtil from \"../../../../../select/SelectVMUtil\";\r\nimport * as util from './TLS_FilterValueVMUtil'\r\n\r\nexport class TLS_FilterValueVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      InputType: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Values.indexOf(this);\r\n  }\r\n\r\n  get Values() {\r\n    return this.Dict.ModelItem.Values;\r\n  }\r\n\r\n  get Value() {\r\n    return this.Values[this.Index];\r\n  }\r\n  set Value(v) {\r\n    this.Values[this.Index] = v;\r\n  }\r\n\r\n  valueVM\r\n  get ValueVM() {\r\n    if (!this.valueVM) {\r\n      var obj = this.valueVM = textUtil.get(this.Value);\r\n      obj.onSetContent = (v) => {\r\n        this.Value = v;\r\n      }\r\n    }\r\n    return this.valueVM;\r\n  }\r\n\r\n  selectVM\r\n  get SelectVM() {\r\n    if (!this.selectVM) {\r\n      var list = ['Cột', 'Vách', 'Dầm', 'Sàn']\r\n      var obj = this.selectVM = selectUtil.get(list, this.Value);\r\n      obj.Placeholder = '...'\r\n      obj.OnSetOpen = (v) => this.SelectOpen = v;\r\n      obj.OnSelectedItemChanged = (v) => this.Value = v;\r\n    }\r\n    return this.selectVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.ModelItem.Values.splice(this.Index, 1);\r\n    this.Dict.Values.splice(this.Index, 1);\r\n  }\r\n\r\n  InputType = it.select\r\n\r\n  ToggleInputType = () => {\r\n    switch (this.InputType) {\r\n      case it.input:\r\n        this.SelectVM.InitialItem = this.Value;\r\n        this.Value = this.SelectVM.SelectedItem;\r\n        this.InputType = it.select\r\n        break;\r\n      case it.select:\r\n        if (this.Value) {\r\n          this.ValueVM.Content = this.Value;\r\n        } else{\r\n          if (!this.ValueVM.Content){\r\n            this.ValueVM.Content = 'value'\r\n          }\r\n          this.Value =this.ValueVM.Content;\r\n        }\r\n\r\n        this.InputType = it.input\r\n        break;\r\n    }\r\n  }\r\n\r\n  SwitchChecked_Funcs = () => this.InputType === it.select;\r\n\r\n  get InputElement() {\r\n    switch (this.InputType) {\r\n      case it.input:\r\n        return <NewInputView store={this.ValueVM} className='tls_filter__value__input' />\r\n      case it.select:\r\n        return <SelectView store={this.SelectVM} className='tls_filter__value__select' />\r\n    }\r\n  }\r\n\r\n  selectOpen\r\n  get SelectOpen() {\r\n    if (this.selectOpen === undefined) {\r\n      this.selectOpen = this.SelectVM.Open;\r\n    }\r\n    return this.selectOpen;\r\n  }\r\n  set SelectOpen(v) {\r\n    this.selectOpen = v;\r\n    this.PopoverState.Content = util.GetPopoverState(this);\r\n  }\r\n\r\n  popoverState\r\n  get PopoverState() {\r\n    if (!this.popoverState) {\r\n      this.popoverState = textUtil.get(util.GetPopoverState(this));\r\n    }\r\n    return this.popoverState;\r\n  }\r\n}","import { TLS_FilterValueVM } from \"./TLS_FilterValueVM\"\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TLS_FilterValueVM();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetPopoverState = (q) => {\r\n    return q.SelectOpen ? 'none' : 'hover';\r\n  }","import { makeObservable, observable, action } from 'mobx';\r\nimport * as selectUtil from \"../../../../../select/SelectVMUtil\";\r\nimport * as util from './TLS_FilterVMUtil'\r\nimport * as valueUtil from './TLS_FilterValueVMUtil'\r\n\r\nexport class TLS_FilterVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      values : observable\r\n    })\r\n  }\r\n\r\n  get id(){\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get Field(){\r\n    return this.ModelItem.Field;\r\n  } set Field(v){\r\n    this.ModelItem.Field = v;\r\n  }\r\n\r\n  get FieldStorageList(){\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  fieldSelectVM\r\n  get FieldSelectVM(){\r\n    if (!this.fieldSelectVM){\r\n      var obj = this.fieldSelectVM = \r\n        selectUtil.get(this.FieldStorageList, this.Field);\r\n      obj.Placeholder = 'chọn bộ lọc ...';\r\n      obj.OnSelectedItemChanged = (v) => this.Field = v;\r\n    }\r\n    return this.fieldSelectVM;\r\n  }\r\n\r\n  get Index (){\r\n    return this.Dict.Filters.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n    this.Dict.Filters.splice(this.Index, 1);\r\n  }\r\n\r\n  values = undefined\r\n  get Values(){\r\n    if (!this.values){\r\n      this.values = util.GetValues(this);\r\n    }\r\n    return this.values;\r\n  }\r\n\r\n  AddValue = () => {\r\n    var item = valueUtil.get(this.ModelItem.AddValue(),this);\r\n    this.Values.push(item);\r\n    return item;\r\n  }\r\n}\r\n","import { TLS_FilterVM } from \"./TLS_FilterVM\";\r\nimport * as valueUtil from './TLS_FilterValueVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TLS_FilterVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetValues = (q) => {\r\n  return q.ModelItem.Values.map(x => valueUtil.get(x, q));\r\n}","import { Button, Popover } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport NewInputView from '../../../../../input/NewInputView';\r\nimport * as textUtil from '../../../../../text/TextVMUtil';\r\nimport * as st from './TLS_PageItemStateType'\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupVMUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterVMUtil'\r\nimport * as util from './TLS_PageItemVMUtil'\r\n\r\nexport class TLS_PageItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      name: observable,\r\n      State: observable,\r\n      levelGroups: observable,\r\n      filters: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem?.id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = this.ModelItem.Name = v;\r\n  }\r\n\r\n  State = st.text\r\n\r\n  ToggleState = () => {\r\n    switch (this.State) {\r\n      case st.text:\r\n        this.State = st.input\r\n        break;\r\n      case st.input:\r\n        this.NameVM.Content = this.Name;\r\n        this.State = st.text\r\n        break;\r\n    }\r\n  }\r\n\r\n  get DeleteMarginCss() {\r\n    return this.State === st.input ? 'tls_pageItem__deletemargin' : ''\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      this.nameVM = textUtil.get(this.Name);\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  NameOK = () => {\r\n    this.State = st.text;\r\n    this.Name = this.NameVM.Content;\r\n  }\r\n\r\n  NameCancel = () => {\r\n    this.State = st.text;\r\n  }\r\n\r\n  get InputToolElement() {\r\n    return <div >\r\n      <Button type='primary' size='small'\r\n        onClick={this.NameOK}>ok</Button>\r\n      <Button type='dashed' size='small'\r\n        onClick={this.NameCancel}>cancel</Button>\r\n    </div>\r\n  }\r\n\r\n  get InputElement() {\r\n    var obj = <NewInputView className='tls_pageItem_input' store={this.NameVM} />\r\n    return obj;\r\n  }\r\n\r\n  get TitleElement() {\r\n    var delElem = <Button type='primary' size='small' onClick={this.Delete}\r\n      className='tls_pageItem__delete'>x</Button>\r\n\r\n    switch (this.State) {\r\n      case st.text:\r\n        return <>\r\n          <span>{this.Name}</span>\r\n          <Button type='primary' size='small' className='tls_pageItem__edit'\r\n            onClick={this.ToggleState}>e</Button>\r\n          {delElem}\r\n        </>\r\n      case st.input:\r\n        return <>\r\n          <Popover content={this.InputToolElement} trigger=\"focus\">\r\n            <span>\r\n              {this.InputElement}\r\n            </span>\r\n          </Popover>\r\n          {delElem}\r\n        </>\r\n    }\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.PageItems.indexOf(this);\r\n  }\r\n\r\n  get IsLast() {\r\n    return this.Dict.PageItems.length - 1 === this.Index;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n\r\n    var index = this.Index;\r\n    var isLast = this.IsLast;\r\n\r\n    var dict = this.Dict;\r\n    var list = dict.PageItems;\r\n    list.splice(index, 1);\r\n    dict.AllTabs.splice(index, 1);\r\n\r\n    if (list.length !== 0) {\r\n      dict.IsModelChangePageKey = true;\r\n      dict.CurrentPageKey = (isLast ? list[index - 1] : list[index]).id\r\n    }\r\n  }\r\n\r\n  // Setting\r\n  get SettingVM() {\r\n    return this.Dict.SettingVM;\r\n  }\r\n\r\n  // Level Group\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n\r\n  levelGroups = undefined\r\n  get LevelGroups() {\r\n    if (!this.levelGroups) {\r\n      this.levelGroups = util.GetLevelGroups(this);\r\n    }\r\n    return this.levelGroups;\r\n  }\r\n\r\n  AddLevelGroup = () => {\r\n    var item = levelGroupUtil.get(this.ModelItem.AddLevelGroup(), this);\r\n    this.LevelGroups.push(item);\r\n    return item;\r\n  }\r\n\r\n  // Filter\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  filters = undefined\r\n  get Filters() {\r\n    if (!this.filters) {\r\n      this.filters = util.GetFilters(this);\r\n    }\r\n    return this.filters;\r\n  }\r\n\r\n  AddFilter = () => {\r\n    var item = filterUtil.get(this.ModelItem.AddFilter(), this);\r\n    this.Filters.push(item);\r\n    return item;\r\n  }\r\n}","import { TLS_PageItemVM } from \"./TLS_PageItemVM\"\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupVMUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TLS_PageItemVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetLevelGroups = (q) => {\r\n  return q.ModelItem.LevelGroups.map(x => levelGroupUtil.get(x, q));\r\n}\r\n\r\nexport const GetFilters = (q) => {\r\n  return q.ModelItem.Filters.map(x => filterUtil.get(x, q));\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './TypicalLevelSettingDataVMUtil'\r\nimport { ControlOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemVMUtil';\r\n\r\nexport class TypicalLevelSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      pageItems: observable,\r\n      currentPageKey: observable,\r\n      allTabs: observable\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  // Setting\r\n  get SettingVM (){\r\n    return this.Dict;\r\n  }\r\n\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  // Page Items\r\n  pageItems = undefined\r\n  get PageItems() {\r\n    if (!this.pageItems) {\r\n      this.pageItems = util.GetPageItems(this);\r\n    }\r\n    return this.pageItems;\r\n  }\r\n\r\n  AddPageItem = () => {\r\n    var item = pageItemUtil.get(this.ModelItem.AddPageItem(), this);\r\n    this.PageItems.push(item);\r\n\r\n    var i = this.IsHaveAddCommandTab ? 1 : 0;\r\n    this.AllTabs.splice(this.AllTabs.length - i, 0, item);\r\n\r\n    this.CurrentPageKey = item.id;\r\n\r\n    return item;\r\n  }\r\n\r\n  addCommandTab\r\n  get AddCommandTab() {\r\n    if (!this.addCommandTab) {\r\n      this.addCommandTab = {\r\n        id: 'add',\r\n        TitleElement: <Button className='tls__tabs__add'\r\n          type='text' size='small'\r\n          onClick={this.AddPageItem}>+</Button>\r\n      }\r\n    }\r\n    return this.addCommandTab;\r\n  }\r\n\r\n  IsHaveAddCommandTab = false\r\n\r\n  allTabs = undefined\r\n  get AllTabs() {\r\n    if (!this.allTabs) {\r\n      var obj = [...this.PageItems];\r\n      if (this.IsHaveAddCommandTab) {\r\n        obj.push(this.AddCommandTab);\r\n      }\r\n      this.allTabs = obj;\r\n    }\r\n    return this.allTabs;\r\n  }\r\n\r\n  currentPageKey = undefined\r\n  get CurrentPageKey() {\r\n    if (!this.currentPageKey) {\r\n      this.currentPageKey = this.PageItems[0].id;\r\n    }\r\n    return this.currentPageKey;\r\n  } set CurrentPageKey(v) {\r\n    this.currentPageKey = v;\r\n  }\r\n\r\n  IsModelChangePageKey = false\r\n\r\n  ChangePageKey = (v) => {\r\n    if (this.IsModelChangePageKey) {\r\n      this.IsModelChangePageKey = false; return;\r\n    }\r\n    this.CurrentPageKey = v;\r\n  }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { TypicalLevelSettingDataVM } from './TypicalLevelSettingDataVM';\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemVMUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TypicalLevelSettingDataVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPageItems = (q) => {\r\n  return q.ModelItem.PageItems.map(x => pageItemUtil.get(x, q));\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\nimport * as util from './TypicalLevelSettingVMUtil'\r\n\r\nexport class TypicalLevelSettingVM extends SettingVM {\r\n  get LevelStorageList() {\r\n    return this.ModelItem.LevelStorageList;\r\n  }\r\n\r\n  get FieldFilterStorageList(){\r\n    return this.ModelItem.FieldFilterStorageList;\r\n  }\r\n\r\n  Save = () => {\r\n    this.ModelItem.Save();\r\n  }\r\n}","import * as dataVMUtil from './TypicalLevelSettingDataVMUtil'\r\nimport { TypicalLevelSettingVM } from './TypicalLevelSettingVM'\r\nimport * as fieldUtil from '../../mass/item/MassItemField'\r\n\r\nexport const get = (q, project) => {\r\n  if (!q) return undefined;\r\n  \r\n  var qI = new TypicalLevelSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Project = project;\r\n\r\n  // var level_Dict = project.Level_Dict;\r\n  // const getLevelsFunc = () => { \r\n  //   qI.LevelStorageList = level_Dict.Items.map(x => x.Name);\r\n  //   qI.GetLevelStorageList = true;\r\n  // }\r\n  // if (level_Dict.Items){\r\n  //   getLevelsFunc();\r\n  // } else{\r\n  //   level_Dict.OnGetItemsDone_Funcs.push(getLevelsFunc);\r\n  // }\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data, qI);\r\n  }    \r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetFieldFilterStorageList = () => {\r\n  return fieldUtil.GetListForTypicalLevelFilter();\r\n}","import * as phaseDictVMUtil from '../phase/Phase_DictVMUtil'\r\nimport ProjectVM from \"./ProjectVM\";\r\nimport * as typicalLevelUtil from '../setting/typicallevel/TypicalLevelSettingVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  var qI = new ProjectVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPhase_DictVM = (q) => {\r\n  var phaseDict = q.ModelItem.Phase_Dict;\r\n  return phaseDictVMUtil.get(phaseDict);\r\n}\r\n\r\nexport const GetTypicalLevelSetting_Func = (model, project) => {\r\n  return typicalLevelUtil.get(model, project);\r\n}\r\n\r\nexport const GetTypicalLevelSetting = (q) => {\r\n  var project = q.ModelItem;\r\n  var tls = project.TypicalLevelSetting;\r\n  if (tls) {\r\n    return GetTypicalLevelSetting_Func(tls, q)\r\n  } else {\r\n    project.OnGetTypicalLevelSetting_Funcs.push(() =>\r\n      q.TypicalLevelSetting = GetTypicalLevelSetting_Func(project.TypicalLevelSetting, q));\r\n  }\r\n}\r\n\r\nexport const GetTypicalLevelSetting_ForEdit = (q) => {\r\n  var project = q.ModelItem;\r\n  var tls = project.TypicalLevelSetting_ForEdit;\r\n  if (tls) {\r\n    return GetTypicalLevelSetting_Func(tls, q)\r\n  } else {\r\n    project.OnGetTypicalLevelSetting_Funcs.push(() => {\r\n      q.TypicalLevelSetting_ForEdit = GetTypicalLevelSetting_Func(project.TypicalLevelSetting_ForEdit, q)\r\n    });\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Project_DictVMUtil'\r\n\r\nexport class Project_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n    this.ModelItem.Items = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n}","import * as itemVMUtil from './ProjectVMUtil'\r\nimport { Project_DictVM } from \"./Project_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new Project_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassResultCompVMUtil'\r\nimport * as multiSelectVMUtil from '../../../../select/MultiSelectVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as textUtil from '../../../../text/TextVMUtil'\r\nimport { Link } from 'react-router-dom';\r\nimport { Popover } from 'antd';\r\n\r\nexport default class MassResultCompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsShowProjectSelect: observable,\r\n      CanHavePhase: observable,\r\n      isHavePhase: observable,\r\n      IsDataPending: observable\r\n    })\r\n  }\r\n\r\n  projects\r\n  get Projects() {\r\n    if (!this.projects) {\r\n      this.projects = this.ModelItem.Projects;\r\n    }\r\n    return this.projects;\r\n  }\r\n  set Projects(v) {\r\n    this.projects = v;\r\n    this.ModelItem.Projects = v;\r\n  }\r\n\r\n  projectVMs\r\n  get ProjectVMs() {\r\n    if (!this.projectVMs) {\r\n      this.projectVMs = util.GetProjectVMs(this);\r\n    }\r\n    return this.projectVMs;\r\n  }\r\n  set ProjectVMs(v) {\r\n    this.projectVMs = v;\r\n    this.Projects = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  projectVMStorageList\r\n  get ProjectVMStorageList() {\r\n    if (!this.projectVMStorageList) {\r\n      this.projectVMStorageList = util.GetProjectVMStorageList(this);\r\n    }\r\n    return this.projectVMStorageList;\r\n  }\r\n  set ProjectVMStorageList(v) {\r\n    this.projectVMStorageList = v;\r\n\r\n    this.projectVMs = util.GetProjectVMs(this);\r\n\r\n    var selectVM = this.ProjectSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.projectVMs;\r\n  }\r\n\r\n  projectSelectOpen\r\n  get ProjectSelectOpen(){\r\n    if (this.projectSelectOpen === undefined){\r\n      this.projectSelectOpen = this.ProjectSelectVM.Open;\r\n    }\r\n    return this.projectSelectOpen;\r\n  }\r\n  set ProjectSelectOpen(v){\r\n    this.projectSelectOpen = v;\r\n    this.ProjectPopoverState.Content = util.GetProjectPopoverStateValue(this);\r\n  }\r\n\r\n  projectPopoverState\r\n  get ProjectPopoverState(){\r\n    if (!this.projectPopoverState){\r\n      this.projectPopoverState = textUtil.get(util.GetProjectPopoverStateValue(this));\r\n    }\r\n    return this.projectPopoverState;\r\n  }\r\n\r\n  projectSelectVM\r\n  get ProjectSelectVM() {\r\n    if (!this.projectSelectVM) {\r\n      var list = this.ProjectVMStorageList ? this.ProjectVMStorageList : [];\r\n      var obj = this.projectSelectVM = multiSelectVMUtil.get(list, this.ProjectVMs);\r\n      obj.Placeholder = 'chọn dự án'\r\n      obj.TitleRender = (item) => <Popover trigger={this.ProjectPopoverState.Content}\r\n        placement=\"topLeft\"\r\n        content={\r\n          <a target='_blank' \r\n            // href={`/#/project/${item._id}`} \r\n            href={item.Url}\r\n            >View project</a>\r\n        }\r\n      >\r\n        {item.DisplayContent}\r\n      </Popover>\r\n\r\n      obj.OnSelectedItemChanged = (v) => this.ProjectVMs = v;\r\n      obj.OnSetOpen = (v) => this.ProjectSelectOpen = v;\r\n    }\r\n    return this.projectSelectVM;\r\n  }\r\n\r\n  IsShowProjectSelect = true\r\n\r\n  phases\r\n  get Phases() {\r\n    if (!this.phases) {\r\n      this.phases = this.ModelItem.Phases;\r\n    }\r\n    return this.phases;\r\n  }\r\n  set Phases(v) {\r\n    this.phases = v;\r\n    this.ModelItem.Phases = v;\r\n  }\r\n\r\n  phaseVMs\r\n  get PhaseVMs() {\r\n    if (!this.phaseVMs) {\r\n      this.phaseVMs = util.GetPhaseVMs(this);\r\n    }\r\n    return this.phaseVMs;\r\n  }\r\n  set PhaseVMs(v) {\r\n    this.phaseVMs = v;\r\n    this.Phases = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  massItem_Dict\r\n  get MassItem_Dict() {\r\n    if (!this.massItem_Dict) {\r\n      this.massItem_Dict = this.ModelItem.MassItem_Dict;\r\n    }\r\n    return this.massItem_Dict;\r\n  }\r\n\r\n  phaseVMStorageList\r\n  get PhaseVMStorageList() {\r\n    return this.phaseVMStorageList;\r\n  }\r\n  set PhaseVMStorageList(v) {\r\n    this.phaseVMStorageList = v;\r\n\r\n    this.phaseVMs = util.GetPhaseVMs(this);\r\n\r\n    var selectVM = this.PhaseSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.phaseVMs;\r\n  }\r\n\r\n  phaseSelectVM\r\n  get PhaseSelectVM() {\r\n    if (!this.phaseSelectVM) {\r\n      var list = this.PhaseVMStorageList ? this.PhaseVMStorageList : [];\r\n      var obj = this.phaseSelectVM = multiSelectVMUtil.get(list, this.PhaseVMs);\r\n      obj.Placeholder = 'chọn version'\r\n      obj.OnSelectedItemChanged = (v) => this.PhaseVMs = v;\r\n    }\r\n    return this.phaseSelectVM;\r\n  }\r\n\r\n  CanHavePhase = false\r\n\r\n  isHavePhase = undefined\r\n  get IsHavePhase() {\r\n    if (!this.isHavePhase) {\r\n      this.isHavePhase = this.ModelItem.IsHavePhase;\r\n    }\r\n    return this.isHavePhase;\r\n  }\r\n  set IsHavePhase(v) {\r\n    this.isHavePhase = v;\r\n    this.ModelItem.IsHavePhase = v;\r\n  }\r\n\r\n  isShowPhaseSelectVM\r\n  get IsShowPhaseSelectVM() {\r\n    if (!this.isShowPhaseSelectVM) {\r\n      var obj = this.isShowPhaseSelectVM\r\n        = checkboxVMUtil.get(\"So sánh các version\", this.IsHavePhase);\r\n\r\n      obj.onCheckChange = (v) => {\r\n        this.IsHavePhase = v;\r\n      };\r\n    }\r\n    return this.isShowPhaseSelectVM;\r\n  }\r\n\r\n  get MassGroupSetting() {\r\n    return this.ModelItem.MassGroupSetting;\r\n  }\r\n  set MassGroupSetting(v) {\r\n    this.ModelItem.MassGroupSetting = v;\r\n  }\r\n\r\n  massGroupSettingStorageList\r\n  get MassGroupSettingStorageList() {\r\n    if (!this.massGroupSettingStorageList) {\r\n      this.massGroupSettingStorageList =\r\n        util.GetMassGroupSettingStorageList(this);\r\n    }\r\n  }\r\n  set MassGroupSettingStorageList(v) {\r\n    this.massGroupSettingStorageList = v;\r\n\r\n    var selectVM = this.MassGroupSettingSelectVM;\r\n    selectVM.Items = v;\r\n  }\r\n\r\n  massGroupSettingSelectVM\r\n  get MassGroupSettingSelectVM() {\r\n    if (!this.massGroupSettingSelectVM) {\r\n      var list = this.MassGroupSettingStorageList ?\r\n        this.MassGroupSettingStorageList : [];\r\n      var obj = this.massGroupSettingSelectVM =\r\n        selectVMUtil.get(list);\r\n      obj.CanClear = true;\r\n      obj.Placeholder = 'chọn bộ set khối lượng'\r\n      obj.OnSelectedItemChanged = (v) => this.MassGroupSetting = v;\r\n    }\r\n    return this.massGroupSettingSelectVM;\r\n  }\r\n\r\n  IsDataPending = false;\r\n\r\n  get LoadingSpinTip() {\r\n    return `loading data ... (${(this.HandledRatio * 100).toFixed(1)}%)`;\r\n  }\r\n\r\n  loadingSpinTipVM\r\n  get LoadingSpinTipVM() {\r\n    if (!this.loadingSpinTipVM) {\r\n      this.loadingSpinTipVM = textUtil.get(this.LoadingSpinTip);\r\n    }\r\n    return this.loadingSpinTipVM;\r\n  }\r\n\r\n  handledRatio = 0\r\n  get HandledRatio() {\r\n    return this.handledRatio;\r\n  }\r\n  set HandledRatio(v) {\r\n    this.handledRatio = v;\r\n    this.LoadingSpinTipVM.Content = this.LoadingSpinTip;\r\n  }\r\n\r\n  // function\r\n  GetMassData = () => {\r\n    this.IsDataPending = true;\r\n    this.HandledRatio = 0;\r\n    this.ModelItem.GetMassData();\r\n  }\r\n}","import { message } from \"antd\";\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport MassResultCompVM from \"./MassResultCompVM\"\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, isfetchProjects = true) => {\r\n  var qI = new MassResultCompVM();\r\n  qI.ModelItem = q;\r\n\r\n  if (isfetchProjects) {\r\n    pmDataVM().Project_DictVM.OnGetItemsDone = (v) => {\r\n      qI.ProjectVMStorageList = GetProjectVMStorageList(qI);\r\n    }\r\n  }\r\n\r\n  q.OnGetItemsDone_Funcs.push(() => {\r\n    message.success('get mass data successfully');\r\n  })\r\n\r\n  var massTable = q.MassItem_Dict.MassTable;\r\n  massTable.OnIsUpdateDataDone_Funcs.push(() => {\r\n    qI.IsDataPending = false;\r\n  })\r\n  massTable.OnSetHandledRatio_Funcs.push((v) => {\r\n    qI.HandledRatio = v;\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetProjectVMStorageList = (q) => {\r\n  return pmDataVM().Project_DictVM.Items;\r\n}\r\n\r\nexport const GetProjectVMs = (q) => {\r\n  var storageList = q.ProjectVMStorageList;\r\n  if (!storageList) return [];\r\n\r\n  var list = [];\r\n\r\n  var projects = q.Projects;\r\n  projects.forEach(x => {\r\n    var index = storageList.findIndex(y => y.ModelItem === x);\r\n    if (index !== -1) {\r\n      list.push(storageList[index]);\r\n    }\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetPhaseVMs = (q) => {\r\n  var storageList = q.PhaseVMStorageList;\r\n  if (!storageList) return [];\r\n\r\n  var list = [];\r\n\r\n  var phases = q.Phases;\r\n  phases.forEach(x => {\r\n    var index = storageList.findIndex(y => y.ModelItem === x);\r\n    if (index !== -1) {\r\n      list.push(storageList[index]);\r\n    }\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetMassGroupSettingStorageList = (q) => {\r\n  var dict = pmData().MassGroupSetting_Dict;\r\n  var items = dict.Items;\r\n  if (!items){\r\n    dict.OnGetItemsDone_Funcs.push(() => {\r\n      q.MassGroupSettingStorageList = dict.Items;\r\n    })\r\n  }\r\n  return items;\r\n}\r\n\r\n\r\nexport const GetProjectPopoverStateValue = (q) => {\r\n  return q.ProjectSelectOpen ? 'none' : 'hover';\r\n}","export const _default = \"default\";\r\nexport const edit = \"edit\";","import * as util from './RenderItemUtil'\r\n\r\nexport default class RenderItem {\r\n  render\r\n  get Render(){\r\n    if (!this.render){\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v){\r\n    this.render = v;\r\n  }\r\n}","import InputView from \"../input/InputView\";\r\nimport RenderItem from \"./RenderItem\"\r\nimport * as rs from './RenderState'\r\nimport * as textUtil from '../text/TextVMUtil'\r\n\r\nexport const get = (state, render) => {\r\n  var qI = new RenderItem();\r\n  qI.State = state;\r\n  qI.Render = render;\r\n  return qI;\r\n}\r\n\r\nexport const GetRender = (q) => {\r\n  switch (q.State) {\r\n    case rs._default:\r\n      return (val) => val;\r\n    case rs.edit:\r\n      return (value, item, dataIndex) => {\r\n        if (!dataIndex) return value;\r\n\r\n        var inputVM = textUtil.get(value, 'input');\r\n\r\n        var length = dataIndex.length;\r\n        var obj = item;\r\n        dataIndex.filter((x, i) => i < length - 1)\r\n          .forEach((x) => obj = obj[x]);\r\n\r\n        inputVM.onSetContent = (v) => obj[dataIndex[length-1]] = v;\r\n        return <InputView store={inputVM} />\r\n      };\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import * as renderUtil from './RenderItemUtil'\r\n\r\nexport default class Render_Dict {\r\n  Items = []\r\n\r\n  GetRender = (state) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x.State === state);\r\n    if (index === -1){\r\n      var item = renderUtil.get(state);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from './RenderState'\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport Render_Dict from './Render_Dict';\r\n\r\nexport default class TableColumn {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Title : observable,\r\n    })\r\n  }\r\n\r\n  RenderState = rs._default;\r\n\r\n  Title = undefined\r\n\r\n  render_Dict\r\n  get Render_Dict(){\r\n    if (!this.render_Dict){\r\n      this.render_Dict = new Render_Dict();\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n  set Render_Dict(v){\r\n    this.render_Dict = v;\r\n  }\r\n}","import TableColumn from \"./TableColumn\"\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport { Button } from \"antd\";\r\nimport * as rs from './RenderState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport const get = (title, dataIndex, renders, table) => {\r\n  var qI = new TableColumn();\r\n  qI.Title = title;\r\n  qI.DataIndex = dataIndex;\r\n  qI.Key = genUtil.randomId();\r\n  qI.Table = table;\r\n\r\n  var dict = qI.Render_Dict;\r\n  if (renders) {\r\n    renders.forEach(x => {\r\n      dict.GetRender(x.State).Render = x.Render\r\n    });\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetActionColumn = (table) => {\r\n  var title = undefined;\r\n  if (table.CanAdd) {\r\n    var add = table.AddItem;\r\n\r\n    title = <Button type='primary' size='small'\r\n      onClick={add}>Add</Button>\r\n  }\r\n\r\n  var renders = [\r\n    renderUtil.get(rs._default, (val, item, dataIndex, cell, row) => {\r\n      var editElem = '';\r\n      if (table.CanEdit) {\r\n        var edit = () => row.Edit();\r\n        editElem = <Button type='primary' size='small'\r\n          style={{ backgroundColor: '#faad14', border: 'none' }}\r\n          onClick={edit}>Edit</Button>\r\n      }\r\n\r\n      var delElem = '';\r\n      if (table.CanDelete) {\r\n        var del = () => table.DeleteItem(item, row);\r\n\r\n        delElem = <Button type='primary' danger size='small'\r\n          onClick={del}>Delete</Button>\r\n      }\r\n      return <>\r\n        {editElem}{delElem}\r\n      </>\r\n    }),\r\n    renderUtil.get(rs.edit, (val, item, dataIndex, cell, row) => {\r\n      var ok = () => row.OK();\r\n      return <Button type='primary' size='small'\r\n        onClick={ok}>OK</Button>\r\n    })\r\n  ]\r\n\r\n  return get(title, null, renders, table);\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './TableRowUtil'\r\nimport * as rs from './RenderState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport default class TableRow {\r\n  key\r\n  get Key() {\r\n    if (!this.key) {\r\n      this.key = this.Item._id ? this.Item._id : this.Item.id;\r\n      if (!this.key){\r\n        this.key = genUtil.randomId();\r\n      }\r\n    }\r\n    return this.key;\r\n  }\r\n\r\n  cells\r\n  get Cells() {\r\n    if (!this.cells) {\r\n      this.cells = util.GetCells(this);\r\n    }\r\n    return this.cells;\r\n  }\r\n\r\n  Edit = () => {\r\n    this.Cells.forEach(x => x.RenderState = rs.edit);\r\n  }\r\n\r\n  OK = () => {\r\n    this.Cells.forEach(x => x.RenderState = rs._default);\r\n    this.Table.EditItem(this.Item);\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from './RenderState'\r\n\r\nexport default class TableCell {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      renderState: observable\r\n    })\r\n  }\r\n\r\n  get Key() {\r\n    return `${this.Column.Key}_${this.Row.Key}`;\r\n  }\r\n\r\n  get Item() {\r\n    return this.Row.Item;\r\n  }\r\n\r\n  renderState = undefined\r\n  get RenderState() {\r\n    if (!this.renderState){\r\n      this.renderState = this.Column.RenderState;\r\n    }\r\n    return this.renderState;\r\n  }\r\n  set RenderState(v){\r\n    this.renderState = v;\r\n  }\r\n\r\n  render_Dict\r\n  get Render_Dict() {\r\n    if (!this.render_Dict) {\r\n      this.render_Dict = this.Column.Render_Dict;\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n\r\n  get DataIndex() {\r\n    return this.Column.DataIndex;\r\n  }\r\n\r\n  Render = () => {\r\n    var dataIndex = this.DataIndex;\r\n    var item = this.Item;\r\n\r\n    var value = undefined;\r\n\r\n    if (dataIndex) {\r\n      value = item;\r\n      dataIndex.forEach(x => {\r\n        value = value[x]\r\n      })\r\n    }\r\n\r\n    var render = this.Render_Dict.GetRender(this.RenderState);\r\n    return render.Render(value, item, dataIndex, this, this.Row);\r\n  }\r\n}","import TableRow from \"./TableRow\"\r\nimport * as cellUtil from './TableCellUtil'\r\n\r\nexport const get = (item, table) => {\r\n  var qI = new TableRow();\r\n  qI.Item = item;\r\n  qI.Table = table;\r\n  return qI;\r\n}\r\n\r\nexport const GetCells = (q) => {\r\n  var columns = q.Table.Columns;\r\n  return columns.map(x => cellUtil.get(q, x));\r\n}","import TableCell from \"./TableCell\"\r\n\r\nexport const get = (row, col) => {\r\n  var qI = new TableCell();\r\n  qI.Row = row;\r\n  qI.Column = col;\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport TableColumn from './TableColumn';\r\nimport * as colUtil from './TableColumnUtil'\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport * as rs from './RenderState'\r\nimport * as util from './TableVMUtil'\r\nimport * as textUtil from '../text/TextVMUtil'\r\nimport InputView from '../input/InputView'\r\nimport { Button } from 'antd';\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport * as rowUtil from './TableRowUtil'\r\n\r\nexport default class TableVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      columns: observable,\r\n      dataSource: observable,\r\n      rows: observable,\r\n      CanAdd: observable,\r\n      CanDelete: observable,\r\n      CanEdit: observable,\r\n      IsShowActionColumn: observable\r\n    })\r\n  }\r\n\r\n  CanAdd = true\r\n  CanDelete = true\r\n  CanEdit = true\r\n  IsShowActionColumn = true\r\n\r\n  columns = undefined\r\n  get Columns() {\r\n    if (!this.columns) {\r\n      this.columns = [\r\n        colUtil.get('Tên cấu kiện', 'ElementName', null, this),\r\n        colUtil.get('Đường kính', 'Diameter', null, this),\r\n      ];\r\n\r\n      if (this.IsShowActionColumn) {\r\n        this.columns.push(colUtil.GetActionColumn(this));\r\n      }\r\n    }\r\n    return this.columns;\r\n  }\r\n  set Columns(v) {\r\n    this.columns = v;\r\n    this.Rows = undefined;\r\n  }\r\n\r\n  dataSource = undefined\r\n  get DataSource() {\r\n    if (!this.dataSource) {\r\n      this.dataSource = [\r\n        {\r\n          id: 1,\r\n          ElementName: 'W1',\r\n          Diameter: '18',\r\n          Weight: '30'\r\n        },\r\n        {\r\n          id: 2,\r\n          ElementName: 'W2',\r\n          Diameter: '20',\r\n          Weight: '3.7'\r\n        },\r\n      ]\r\n    }\r\n    return this.dataSource;\r\n  }\r\n  set DataSource(v) {\r\n    this.dataSource = v;\r\n    this.Rows = undefined;\r\n  }\r\n\r\n  rows = undefined\r\n  get Rows() {\r\n    if (!this.rows) {\r\n      this.rows = util.GetRows(this);\r\n    }\r\n    return this.rows;\r\n  }\r\n  set Rows(v) {\r\n    this.rows = v;\r\n  }\r\n\r\n  AddItem = () => {\r\n    var item = undefined\r\n    if (this.OnGetItemForAdd) {\r\n      item = this.OnGetItemForAdd();\r\n    } else {\r\n      item = {\r\n        Key: genUtil.randomId()\r\n      };\r\n    }\r\n    this.DataSource.push(item);\r\n\r\n    var row = rowUtil.get(item, this);\r\n    this.Rows.push(row);\r\n    row.Edit();\r\n  }\r\n\r\n  DeleteItem = (item, row) => {\r\n    var list = this.DataSource;\r\n    var index = list.indexOf(item);\r\n    list.splice(index, 1);\r\n    this.Rows.splice(index, 1);\r\n\r\n    if (this.OnDeleteItem){\r\n      this.OnDeleteItem(item);\r\n    }\r\n  }\r\n\r\n  EditItem = (item) => {\r\n    if (this.OnEditItem){\r\n      this.OnEditItem(item);\r\n    }\r\n  }\r\n}","import * as rowUtil from './TableRowUtil'\r\n\r\nexport const GetRows = (q) => {\r\n  return q.DataSource.map(x => rowUtil.get(x, q));\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './WorkItemExportDataVMUtil'\r\n\r\nexport class WorkItemExportDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\nimport * as checkboxUtil from '../../../../checkbox/CheckboxVMUtil'\r\n\r\nexport class WorkItemExportSettingVM extends SettingVM {\r\n  IsCategoryChecked = true\r\n\r\n  categoryCheckboxVM\r\n  get CategoryCheckboxVM(){\r\n    if (!this.categoryCheckboxVM){\r\n      debugger\r\n      var obj =this.categoryCheckboxVM = \r\n        checkboxUtil.get(undefined, this.IsCategoryChecked)\r\n    }\r\n    return this.categoryCheckboxVM;\r\n  }\r\n}","import * as dataVMUtil from './WorkItemExportDataVMUtil'\r\nimport { WorkItemExportSettingVM } from './WorkItemExportSettingVM';\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new WorkItemExportSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { WorkItemExportDataVM } from './WorkItemExportDataVM';\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new WorkItemExportDataVM();\r\n  qI.ModelItem = q;\r\n\r\n  return qI;\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport class WorkItemExportSetting extends Setting {\r\n  \r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './WorkItemExportSetting_DictVMUtil'\r\nimport * as itemUtil from './WorkItemExportSettingVMUtil';\r\nimport { WorkItemExportSetting } from './WorkItemExportSetting';\r\n\r\nexport class WorkItemExportSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = [\r\n        itemUtil.get(new WorkItemExportSetting())\r\n      ]\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  tableVM\r\n  get TableVM() {\r\n    if (!this.tableVM) {\r\n      this.tableVM = util.GetTableVM(this);\r\n    }\r\n    return this.tableVM;\r\n  }\r\n}","import TableVM from \"../../../../table/TableVM\";\r\nimport { WorkItemExportSetting_DictVM } from \"./WorkItemExportSetting_DictVM\";\r\nimport * as colUtil from '../../../../table/TableColumnUtil'\r\nimport * as renderUtil from '../../../../table/RenderItemUtil'\r\nimport * as rs from '../../../../table/RenderState'\r\nimport CheckboxView from '../../../../checkbox/CheckboxView'\r\nimport { WorkItemExportSettingVM } from \"./WorkItemExportSettingVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new WorkItemExportSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone_Funcs.push((v) => {\r\n    var obj = qI.Items;\r\n  });\r\n\r\n  return qI;\r\n}\r\n\r\n\r\nexport const GetTableVM = (q) => {\r\n  var qI = new TableVM();\r\n\r\n  qI.DataSource = q.Items;\r\n\r\n  var nameCol = colUtil.get('Tên thiết lập', ['Name'], null, qI);\r\n  var isCateCol = colUtil.get('Category', null, [\r\n    renderUtil.get(rs._default, (val, item) => {\r\n      debugger\r\n      var checkBoxVM = item.CategoryCheckboxVM;\r\n      return <CheckboxView store={item.CategoryCheckboxVM}/>\r\n    })\r\n  ], qI);\r\n  var isSubWorkItemCol = colUtil.get('Hạng mục phụ', null, [\r\n    renderUtil.get(rs._default, (val, item) => {\r\n      return <CheckboxView />\r\n    })\r\n  ], qI);\r\n\r\n  qI.Columns = [\r\n    nameCol, isCateCol, isSubWorkItemCol,\r\n    colUtil.GetActionColumn(qI)\r\n  ]\r\n\r\n  qI.OnGetItemForAdd = () => {\r\n    return new WorkItemExportSettingVM();\r\n  }\r\n  \r\n  return qI;\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport { PMData } from '../model/PMData';\r\n\r\nimport * as workpackage_DictVMUtil from '../../entity/workpackage/Workpackage_DictVMUtil'\r\nimport * as elementFilterSetting_DictVMUtil from \r\n  '../../entity/setting/elementFilter/ElementFilterSetting_DictVMUtil'\r\nimport * as massExportSetting_DictVMUtil from \r\n  '../../entity/setting/massExport/MassExportSetting_DictVMUtil'\r\nimport * as massGroupSetting_DictVMUtil from \r\n  '../../entity/setting/massGroup/MassGroupSetting_DictVMUtil'\r\nimport * as project_DictVMUtil from '../../entity/project/Project_DictVMUtil'\r\n\r\nimport * as massResultCompVMUtil from '../../entity/mass/result/MassResultCompVMUtil'\r\n\r\nimport * as fvt from '../../entity/filter/FilterValueType'\r\nimport * as sft from '../../entity/filter/StringFilterType'\r\n\r\nimport * as wieDictVMUtil from \r\n  '../../entity/setting/workitemexport/WorkItemExportSetting_DictVMUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport const GetWorkpackage_DictVM = (data) => {\r\n  return workpackage_DictVMUtil.get(pmData().Workpackage_Dict);\r\n}\r\n\r\nexport const GetElementFilterSetting_DictVM = (data) => {\r\n  return elementFilterSetting_DictVMUtil.get\r\n    (pmData().ElementFilterSetting_Dict);\r\n}\r\n\r\nexport const GetMassExportSetting_DictVM = (data) => {\r\n  return massExportSetting_DictVMUtil.get\r\n    (pmData().MassExportSetting_Dict);\r\n}\r\n\r\nexport const GetMassGroupSetting_DictVM = (data) => {\r\n  return massGroupSetting_DictVMUtil.get\r\n    (pmData().MassGroupSetting_Dict);\r\n}\r\n\r\nexport const GetProject_DictVM = (data) => {\r\n  return project_DictVMUtil.get\r\n    (pmData().Project_Dict);\r\n}\r\n\r\nexport const GetMassResultCompVM= (data) => {\r\n  return massResultCompVMUtil.get\r\n  (pmData().MassResultComp);\r\n}\r\n\r\nexport const GetWorkItemExportSetting_Dict = (data) => {\r\n  return wieDictVMUtil.get(pmData().WorkItemExportSetting_Dict);\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { pmData } from '../../entity/filter/EntFilterUtil';\r\nimport { PMData } from '../model/PMData';\r\nimport * as util from './PMDataVMUtil'\r\n\r\nexport class PMDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isDebug: observable\r\n    })\r\n  }\r\n\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new PMDataVM();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  get pmData(){\r\n    return PMData.Instance;\r\n  }\r\n\r\n  workpackage_DictVM\r\n  get Workpackage_DictVM() {\r\n    if (!this.workpackage_DictVM){\r\n      this.workpackage_DictVM = util.GetWorkpackage_DictVM();\r\n    }\r\n    return this.workpackage_DictVM;\r\n  }\r\n\r\n  elementFilterSetting_DictVM\r\n  get ElementFilterSetting_DictVM() {\r\n    if (!this.elementFilterSetting_DictVM){\r\n      this.elementFilterSetting_DictVM = util.GetElementFilterSetting_DictVM();\r\n    }\r\n    return this.elementFilterSetting_DictVM;\r\n  }\r\n\r\n  massExportSetting_DictVM\r\n  get MassExportSetting_DictVM() {\r\n    if (!this.massExportSetting_DictVM){\r\n      this.massExportSetting_DictVM = util.GetMassExportSetting_DictVM();\r\n    }\r\n    return this.massExportSetting_DictVM;\r\n  }\r\n\r\n  massGroupSetting_DictVM\r\n  get MassGroupSetting_DictVM() {\r\n    if (!this.massGroupSetting_DictVM){\r\n      this.massGroupSetting_DictVM = util.GetMassGroupSetting_DictVM();\r\n    }\r\n    return this.massGroupSetting_DictVM;\r\n  }\r\n\r\n  project_DictVM\r\n  get Project_DictVM() {\r\n    if (!this.project_DictVM){\r\n      this.project_DictVM = util.GetProject_DictVM();\r\n    }\r\n    return this.project_DictVM;\r\n  }\r\n\r\n  massResultCompVM\r\n  get MassResultCompVM(){\r\n    if (!this.massResultCompVM){\r\n      this.massResultCompVM = util.GetMassResultCompVM();\r\n    }\r\n    return this.massResultCompVM;\r\n  }\r\n  set MassResultCompVM(v) {\r\n    this.massResultCompVM = v;\r\n    if (!v)\r\n    {\r\n      this.pmData.MassResultComp = v;\r\n    }\r\n    else{\r\n      this.pmData.MassResultComp = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  filterValueTypes;\r\n  get FilterValueTypes() {\r\n    if (!this.filterValueTypes){\r\n      this.filterValueTypes = this.pmData.FilterValueTypes;\r\n    }\r\n    return this.filterValueTypes;\r\n  }\r\n\r\n  stringFilterTypes;\r\n  get StringFilterTypes() {\r\n    if (!this.stringFilterTypes){\r\n      this.stringFilterTypes = this.pmData.StringFilterTypes;\r\n    }\r\n    return this.stringFilterTypes;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = this.pmData.CategoryNames;\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n\r\n  valueRetrieveTypes\r\n  get ValueRetrieveTypes() {\r\n    if (!this.valueRetrieveTypes){\r\n      this.valueRetrieveTypes = this.pmData.ValueRetrieveTypes\r\n    }\r\n    return this.valueRetrieveTypes;\r\n  }\r\n\r\n  parameterNames;\r\n  get ParameterNames(){\r\n    if (!this.parameterNames){\r\n      this.parameterNames = this.pmData.ParameterNames;\r\n    }\r\n    return this.parameterNames;\r\n  }\r\n\r\n  massPropertyNames;\r\n  get MassPropertyNames(){\r\n    if (!this.massPropertyNames){\r\n      this.massPropertyNames = this.pmData.MassPropertyNames;\r\n    }\r\n    return this.massPropertyNames;\r\n  }\r\n\r\n  massTypes;\r\n  get MassTypes(){\r\n    if (!this.massTypes){\r\n      this.massTypes = this.pmData.MassTypes;\r\n    }\r\n    return this.massTypes;\r\n  }\r\n\r\n  workItemExportSetting_Dict\r\n  get WorkItemExportSetting_Dict(){\r\n    if (!this.workItemExportSetting_Dict){\r\n      this.workItemExportSetting_Dict = \r\n        util.GetWorkItemExportSetting_Dict(this);\r\n    }\r\n    return this.workItemExportSetting_Dict;\r\n  }\r\n\r\n  isDebug = undefined\r\n  get IsDebug(){\r\n    if (this.isDebug === undefined){\r\n      this.isDebug = this.pmData.IsDebug;\r\n    }\r\n    return this.isDebug;\r\n  } set IsDebug(v){\r\n    this.isDebug = this.pmData.IsDebug = v;\r\n  }\r\n}","import * as util from './MGS_FieldVMUtil'\r\nimport * as selectVMUtil from '../../../../../select/SelectVMUtil'\r\n\r\nexport default class MGS_FieldVM {\r\n  get Index() {\r\n    return this.Dict.FieldVMs.indexOf(this);\r\n  }\r\n\r\n  get Fields(){\r\n    return this.Dict.ModelItem.Fields;\r\n  }\r\n\r\n  get Field(){\r\n    return this.Fields[this.Index];\r\n  }\r\n  set Field(v){\r\n    this.Fields[this.Index] = v;\r\n  }\r\n\r\n  get FieldStorageList(){\r\n    return util.GetFieldStorageList();\r\n  }\r\n\r\n  fieldSelectVM\r\n  get FieldSelectVM(){\r\n    if (!this.fieldSelectVM){\r\n      var obj = this.fieldSelectVM = selectVMUtil.get(this.FieldStorageList, this.Field);\r\n      obj.OnSelectedItemChanged = (v) => this.Field = v;\r\n    }\r\n    return this.fieldSelectVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    var index = this.Index;\r\n    this.Fields.splice(index, 1);\r\n    \r\n    var list = this.Dict.FieldVMs;\r\n    list.splice(index, 1);\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.FieldSelectVM.InitialItem = v.Field;\r\n  }\r\n}","import { PMDataVM } from \"../../../../single/form/PMDataVM\";\r\nimport MGS_FieldVM from \"./MGS_FieldVM\"\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MGS_FieldVM();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetFieldStorageList = () => {\r\n  return pmDataVM().MassPropertyNames;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as util from './MassGroupSettingDataVMUtil'\r\nimport * as fieldVMUtil from './field/MGS_FieldVMUtil'\r\n\r\nexport default class MassGroupSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      fieldVMs : observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  fieldVMs = undefined\r\n  get FieldVMs(){\r\n    if (!this.fieldVMs){\r\n      this.fieldVMs = util.GetFieldVMs(this);\r\n    }\r\n    return this.fieldVMs;\r\n  }\r\n  set FieldVMs(v){\r\n    var list = this.fieldVMs;\r\n    var modelList = this.ModelItem.Fields;\r\n\r\n    var oldCount = list.length;\r\n    var newCount = v.length;\r\n\r\n    list.forEach((x, i) => {\r\n      if (i >= newCount) return;\r\n      x.SetData(v[i]);\r\n    });\r\n\r\n    var delta = Math.abs(oldCount - newCount);\r\n    if (oldCount > newCount){\r\n      list.splice(newCount, delta);\r\n      modelList.splice(newCount, delta);\r\n    }\r\n    else if (oldCount < newCount){\r\n      for (var i = 0; i < delta; i++) {\r\n        var originItemVM = v[oldCount + i];\r\n\r\n        var item = originItemVM.Field;\r\n        modelList.push(item);\r\n\r\n        var itemVM = fieldVMUtil.get(item,this);\r\n        list.push(itemVM);\r\n      }\r\n    }\r\n  }\r\n\r\n  AddNewFieldVM = () => {\r\n    var item = this.ModelItem.AddNewField();\r\n    var itemView = fieldVMUtil.get(item, this);\r\n    this.FieldVMs.push(itemView);\r\n    return itemView;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.FieldVMs = v.FieldVMs;\r\n  }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport MassGroupSettingDataVM from './MassGroupSettingDataVM';\r\nimport * as fieldVMUtil from './field/MGS_FieldVMUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSettingDataVM();\r\n  qI.ModelItem = q;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetFieldVMs = (q) => {\r\n  var fields = q.ModelItem.Fields;\r\n  return fields.map(x => fieldVMUtil.get(x, q));\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\n\r\nexport default class MassGroupSettingVM extends SettingVM {\r\n  OnInitialSetDataVM = (v) => {\r\n    \r\n  }\r\n}","import * as dataVMUtil from './MassGroupSettingDataVMUtil'\r\nimport MassGroupSettingVM from './MassGroupSettingVM';\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassGroupSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as mif from '../item/MassItemField'\r\nimport MassColumn from './MassColumn';\r\nimport * as colUtil from './MassColumnUtil'\r\nimport * as rowUtil from './MassRowUtil'\r\nimport * as cellUtil from './MassCellUtil'\r\nimport * as util from './MassTableUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as filterUtil from '../../filter/EntFilterUtil'\r\nimport * as textUtil from '../../../../text/TextVMUtil'\r\nimport * as api from '../../../../../util/apiUtil'\r\nimport * as st from '../../setting/base/SettingType'\r\nimport { message } from 'antd';\r\nimport * as mgsUtil from '../../setting/massGroup/MassGroupSettingUtil'\r\nimport * as mgsVMUtil from '../../setting/massGroup/MassGroupSettingVMUtil'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as compUtil from './rowgroup/MassGroupComponentUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport default class MassTable {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsValidTable: observable,\r\n      Columns: observable,\r\n      MainRows: observable,\r\n      Cells: observable,\r\n      columnField: observable,\r\n      IsOnSaveMassGroup: observable\r\n    })\r\n  }\r\n\r\n\r\n  items\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    if (v && v.length !== 0) {\r\n      this.Build();\r\n      this.IsValidTable = true;\r\n    }\r\n    else {\r\n      this.IsValidTable = false;\r\n    }\r\n  }\r\n\r\n  IsValidTable = false\r\n\r\n  columnField = mif.Project\r\n  get ColumnField() {\r\n    return this.columnField;\r\n  }\r\n  set ColumnField(v) {\r\n    this.columnField = v;\r\n  }\r\n\r\n  massGroupSetting\r\n  get MassGroupSetting() {\r\n    return this.massGroupSetting;\r\n  }\r\n  set MassGroupSetting(v) {\r\n    this.massGroupSetting = v;\r\n    if (!v) {\r\n      this.MainMGC = v;\r\n    } else {\r\n      this.MainMGC = compUtil.Clone(v.Data.MassGroupComponent);\r\n    }\r\n  }\r\n\r\n  mainMGC\r\n  get MainMGC() {\r\n    if (!this.mainMGC) {\r\n      this.mainMGC = util.GetMainMGC(this);\r\n    }\r\n    return this.mainMGC;\r\n  }\r\n  set MainMGC(v) {\r\n    this.mainMGC = v;\r\n    this.Init();\r\n    if (!v) {\r\n      this.MainMGI = undefined;\r\n    } else {\r\n      this.MainMGI = util.GetMainMGI(this);\r\n    }\r\n  }\r\n\r\n  mainMGI\r\n  get MainMGI() {\r\n    if (!this.mainMGI) {\r\n      this.mainMGI = util.GetMainMGI(this);\r\n    }\r\n    return this.mainMGI;\r\n  }\r\n  set MainMGI(v) {\r\n    this.mainMGI = v;\r\n  }\r\n\r\n  Columns = undefined\r\n  FullRows = undefined\r\n  MainRows = undefined\r\n  Cells = undefined\r\n\r\n  Init = () => {\r\n    this.Columns = [];\r\n    this.MainRows = [];\r\n    this.FullRows = [];\r\n    this.Cells = [];\r\n  }\r\n\r\n  get AllRows() {\r\n    return util.GetAllRows(this);\r\n  }\r\n\r\n  GetColumn = (v) => {\r\n    var list = this.Columns;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Name === v);\r\n    if (index === -1) {\r\n      item = colUtil.get(v, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  GetRow = (v, supItem) => {\r\n    var list = undefined;\r\n    if (supItem) {\r\n      list = supItem.SubItems;\r\n    } else {\r\n      list = this.MainRows;\r\n    }\r\n\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Name === v);\r\n    if (index === -1) {\r\n      item = rowUtil.get(v, this);\r\n      item.SupItem = supItem;\r\n\r\n      list.push(item);\r\n      this.FullRows.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  GetCell = (col, row) => {\r\n    var list = this.Cells;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Column === col && x.Row === row);\r\n    if (index === -1) {\r\n      item = cellUtil.get(col, row, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n\r\n  Build = () => {\r\n    var colField = this.ColumnField;\r\n\r\n    if (colField === mif.Phase) {\r\n      pmData().MassResultComp.Phases.forEach(x => {\r\n        var col = this.GetColumn(mif.GetValueString(x, colField));\r\n      })\r\n    }\r\n\r\n    this.Items.forEach(x => {\r\n      switch (colField) {\r\n        case mif.Phase:\r\n          x.ValidPhasesByInput.forEach(y => {\r\n            this.HandleItem(x, y);\r\n          })\r\n          break;\r\n        default:\r\n          this.HandleItem(x, x.GetValue(colField));\r\n          break;\r\n      }\r\n    })\r\n\r\n    if (!this.IsHaveAsyncData) {\r\n      this.UpdateData();\r\n    }\r\n  }\r\n\r\n  IsHaveAsyncData = false;\r\n  IsOnSaveMassGroup = false;\r\n\r\n  HandledItems = []\r\n  HandledItemPhases = []\r\n\r\n  OnSetHandledRatio_Funcs = []\r\n\r\n  handledRatio\r\n  get HandledRatio() {\r\n    return this.handledRatio;\r\n  } set HandledRatio(v) {\r\n    this.handledRatio = v;\r\n    this.OnSetHandledRatio_Funcs.forEach(x => x(v));\r\n  }\r\n\r\n  AddHandledItems = (item) => {\r\n    if (this.ColumnField !== mif.Phase) {\r\n      this.HandledItems.push(item);\r\n    } else {\r\n      var list = this.HandledItemPhases;\r\n      var index = list.findIndex(x => x.Item === item);\r\n      var obj = undefined;\r\n      if (index === -1) {\r\n        obj = {\r\n          Item: item,\r\n          Count: 0\r\n        };\r\n        list.push(obj);\r\n      } else {\r\n        obj = list[index];\r\n      }\r\n      obj.Count++;\r\n\r\n      if (obj.Count === item.ValidPhasesByInput.length){\r\n        this.HandledItems.push(item);\r\n      }\r\n    }\r\n\r\n    this.HandledRatio = this.HandledItems.length / this.Items.length;\r\n\r\n    if (this.HandledItems.length === this.Items.length) {\r\n      this.UpdateData();\r\n      this.HandledItems = [];\r\n    }\r\n  }\r\n\r\n  UpdateData = () => {\r\n    this.MainRows.forEach(x => x.UpdateData());\r\n    this.MainRows = rowUtil.Order(this.MainRows);\r\n\r\n    this.Cells.forEach(x => x.UpdateData());\r\n    this.IsUpdateDataDone = true;\r\n  }\r\n\r\n  OnIsUpdateDataDone_Funcs = []\r\n\r\n  set IsUpdateDataDone(v) {\r\n    this.OnIsUpdateDataDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  HandleItem = (item, colFieldValue, mgc, initialRow) => {\r\n    var col =\r\n      this.GetColumn(mif.GetValueString(colFieldValue, this.ColumnField));\r\n    var rows = initialRow ? [initialRow] : [];\r\n    var mgc = mgc ? mgc : this.MainMGC;\r\n\r\n    this.HandleRowFieldIndex(item, col, rows, mgc, 0);\r\n  }\r\n\r\n  // Xử lý tạo Row với giá trị tương ứng và Cell bên trong\r\n  GetRow_Value_FieldIndex = (item, col, rows, val, mgc, rowFieldIndex) => {\r\n    var mgis = mgc.Items;\r\n    var itemCount = mgis.length;\r\n    var mgi = mgis[rowFieldIndex];\r\n\r\n    var lastRow = rows.length !== 0 ? rows[rows.length - 1] : undefined\r\n    mgi.SupRow = lastRow;\r\n\r\n    var rowField = mgi.Field;\r\n    if (!rowField) {\r\n      this.AddHandledItems(item);\r\n      return;\r\n    }\r\n\r\n    var valueString = mif.GetValueString(val, rowField);\r\n    var fullValue = lastRow ? `${lastRow.FullValue}__${valueString}` : valueString;\r\n\r\n    if (mgi.NotIncludeValues.includes(fullValue)) {\r\n      this.AddHandledItems(item);\r\n      return;\r\n    }\r\n\r\n    var row = undefined;\r\n    const addRow = (supRow) => {\r\n      return this.Handle_AddRow(fullValue, supRow);\r\n    }\r\n\r\n    const handleRow = (row) => {\r\n      row.MassGroupItem = mgi;\r\n      rows.push(row);\r\n\r\n      var subMgcs = mgi.SubComponents;\r\n      var subIndex = subMgcs.findIndex(x =>\r\n        filterUtil.IsValid(x.Filter, fullValue));\r\n      if (subIndex !== -1) {\r\n        mgc = subMgcs[subIndex];\r\n        mgc.IsHaveMassItem = true;\r\n\r\n        rowFieldIndex = -1;\r\n        itemCount = mgc.Items.length;\r\n\r\n        row.SubMassGroupComponent = mgc;\r\n      }\r\n\r\n      var cell = this.GetCell(col, row);\r\n      cell.Items.push(item);\r\n\r\n      if (rowFieldIndex === itemCount - 1) {\r\n        this.AddHandledItems(item);\r\n      } else {\r\n        this.HandleRowFieldIndex(item, col, rows, mgc, rowFieldIndex + 1);\r\n      }\r\n    }\r\n\r\n    var mgiItem = mgi.GetItem(fullValue, valueString);\r\n    var replaceMgi = mgiItem.NewMGI;\r\n    if (replaceMgi) {\r\n      // Thêm Value-Title cho MassGroupItem\r\n      replaceMgi.GetItem(fullValue, valueString);\r\n\r\n      this.Handle_ReplaceMGI(replaceMgi, addRow, handleRow);\r\n    } else {\r\n      row = addRow(lastRow);\r\n      handleRow(row);\r\n    }\r\n  }\r\n\r\n  Handle_AddRow = (fullValue, supRow) => {\r\n    var r1 = this.GetRow(fullValue, supRow);\r\n    r1.FullValue = fullValue;\r\n    return r1;\r\n  }\r\n\r\n  Handle_ReplaceMGI = (replaceMgi, addRow, handleRow) => {\r\n    const awaitGetSupRowForAdd = () => {\r\n      var supRow = replaceMgi.SupRow;\r\n      var r2 = addRow(supRow);\r\n      r2.ReplaceMGI = replaceMgi;\r\n\r\n      return r2;\r\n    }\r\n\r\n    var row = undefined\r\n    if (replaceMgi.IsFirstSetSupRow) {\r\n      row = awaitGetSupRowForAdd();\r\n      handleRow(row);\r\n    } else {\r\n      replaceMgi.OnIsFirstSetSupRow_Funcs.push(() => {\r\n        row = awaitGetSupRowForAdd();\r\n        handleRow(row);\r\n      })\r\n    }\r\n  }\r\n\r\n  HandleRowFieldIndex = (item, col, rows, mgc, rowFieldIndex) => {\r\n    var rowField = mgc.Items[rowFieldIndex].Field;\r\n\r\n    var val = item.GetValue(rowField, (val) =>\r\n      this.GetRow_Value_FieldIndex(item, col, rows, val, mgc, rowFieldIndex));\r\n    if (!Array.isArray(val)) {\r\n      this.GetRow_Value_FieldIndex(item, col, rows, val, mgc, rowFieldIndex);\r\n    } else {\r\n      this.IsHaveAsyncData = true;\r\n    }\r\n  }\r\n\r\n  SaveMassGroup = () => {\r\n    this.IsOnSaveMassGroup = true;\r\n  }\r\n\r\n  massGroupName = undefined\r\n  get MassGroupName() {\r\n    if (!this.massGroupName) {\r\n      this.massGroupName = util.GetMassGroupName(this);\r\n    }\r\n    return this.massGroupName;\r\n  }\r\n  set MassGroupName(v) {\r\n    this.massGroupName = v;\r\n  }\r\n\r\n  massGroupNameVM\r\n  get MassGroupNameVM() {\r\n    if (!this.massGroupNameVM) {\r\n      var obj = this.massGroupNameVM =\r\n        textUtil.get(this.MassGroupName, 'Tên set khối lượng');\r\n      obj.onSetContent = (v) => this.MassGroupName = v;\r\n    }\r\n    return this.massGroupNameVM;\r\n  }\r\n\r\n  MassGroupInputOK = () => {\r\n    var items = pmData().MassGroupSetting_Dict.Items;\r\n    var index = items.findIndex(x => x.Name === this.MassGroupName);\r\n    var _id = undefined;\r\n    if (index !== -1) {\r\n      _id = items[index]._id;\r\n    }\r\n\r\n    var apiData = {\r\n      _id,\r\n      name: this.MassGroupName,\r\n      settingType: st.massgroup,\r\n      data: {\r\n        massGroupComponent: this.MainMGC.ApiData\r\n      }\r\n    };\r\n\r\n    var url = `https://api.bimdev.vn/api/hbs/mg`;\r\n\r\n    var command = _id ? 'edit' : 'add';\r\n    const apiFunc = () => _id ? api.put(`${url}/${command}`, apiData) :\r\n      api.post(`${url}/${command}`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        var dict = pmData().MassGroupSetting_Dict;\r\n        var item = mgsUtil.get(data, dict);\r\n        dict.Items.push(item);\r\n\r\n        var dictVM = pmDataVM().MassGroupSetting_DictVM;\r\n        var itemVM = mgsVMUtil.get(item, dictVM);\r\n        dictVM.Items.push(itemVM);\r\n\r\n        message.success(`${command} massgroup successfully`);\r\n      })\r\n\r\n    this.IsOnSaveMassGroup = false;\r\n    this.MassGroupNameVM.Content = util.GetMassGroupName(this);\r\n  }\r\n\r\n  MassGroupInputCancel = () => {\r\n    this.IsOnSaveMassGroup = false;\r\n    this.MassGroupNameVM.Content = util.GetMassGroupName(this);\r\n  }\r\n\r\n  AddMainRow = () => {\r\n    return rowUtil.Add(undefined, this);\r\n  }\r\n}","import MassColumn from \"./MassColumn\"\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassColumn();\r\n  qI.Name = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}","import MassTable from \"../table/MassTable\";\r\n\r\nexport default class MassItem_Dict {\r\n  items\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n    this.MassTable.Items = v;\r\n  }\r\n\r\n  massTable\r\n  get MassTable() {\r\n    if (!this.massTable) {\r\n      this.massTable = new MassTable();\r\n    }\r\n    return this.massTable;\r\n  }\r\n\r\n  set MassGroupSetting(v)  {\r\n    this.MassTable.MassGroupSetting = v;\r\n  }\r\n}","import * as util from './MassItemUtil'\r\nimport * as mif from './MassItemField'\r\nimport { message } from 'antd'\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\nexport default class MassItem {\r\n  Value\r\n  Unit\r\n\r\n  projectId\r\n\r\n  project\r\n  get Project() {\r\n    if (!this.project) {\r\n      this.project = util.GetProject(this);\r\n    }\r\n    return this.project;\r\n  }\r\n\r\n  workpackageId\r\n\r\n  workpackage\r\n  get Workpackage() {\r\n    if (!this.workpackage) {\r\n      this.workpackage = util.GetWorkpackage(this);\r\n    }\r\n    return this.workpackage;\r\n  }\r\n\r\n  phases\r\n  get Phases() {\r\n    if (!this.phases) {\r\n      this.phases = util.GetPhases(this);\r\n    }\r\n    return this.phases;\r\n  }\r\n\r\n  get ValidPhasesByInput() {\r\n    return util.GetValidPhasesByInput(this);\r\n  }\r\n\r\n  IsGetElement = false\r\n\r\n  OnGetElementDone_Funcs = []\r\n\r\n  set GetElementDone(v) {\r\n    this.OnGetElementDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  GetValue = (field) => {\r\n    if (!field) {\r\n      return;\r\n    }\r\n\r\n    var data = mif.GetFullFields(this, field);\r\n    var { fields, isFromElement } = data;\r\n\r\n    var getValFunc = () => {\r\n      var obj = this;\r\n      var isValid = true;\r\n\r\n      fields.forEach(x => {\r\n        if (isValid) {\r\n          var temp = obj[x];\r\n          obj = temp;\r\n          if (obj === undefined) {\r\n            isValid = false;\r\n          }\r\n        }\r\n      })\r\n\r\n      return obj;\r\n    }\r\n\r\n    if (!isFromElement || this.Element) {\r\n      return getValFunc();\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      _id: this._id,\r\n      projectId: this.projectId,\r\n      elementId: this.elementId,\r\n      workpackageId: this.workpackageId,\r\n      exportSetId: this.exportSetId,\r\n      exportSetVersionId: this.exportSetVersionId,\r\n      value: this.Value,\r\n      unit: this.Unit,\r\n      massType: this.MassType,\r\n      info: this.Info\r\n    }\r\n  }\r\n\r\n  AddDatabase = (handle) => {\r\n    var apiData = this.ApiData;\r\n    var { _id } = apiData;\r\n    var url = `https://api.bimdev.vn/api/hbm`;\r\n\r\n    var command = _id ? 'edit' : 'add';\r\n    const apiFunc = () => _id ?\r\n      api.put(`${url}/${command}`, apiData) : api.post(`${url}/${command}`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        if (command === 'add') {\r\n          this._id = data._id;\r\n        }\r\n        if (handle) {\r\n          handle(data);\r\n        }\r\n        message.success(`${command} mass successfully`);\r\n      })\r\n  }\r\n\r\n  DeleteDatabase = (handle) => {\r\n    var apiData = {\r\n      _id: this._id\r\n    };\r\n    var url = `https://api.bimdev.vn/api/hbm`;\r\n    const apiFunc = () => api.put(`${url}/delete`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        if (handle) {\r\n          handle(data);\r\n        }\r\n        message.success(`delete mass successfully`);\r\n      })\r\n  }\r\n\r\n  IsGet_TLS_LevelGroup = false\r\n  OnGet_TLS_LevelGroup_Func_Dict = []\r\n\r\n  get Get_TLS_LevelGroup(){\r\n    return this.get_TLS_LevelGroup\r\n  }\r\n  set Get_TLS_LevelGroup(v) {\r\n    this.OnGet_TLS_LevelGroup_Func_Dict.forEach(x => x.Value());\r\n    this.get_TLS_LevelGroup = v;\r\n  }\r\n\r\n  tls_LevelGroup\r\n  get TLS_LevelGroup() {\r\n    if (!this.tls_LevelGroup) {\r\n      util.Handle_TLS_LevelGroup(this);\r\n    }\r\n    return this.tls_LevelGroup;\r\n  } set TLS_LevelGroup(v) {\r\n    this.tls_LevelGroup = v;\r\n    this.Get_TLS_LevelGroup = true;\r\n  }\r\n\r\n  OnGet_FullValue_Func_Dict = []\r\n  set Get_FullValue(v) {\r\n    this.OnGet_FullValue_Func_Dict.forEach(x => x.Value())\r\n    this.get_FullValue = v;\r\n  }\r\n\r\n  // bao gồm giá trị tầng điển hình\r\n  fullValue\r\n  get FullValue() {\r\n    if (!this.fullValue) {\r\n      util.Handle_FullValue(this);\r\n    }\r\n    return this.fullValue;\r\n  } set FullValue(v) {\r\n    this.fullValue = v;\r\n    this.Get_FullValue = true;\r\n  }\r\n\r\n  phaseItems\r\n  get PhaseItems(){\r\n    if (!this.phaseItems){\r\n      this.phaseItems = util.GetPhaseItems(this);\r\n    }\r\n    return this.phaseItems;\r\n  }\r\n\r\n  GetPhaseItem = (phaseName) => {\r\n    var list = this.PhaseItems;\r\n    var index = list.findIndex(x => x.Phase.Name === phaseName);\r\n    return list[index];\r\n  }\r\n}","import * as util from './MIPh_ItemUtil'\r\n\r\nexport default class MIPh_Item {\r\n  Phase\r\n\r\n  get Project(){\r\n    return this.Phase.Project\r\n  }\r\n\r\n  get MassItem(){\r\n    return this.Dict;\r\n  }\r\n\r\n  IsGet_TLS_LevelGroup = false\r\n  OnGet_TLS_LevelGroup_Func_Dict = []\r\n\r\n  get Get_TLS_LevelGroup(){\r\n    return this.get_TLS_LevelGroup\r\n  }\r\n  set Get_TLS_LevelGroup(v) {\r\n    this.OnGet_TLS_LevelGroup_Func_Dict.forEach(x => x.Value());\r\n    this.get_TLS_LevelGroup = v\r\n  }\r\n\r\n  tls_LevelGroup\r\n  get TLS_LevelGroup() {\r\n    if (!this.tls_LevelGroup) {\r\n      util.Handle_TLS_LevelGroup(this);\r\n    }\r\n    return this.tls_LevelGroup;\r\n  } set TLS_LevelGroup(v) {\r\n    this.tls_LevelGroup = v;\r\n    this.Get_TLS_LevelGroup = true;\r\n  }\r\n\r\n  OnGet_FullValue_Func_Dict = []\r\n  set Get_FullValue(v) {\r\n    this.OnGet_FullValue_Func_Dict.forEach(x => x.Value())\r\n  }\r\n\r\n  // bao gồm giá trị tầng điển hình\r\n  fullValue\r\n  get FullValue() {\r\n    if (!this.fullValue) {\r\n      util.Handle_FullValue(this);\r\n    }\r\n    return this.fullValue;\r\n  } set FullValue(v) {\r\n    this.fullValue = v;\r\n    this.Get_FullValue = true;\r\n  }\r\n}","import MIPh_Item from \"./MIPh_Item\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as mif from '../MassItemField'\r\n\r\n// Instance\r\nexport const get = (phase, dict) => {\r\n  var qI = new MIPh_Item();\r\n  qI.Phase = phase;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_TLS_LevelGroup = (q) => {\r\n  if (q.IsGet_TLS_LevelGroup) return undefined;\r\n  q.IsGet_TLS_LevelGroup = true;\r\n\r\n  var phase = q.Phase;\r\n\r\n  const getLevelGroup_Func = (tls) => {\r\n    var pi = GetValidTLS_PageItem(q, tls.Data);\r\n    return GetValidTLS_LevelGroup(q, pi);\r\n  }\r\n\r\n  var tls = phase.TypicalLevelSetting;\r\n  if (tls) {\r\n    q.TLS_LevelGroup = getLevelGroup_Func(tls);\r\n  } else {\r\n    phase.OnGetTypicalLevelSetting_Funcs.push(() => {\r\n      q.TLS_LevelGroup = getLevelGroup_Func(phase.TypicalLevelSetting);\r\n    })\r\n  }\r\n}\r\n\r\nexport const GetValidTLS_PageItem = (q, tls) => {\r\n  if (!tls) return undefined;\r\n  var validPi = undefined\r\n  tls.PageItems.forEach(x => {\r\n    if (!validPi && IsValidTLS_PageItem(q, x)) {\r\n      validPi = x;\r\n    }\r\n  })\r\n\r\n  return validPi;\r\n}\r\n\r\nexport const IsValidTLS_PageItem = (q, pageItem) => {\r\n  var filters = pageItem.Filters;\r\n  var isValid = true;\r\n  filters.forEach(x => {\r\n    if (isValid) {\r\n      var field = x.Field;\r\n      isValid = x.Values.includes(q.MassItem.GetValue(field));\r\n    }\r\n  })\r\n  return isValid;\r\n}\r\n\r\nexport const GetValidTLS_LevelGroup = (q, pageItem) => {\r\n  if (!pageItem) return undefined;\r\n  var validLg = undefined\r\n  pageItem.LevelGroups.forEach(x => {\r\n    // Kiểm tra Level hiện tại có trong tập hợp Level hay không\r\n    //if (!validLg && x.Levels.includes(q.GetValue(mif.level))) {\r\n\r\n    // Cách kiểm tra mới: Level primary tương ứng Leve hiện tại\r\n    if (!validLg && x.Primary === q.MassItem.GetValue(mif.level)) {\r\n      validLg = x;\r\n    }\r\n  })\r\n  return validLg;\r\n}\r\n\r\nexport const Handle_FullValue = (q) => {\r\n  if (q.IsGet_FullValue) return undefined;\r\n  q.IsGet_FullValue = true;\r\n\r\n  const getFullValue_Func = (lg) => {\r\n    var count = lg ? lg.Count : 1\r\n    var obj = q.MassItem.Value * count;\r\n    return obj;\r\n  }\r\n\r\n  if (q.TLS_LevelGroup || q.Get_TLS_LevelGroup) {\r\n    q.FullValue = getFullValue_Func(q.TLS_LevelGroup)\r\n  } else {\r\n    genUtil.Add(q.OnGet_TLS_LevelGroup_Func_Dict,\r\n      () => {\r\n        q.FullValue = getFullValue_Func(q.TLS_LevelGroup)\r\n      });\r\n  }\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport MassItem from './MassItem';\r\nimport * as elementUtil from '../../element/ElementUtil'\r\nimport * as mt from '../MassType'\r\nimport * as ut from '../../value/ValueUnit'\r\nimport * as mif from './MassItemField'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as phaseItemUtil from './phaseValue/MIPh_ItemUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const get = (q) => {\r\n  var qI = new MassItem();\r\n\r\n  qI._id = q._id;\r\n  qI.Value = q.value;\r\n  qI.Unit = q.unit;\r\n  qI.MassType = q.massType;\r\n  qI.Info = q.info;\r\n  qI.projectId = q.projectId;\r\n  qI.workpackageId = q.workpackageId;\r\n  qI.exportSetId = q.exportSetId;\r\n  qI.exportSetVersionId = q.exportSetVersionId;\r\n  qI.Element = q.Elements && q.Elements.length !== 0 ? q.Elements[0] : undefined;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefaultRebarMass = (project) => {\r\n  var qI = new MassItem();\r\n\r\n  qI.Unit = ut.kg;\r\n  qI.MassType = mt.rebar;\r\n  qI.Info = {}\r\n  qI.projectId = project._id;\r\n\r\n  const setExportSetData = (exportSet) => {\r\n    qI.exportSetId = exportSet._id;\r\n\r\n    var currentVersion = exportSet.CurrentVersion;\r\n    if (!currentVersion) {\r\n      exportSet.OnGetCurrentVersionDone_Func.push(() => {\r\n        currentVersion = exportSet.CurrentVersion;\r\n        qI.exportSetVersionId = currentVersion._id;\r\n      })\r\n    } else {\r\n      qI.exportSetVersionId = currentVersion._id;\r\n    }\r\n  }\r\n\r\n  var inputExportSet = project.InputExportSet;\r\n  if (!inputExportSet) {\r\n    project.OnGetInputExportSetDone_Funcs\r\n      .push(() => {\r\n        inputExportSet = project.InputExportSet;\r\n        setExportSetData(inputExportSet);\r\n      })\r\n  } else {\r\n    setExportSetData(inputExportSet);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetProject = (q) => {\r\n  var list = pmData().Project_Dict.Items;\r\n  var { projectId } = q;\r\n  var index = list.findIndex(x => x._id === projectId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const getAll = (apiData, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbmr/newlist\";\r\n\r\n  //var start = window.performance.now();\r\n\r\n  api.post(url, apiData, undefined, 2000000)\r\n    .then(response => response.data)\r\n    .then(data => {\r\n      //var end = window.performance.now();\r\n      //console.log(`Execution time: ${(end - start)/1000} s`);\r\n\r\n      if (!data) {\r\n        console.log('mass result undefined');\r\n        return;\r\n      }\r\n\r\n      var items = data.map(x => {\r\n        return get(x)\r\n      })\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getRebars = (projectId, handle) => {\r\n  if (!projectId) return;\r\n  var url = `https://api.bimdev.vn/api/hbmr/rebar?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = undefined;\r\n      if (!data) {\r\n        items = [];\r\n      } else {\r\n        var items = data.map(x => get(x))\r\n      }\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getByViewDetail = (_id, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbdv/massdetail?id=${_id}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var { viewDetail, masses } = data;\r\n      var isGetElement = mt.IsGetElement(viewDetail.massType);\r\n      var items = masses.map(x => get(x, isGetElement));\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\n// Property\r\nexport const GetWorkpackage = (q) => {\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  var { workpackageId } = q;\r\n  var index = list.findIndex(x => x._id === workpackageId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetPhases = (q) => {\r\n  var list = [];\r\n  var phases = pmData().Phase_Dict.Items;\r\n  var exportSetVersionId = q.exportSetVersionId;\r\n  phases.forEach(x => {\r\n    if (x.exportSetVersionIds.includes(exportSetVersionId)) {\r\n      list.push(x);\r\n    }\r\n  })\r\n  return list;\r\n}\r\n\r\nexport const GetValidPhasesByInput = (q) => {\r\n  var inputPhases = pmData().MassResultComp.Phases;\r\n  var phases = q.Phases;\r\n  var list = [];\r\n  phases.forEach(x => {\r\n    if (inputPhases.includes(x)) {\r\n      list.push(x);\r\n    }\r\n  })\r\n  return list;\r\n}\r\n\r\nexport const GetElementAsync = (q) => {\r\n  var elemId = q.elementId\r\n  if (elemId) {\r\n    elementUtil.GetById(elemId, (data) => {\r\n      q.Element = data\r\n      q.IsGetElement = true;\r\n      q.GetElementDone = true;\r\n    });\r\n  } else {\r\n    q.IsGetElement = true;\r\n  }\r\n}\r\n\r\nexport const Handle_TLS_LevelGroup = (q) => {\r\n  if (q.IsGet_TLS_LevelGroup) return undefined;\r\n  q.IsGet_TLS_LevelGroup = true;\r\n\r\n  var project = q.Project;\r\n\r\n  const getLevelGroup_Func = (tls) => {\r\n    var pi = GetValidTLS_PageItem(q, tls.Data);\r\n    return GetValidTLS_LevelGroup(q, pi);\r\n  }\r\n\r\n  var tls = project.TypicalLevelSetting;\r\n  if (tls) {\r\n    q.TLS_LevelGroup = getLevelGroup_Func(tls);\r\n  } else {\r\n    project.OnGetTypicalLevelSetting_Funcs.push(() => {\r\n      q.TLS_LevelGroup = getLevelGroup_Func(project.TypicalLevelSetting);\r\n    })\r\n  }\r\n}\r\n\r\nexport const GetValidTLS_PageItem = (q, tls) => {\r\n  if (!tls) return undefined;\r\n  var validPi = undefined\r\n  tls.PageItems.forEach(x => {\r\n    if (!validPi && IsValidTLS_PageItem(q, x)) {\r\n      validPi = x;\r\n    }\r\n  })\r\n\r\n  return validPi;\r\n}\r\n\r\nexport const IsValidTLS_PageItem = (q, pageItem) => {\r\n  var filters = pageItem.Filters;\r\n  var isValid = true;\r\n  filters.forEach(x => {\r\n    if (isValid) {\r\n      var field = x.Field;\r\n      isValid = x.Values.includes(q.GetValue(field));\r\n    }\r\n  })\r\n  return isValid;\r\n}\r\n\r\nexport const GetValidTLS_LevelGroup = (q, pageItem) => {\r\n  if (!pageItem) return undefined;\r\n  var validLg = undefined\r\n  pageItem.LevelGroups.forEach(x => {\r\n    // Kiểm tra Level hiện tại có trong tập hợp Level hay không\r\n    //if (!validLg && x.Levels.includes(q.GetValue(mif.level))) {\r\n\r\n    // Cách kiểm tra mới: Level primary tương ứng Leve hiện tại\r\n    if (!validLg && x.Primary === q.GetValue(mif.level)) {\r\n      validLg = x;\r\n    }\r\n  })\r\n  return validLg;\r\n}\r\n\r\nexport const Handle_FullValue = (q) => {\r\n  if (q.IsGet_FullValue) return undefined;\r\n  q.IsGet_FullValue = true;\r\n\r\n  const getFullValue_Func = (lg) => {\r\n    var count = lg ? lg.Count : 1\r\n    return q.Value * count;\r\n  }\r\n\r\n  if (q.TLS_LevelGroup || q.Get_TLS_LevelGroup) {\r\n    q.FullValue = getFullValue_Func(q.TLS_LevelGroup)\r\n  } else {\r\n    genUtil.Add(q.OnGet_TLS_LevelGroup_Func_Dict,\r\n      () => {\r\n        q.FullValue = getFullValue_Func(q.TLS_LevelGroup)\r\n      });\r\n  }\r\n}\r\n\r\nexport const GetPhaseItems = (q) => {\r\n  return q.Phases.map(x => phaseItemUtil.get(x, q));\r\n}","import MassItem_Dict from '../item/MassItem_Dict';\r\nimport * as util from './MassResultCompUtil'\r\nimport * as massItemUtil from '../item/MassItemUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as mif from '../item/MassItemField'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassResultComp {\r\n  Projects = []\r\n\r\n  Phases = []\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n\r\n  massItem_Dict\r\n  get MassItem_Dict(){\r\n    if (!this.massItem_Dict){\r\n      this.massItem_Dict = new MassItem_Dict();\r\n    }\r\n    return this.massItem_Dict;\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  isHavePhase = false\r\n  get IsHavePhase(){\r\n    return this.isHavePhase;\r\n  }\r\n  set IsHavePhase(v){\r\n    this.isHavePhase = v;\r\n    if (v){\r\n    this.MassItem_Dict.MassTable.ColumnField = mif.Phase\r\n    }else{\r\n      this.MassItem_Dict.MassTable.ColumnField = mif.Project\r\n    }\r\n  }\r\n\r\n  GetMassData = () => {\r\n    var wp_Dict = pmData().Workpackage_Dict;\r\n    if (wp_Dict.IsDataChanged){\r\n      wp_Dict.RefreshData();\r\n    }\r\n\r\n    massItemUtil.getAll(this.ApiData, (items) => {\r\n      var dict = this.MassItem_Dict;\r\n\r\n      dict.MassGroupSetting = this.MassGroupSetting ? \r\n        this.MassGroupSetting : undefined;\r\n      dict.Items = items;\r\n      \r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n}","export const GetApiData = (q) => {\r\n  return {\r\n    projectIds : q.Projects.map(x => x._id),\r\n    phaseIds : q.IsHavePhase ? q.Phases.map(x => x._id) : undefined\r\n  }\r\n}","import { Button, message, Space, Tag } from \"antd\";\r\nimport * as colUtil from '../../../../table/TableColumnUtil'\r\nimport TableVM from \"../../../../table/TableVM\";\r\nimport * as renderUtil from '../../../../table/RenderItemUtil'\r\nimport * as rs from '../../../../table/RenderState'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport RebarMass_Dict from \"./RebarMass_Dict\";\r\nimport * as massItemUtil from '../item/MassItemUtil'\r\n\r\nexport const get = (project) => {\r\n  var qI = new RebarMass_Dict();\r\n  qI.Project = project;\r\n\r\n  var projectId = qI.projectId;\r\n  massItemUtil.getRebars(projectId, (items) => {\r\n    qI.Items = items;\r\n  });\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTableVM = (q) => {\r\n  var qI = new TableVM();\r\n\r\n  qI.DataSource = q.Items;\r\n  qI.Columns = [\r\n    colUtil.get('Tên cấu kiện', ['Info', 'elementName'],\r\n      [\r\n        renderUtil.get(rs._default, (val, item) => item.Info.elementName)\r\n      ], qI),\r\n\r\n    colUtil.get('Hạng mục', ['Info', 'workItem'],\r\n      [\r\n        renderUtil.get(rs._default, (val, item) => item.Info.workItem)\r\n      ], qI),\r\n\r\n    colUtil.get('Đường kính', ['Info', 'diameter'],\r\n      [\r\n        renderUtil.get(rs._default, (val, item) => item.Info.diameter)\r\n      ], qI),\r\n\r\n    colUtil.get('Khối lượng', ['Value'], null, qI),\r\n\r\n    colUtil.GetActionColumn(qI)\r\n  ]\r\n\r\n  qI.OnGetItemForAdd = () => {\r\n    return massItemUtil.GetDefaultRebarMass(q.Project);\r\n  }\r\n\r\n  qI.OnEditItem = (item) => {\r\n    item.AddDatabase();\r\n  }\r\n\r\n  qI.OnDeleteItem = (item) => {\r\n    item.DeleteDatabase();\r\n  }\r\n\r\n  return qI;\r\n}","export const m = \"m\";\r\nexport const m2 = \"m2\";\r\nexport const m3 = \"m3\";\r\nexport const kg = \"kg\";","import * as util from './RebarMass_DictUtil'\r\n\r\nexport default class RebarMass_Dict {\r\n  project\r\n  get Project(){\r\n    return this.project;\r\n  }\r\n  set Project(v){\r\n    this.project = v;\r\n    this.projectId = v._id;\r\n  }\r\n\r\n  projectId\r\n\r\n  items = []\r\n  get Items(){\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n    this.TableVM.DataSource = v;\r\n  }\r\n\r\n  tableVM\r\n  get TableVM() {\r\n    if (!this.tableVM){\r\n      this.tableVM = util.GetTableVM(this);\r\n    }\r\n    return this.tableVM;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './LevelGroupUtil'\r\n\r\nexport class LevelGroup {\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.LevelGroups.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.LevelGroups.splice(this.Index, 1);\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      levels : this.Levels ? this.Levels : [],\r\n      primary: this.Primary\r\n    }\r\n  }\r\n\r\n  get Count(){\r\n    return this.Levels.length\r\n  }\r\n\r\n\r\n  OnGetLevelStorageList_Func_Dict = []\r\n  get GetLevelStorageList(){\r\n    return this.getLevelStorageList;\r\n  }\r\n  set GetLevelStorageList(v){\r\n    this.getLevelStorageList = v;\r\n    this.OnGetLevelStorageList_Func_Dict.forEach(x => x.Value())\r\n  }\r\n\r\n  IsGet_LevelStorageList\r\n\r\n  get LevelStorageList (){\r\n    var obj = this.Dict.LevelStorageList;\r\n    if (!obj && !this.IsGet_LevelStorageList){\r\n      this.IsGet_LevelStorageList = true;\r\n      this.Setting.OnGetLevelStorageList_Funcs.push(() => {\r\n        this.GetLevelStorageList = true\r\n      });\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  get Setting (){\r\n    return this.Dict.Setting;\r\n  }\r\n\r\n  get LevelIndexs(){\r\n    return this.Levels.map(x => this.LevelStorageList.indexOf(x));\r\n  }\r\n\r\n  get MinLevel(){\r\n    var list = this.LevelStorageList;\r\n    return list[Math.min.apply(Math, this.LevelIndexs)]\r\n  }\r\n\r\n  get MaxLevel(){\r\n    var list = this.LevelStorageList;\r\n    return list[Math.max.apply(Math, this.LevelIndexs)]\r\n  }\r\n\r\n  get Description(){\r\n    if (!this.LevelStorageList) return undefined;\r\n    return `Typ: ${this.MinLevel} - ${this.MaxLevel} (${this.Count})`;\r\n  }\r\n\r\n  get FullDescription() {\r\n    if (!this.Description) return undefined;\r\n    return `${this.Dict.FilterDescription} (${this.Description})`;\r\n  }\r\n\r\n  primary\r\n  get Primary(){\r\n    if (!this.primary){\r\n      this.primary = util.GetDefaultPrimary(this);\r\n    }\r\n    return this.primary\r\n  } set Primary(v){\r\n    this.primary = v;\r\n  }\r\n}","import { LevelGroup } from \"./LevelGroup\"\r\n\r\n// Instance\r\nexport const get = (data, dict) => {\r\n  var qI = new LevelGroup();\r\n\r\n  if (Array.isArray(data)) {\r\n    qI.Levels = data;\r\n  } else {\r\n    qI.Levels = data.levels;\r\n    qI.Primary = data.primary\r\n  }\r\n\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new LevelGroup();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefaultPrimary = (q) => {\r\n  if (q.Levels && q.Levels.length !== 0) {\r\n    return q.Levels[0];\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class TLS_Filter {\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index (){\r\n    return this.Dict.Filters.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.Filters.splice(this.Index, 1);\r\n  }\r\n\r\n  //Values = [ 'Cột' ]\r\n  Values = [ ]\r\n\r\n  AddValue = () => {\r\n    var item = undefined;\r\n    this.Values.push(item);\r\n    return item;\r\n  }\r\n\r\n  field\r\n  get Field(){\r\n    if (!this.field){\r\n      this.field = this.FieldStorageList[0]\r\n    }\r\n    return this.field;\r\n  } set Field(v){\r\n    this.field = v;\r\n  }\r\n\r\n  get FieldStorageList(){\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      field : this.Field,\r\n      values : this.Values.filter(x => x && x.length !== 0)\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  get Description() {\r\n    var obj =  this.Values.reduce((a,b,i,arr) => {\r\n      if (arr.indexOf(b) !== 0){\r\n        a += ', ';\r\n      }\r\n      a += b;\r\n      return a;\r\n    }, '')\r\n\r\n    return `${this.Field}: ${obj}`;\r\n  }\r\n}","import { TLS_Filter } from \"./TLS_Filter\";\r\n\r\nexport const get = (data, dict) => {\r\n  var qI = new TLS_Filter();\r\n  qI.Field = data.field;\r\n  qI.Values = data.values;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new TLS_Filter();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterUtil'\r\nimport * as util from './TLS_PageItemUtil'\r\n\r\nexport class TLS_PageItem {\r\n  _id\r\n  get id(){\r\n    if (!this._id){\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  Name = 'tên setting'\r\n\r\n  get Index (){\r\n    return this.Dict.PageItems.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.PageItems.splice(this.Index, 1);\r\n  }\r\n\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  // Setting\r\n  get Setting() {\r\n    return this.Dict.Setting;\r\n  }\r\n\r\n  // Level Groups\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n\r\n  levelGroups\r\n  get LevelGroups(){\r\n    if (!this.levelGroups){\r\n      this.levelGroups = util.GetLevelGroups(this);\r\n    }\r\n    return this.levelGroups;\r\n  } set LevelGroups(v){\r\n    this.levelGroups = v;\r\n  }\r\n\r\n  AddLevelGroup = () => {\r\n    var item = levelGroupUtil.GetDefault(this);\r\n    this.LevelGroups.push(item);\r\n    return item;\r\n  }\r\n\r\n  // Filter\r\n  filters\r\n  get Filters(){\r\n    if (!this.filters){\r\n      this.filters = util.GetFilters(this);\r\n    }\r\n    return this.filters;\r\n  } set Filters(v){\r\n    this.filters = v;\r\n  }\r\n\r\n  AddFilter = () => {\r\n    var item = filterUtil.GetDefault(this);\r\n    this.Filters.push(item);\r\n    return item;\r\n  }\r\n\r\n  get FilterDescription() {\r\n    var obj = this.Filters.reduce((a,b,i,arr) => {\r\n      if (arr.indexOf(b) !== 0){\r\n        a += '; ';\r\n      }\r\n      a += b.Description;\r\n      return a;\r\n    }, '')\r\n    return obj;\r\n  }\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      name: this.Name,\r\n      levelGroups : this.LevelGroups.map(x => x.ApiData).filter(x => x.levels.length !== 0),\r\n      filters : this.Filters.map(x => x.ApiData)\r\n    }\r\n    return obj;\r\n  }\r\n}","import { TLS_PageItem } from \"./TLS_PageItem\"\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterUtil'\r\n\r\n// Instance\r\nexport const get = (data, dict) => {\r\n  var qI = new TLS_PageItem();\r\n  qI.Name = data.name;\r\n  qI.Filters = data.filters.map(x => filterUtil.get(x, qI));\r\n  qI.LevelGroups = data.levelGroups ? data.levelGroups.map(x => levelGroupUtil.get(x, qI))\r\n     : data.levels.map(x => levelGroupUtil.get(x, qI))\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new TLS_PageItem();\r\n  qI.Name = 'setting 1';\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetLevelGroups = (q) => {\r\n  return [ levelGroupUtil.GetDefault(q) ]\r\n}\r\n\r\nexport const GetFilters = (q) => {\r\n  return [ filterUtil.GetDefault(q) ]\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './TypicalLevelSettingDataUtil'\r\nimport { reaction } from \"mobx\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport class TypicalLevelSettingData {\r\n  // Setting\r\n  get Setting() {\r\n    return this.Dict;\r\n  }\r\n\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n  \r\n  // Page Item\r\n  pageItems\r\n  get PageItems(){\r\n    if (!this.pageItems){\r\n      this.pageItems = util.GetPageItems(this);\r\n    }\r\n    return this.pageItems;\r\n  } set PageItems(v){\r\n    this.pageItems = v;\r\n  }\r\n\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  AddPageItem = () => {\r\n    var item = pageItemUtil.GetDefault(this);\r\n    this.PageItems.push(item);\r\n    item.Name = `setting ${item.Index +1}`\r\n    return item;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      pageItems : this.PageItems.map(x => x.ApiData)\r\n    }\r\n  }\r\n}","import { PMData } from '../../../single/model/PMData';\r\nimport { TypicalLevelSettingData } from './TypicalLevelSettingData';\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemUtil'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (data, dict) => {\r\n  var qI = new TypicalLevelSettingData();\r\n  qI.PageItems = data.pageItems.map(x => pageItemUtil.get(x, qI));\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (dict) => {\r\n  var qI = new TypicalLevelSettingData();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetPageItems = (q) => {\r\n  return [ pageItemUtil.GetDefault(q) ]\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './TypicalLevelSettingUtil'\r\n\r\nexport class TypicalLevelSetting extends Setting {\r\n  fieldFilterStorageList\r\n  get FieldFilterStorageList(){\r\n    if (!this.fieldFilterStorageList){\r\n      this.fieldFilterStorageList = util.GetFieldFilterStorageList();\r\n    }\r\n    return this.fieldFilterStorageList;\r\n  }\r\n\r\n  Save = () => {\r\n    util.SaveDatabase(this)\r\n  }\r\n\r\n  levelStorageList\r\n  get LevelStorageList(){\r\n    if (!this.levelStorageList){\r\n      this.levelStorageList = util.GetLevelStorageList(this);\r\n    }\r\n    return this.levelStorageList;\r\n  } set LevelStorageList(v){\r\n    this.levelStorageList = v;\r\n    this.GetLevelStorageList = true;\r\n  }\r\n\r\n  OnGetLevelStorageList_Funcs = []\r\n\r\n  set GetLevelStorageList(v){\r\n    this.OnGetLevelStorageList_Funcs.forEach(x => x());\r\n  }\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as dataUtil from './TypicalLevelSettingDataUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport { TypicalLevelSetting } from './TypicalLevelSetting';\r\nimport * as st from '../base/SettingType'\r\nimport * as fieldUtil from '../../mass/item/MassItemField'\r\nimport { message } from 'antd';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const get = (data, project, phase) => {\r\n  var qI = new TypicalLevelSetting();\r\n\r\n  qI._id = data._id;\r\n  qI.Name = data.name;\r\n  qI.Description = data.description;\r\n  qI.SettingType = data.settingType;\r\n  qI.Data = dataUtil.get(data.data, qI);\r\n  qI.Project = project;\r\n  qI.Phase = phase;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (project) => {\r\n  var qI = new TypicalLevelSetting();\r\n\r\n  qI.Name = 'thiết lập ...';\r\n  qI.Description = 'Mô tả thiết lập ...';\r\n  qI.SettingType = st.typicallevel\r\n  qI.Data = dataUtil.GetTest(qI);\r\n  qI.Project = project;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetFromDb_Async = (project, phase, handle) => {\r\n  var apiData = {\r\n    projectId: project._id,\r\n    phaseId: phase?._id\r\n  }\r\n\r\n  var prefix = 'tl';\r\n  var url = `https://api.bimdev.vn/api/hbs/${prefix}`;\r\n\r\n  const apiFunc = () => api.post(`${url}/get`, apiData)\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      var resData = data ? get(data, project, phase) : undefined;\r\n      var editData = resData ? resData : GetTest(project);\r\n      handle(resData, editData);\r\n    })\r\n}\r\n\r\n// Property\r\nexport const GetFieldFilterStorageList = () => {\r\n  return fieldUtil.GetListForTypicalLevelFilter();\r\n}\r\n\r\n// Method\r\nexport const SaveDatabase = (q) => {\r\n  var _id = q._id;\r\n  var apiData = q.ApiData;\r\n\r\n  var prefix = 'tl';\r\n  var url = `https://api.bimdev.vn/api/hbs/${prefix}`;\r\n\r\n  var isNew = _id ? true : false\r\n  const apiFunc = () => isNew ?\r\n    api.put(`${url}/edit`, apiData) : api.post(`${url}/add`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (isNew) q._id = data._id\r\n      message.success('add setting successfully!');\r\n    })\r\n}\r\n\r\nexport const GetLevelStorageList = (q) => {\r\n  var level_Dict = q.Project.Level_Dict;\r\n\r\n  const getLevelsFunc = (items) => {\r\n    return items.map(x => x.Name);\r\n  }\r\n\r\n  if (level_Dict.Items) {\r\n    return getLevelsFunc(level_Dict.Items);\r\n  } else {\r\n    level_Dict.OnGetItemsDone_Funcs.push(() => {\r\n      q.LevelStorageList = getLevelsFunc(level_Dict.Items);\r\n    });\r\n  }\r\n}\r\n","import * as typicalLevelUtil from '../setting/typicallevel/TypicalLevelSettingUtil'\r\n\r\nexport default class Phase {\r\n  exportSetVersions\r\n  get ExportSetVersions(){\r\n    return this.exportSetVersions;\r\n  }\r\n  set ExportSetVersions(v){\r\n    this.exportSetVersions = v;\r\n    this.exportSetVersionIds = v.map(x => x._id);\r\n  }\r\n\r\n  OnGetExportSetVersions_Func = [];\r\n\r\n  set GetExportSetVersions(v){\r\n    this.OnGetExportSetVersions_Func.forEach(x => x());\r\n  }\r\n\r\n  exportSetVersionIds\r\n\r\n  get Project(){\r\n    return this.Dict.Dict;\r\n  }\r\n\r\n  OnGetTypicalLevelSetting_Funcs = []\r\n\r\n  set GetTypicalLevelSetting(v) {\r\n    this.OnGetTypicalLevelSetting_Funcs.forEach(x => x());\r\n  }\r\n\r\n  typicalLevelSetting\r\n  get TypicalLevelSetting() {\r\n    if (!this.typicalLevelSetting) {\r\n      if (!this.IsOnGetDb_Async) {\r\n        this.IsOnGetDb_Async = true;\r\n        typicalLevelUtil.GetFromDb_Async(this.Project, this, \r\n          (resData, editData) => {\r\n          this.TypicalLevelSetting = resData;\r\n          this.GetTypicalLevelSetting = true\r\n        })\r\n      }\r\n    }\r\n    return this.typicalLevelSetting;\r\n  }\r\n  set TypicalLevelSetting(v) {\r\n    this.typicalLevelSetting = v;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport Phase from './Phase';\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n\r\n  var qI = new Phase();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.Dict = dict;\r\n\r\n  GetExportSetVersionData(q._id, (data) => {\r\n    qI.ExportSetVersions = data;\r\n    qI.GetExportSetVersions = true;\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getByProject = (projectId, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbphase/list?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data);\r\n      }\r\n    });\r\n}\r\n\r\nexport const GetExportSetVersionData = (phaseId, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbesv/byphase?phaseId=${phaseId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data);\r\n      }\r\n    });\r\n}","import { message } from 'antd';\r\nimport * as util from './Phase_DictUtil'\r\nimport * as api from '../../../../util/apiUtil'\r\nimport * as itemUtil from './PhaseUtil'\r\nimport * as settingUtil from '../setting/base/SettingUtil'\r\n\r\nexport class Phase_Dict {\r\n  get Project() {\r\n    return this.Dict;\r\n  }\r\n\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n  \r\n  AddMassVersion = () => {\r\n    var apiData = this.Input.ApiData;\r\n    var url = `https://api.bimdev.vn/api/hbphase`;\r\n\r\n    const apiFunc = () => api.put(`${url}/mass/add`, apiData);\r\n    var project = this.Project;\r\n    \r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        var item = itemUtil.get(data, this);\r\n        this.Add(item);\r\n        message.success(\"create version successfully!\");\r\n\r\n        settingUtil.AddPhase(project._id, data._id);\r\n      })\r\n\r\n    // Thêm version mới cho InputExportSet sau khi lưu version\r\n    var addVersionFunc = (exportSet) => exportSet.AddVersion();\r\n\r\n    var inputExportSet = project.InputExportSet;\r\n    if (!inputExportSet){\r\n      project.OnGetInputExportSetDone_Funcs.push(() => {\r\n        inputExportSet = project.InputExportSet;\r\n        addVersionFunc(inputExportSet);\r\n      })\r\n    }else{\r\n      addVersionFunc(inputExportSet);\r\n    }\r\n  }\r\n}","import { message } from 'antd';\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\nexport const AddPhase = (projectId, phaseId) => {\r\n  var apiData = {\r\n    projectId, phaseId\r\n  }\r\n  var url = `https://api.bimdev.vn/api/hbs`;\r\n\r\n  const apiFunc = () => api.post(`${url}/addphase`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      message.success(\"attach phase to settings successfully!\");\r\n    })\r\n}","export default class PhaseInput {\r\n  get ApiData(){\r\n    var projectId = this.Dict.Dict._id;\r\n    var name = this.Name;\r\n    var description = this.Description;\r\n\r\n    return {\r\n      projectId, name, description\r\n    }\r\n  }\r\n}","import { Phase_Dict } from \"./Phase_Dict\";\r\nimport * as phaseUtil from './PhaseUtil'\r\nimport * as inputUtil from './PhaseInputUtil'\r\n\r\nexport const get = (project) => {\r\n  var qI = new Phase_Dict();\r\n  qI.Dict = project;\r\n\r\n  phaseUtil.getByProject(project._id, (data) => {\r\n    qI.Items = data.map(x => phaseUtil.get(x, qI));\r\n    qI.GetItemsDone = true;\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetInput = (q) => {\r\n  return inputUtil.get(q);\r\n}","import PhaseInput from './PhaseInput';\r\n\r\nexport const get = (dict) => {\r\n  var qI = new PhaseInput();\r\n  qI.Dict = dict;\r\n  qI.Name = 'Version 1';\r\n  qI.Description = 'mô tả phiên bản';\r\n\r\n  return qI;\r\n}","import RebarMass_Dict from '../mass/rebar/RebarMass_Dict';\r\nimport * as phaseDictUtil from '../phase/Phase_DictUtil'\r\nimport * as util from './ProjectUtil'\r\nimport * as typicalLevelUtil from '../setting/typicallevel/TypicalLevelSettingUtil'\r\n\r\nexport default class Project {\r\n  phase_Dict\r\n  get Phase_Dict() {\r\n    if (!this.phase_Dict) {\r\n      this.phase_Dict = phaseDictUtil.get(this);\r\n    }\r\n    return this.phase_Dict;\r\n  }\r\n\r\n  rebarMass_Dict\r\n  get RebarMass_Dict() {\r\n    if (!this.rebarMass_Dict) {\r\n      this.rebarMass_Dict = util.GetRebarMass_Dict(this);\r\n    }\r\n    return this.rebarMass_Dict;\r\n  }\r\n\r\n  inputExportSet\r\n  get InputExportSet() {\r\n    if (!this.inputExportSet) {\r\n      util.GetInputExportSet_Async(this);\r\n    }\r\n    return this.inputExportSet;\r\n  }\r\n  set InputExportSet(v) {\r\n    this.inputExportSet = v;\r\n    this.GetInputExportSetDone = true;\r\n  }\r\n\r\n  OnGetInputExportSetDone_Funcs = []\r\n\r\n  getInputExportSetDone\r\n  get GetInputExportSetDone() {\r\n    return this.getInputExportSetDone;\r\n  }\r\n  set GetInputExportSetDone(v) {\r\n    this.getInputExportSetDone = v;\r\n    this.OnGetInputExportSetDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  level_Dict\r\n  get Level_Dict() {\r\n    if (!this.level_Dict) {\r\n      this.level_Dict = util.GetLevel_Dict(this);\r\n    }\r\n    return this.level_Dict;\r\n  }\r\n\r\n  OnGetTypicalLevelSetting_Funcs = []\r\n\r\n  set GetTypicalLevelSetting(v) {\r\n    this.OnGetTypicalLevelSetting_Funcs.forEach(x => x());\r\n  }\r\n\r\n  IsOnGetDb_Async\r\n\r\n  typicalLevelSetting\r\n  get TypicalLevelSetting() {\r\n    if (!this.typicalLevelSetting) {\r\n      if (!this.IsOnGetDb_Async) {\r\n        this.IsOnGetDb_Async = true;\r\n        typicalLevelUtil.GetFromDb_Async(this, null, \r\n          (resData, editData) => {\r\n          this.TypicalLevelSetting = resData;\r\n          this.TypicalLevelSetting_ForEdit = editData;\r\n          this.GetTypicalLevelSetting = true\r\n        })\r\n      }\r\n    }\r\n    return this.typicalLevelSetting;\r\n  }\r\n  set TypicalLevelSetting(v) {\r\n    this.typicalLevelSetting = v;\r\n  }\r\n\r\n  typicalLevelSetting_ForEdit\r\n  get TypicalLevelSetting_ForEdit() {\r\n    if (!this.typicalLevelSetting_ForEdit) {\r\n      this.typicalLevelSetting_ForEdit = this.TypicalLevelSetting;\r\n    }\r\n    return this.typicalLevelSetting_ForEdit;\r\n  } set TypicalLevelSetting_ForEdit(v) {\r\n    this.typicalLevelSetting_ForEdit = v;\r\n  }\r\n\r\n  url\r\n  get Url() {\r\n    if (!this.url) {\r\n      var isHash = true;\r\n      var obj = `${process.env.PUBLIC_URL}${isHash ? '/#' : ''}/project`;\r\n      obj = `${obj}/${this._id}`;\r\n\r\n      this.url = obj;\r\n    }\r\n    return this.url;\r\n  }\r\n}","import * as util from './ExportSetUtil'\r\n\r\nexport class ExportSet {\r\n  currentVersion\r\n  get CurrentVersion(){\r\n    if (!this.currentVersion){\r\n      util.GetCurrentVersion_Async(this);\r\n    }\r\n    return this.currentVersion;\r\n  }\r\n  set CurrentVersion(v){\r\n    this.currentVersion = v;\r\n    this.GetCurrentVersionDone = v;\r\n  }\r\n\r\n  OnGetCurrentVersionDone_Func =[]\r\n\r\n  set GetCurrentVersionDone(v){\r\n    this.OnGetCurrentVersionDone_Func.forEach(x => x());\r\n  }\r\n\r\n  AddVersion = () => {\r\n    util.AddVersion_Async(this);\r\n  }\r\n}","export class ExportSetVersion {\r\n  \r\n}","import * as api from  '../../../../util/apiUtil'\r\nimport { ExportSetVersion } from \"./ExportSetVersion\";\r\n\r\nexport const get = (data) => {\r\n  var qI = new ExportSetVersion();\r\n  qI._id = data._id;\r\n  return qI;\r\n}\r\n\r\nexport const getLastestByExportSet = (exportSetId, handle) => {\r\n  if (!exportSetId) return;\r\n  var url = `https://api.bimdev.vn/api/hbesv/last?exportSetId=${exportSetId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var item = data ? get(data) : data;\r\n      handle(item);\r\n    });\r\n}\r\n\r\nexport const add = (apiData, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbesv/add`;\r\n  api.post(url, apiData).then(response => response.data)\r\n    .then(data => {\r\n      var item = get(data);\r\n      handle(item);\r\n    });\r\n}","import { ExportSet } from \"./ExportSet\"\r\nimport * as api from  '../../../../util/apiUtil'\r\nimport * as versionUtil from './ExportSetVersionUtil'\r\n\r\nexport const get = (data) => {\r\n  var qI = new ExportSet();\r\n  qI._id = data._id;\r\n  qI.Name = data.name;\r\n  qI.Description = data.description;\r\n  qI.RetrieveFrom = data.retrieveFrom;\r\n  return qI;\r\n}\r\n\r\nexport const GetCurrentVersion_Async = (q) => {\r\n  var exportSetId = q._id;\r\n\r\n  versionUtil.getLastestByExportSet(exportSetId, (item) => {\r\n    if (!item) {\r\n      AddVersion_Async(q);\r\n    } else {\r\n      q.CurrentVersion = item;\r\n    }\r\n  })\r\n}\r\n\r\nexport const AddVersion_Async = (q) => {\r\n  var exportSetId = q._id;\r\n\r\n  var apiData = {\r\n    exportSetId\r\n  }\r\n\r\n  versionUtil.add(apiData, (addItem) => {\r\n    q.CurrentVersion = addItem;\r\n  })\r\n}\r\n\r\nexport const getByProject = (projectId, handle) => {\r\n  if (!projectId) return;\r\n  var url = `https://api.bimdev.vn/api/hbes/input?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var item = data ? get(data) : data;\r\n      handle(item);\r\n    });\r\n}\r\n\r\nexport const add = (apiData, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbes/add`;\r\n  api.post(url, apiData).then(response => response.data)\r\n    .then(data => {\r\n      var item = get(data);\r\n      handle(item);\r\n    });\r\n}","export class Level_Dict {\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n}","export class Level\r\n{\r\n  Name\r\n  Elevation\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport { Level } from \"./Level\"\r\n\r\nexport const get = (data, dict) => {\r\n  var qI = new Level();\r\n  qI.Name = data.name;\r\n  qI.Elevation = data.elevation;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (apiData, dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbl/list\";\r\n  api.post(url, apiData).then(response => response.data)\r\n    .then(data => {\r\n      if (!data) data = []\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport Project from './Project';\r\nimport * as rebarMassDictUtil from '../mass/rebar/RebarMass_DictUtil'\r\nimport * as exportSetUtil from '../exportset/ExportSetUtil'\r\nimport * as vrf from '../value/ValueRetrieveFrom'\r\nimport * as levelDictUtil from '../level/Level_DictUtil'\r\nimport * as levelTypicalUtil from '../setting/typicallevel/TypicalLevelSettingUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n\r\n  var qI = new Project();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Code = q.code;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbp/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getById = (_id, handle) => {\r\n  if (!_id) return undefined;\r\n  var url = `https://api.bimdev.vn/api/hbp/get?id=${_id}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var item = get(data);\r\n      if (handle) {\r\n        handle(item);\r\n      }\r\n    });\r\n}\r\n\r\n// Property\r\nexport const GetRebarMass_Dict = (q) => {\r\n  return rebarMassDictUtil.get(q);\r\n}\r\n\r\nexport const GetInputExportSet_Async = (q) => {\r\n  var projectId = q._id;\r\n\r\n  exportSetUtil.getByProject(projectId, (item) => {\r\n    if (!item) {\r\n      var apiData = {\r\n        projectId,\r\n        name: 'Dữ liệu khối lượng input',\r\n        description: 'mô tả dữ liệu',\r\n        retrieveFrom: vrf.input\r\n      }\r\n      exportSetUtil.add(apiData, (addItem) => {\r\n        q.InputExportSet = addItem;\r\n      })\r\n    } else {\r\n      q.InputExportSet = item;\r\n    }\r\n  })\r\n}\r\n\r\nexport const GetLevel_Dict = (q) => {\r\n  return levelDictUtil.get(q)\r\n}\r\n\r\nexport const GetTypicalLevelSetting = (q) => {\r\n  return levelTypicalUtil.GetTest(q);\r\n}","export const model = \"model\";\r\nexport const input = \"input\";","import { Level_Dict } from \"./Level_Dict\"\r\nimport * as itemUtil from './LevelUtil'\r\n\r\nexport const get = (project) => {\r\n  var qI = new Level_Dict();\r\n  qI.Project = project;\r\n\r\n  itemUtil.getAll({ projectId : project._id }, qI, (items) => {\r\n    qI.Items = items.sort((a,b) => a.Elevation - b.Elevation);\r\n    qI.GetItemsDone = true;\r\n  })\r\n\r\n  return qI;\r\n}","import * as itemUtil from './ProjectUtil'\r\n\r\nexport class Project_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport default class ElementFilterSetting extends Setting {\r\n  \r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './ElementFilterSettingDataUtil'\r\n\r\nexport default class ElementFilterSettingData {\r\n  CategoryFilter\r\n\r\n  IsHaveFamilyFilter\r\n\r\n  FamilyFilter\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","import { EntFilter } from '../../filter/EntFilter';\r\nimport * as filterUtil from '../../filter/EntFilterUtil'\r\nimport ElementFilterSettingData from './ElementFilterSettingData';\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as fct from '../../filter/FilterCategoryType'\r\n\r\nexport const get = (q) => {\r\n  var qI = new ElementFilterSettingData();\r\n  qI.CategoryFilter = filterUtil.get(q.categoryFilter);\r\n  return qI;\r\n}\r\n\r\nexport const getDefault = () => {\r\n  var qI = new ElementFilterSettingData();\r\n\r\n  var cateFilter = new EntFilter();\r\n  cateFilter.CategoryType = fct.category;\r\n  cateFilter.ValueType = fvt.bystring;\r\n  cateFilter.StringFilterType = sft.byequal;\r\n  cateFilter.Values = ['Floors'];\r\n  qI.CategoryFilter = cateFilter;\r\n\r\n  qI.IsHaveFamilyFilter = false;\r\n\r\n  var familyFilter = new EntFilter();\r\n  familyFilter.CategoryType = fct.family;\r\n  familyFilter.ValueType = fvt.bystring;\r\n  familyFilter.StringFilterType = sft.byequal;\r\n  familyFilter.Values = [];\r\n  qI.FamilyFilter = familyFilter;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    categoryFilter : q.CategoryFilter.ApiData,\r\n    familyFilter : q.IsHaveFamilyFilter ? \r\n      q.FamilyFilter.ApiData : undefined\r\n  }\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport ElementFilterSetting from \"./ElementFilterSetting\"\r\nimport * as dataUtil from './ElementFilterSettingDataUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new ElementFilterSetting();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.SettingType = q.settingType;\r\n  qI.Data = dataUtil.get(q.data);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbs/ef/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as util from './SettingInputUtil'\r\n\r\nexport default class SettingInput {\r\n  Name\r\n  Description\r\n  SettingType\r\n\r\n  data\r\n  get Data() {\r\n    if (!this.data) {\r\n      this.data = this.GetData();\r\n    }\r\n    return this.data;\r\n  }\r\n  set Data(v) {\r\n    this.data = v;\r\n  }\r\n\r\n  GetData = () => {\r\n    if (this.OnGetData) {\r\n      return this.OnGetData();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  editItem\r\n  get EditItem(){\r\n    return this.editItem;\r\n  }\r\n  set EditItem(v){\r\n    this.editItem = v;\r\n    if (!v){\r\n      this.EditItemId = undefined;\r\n    }\r\n    else{\r\n      this.EditItemId = v._id;\r\n    }\r\n  }\r\n\r\n\r\n  EditItemId\r\n\r\n  isNew = true;\r\n  get IsNew(){\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v){\r\n    this.isNew = v;\r\n    if (v){\r\n      this.EditItem = undefined;\r\n    }\r\n  }\r\n\r\n  urlPrefix\r\n  get UrlPrefix() {\r\n    if (!this.urlPrefix){\r\n      this.urlPrefix = util.GetUrlPrefix(this);\r\n    }\r\n    return this.urlPrefix;\r\n  }\r\n\r\n  AddDatabase = () => {\r\n    var _id = this.EditItemId;\r\n    var name = this.Name;\r\n    var description = this.Description;\r\n    var settingType = this.SettingType;\r\n    var data = this.Data.ApiData;\r\n    var prefix = this.UrlPrefix;\r\n\r\n    var apiData = {\r\n      _id, name, description, settingType, data\r\n    }\r\n    var url = `https://api.bimdev.vn/api/hbs/${prefix}`;\r\n\r\n    const apiFunc = () => _id ?\r\n      api.put(`${url}/edit`, apiData) : api.post(`${url}/add`, apiData);\r\n    \r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        this.AddDatabaseDone = true;\r\n        this.NewItem = this.GetEditItem(data, this.Dict);\r\n        this.Dict.Update();\r\n      })\r\n  }\r\n\r\n  set AddDatabaseDone(v) {\r\n    if (this.OnAddDatabaseDone){\r\n      this.OnAddDatabaseDone(v);\r\n    }\r\n  }\r\n}","import * as st from './SettingType'\r\n\r\nexport const GetUrlPrefix = (q) => {\r\n  var prefix = undefined\r\n  switch (q.SettingType) {\r\n    case st.elementfilter:\r\n      prefix = 'ef';\r\n      break;\r\n    case st.massexport:\r\n      prefix = 'me';\r\n      break;\r\n    case st.massgroup:\r\n      prefix = 'mg';\r\n      break;\r\n  }\r\n  return prefix;\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInput from \"../base/SettingInput\";\r\nimport * as elementFilterSettingUtil from './ElementFilterSettingUtil'\r\n\r\nexport default class ElementFilterSettingInput extends SettingInput {\r\n  GetEditItem = (data, dict) => {\r\n    return elementFilterSettingUtil.get(data, dict);\r\n  }\r\n}","import ElementFilterSettingInput from \"./ElementFilterSettingInput\";\r\nimport * as dataUtil from './ElementFilterSettingDataUtil'\r\nimport * as st from '../base/SettingType'\r\n\r\nexport const get = (dict) => {\r\n  var qI = new ElementFilterSettingInput();\r\n  qI.Dict = dict;\r\n  qI.Name = 'Bộ lọc cột';\r\n  qI.Description = 'mô tả bộ lọc';\r\n  qI.SettingType = st.elementfilter;\r\n\r\n  qI.OnGetData = () => {\r\n    return dataUtil.getDefault();\r\n  }\r\n\r\n  return qI;\r\n}","import * as itemUtil from './ElementFilterSettingUtil'\r\nimport * as inputUtil from './ElementFilterSettingInputUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class ElementFilterSetting_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  CurrentItem\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = this.GetInput();\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  GetInput(){\r\n    return inputUtil.get(this);\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n\r\n  Update = () => {\r\n    var input = this.Input;\r\n\r\n    if (!input.IsNew){\r\n      var item = input.EditItem;\r\n      var action = () => {\r\n        item.Name = input.Name;\r\n        item.Description = input.Description;\r\n        item.Data = input.Data;\r\n      }\r\n      genUtil.UpdateFromModel(item, action);\r\n    }\r\n    else{\r\n      this.Add(input.NewItem);\r\n    }\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './MassExportSettingDataUtil'\r\nimport * as valueSettingUtil from './exportSetting/MES_ValueSettingUtil'\r\nimport { reaction } from \"mobx\";\r\n\r\nexport default class MassExportSettingData {\r\n  elementFilterId\r\n\r\n  elementFilter\r\n  get ElementFilter(){\r\n    if (!this.elementFilter){\r\n      this.elementFilter = util.GetElementFilter(this);\r\n    }\r\n    return this.elementFilter;\r\n  }\r\n  set ElementFilter(v) {\r\n    this.elementFilter = v;\r\n    if (!v){\r\n      this.elementFilterId = undefined;\r\n    }\r\n    else{\r\n      this.elementFilterId = v._id;\r\n    }\r\n  }\r\n\r\n  valueSettings\r\n  get ValueSettings(){\r\n    if (!this.valueSettings){\r\n      this.valueSettings = util.GetDefaultValueSettings(this);\r\n    }\r\n    return this.valueSettings;\r\n  }\r\n  set ValueSettings(v){\r\n    this.valueSettings = v;\r\n  }\r\n\r\n  AddNewValueSetting = () => {\r\n    var modelList = this.ValueSettings;\r\n    var item = valueSettingUtil.GetDefault(this);\r\n    modelList.push(item);\r\n\r\n    return item;\r\n  }\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","import { PMData } from '../../../single/model/PMData';\r\nimport MassExportSettingData from './MassExportSettingData';\r\nimport * as valueSettingUtil from './exportSetting/MES_ValueSettingUtil'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassExportSettingData();\r\n  qI.elementFilterId = q.elementFilterId;\r\n  qI.ValueSettings = q.exportSettings.map(x => valueSettingUtil.get(x, qI));\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = () => {\r\n  var qI = new MassExportSettingData();\r\n  return qI;\r\n}\r\n\r\nexport const GetElementFilter = (q) => {\r\n  var elemFilterId = q.elementFilterId;\r\n  if (!elemFilterId) return undefined;\r\n\r\n  var list = pmData().ElementFilterSetting_Dict.Items;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x._id === elemFilterId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetDefaultValueSettings = (q) => {\r\n  return [ valueSettingUtil.GetDefault(q) ]\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    elementFilterId : q.elementFilterId,\r\n    exportSettings : q.ValueSettings.map(x => x.ApiData)\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport default class MassExportSetting extends Setting {\r\n  \r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as dataUtil from './MassExportSettingDataUtil'\r\nimport MassExportSetting from './MassExportSetting';\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassExportSetting();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.SettingType = q.settingType;\r\n  qI.Data = dataUtil.get(q.data);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbs/me/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInput from \"../base/SettingInput\";\r\nimport * as massExportSettingUtil from './MassExportSettingUtil'\r\n\r\nexport default class MassExportSettingInput extends SettingInput {\r\n  GetEditItem = (data, dict) => {\r\n    return massExportSettingUtil.get(data, dict);\r\n  }\r\n}","import * as dataUtil from './MassExportSettingDataUtil'\r\nimport MassExportSettingInput from \"./MassExportSettingInput\";\r\nimport * as st from '../base/SettingType'\r\n\r\nexport const get = (dict) => {\r\n  var qI = new MassExportSettingInput();\r\n  qI.Dict = dict;\r\n  qI.Name = 'Bêtông sàn';\r\n  qI.Description = 'mô tả thiết lập';\r\n  qI.SettingType = st.massexport;\r\n\r\n  qI.OnGetData = () => {\r\n    return dataUtil.GetDefault();\r\n  }\r\n\r\n  return qI;\r\n}","import * as itemUtil from './MassExportSettingUtil'\r\nimport * as inputUtil from './MassExportSettingInputUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class MassExportSetting_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  CurrentItem\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = this.GetInput();\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  GetInput(){\r\n    return inputUtil.get(this);\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n\r\n  Update = () => {\r\n    var input = this.Input;\r\n\r\n    if (!input.IsNew){\r\n      var item = input.EditItem;\r\n      var action = () => {\r\n        item.Name = input.Name;\r\n        item.Description = input.Description;\r\n        item.Data = input.Data;\r\n      }\r\n      genUtil.UpdateFromModel(item, action);\r\n    }\r\n    else{\r\n      this.Add(input.NewItem);\r\n    }\r\n  }\r\n}","import * as itemUtil from './MassGroupSettingUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class MassGroupSetting_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  CurrentItem\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n}","\r\nexport default class VCS_Item{\r\n  Color\r\n  Filter\r\n}","import * as util from './VersionCompareSettingUtil'\r\n\r\nexport default class VersionCompareSetting{\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems();\r\n    }\r\n    return this.items;\r\n  }\r\n}","import { EntFilter } from '../../filter/EntFilter'\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as nft from '../../filter/NumberFilterType'\r\nimport VCS_Item from \"./VCS_Item\";\r\n\r\nexport const GetItems = (q) => {\r\n  var list = [];\r\n\r\n  // < 80\r\n  var item = new VCS_Item();\r\n  item.Color = '#1956c9';\r\n\r\n  var filter = new EntFilter();\r\n  filter.ValueType = fvt.bynumber;\r\n  filter.NumberFilterType = nft.bysmaller;\r\n  filter.Values = [ 0.80 ];\r\n  item.Filter = filter;\r\n\r\n  list.push(item);\r\n\r\n  // 80 -85\r\n  item = new VCS_Item();\r\n  item.Color = '#3f79d6';\r\n\r\n  filter = new EntFilter();\r\n  filter.ValueType = fvt.bynumber;\r\n  filter.NumberFilterType = nft.bybetween;\r\n  filter.IsEqualLeft = true;\r\n  filter.Values = [ 0.80, 0.85 ];\r\n  item.Filter = filter;\r\n\r\n  list.push(item);\r\n\r\n   // 85 -90\r\n   item = new VCS_Item();\r\n   item.Color = '#6f9fe9';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.85, 0.90 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 90 -95\r\n   item = new VCS_Item();\r\n   item.Color = '#a5c2f2';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.9, 0.95 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 95 -100\r\n   item = new VCS_Item();\r\n   item.Color = '#c9d9f6';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.95, 1 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 100 -105\r\n   item = new VCS_Item();\r\n   item.Color = '#f3cccc';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualRight = true;\r\n   filter.Values = [ 1, 1.05 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 105 -110\r\n   item = new VCS_Item();\r\n   item.Color = '#e9999a';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualRight = true;\r\n   filter.Values = [ 1.05, 1.10 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n    // 110 -115\r\n    item = new VCS_Item();\r\n    item.Color = '#de6568';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybetween;\r\n    filter.IsEqualRight = true;\r\n    filter.Values = [ 1.10, 1.15 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    // 110 -115\r\n    item = new VCS_Item();\r\n    item.Color = '#c90010';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybetween;\r\n    filter.IsEqualRight = true;\r\n    filter.Values = [ 1.15, 1.20 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    // 115 -120\r\n    item = new VCS_Item();\r\n    item.Color = '#980009';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybigger;\r\n    filter.Values = [ 1.20 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    return list;\r\n}","\r\nexport class WorkItemExportSetting_Dict {\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n}","export class TrackingItem{\r\n  Values = []\r\n\r\n  Count = 0\r\n}","import * as genUtil from '../../../../util/generalUtil'\r\nimport { TrackingItem } from './TrackingItem';\r\n\r\nexport class Tracking{\r\n  Items = []\r\n\r\n  AddItem = (values) => {\r\n    var list = this.Items;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => genUtil.IsSameValues(x.Values, values));\r\n    if (index === -1){\r\n      item = new TrackingItem();\r\n      item.Values = values;\r\n      list.push(item);\r\n    } else {\r\n      item = list[index];\r\n    }\r\n\r\n    item.Count ++;\r\n    return item;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport * as workpackageUtil from './WorkpackageUtil'\r\n\r\nexport class WorkpackageInput {\r\n  Code\r\n  // = \"300\"\r\n  Name\r\n  // = \"Lắp đặt cốp thép\"\r\n  Description = 'mô tả công tác'\r\n  // = \"Mô tả quá trình lắp cốp thép\"\r\n\r\n  isNew = true;\r\n  get IsNew(){\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v){\r\n    this.isNew = v;\r\n    if (v){\r\n      this.Workpackage = undefined;\r\n    }\r\n  }\r\n\r\n  workpackage\r\n  get Workpackage() {\r\n    return this.workpackage;\r\n  }\r\n  set Workpackage(v){\r\n    this.workpackage = v;\r\n    if (!v){\r\n      this.WorkpackageId = undefined;\r\n    }\r\n    else{\r\n      this.WorkpackageId = v._id;\r\n    }\r\n  }\r\n\r\n  WorkpackageId\r\n\r\n  supItem\r\n  get SupItem(){\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v){\r\n    this.supItem = v;\r\n    if (!v){\r\n      this.SupId = undefined;\r\n    }\r\n    else{\r\n      this.SupId = v._id;\r\n    }\r\n  }\r\n\r\n  SupId\r\n\r\n  set AddDatabaseDone(v) {\r\n    if (this.OnAddDatabaseDone){\r\n      this.OnAddDatabaseDone(v);\r\n    }\r\n  }\r\n\r\n  AddDatabase = () => {\r\n    var _id = this.WorkpackageId;\r\n    var code = this.Code;\r\n    var name = this.Name;\r\n    var description = this.Description;\r\n    var supId = this.SupId;\r\n\r\n    var apiData = {\r\n      _id, name, code, description, supId\r\n    };\r\n\r\n    var url = \"https://api.bimdev.vn/api/hbwp\";\r\n\r\n    const apiFunc =  () =>  _id ? \r\n      api.put(`${url}/edit`, apiData) : api.post(`${url}/add`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        this.AddDatabaseDone = true;\r\n        this.NewWorkpackage = workpackageUtil.get(data, this.Dict);\r\n        this.Dict.Update();\r\n      })\r\n  }\r\n\r\n  UpdateWorkpackage\r\n}","import { WorkpackageInput } from './WorkpackageInput';\r\nimport * as workpackageUtil from './WorkpackageUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport class Workpackage_Dict {\r\n  constructor() {\r\n    workpackageUtil.getAll(this, (wps) => {\r\n      this.Workpackages = wps;\r\n      this.GetWorkpackagesDone = true;\r\n    });\r\n  }\r\n\r\n  Workpackages\r\n\r\n  set GetWorkpackagesDone(v) {\r\n    if (this.OnGetWorkpackagesDone) {\r\n      this.OnGetWorkpackagesDone(v);\r\n    }\r\n  }\r\n\r\n  CurrentWorkpackage\r\n\r\n  workpackageInput\r\n  get WorkpackageInput() {\r\n    if (!this.workpackageInput){\r\n      var obj = this.workpackageInput = new WorkpackageInput();\r\n      obj.Dict = this;\r\n    }\r\n    return this.workpackageInput;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Workpackages.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n\r\n  Update = () => {\r\n    var input = this.WorkpackageInput;\r\n    var wp = input.Workpackage;\r\n\r\n    if (!input.IsNew){\r\n      var action = () => { \r\n        wp.Code = input.Code;\r\n        wp.Name = input.Name;\r\n        wp.Description = input.Description;\r\n        wp.FullName = wp.GetFullName();\r\n      };\r\n      genUtil.UpdateFromModel(wp, action);\r\n    }\r\n    else{\r\n      this.Add(input.NewWorkpackage);\r\n    }\r\n\r\n    this.IsDataChanged = true;\r\n  }\r\n\r\n  IsDataChanged\r\n\r\n  RefreshData = () => {\r\n    this.Workpackages.forEach(x => {\r\n      x.SubItems = undefined;\r\n      x.UpperList = undefined;\r\n      x.LowerList = undefined;\r\n      x.Rank = undefined\r\n    })\r\n\r\n    this.IsDataChanged = false;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport * as workPackageUtil from '../../entity/workpackage/WorkpackageUtil'\r\nimport * as fvt from '../../entity/filter/FilterValueType'\r\nimport * as sft from '../../entity/filter/StringFilterType'\r\nimport * as vrt from '../../entity/setting/massExport/exportSetting/MES_ValueRetrieveType'\r\nimport * as mpn from '../../entity/mass/MassPropertyName'\r\nimport * as mt from '../../entity/mass/MassType'\r\nimport * as mif from '../../entity/mass/item/MassItemField'\r\n\r\nexport const GetFilterValueTypes = (data) => {\r\n  return fvt.GetAll();\r\n}\r\n\r\nexport const GetStringFilterTypes = (data) => {\r\n  return sft.GetAll();\r\n}\r\n\r\nexport const GetValueRetrieveTypes = (data) => {\r\n  return vrt.GetAll();\r\n}\r\n\r\nexport const GetCategoryNames = (data) => {\r\n  return ['Floors', 'Structural Framing', 'Walls', 'Structural Column']\r\n}\r\n\r\nexport const GetParameterNames = (data) => {\r\n  return ['Volume', 'HB_Formwork_Total']\r\n}\r\n\r\nexport const GetMassPropertyNames = (data) => {\r\n  return mpn.GetAll();\r\n}\r\n\r\nexport const GetMassItemFields = (data) => {\r\n  return mif.GetAll();\r\n}\r\n\r\nexport const GetMassTypes = (data) => {\r\n  return mt.GetAll();\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport MassResultComp from '../../entity/mass/result/MassResultComp';\r\nimport { Project_Dict } from '../../entity/project/Project_Dict';\r\nimport { ElementFilterSetting_Dict } from '../../entity/setting/elementFilter/ElementFilterSetting_Dict';\r\nimport { MassExportSetting_Dict } from '../../entity/setting/massExport/MassExportSetting_Dict';\r\nimport { MassGroupSetting_Dict } from '../../entity/setting/massGroup/MassGroupSetting_Dict';\r\nimport VersionCompareSetting from '../../entity/setting/versionCompare/VersionCompareSetting';\r\nimport { WorkItemExportSetting_Dict } from '../../entity/setting/workitemexport/WorkItemExportSetting_Dict';\r\nimport { Tracking } from '../../entity/tracking/Tracking';\r\nimport { Workpackage_Dict } from '../../entity/workpackage/Workpackage_Dict';\r\nimport { CategoryData } from './CategoryData';\r\nimport * as util from './PMDataUtil'\r\n\r\nexport class PMData {\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new PMData();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  get categoryData(){\r\n    return CategoryData.Instance;\r\n  }\r\n\r\n  workpackage_Dict\r\n  get Workpackage_Dict() {\r\n    if (!this.workpackage_Dict){\r\n      this.workpackage_Dict = new Workpackage_Dict();\r\n    }\r\n    return this.workpackage_Dict;\r\n  }\r\n\r\n  elementFilterSetting_Dict\r\n  get ElementFilterSetting_Dict() {\r\n    if (!this.elementFilterSetting_Dict){\r\n      this.elementFilterSetting_Dict = new ElementFilterSetting_Dict();\r\n    }\r\n    return this.elementFilterSetting_Dict;\r\n  }\r\n\r\n  massExportSetting_Dict\r\n  get MassExportSetting_Dict() {\r\n    if (!this.massExportSetting_Dict){\r\n      this.massExportSetting_Dict = new MassExportSetting_Dict();\r\n    }\r\n    return this.massExportSetting_Dict;\r\n  }\r\n\r\n  massGroupSetting_Dict\r\n  get MassGroupSetting_Dict() {\r\n    if (!this.massGroupSetting_Dict){\r\n      this.massGroupSetting_Dict = new MassGroupSetting_Dict();\r\n    }\r\n    return this.massGroupSetting_Dict;\r\n  }\r\n\r\n  project_Dict\r\n  get Project_Dict() {\r\n    if (!this.project_Dict){\r\n      this.project_Dict = new Project_Dict();\r\n    }\r\n    return this.project_Dict;\r\n  }\r\n\r\n  massResultComp\r\n  get MassResultComp(){\r\n    if (!this.massResultComp){\r\n      this.massResultComp = new MassResultComp();\r\n    }\r\n    return this.massResultComp;\r\n  }\r\n  set MassResultComp(v){\r\n    this.massResultComp = v;\r\n  }\r\n\r\n  filterValueTypes;\r\n  get FilterValueTypes() {\r\n    if (!this.filterValueTypes){\r\n      this.filterValueTypes = util.GetFilterValueTypes();\r\n    }\r\n    return this.filterValueTypes;\r\n  }\r\n\r\n  stringFilterTypes;\r\n  get StringFilterTypes() {\r\n    if (!this.stringFilterTypes){\r\n      this.stringFilterTypes = util.GetStringFilterTypes();\r\n    }\r\n    return this.stringFilterTypes;\r\n  }\r\n\r\n  valueRetrieveTypes\r\n  get ValueRetrieveTypes() {\r\n    if (!this.valueRetrieveTypes){\r\n      this.valueRetrieveTypes = util.GetValueRetrieveTypes();\r\n    }\r\n    return this.valueRetrieveTypes;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = this.categoryData.CategoryNames;\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n\r\n  parameterNames;\r\n  get ParameterNames(){\r\n    if (!this.parameterNames){\r\n      this.parameterNames = util.GetParameterNames();\r\n    }\r\n    return this.parameterNames;\r\n  }\r\n\r\n  massPropertyNames;\r\n  get MassPropertyNames(){\r\n    if (!this.massPropertyNames){\r\n      this.massPropertyNames = util.GetMassPropertyNames();\r\n    }\r\n    return this.massPropertyNames;\r\n  }\r\n\r\n  massItemFields\r\n  get MassItemFields(){\r\n    if (!this.massItemFields){\r\n      this.massItemFields = util.GetMassItemFields();\r\n    }\r\n    return this.massItemFields;\r\n  }\r\n\r\n  massTypes;\r\n  get MassTypes(){\r\n    if (!this.massTypes){\r\n      this.massTypes = util.GetMassTypes();\r\n    }\r\n    return this.massTypes;\r\n  }\r\n\r\n  versionCompareSetting\r\n  get VersionCompareSetting(){\r\n    if (!this.versionCompareSetting){\r\n      this.versionCompareSetting = new VersionCompareSetting();\r\n    }\r\n    return this.versionCompareSetting;\r\n  }\r\n\r\n  workItemExportSetting_Dict\r\n  get WorkItemExportSetting_Dict(){\r\n    if (!this.workItemExportSetting_Dict){\r\n      this.workItemExportSetting_Dict = new WorkItemExportSetting_Dict();\r\n    }\r\n    return this.workItemExportSetting_Dict;\r\n  }\r\n\r\n  DebugPoints = []\r\n\r\n  tracking\r\n  get Tracking(){\r\n    if (!this.tracking){\r\n      this.tracking = new Tracking();\r\n    }\r\n    return this.tracking;\r\n  }\r\n\r\n  IsDebug = false\r\n}","import { message } from 'antd';\r\nimport * as api from '../../../../util/apiUtil'\r\nimport * as util from './WorkpackageUtil'\r\n\r\nexport class Workpackage {\r\n  get Index() {\r\n    return this.Dict.Workpackages.indexOf(this);\r\n  }\r\n\r\n  _id\r\n\r\n  SupId\r\n\r\n  supItem\r\n  get SupItem(){\r\n    if (!this.supItem){\r\n      this.supItem = util.GetSupItem(this);\r\n    }\r\n    return this.supItem;\r\n  }\r\n\r\n  code\r\n  get Code() {\r\n    return this.code;\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    if (this.OnCodeChanged) {\r\n      this.OnCodeChanged(v);\r\n    }\r\n  }\r\n\r\n  name\r\n  get Name() {\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (this.OnNameChanged) {\r\n      this.OnNameChanged(v);\r\n    }\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (this.OnDescriptionChanged) {\r\n      this.OnDescriptionChanged(v);\r\n    }\r\n  }\r\n\r\n  fullName\r\n  get FullName() {\r\n    if (!this.fullName) {\r\n      this.fullName = this.GetFullName();\r\n    }\r\n    return this.fullName;\r\n  }\r\n  set FullName(v) {\r\n    this.fullName = v;\r\n    if (this.OnFullNameChanged) {\r\n      this.OnFullNameChanged(v);\r\n    }\r\n  }\r\n\r\n  subItems\r\n  get SubItems(){\r\n    if (!this.subItems){\r\n      this.subItems = util.GetSubItems(this);\r\n    }\r\n    return this.subItems;\r\n  }\r\n  set SubItems(v){\r\n    this.subItems = v;\r\n  }\r\n\r\n  upperList\r\n  get UpperList(){\r\n    if (!this.upperList){\r\n      this.upperList = util.GetUpperList(this);\r\n    }\r\n    return this.upperList;\r\n  }\r\n  set UpperList(v){\r\n    this.upperList = v;\r\n  }\r\n\r\n  lowerList\r\n  get LowerList(){\r\n    if (!this.lowerList){\r\n      this.lowerList = util.GetLowerList(this);\r\n    }\r\n    return this.lowerList;\r\n  }\r\n  set LowerList(v){\r\n    this.lowerList = v;\r\n  }\r\n\r\n  rank\r\n  get Rank() {\r\n    if (!this.rank){\r\n      this.rank = util.GetRank(this);\r\n    }\r\n    return this.rank;\r\n  }\r\n  set Rank(v){\r\n    this.rank = v;\r\n  }\r\n\r\n  get LowerIds() {\r\n    return this.LowerList.map(x => x._id);\r\n  }\r\n\r\n  GetFullName = () => {\r\n    return `${this.Code} - ${this.Name}`;\r\n  }\r\n\r\n  Delete = () => {\r\n    var { _id } = this;\r\n    var apiData = { _id };\r\n\r\n    var url = \"https://api.bimdev.vn/api/hbwp/delete\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => message.success('Delete workpackage successfully'));\r\n\r\n    var dict = this.Dict;\r\n    dict.Workpackages.splice(this.Index, 1);\r\n    if (this.OnDelete) {\r\n      this.OnDelete();\r\n    }\r\n\r\n    dict.IsDataChanged = true;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport { PMData } from '../../single/model/PMData';\r\nimport { Workpackage } from \"./Workpackage\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (dbItem, dict) => {\r\n  var { _id, name, code, description, supId } = dbItem;\r\n\r\n  var qI = new Workpackage();\r\n  qI._id = _id;\r\n  qI.Name = name;\r\n  qI.Code = code;\r\n  qI.Description = description;\r\n  qI.SupId = supId;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSupItem = (q) => {\r\n  var supId = q.SupId;\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  var index = list.findIndex(x => x._id === supId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetSubItems = (q) => {\r\n  var id = q._id;\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  return list.filter(x => x !== q && x.SupId === id);\r\n}\r\n\r\nexport const GetUpperList = (q) => {\r\n  var supItem = q.SupItem;\r\n  if (!supItem){\r\n    return [q];\r\n  }else{\r\n    var list = [...supItem.UpperList];\r\n    list.push(q);\r\n    return list;\r\n  }\r\n}\r\n\r\nexport const GetLowerList = (q) => {\r\n  var list = [q];\r\n  q.SubItems.forEach((x, i) => {\r\n    list.push.apply(list, x.LowerList);\r\n  })\r\n  return list;\r\n}\r\n\r\nexport const GetRank = (q) => {\r\n  var supItem = q.SupItem;\r\n  return supItem ? supItem.Rank +1 : 0;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbwp/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var wps = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(wps);\r\n      }\r\n    });\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as workpackageUtil from './WorkpackageUtil'\r\nimport * as util from './Workpackage_DictVMUtil'\r\n\r\nexport class Workpackage_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      workpackageVMs: observable,\r\n    })\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  Workpackage_Dict\r\n\r\n  get M2VM() {\r\n    return this.Workpackage_Dict.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.Workpackage_Dict.M2VM = v;\r\n  }\r\n\r\n  workpackageVMs = undefined\r\n  get WorkpackageVMs() {\r\n    if (!this.workpackageVMs){\r\n      this.workpackageVMs = util.GetWorkpackageVMs(this);\r\n    }\r\n    return this.workpackageVMs;\r\n  }\r\n\r\n  currentWorkpackageVM\r\n  set CurrentWorkpackageVM(v) {\r\n    this.Workpackage_Dict = v;\r\n    this.Workpackage_Dict.CurrentWorkpackage = v.Workpackage;\r\n\r\n    this.WorkpackageInputVM.WorkpackageVM = v;\r\n  }\r\n\r\n  workpackageInputMV\r\n  get WorkpackageInputVM() {\r\n    if (!this.workpackageInputVM){\r\n      this.workpackageInputVM = util.GetWorkpackageInputVM(this);\r\n    }\r\n    return this.workpackageInputVM;\r\n  }\r\n\r\n  Add = (itemView) => {\r\n    this.WorkpackageVMs.push(itemView);\r\n    if (this.OnAdd){\r\n      this.OnAdd(itemView);\r\n    }\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../input/InputView\";\r\nimport { Workpackage_DictVM } from \"./Workpackage_DictVM\";\r\nimport CheckboxView from \"../../../checkbox/CheckboxView\";\r\nimport SelectView from \"../../../select/SelectView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Workpackage_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Workpackage_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var wps = data.WorkpackageVMs;\r\n    var wp = data.CurrentWorkpackageVM = wps[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var wps = data.WorkpackageVMs;\r\n\r\n    var elems = wps ? wps.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var inputVM = data.WorkpackageInputVM;\r\n    var commandVM = inputVM.CommandVM;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Công tác</b>\r\n        </Divider>\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search công tác\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <InputView store={inputVM.CodeVM} />\r\n          <InputView store={inputVM.NameVM} />\r\n          <InputView store={inputVM.DescriptionVM} />\r\n          <SelectView store={inputVM.SupItemSelectVM} />\r\n          <div>\r\n            <CheckboxView store={inputVM.IsNewVM} />\r\n            <Button style={{ margin: 10 }}\r\n              onClick={inputVM.AddDatabase}>{commandVM.Content}</Button>\r\n            {inputVM.DeleteView}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(Workpackage_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { EntFilterVM } from \"./EntFilterVM\";\r\nimport SelectView from \"../../../select/SelectView\";\r\nimport { MultiSelectVM } from \"../../../select/MultiSelectVM\";\r\nimport MultiSelectView from \"../../../select/MultiSelectView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass EntFilterView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntFilterVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  test = () => {\r\n    console.log(\"test button\");\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.ItemVMs;\r\n    var wp = data.CurrentItemVM = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <SelectView store={data.ValueTypeSelectVM} />\r\n        </div>\r\n        <div>\r\n          <SelectView store={data.StringFilterTypeSelectVM} />\r\n        </div>\r\n        <div>\r\n          <MultiSelectView store={data.ValuesSelectVM} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EntFilterView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport ElementFilterSettingDataVM from \"./ElementFilterSettingDataVM\";\r\nimport EntFilterView from \"../../filter/EntFilterView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass ElementFilterSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ElementFilterSettingDataVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var { IsHaveFamilyFilter } = data;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          Thiết lập lọc Category\r\n        </Divider>\r\n        <EntFilterView store={data.CategoryFilterVM} />\r\n\r\n        <Divider orientation=\"left\" plain>\r\n          {/* Thiết lập lọc Family */}\r\n          <CheckboxView store={data.IsHaveFamilyFilterVM}/>\r\n        </Divider>\r\n        {IsHaveFamilyFilter? <EntFilterView store={data.FamilyFilterVM} /> : \"\"}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ElementFilterSettingDataView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { ElementFilterSetting_DictVM } from \"./ElementFilterSetting_DictVM\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport ElementFilterSettingDataView from \"./ElementFilterSettingDataView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass ElementFilterSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ElementFilterSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  test = () => {\r\n    console.log(\"test button\");\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.Items;\r\n    var wp = data.CurrentItem = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    \r\n    var items = data.Items;\r\n    var elems = items ? items.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var input = data.Input;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Bộ lọc đối tượng</b>\r\n        </Divider>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search bộ lọc\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{marginTop:20}}>\r\n          <InputView store={input.NameVM} />\r\n          <InputView store={input.DescriptionVM} />\r\n\r\n          <ElementFilterSettingDataView store={input.DataVM}/>\r\n\r\n          <CheckboxView store={input.IsNewVM} />\r\n          <Button style={{margin:10}}\r\n            onClick={input.AddDatabase}>{input.CommandVM.Content}</Button>\r\n          {input.DeleteView}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ElementFilterSetting_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../../input/InputView\";\r\nimport EntFilterView from \"../../../filter/EntFilterView\";\r\nimport CheckboxView from \"../../../../../checkbox/CheckboxView\";\r\nimport MES_ValueSettingVM from \"./MES_ValueSettingVM\";\r\nimport SelectView from \"../../../../../select/SelectView\";\r\nimport * as floatItemVMUtil from \"../../../../../float/FloatItemVMUtil\";\r\nimport FloatItemView from \"../../../../../float/FloatItemView\";\r\nimport { CloseCircleFilled } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MES_ValueSettingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MES_ValueSettingVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var floatItemStore = floatItemVMUtil.get('top right')\r\n    floatItemStore.wrapper = <Button size='small' type='primary' \r\n      onClick={data.Delete}>x</Button>\r\n\r\n    return (\r\n      <>\r\n        <div style={{ padding: '10px 35px 10px 10px', margin: '8px auto', border: 'solid 0.5px', borderRadius: '10px', position:'relative' }}>\r\n          <FloatItemView store={floatItemStore} />\r\n          <SelectView store={data.RetrieveTypeSelectVM} />\r\n          <SelectView store={data.MassTypeSelectVM} />\r\n          <EntFilterView store={data.ValueFilterVM} />\r\n          <SelectView store={data.WorkpackageSelectVM} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MES_ValueSettingView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { PlusCircleFilled } from \"@ant-design/icons\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport EntFilterView from \"../../filter/EntFilterView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport MassExportSettingDataVM from \"./MassExportSettingDataVM\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport MES_ValueSettingView from \"./exportSetting/MES_ValueSettingView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassExportSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassExportSettingDataVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var valueSettingElems = data.ValueSettingVMs.map((x, i) => {\r\n      return <MES_ValueSettingView key={i} store={x} />\r\n    })\r\n\r\n    return (\r\n      <>\r\n        <SelectView store={data.ElementFilterSelectVM} />\r\n        <Divider orientation=\"left\" plain>\r\n          Thiết lập giá trị\r\n          <Button type='primary' size='small' onClick={data.AddNewValueSettingVM}\r\n            style={{marginLeft:15}}>+</Button>\r\n        </Divider>\r\n        {valueSettingElems}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassExportSettingDataView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport { MassExportSetting_DictVM } from \"./MassExportSetting_DictVM\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport MassExportSettingDataView from \"./MassExportSettingDataView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassExportSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassExportSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.Items;\r\n    var wp = data.CurrentItem = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var items = data.Items;\r\n    var elems = items ? items.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var input = data.Input;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thiết lập xuất khối lượng</b>\r\n        </Divider>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search thiết lập\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <InputView store={input.NameVM} />\r\n          <InputView store={input.DescriptionVM} />\r\n\r\n          <MassExportSettingDataView store={input.DataVM} />\r\n\r\n          <div>\r\n            <CheckboxView store={input.IsNewVM} />\r\n            <Button style={{ margin: 10 }}\r\n              onClick={input.AddDatabase}>{input.CommandVM.Content}</Button>\r\n            {input.DeleteView}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassExportSetting_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Popover, Row, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassCell from \"./MassCell\";\r\nimport './MassTable.css'\r\nimport Icon, { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassCellView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassCell();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {/* Đối tượng ẩn để cập nhập màu sắc Cell */}\r\n        <span className='d-none'>\r\n          {data.ContentVM.Content}\r\n        </span>\r\n\r\n        <td style={data.TDStyle}>\r\n          <div className='masscell__div'>\r\n            <div className='masscell__value'>\r\n              {data.IsHaveWarning ?\r\n                <Popover trigger='hover'\r\n                  content={<div>\r\n                    {data.TLS_LevelGroup_Descriptions ?\r\n                      data.TLS_LevelGroup_Descriptions.map(x => {\r\n                        return <span key={x}>{x}</span>\r\n                      })\r\n                      : ''}\r\n                  </div>}>\r\n                  <InfoCircleOutlined className='masscell__warningicon' />\r\n                </Popover>\r\n                : ''}\r\n              <a style={data.AStyle}\r\n                onClick={data.ShowDetail}>\r\n                {data.ContentVM.Content}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassCellView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select, Space } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport MultiSelectView from \"../../../../select/MultiSelectView\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassRow from \"./MassRow\";\r\nimport MassCellView from \"./MassCellView\";\r\nimport { DownCircleOutlined, EnterOutlined, UpCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassRowView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassRow();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var table = data.Dict;\r\n    var columns = table.Columns;\r\n\r\n    var subElems = data.IsShowSub ? data.SubItems.map((x, i) => {\r\n      return <MassRowView store={x} key={x.id} />\r\n    }) : ''\r\n\r\n    var toggleButton = data.IsHaveSub ?\r\n      <Button size='small' style={{ marginRight: 5, minWidth: 25 }} type='primary'\r\n        onClick={data.ToggleSub}>\r\n        <TextView store={data.ToggleButtonContentVM} />\r\n      </Button>\r\n      : <div style={{ padding: '0 15.5px' }} />;\r\n\r\n    return (\r\n      <>\r\n        <tr>\r\n          <th scope=\"row\" >\r\n            <div style={data.Style}>\r\n              {toggleButton}\r\n              {data.Title}\r\n\r\n              {data.HoverToolElement}\r\n              {data.ModalElement}\r\n            </div>\r\n          </th>\r\n          {columns.map((y, j) => {\r\n            var cell = table.GetCell(y, data);\r\n            return <MassCellView key={cell.id} store={cell} />\r\n          })}\r\n        </tr>\r\n        {subElems}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassRowView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport MassTable from \"./MassTable\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassRowView from \"./MassRowView\";\r\nimport './MassTable.css'\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassTable();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var columns = data.Columns;\r\n    var rows = data.MainRows;\r\n\r\n    var thElems = columns ? columns.map((x, i) => {\r\n      return <th scope=\"col\" key={x.id} className='text-center masscell_th'>{x.Name}</th>\r\n    }) : '';\r\n\r\n    var tbodyElems = rows ? rows.map((x, i) => {\r\n      return <MassRowView key={x.id} store={x} />\r\n    }) : '';\r\n\r\n\r\n    return (\r\n      <>\r\n        {data.IsValidTable ?\r\n          <>\r\n            <h4 className=\"text-center\">\r\n              BẢNG TỔNG HỢP KHỐI LƯỢNG\r\n            <Button type='primary' size='small' style={{ marginLeft: 15 }}\r\n                disabled={data.IsOnSaveMassGroup}\r\n                onClick={data.SaveMassGroup}>s</Button>\r\n            </h4>\r\n\r\n            {data.IsOnSaveMassGroup ?\r\n              <Row style={{padding:7}}>\r\n                <Col span={4}/>\r\n                <Col span={16} style={{display:'flex'}}>\r\n                  <InputView store={data.MassGroupNameVM} />\r\n                  <Button type='primary' size='small'\r\n                    style={{marginLeft:10}}\r\n                    onClick={data.MassGroupInputOK}>ok</Button>\r\n                  <Button type='default' size='small'\r\n                    onClick={data.MassGroupInputCancel}>cancel</Button>\r\n                </Col>\r\n              </Row> : ''}\r\n\r\n            < table className=\"table table-bordered table-sm masstable\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\" className='masstitle__th'>\r\n                    <Button onClick={data.AddMainRow} type='primary' size='small'\r\n                      style={{backgroundColor:'#52c41a', border:'none'}}>+</Button>\r\n                  </th>\r\n                  {thElems}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tbodyElems}\r\n              </tbody>\r\n            </table>\r\n          </> : ''\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassTableView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select, Spin } from \"antd\";\r\nimport MassResultCompVM from \"./MassResultCompVM\";\r\nimport MultiSelectView from '../../../../select/MultiSelectView'\r\nimport MassTableView from \"../table/MassTableView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport TextView from \"../../../../text/TextView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassResultCompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassResultCompVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thông tin khối lượng</b>\r\n        </Divider>\r\n        {data.IsShowProjectSelect ?\r\n          <MultiSelectView store={data.ProjectSelectVM} /> : ''}\r\n\r\n        {data.CanHavePhase ?\r\n          <>\r\n            <CheckboxView store={data.IsShowPhaseSelectVM} />\r\n            {data.IsHavePhase ?\r\n              <MultiSelectView store={data.PhaseSelectVM} /> : ''}\r\n          </>\r\n          : ''\r\n        }\r\n\r\n        <div style={{ marginTop: 8 }} >\r\n          <SelectView store={data.MassGroupSettingSelectVM} />\r\n        </div>\r\n\r\n        <Button style={{ marginTop: 8 }} onClick={data.GetMassData}\r\n          size='middle' type='primary'>GET DATA</Button>\r\n        <div style={{ marginTop: 15 }}>\r\n          {data.IsDataPending ?\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <div>\r\n                <Spin />\r\n                <TextView store={data.LoadingSpinTipVM} />\r\n              </div>\r\n            </div> : <MassTableView store={data.MassItem_Dict.MassTable} />}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassResultCompView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport TableVM from \"./TableVM\";\r\nimport * as rs from './RenderState'\r\n\r\nconst { Option } = Select;\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TableVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var columns = data.Columns;\r\n\r\n    var rows = data.Rows;\r\n    var tableElem = '';\r\n    if (columns && rows) {\r\n      var theadElem = <thead className=\"thead-light\">\r\n        <tr>\r\n          {columns.map(x => {\r\n            return <th scope=\"col\" key={x.Key}>{x.Title}</th>\r\n          })}\r\n        </tr>\r\n      </thead>\r\n\r\n      var tbodyElem = <tbody>\r\n        {rows.map(x => {\r\n          return <tr key={x.Key}>\r\n            {x.Cells.map(y => {\r\n              return <td key={y.Key}>{y.Render()}</td>\r\n            })}\r\n          </tr>\r\n        })}\r\n      </tbody>\r\n\r\n      tableElem = <table className=\"table table-sm\">\r\n        {theadElem}{tbodyElem}\r\n      </table>\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {tableElem}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TableView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport TableView from \"../../../../table/TableView\";\r\nimport { WorkItemExportSetting_DictVM } from \"./WorkItemExportSetting_DictVM\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass WorkItemExportSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new WorkItemExportSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thiết lập xuất hạng mục</b>\r\n        </Divider>\r\n        \r\n        <TableView store={data.TableVM}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(WorkItemExportSetting_DictView)","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport Workpackage_DictView from '../../entity/workpackage/Workpackage_DictView';\r\nimport ElementFilterSetting_DictView from '../../entity/setting/elementFilter/ElementFilterSetting_DictView';\r\nimport MassExportSetting_DictView from '../../entity/setting/massExport/MassExportSetting_DictView';\r\n\r\nimport { PMDataVM } from './PMDataVM';\r\nimport MassResultCompView from '../../entity/mass/result/MassResultCompView';\r\nimport WorkItemExportSetting_DictView from '../../entity/setting/workitemexport/WorkItemExportSetting_DictView';\r\n\r\nclass PMDataView extends Component {\r\n  get pmDataVM() { return PMDataVM.Instance };\r\n\r\n  render() {\r\n    var data = this.pmDataVM;\r\n\r\n    return (\r\n      <>\r\n        <Row gutter={15} style={{ padding: 15 }}>\r\n          <Col span={3} />\r\n          <Col span={5}>\r\n            <Workpackage_DictView store={data.Workpackage_DictVM} />\r\n\r\n            <ElementFilterSetting_DictView store={data.ElementFilterSetting_DictVM} />\r\n\r\n            <MassExportSetting_DictView store={data.MassExportSetting_DictVM} />\r\n          </Col>\r\n          <Col span={13}>\r\n            <MassResultCompView store={data.MassResultCompVM} />\r\n          </Col>\r\n          <Col span={3} />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(PMDataView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport PMDataView from '../main/single/form/PMDataView';\r\nimport { Col, Row } from 'antd';\r\n\r\nclass TestView extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PMDataView />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TestView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class CellVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueString : observable\r\n    })\r\n  }\r\n\r\n  value\r\n  get Value(){\r\n    return this.value\r\n  }\r\n  set Value(v){\r\n    this.value = v;\r\n    this.ValueString = this.GetValueString();\r\n  }\r\n\r\n  valueString = undefined\r\n  get ValueString (){\r\n    if (!this.valueString){\r\n      this.valueString = this.GetValueString();\r\n    }\r\n    return this.valueString;\r\n  }\r\n  set ValueString(v){\r\n    this.valueString = v;\r\n  }\r\n\r\n  GetValueString = () => {\r\n    return this.OnGetValueString();\r\n  }\r\n}","export default class ColumnVM {\r\n  Cells = []\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class RowVM {\r\n  Cells = []\r\n}","import * as mt from '../MassType'\r\nimport * as mif from '../item/MassItemField'\r\nimport ColumnVM from '../../../../table/ColumnVM';\r\n\r\nexport const GetFields = (q) => {\r\n  var list = q.Items;\r\n  if (!list || list.length === 0) return [];\r\n\r\n  var massType = list[0].MassType;\r\n  switch (massType) {\r\n    case mt.rebar:\r\n      return [mif.partition, mif.rebarType, mif.Value, mif.Unit];\r\n    case mt.concrete:\r\n    case mt.formwork:\r\n      return [mif.level, mif.elementName, mif.Value, mif.Unit];\r\n    default:\r\n      return [mif.Value, mif.Unit]\r\n  }\r\n  return [];\r\n}\r\n\r\nexport const GetValueTitle = (q) => {\r\n  var list = q.Items;\r\n  if (!list || list.length === 0) return [];\r\n\r\n  var massType = list[0].MassType;\r\n  switch (massType) {\r\n    default:\r\n      return massType;\r\n  }\r\n}\r\n\r\nexport const GetColumns = (q) => {\r\n  return q.Fields.map(x => {\r\n    var col = new ColumnVM();\r\n    col.Name = x;\r\n    col.Title = x === mif.Value ? GetValueTitle(q) \r\n      : x;\r\n\r\n    return col;\r\n  })\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport CellVM from '../../../../table/CellVM';\r\nimport ColumnVM from '../../../../table/ColumnVM';\r\nimport RowVM from '../../../../table/RowVM';\r\nimport * as mif from '../item/MassItemField'\r\nimport * as util from './MassDetailTableUtil'\r\n\r\nexport default class MassDetailTable {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      rows: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    if (v && v.length !== 0) {\r\n      this.IsValidTable = true;\r\n    }\r\n    else {\r\n      this.IsValidTable = false;\r\n    }\r\n    this.Fields = util.GetFields(this);\r\n    this.Rows = this.GetRows();\r\n  }\r\n\r\n  IsValidTable = false\r\n\r\n  fields = undefined\r\n  get Fields() {\r\n    if (!this.fields) {\r\n      this.fields = util.GetFields(this);\r\n    }\r\n    return this.fields;\r\n  }\r\n  set Fields(v){\r\n    this.fields = v;\r\n    this.Columns = util.GetColumns(this);\r\n  }\r\n\r\n  columns = undefined\r\n  get Columns(){\r\n    if (!this.columns){\r\n      this.columns = util.GetColumns(this);\r\n    }\r\n    return this.columns;\r\n  }\r\n  set Columns(v){\r\n    this.columns = v;\r\n  }\r\n\r\n  rows = undefined\r\n  get Rows(){\r\n    if (!this.rows){\r\n      this.rows = this.GetRows();\r\n    }\r\n    return this.rows;\r\n  }\r\n  set Rows(v){\r\n    this.rows = v;\r\n  }\r\n\r\n  GetRows = () => {\r\n    var items = this.Items;\r\n    if (!items) return [];\r\n    var fields = this.Fields;\r\n\r\n    return items.map(x => {\r\n      var row = new RowVM();\r\n      row.Cells = fields.map(y => {\r\n        var cell = new CellVM();\r\n        cell.OnGetValueString = () => {\r\n          var value = cell.Value;\r\n          if(!isNaN(value)){\r\n           return parseFloat(value).toFixed(2);\r\n          }\r\n          return value;\r\n        }\r\n\r\n        const setValueFunc = () => cell.Value = mif.GetValueString(x.GetValue(y), y);\r\n        if (mif.GetIdentifyFields().includes(y) && !x.Element){\r\n          x.OnGetElementDone_Funcs.push(() => {\r\n            setValueFunc();\r\n          });\r\n        }else{\r\n          setValueFunc();\r\n        }\r\n\r\n        var className = 'text-center';\r\n        switch(y){\r\n          case mif.Value:\r\n            className='text-right';\r\n            break;\r\n        }\r\n        cell.className = className;\r\n\r\n        return cell;\r\n      })\r\n      return row;\r\n    })\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as massItemUtil from '../item/MassItemUtil'\r\nimport MassDetailTable from './MassDetailTable';\r\n\r\nexport class MassDetailVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id(){\r\n    return this._id;\r\n  }\r\n  set id(v){\r\n    this._id = v;\r\n    massItemUtil.getByViewDetail(v, (items) => {\r\n      this.Items = items;\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    return this.items;\r\n  } \r\n  set Items(v){\r\n    this.items = v;\r\n    this.DetailTable.Items = v;\r\n  }\r\n\r\n  detailTable\r\n  get DetailTable() {\r\n    if (!this.detailTable){\r\n      this.detailTable = new MassDetailTable();\r\n    }\r\n    return this.detailTable;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport MassDetailTable from './MassDetailTable';\r\n\r\nclass MassDetailTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassDetailTable();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var colElems = data.Columns.map((x,i) => {\r\n      return <th scope=\"col\" key={i} className='text-center'>{x.Title}</th>\r\n    })\r\n\r\n    var rowElems = data.Rows.map((x, i) => {\r\n      var cellElems = x.Cells.map((y, j) => {\r\n        return <td key={j} className={y.className}>{y.ValueString}</td>\r\n      })\r\n      return <tr key={i}>\r\n        {cellElems}\r\n      </tr>\r\n    })\r\n\r\n    return (\r\n      <>\r\n        <table className=\"table table-bordered table-sm\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n             {colElems}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rowElems}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(MassDetailTableView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MassDetailVM } from './MassDetailVM';\r\nimport MassDetailTableView from './MassDetailTableView';\r\n\r\nclass MassDetailView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassDetailVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const id = this.props.match.params.id;\r\n    data.id = id;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Row gutter={10} style={{ padding: 15 }}>\r\n          <Col span={8}>\r\n            <h4 className='text-center'>BẢNG CHI TIẾT KHỐI LƯỢNG</h4>\r\n            <div>\r\n              <MassDetailTableView store={data.DetailTable} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(MassDetailView));\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as projectUtil from '../ProjectUtil'\r\nimport * as projectVMUtil from '../ProjectVMUtil'\r\nimport * as util from './ProjectCompVMUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n\r\nexport default class ProjectCompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      projectVM: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    return this._id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n    projectUtil.getById(v, (item) => {\r\n      this.ProjectVM = projectVMUtil.get(item);\r\n    })\r\n  }\r\n\r\n  projectVM = undefined\r\n  get ProjectVM() {\r\n    return this.projectVM;\r\n  }\r\n  set ProjectVM(v) {\r\n    this.projectVM = v;\r\n\r\n    var list = [v];\r\n    pmDataVM().Project_DictVM.Items = list;\r\n    pmData().Phase_Dict = v.ModelItem.Phase_Dict;\r\n\r\n    var massResComp = this.MassResultCompVM;\r\n    massResComp.ProjectVMStorageList = list;\r\n    massResComp.ProjectSelectVM.InitialItems = list;\r\n\r\n    var setItemsFuncs = () => massResComp.PhaseVMStorageList = phase_DictVM.Items;\r\n\r\n    var phase_DictVM = v.Phase_DictVM;\r\n    if (phase_DictVM.Items) {\r\n      setItemsFuncs();\r\n    } else {\r\n      phase_DictVM.OnGetItemsDone_Funcs.push(() => {\r\n        setItemsFuncs();\r\n      })\r\n    }\r\n  }\r\n\r\n  massResultCompVM\r\n  get MassResultCompVM() {\r\n    if (!this.massResultCompVM) {\r\n      var obj = this.massResultCompVM = util.GetMassResultCompVM(this);\r\n      pmDataVM().MassResultCompVM = obj;\r\n    }\r\n    return this.massResultCompVM;\r\n  }\r\n}","import MassResultComp from '../../mass/result/MassResultComp'\r\nimport * as massResutlCompVMUtil from '../../mass/result/MassResultCompVMUtil'\r\n\r\nexport const GetMassResultCompVM = (q) => {\r\n  var obj = massResutlCompVMUtil.get(new MassResultComp(), false);\r\n  obj.IsShowProjectSelect = false;\r\n  obj.CanHavePhase = true;\r\n  return obj;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Phase_DictVM } from \"./Phase_DictVM\";\r\nimport InputView from \"../../../input/InputView\";\r\nimport * as stateType from '../state/StateType'\r\n\r\nconst { Option } = Select;\r\n\r\nclass Phase_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Phase_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var input = data.Input;\r\n    var state = data.State;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Phiên bản khối lượng</b>\r\n        </Divider>\r\n        <div>\r\n          <Button type='primary' size='middle' onClick={data.AddVersion}\r\n            disabled={state === stateType.addversion}>\r\n            <PlusCircleOutlined /> LƯU KẾT QUẢ HIỆN TẠI\r\n          </Button>\r\n\r\n          {state === stateType.addversion ? <div className=\"mt-3\">\r\n            <InputView store={input.NameVM} />\r\n            <InputView store={input.DescriptionVM} />\r\n            <div className=\"mt-2\">\r\n              <Button type='primary' size='small' onClick={data.OK}>OK</Button>\r\n              <Button type='default' size='small' onClick={data.Cancel}>Cancel</Button>\r\n            </div>\r\n          </div> : ''}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(Phase_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport RebarMass_Dict from \"./RebarMass_Dict\";\r\nimport TableView from \"../../../../table/TableView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass RebarMass_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new RebarMass_Dict();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Dữ liệu thép</b>\r\n        </Divider>\r\n        \r\n        <TableView store={data.TableVM}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(RebarMass_DictView)","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport { Level_Dict } from './Level_Dict';\r\n\r\nclass Level_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Level_Dict();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Level_DictView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row } from 'antd';\r\nimport { LevelGroupVM } from './LevelGroupVM';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport './LevelGroup.css'\r\n\r\nclass LevelGroupView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new LevelGroupVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='levelgroup__container'>\r\n          <MultiSelectView store={data.LevelSelectVM} />\r\n          <Button size='small' type='text' \r\n            className='levelgroup__deletebutton'\r\n            onClick={data.Delete}>\r\n            <DeleteFilled className='levelgroup__deleteicon' />\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(LevelGroupView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover, Switch } from 'antd';\r\nimport { TLS_FilterValueVM } from './TLS_FilterValueVM';\r\nimport NewInputView from '../../../../../input/NewInputView';\r\nimport './TLS_FilterValue.css'\r\n\r\nclass TLS_FilterValueView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TLS_FilterValueVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n\r\n        <div className='tls_filter__value'>\r\n          {/* Input */}\r\n          <Popover\r\n            trigger={data.PopoverState.Content}\r\n            content={\r\n              <Switch unCheckedChildren='inp' checkedChildren='sel'\r\n                checked={data.SwitchChecked_Funcs()} onChange={data.ToggleInputType} />\r\n            }>\r\n            <span>\r\n              {data.InputElement}\r\n            </span>\r\n          </Popover>\r\n          \r\n          {/* Delete */}\r\n          <Button type='primary' size='small' onClick={data.Delete}\r\n            className='tls_filter__value__delete'>x</Button>\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TLS_FilterValueView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport { TLS_FilterVM } from './TLS_FilterVM';\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport './TLS_Filter.css'\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport TLS_FilterValueView from './TLS_FilterValueView';\r\n\r\nclass TLS_FilterView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TLS_FilterVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='tls_filter__div'>\r\n          {/* Field Select */}\r\n          <SelectView store={data.FieldSelectVM} />\r\n\r\n          <div className='tls_filter__valuediv__wrapper'>\r\n            {/* Add Value */}\r\n            <Button type='primary' size='small' onClick={data.AddValue}\r\n              className='tls_filter__valuediv__addbutton'>+</Button>\r\n\r\n            {/* Value List */}\r\n            <div className='tls_filter__valuediv'>\r\n              {data.Values.map(x => {\r\n                return <TLS_FilterValueView key={x.id} store={x} />\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <Button size='small' type='text'\r\n            className='tls_filter__deletebutton'\r\n            onClick={data.Delete}>\r\n            <DeleteFilled className='tls_filter__deleteicon' />\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TLS_FilterView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row, Tabs } from 'antd';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport './TLS_PageItem.css'\r\nimport { TLS_PageItemVM } from './TLS_PageItemVM';\r\nimport TLS_FilterView from '../filter/TLS_FilterView';\r\nimport LevelGroupView from '../levelGroup/LevelGroupView';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass TLS_PageItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TLS_PageItemVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='tls__pageitem__wrapper'>\r\n          {/* Filters */}\r\n          <div className='typicallevel__list'>\r\n            <div className='typicallevel__list__1'>\r\n              {/* Add Filter */}\r\n              <Button type='primary' size='small' onClick={data.AddFilter}\r\n                className='typicallevel__addbutton'>+</Button>\r\n              <span><b>Thiết lập bộ lọc</b></span>\r\n            </div>\r\n\r\n            {/* Filter List */}\r\n            {data.Filters.map(x => {\r\n              return <TLS_FilterView key={x.id} store={x} />\r\n            })}\r\n          </div>\r\n\r\n          {/* LevelGroup */}\r\n          <div className='typicallevel__list'>\r\n            <div className='typicallevel__list__1'>\r\n              {/* Add Level */}\r\n              <Button type='primary' size='small' onClick={data.AddLevelGroup}\r\n                className='typicallevel__addbutton'>+</Button>\r\n              <span><b>Thiết lập level</b></span>\r\n            </div>\r\n\r\n            {/* Level List */}\r\n            {data.LevelGroups.map(x => {\r\n              return <LevelGroupView key={x.id} store={x} />\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TLS_PageItemView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row, Tabs } from 'antd';\r\nimport { TypicalLevelSettingDataVM } from './TypicalLevelSettingDataVM';\r\nimport LevelGroupView from './levelGroup/LevelGroupView';\r\nimport './TypicalLevelSettingData.css'\r\nimport './pageItem/TLS_PageItem.css'\r\nimport TLS_FilterView from './filter/TLS_FilterView';\r\nimport TLS_PageItemView from './pageItem/TLS_PageItemView';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass TypicalLevelSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TypicalLevelSettingDataVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onKeyDown = (v) => {\r\n    //console.log(v);\r\n    v.stopPropagation();\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className='tls__tabs__div'>\r\n            {/* Add Tab */}\r\n            {!data.IsHaveAddCommandTab ?\r\n            <Button type='primary' size='small' onClick={data.AddPageItem}\r\n              className='tls__tabs__add__outside'>+</Button>\r\n              : ''}\r\n\r\n            {/* Tabs */}\r\n            <Tabs type='card' className='tls__tabs'\r\n              onChange={data.ChangePageKey}\r\n              activeKey={data.CurrentPageKey}\r\n              onKeyDown={this.onKeyDown}>\r\n              {data.AllTabs.map(x => {\r\n                return <TabPane tab={x.TitleElement} key={x.id}>\r\n                  <TLS_PageItemView store={x} />\r\n                </TabPane>\r\n              })}\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TypicalLevelSettingDataView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row } from 'antd';\r\nimport { TypicalLevelSettingVM } from './TypicalLevelSettingVM';\r\nimport TypicalLevelSettingDataView from './TypicalLevelSettingDataView';\r\nimport NewInputView from '../../../../input/NewInputView';\r\nimport './TypicalLevelSetting.css'\r\nimport { SaveFilled } from '@ant-design/icons';\r\n\r\nclass TypicalLevelSettingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TypicalLevelSettingVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain className='tls__info'>\r\n          <b>Thiết lập tầng điển hình</b>\r\n          <Button type='text' size='small' className='tls__save__button'\r\n            onClick={data.Save}>\r\n            <SaveFilled className='tls__save'/>\r\n          </Button>\r\n        </Divider>\r\n\r\n        {/* Data */}\r\n        <TypicalLevelSettingDataView store={data.DataVM} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TypicalLevelSettingView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ProjectCompVM from './ProjectCompVM';\r\nimport Phase_DictView from '../../phase/Phase_DictView';\r\nimport MassResultCompView from '../../mass/result/MassResultCompView';\r\nimport RebarMass_DictView from '../../mass/rebar/RebarMass_DictView';\r\nimport Level_DictView from '../../level/Level_DictView';\r\nimport TypicalLevelSettingView from '../../setting/typicallevel/TypicalLevelSettingView';\r\n\r\nclass ProjectCompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ProjectCompVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const id = this.props.match.params.id;\r\n    data.id = id;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var projectVM = data.ProjectVM;\r\n\r\n    return (\r\n      <>\r\n        <div style={{ padding: 15 }}>\r\n          <Row gutter={10}>\r\n            <Col span={5}>\r\n            </Col>\r\n            <Col span={14}>\r\n              {projectVM ? <>\r\n                <h4 className='text-center'>Dự án {projectVM.Name}</h4>\r\n                <Phase_DictView store={projectVM.Phase_DictVM} />\r\n\r\n                <MassResultCompView store={data.MassResultCompVM} />\r\n\r\n                <RebarMass_DictView store={projectVM.RebarMass_Dict} />\r\n\r\n                {projectVM.TypicalLevelSetting_ForEdit ?\r\n                <TypicalLevelSettingView store={projectVM.TypicalLevelSetting_ForEdit} />\r\n                : '' }\r\n              </> : ''}\r\n            </Col>\r\n            <Col span={5}>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(ProjectCompView));\r\n","import './App.css';\r\nimport \"antd/dist/antd.css\";\r\nimport { Component } from 'react';\r\n\r\nimport TestView from './model/view/TestView';\r\n//import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport MassDetailView from './model/main/entity/mass/detail/MassDetailView';\r\nimport ProjectCompView from './model/main/entity/project/comp/ProjectCompView';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={TestView} />\r\n          <Route exact path=\"/massdetail/:id\" component={MassDetailView} />\r\n          <Route path=\"/project/:id\" component={ProjectCompView} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
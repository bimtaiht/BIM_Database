{"version":3,"sources":["model/text/TextState.js","model/text/TextVM.js","model/text/TextVMUtil.js","model/input/InputView.js","util/apiUtil.js","model/main/entity/mass/MassType.js","model/main/entity/mass/item/MassItemField.js","util/generalUtil.js","model/main/entity/mass/table/MassColumn.js","model/input/NewInputView.js","model/text/TextRenderState.js","model/text/TextRenderItem.js","model/text/TextRenderItemUtil.js","model/text/TextRender_Dict.js","model/text/EditableTextVM.js","model/main/single/model/CategoryData.js","model/main/single/model/CategoryDataUtil.js","model/main/entity/filter/FilterCategoryType.js","model/main/entity/filter/FilterValueType.js","model/main/entity/filter/StringFilterType.js","model/main/entity/filter/NumberFilterType.js","model/main/entity/filter/EntFilterUtil.js","model/main/entity/filter/EntFilter.js","model/main/entity/mass/table/rowgroup/MGI_I_CreateType.js","model/main/entity/mass/table/rowgroup/MGI_ItemUtil.js","model/main/entity/mass/table/rowgroup/MGI_Item.js","model/main/entity/mass/item/MassItem.js","model/main/entity/mass/item/phaseValue/MIPh_Item.js","model/main/entity/mass/item/phaseValue/MIPh_ItemUtil.js","model/main/entity/mass/item/MassItemUtil.js","model/main/entity/mass/table/rowgroup/MassGroupItem.js","model/main/entity/mass/table/rowgroup/MassGroupComponent.js","model/main/entity/mass/table/rowgroup/MassGroupComponentUtil.js","model/main/entity/mass/table/rowgroup/MassGroupItemUtil.js","model/select/MultiSelectVMUtil.js","model/select/MultiSelectVM.js","model/select/MultiSelectView.js","model/hover/EntHoverVM.js","model/hover/EntHoverView.js","model/select/SelectVMUtil.js","model/select/SelectVM.js","model/float/FloatItemVM.js","model/float/FloatItemVMUtil.js","model/float/FloatItemView.js","model/select/SelectView.js","model/main/entity/mass/table/location/RRLF_LocationType.js","model/main/entity/mass/table/location/ReplaceRowLocationFactory.js","model/main/entity/mass/table/location/ReplaceRowLocationFactoryUtil.js","model/main/entity/mass/table/MassRow_Field_InputType.js","model/select/twocol/TwoCol_SelectVM.js","model/select/twocol/TwoCol_SelectVMUtil.js","model/select/twocol/TwoCol_SelectView.js","model/main/entity/mass/table/tool/MassRow_ToolElement.js","model/main/entity/mass/table/tool/MassRow_ToolElementUtil.js","model/main/entity/mass/table/tool/MassRow_ToolElementView.js","model/main/entity/mass/table/MassRow.js","model/text/EditableTextVMUtil.js","model/text/TextView.js","model/main/entity/mass/table/MassCell.js","model/main/entity/mass/table/value/MassCell_Value.js","model/main/entity/mass/table/MassCellUtil.js","model/main/entity/mass/table/MassRowUtil.js","model/main/entity/mass/table/MassTableUtil.js","model/main/entity/setting/base/SettingType.js","model/main/entity/setting/base/Setting.js","model/main/entity/setting/massGroup/MassGroupSettingData.js","model/main/entity/mass/MassPropertyName.js","model/main/entity/setting/massGroup/MassGroupSettingDataUtil.js","model/main/entity/setting/massGroup/MassGroupSetting.js","model/main/entity/setting/massGroup/MassGroupSettingUtil.js","model/main/entity/workpackage/WorkpackageVM.js","model/main/entity/workpackage/WorkpackageVMUtil.js","model/checkbox/CheckboxVM.js","model/checkbox/CheckboxVMUtil.js","model/main/entity/workpackage/WorkpackageInputVM.js","model/main/entity/workpackage/WorkpackageInputVMUtil.js","model/main/entity/workpackage/Workpackage_DictVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSetting_DictVM.js","model/main/entity/setting/base/SettingVM.js","model/main/entity/setting/elementFilter/ElementFilterSettingVM.js","model/main/entity/filter/EntFilterVM.js","model/main/entity/filter/EntFilterVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataVM.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingVMUtil.js","model/main/entity/setting/base/SettingVMUtil.js","model/main/entity/setting/base/SettingInputVM.js","model/main/entity/setting/elementFilter/ElementFilterSettingInputVM.js","model/main/entity/setting/elementFilter/ElementFilterSetting_DictVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingInputVMUtil.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingVM.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingVMUtil.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSetting.js","model/main/entity/setting/massExport/exportSetting/MES_ValueRetrieveType.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingUtil.js","model/main/entity/setting/massExport/MassExportSettingDataVM.js","model/main/entity/setting/massExport/MassExportSettingDataVMUtil.js","model/main/entity/setting/massExport/MassExportSettingVM.js","model/main/entity/setting/massExport/MassExportSettingVMUtil.js","model/main/entity/setting/massExport/MassExportSettingInputVM.js","model/main/entity/setting/massExport/MassExportSetting_DictVM.js","model/main/entity/setting/massExport/MassExportSetting_DictVMUtil.js","model/main/entity/setting/massExport/MassExportSettingInputVMUtil.js","model/main/entity/setting/massGroup/MassGroupSetting_DictVM.js","model/main/entity/setting/massGroup/MassGroupSetting_DictVMUtil.js","model/main/entity/phase/PhaseVM.js","model/main/entity/phase/PhaseVMUtil.js","model/main/entity/state/StateType.js","model/main/entity/phase/Phase_DictVM.js","model/main/entity/phase/PhaseInputVM.js","model/main/entity/phase/Phase_DictVMUtil.js","model/main/entity/phase/PhaseInputVMUtil.js","model/main/entity/project/ProjectVM.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemStateType.js","model/checkbox/CheckboxView.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupVM.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupVMUtil.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValue_InputType.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValueVM.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValueVMUtil.js","model/main/entity/setting/typicallevel/filter/TLS_FilterVM.js","model/main/entity/setting/typicallevel/filter/TLS_FilterVMUtil.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemVM.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemVMUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataVM.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataVMUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSettingVM.js","model/main/entity/setting/typicallevel/TypicalLevelSettingVMUtil.js","model/main/entity/project/ProjectVMUtil.js","model/main/entity/project/Project_DictVM.js","model/main/entity/project/Project_DictVMUtil.js","model/main/entity/mass/result/MassResultCompVM.js","model/main/entity/mass/result/MassResultCompVMUtil.js","model/table/RenderState.js","model/table/RenderItem.js","model/table/RenderItemUtil.js","model/table/Render_Dict.js","model/table/TitleRenderItem.js","model/table/TitleRenderItemUtil.js","model/table/TitleRender_Dict.js","model/table/TableColumn.js","model/table/TableColumnUtil.js","model/table/TableRow.js","model/table/TableCell.js","model/table/TableCellUtil.js","model/table/TableRowUtil.js","model/table/TableVM.js","model/table/TableVMUtil.js","model/main/entity/setting/workitemexport/WorkItemExportDataVM.js","model/main/entity/setting/workitemexport/WorkItemExportSettingVM.js","model/main/entity/setting/workitemexport/WorkItemExportSettingVMUtil.js","model/main/entity/setting/workitemexport/WorkItemExportDataVMUtil.js","model/main/entity/setting/workitemexport/WorkItemExportSetting.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_DictVM.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_DictVMUtil.js","model/main/single/form/PMDataVMUtil.js","model/main/entity/project/ProjectViewType.js","model/main/single/form/PMDataVM.js","model/main/entity/setting/massGroup/field/MGS_FieldVM.js","model/main/entity/setting/massGroup/field/MGS_FieldVMUtil.js","model/main/entity/setting/massGroup/MassGroupSettingDataVM.js","model/main/entity/setting/massGroup/MassGroupSettingDataVMUtil.js","model/main/entity/setting/massGroup/MassGroupSettingVM.js","model/main/entity/setting/massGroup/MassGroupSettingVMUtil.js","model/export/csv/CSVExport.js","model/export/excel/ExcelExport.js","model/main/entity/mass/table/export/MT_Cell.js","model/main/entity/mass/table/export/MT_CellUtil.js","model/main/entity/mass/table/export/MT_Data_Row.js","model/main/entity/mass/table/export/MT_Cell_ValueType.js","model/main/entity/mass/table/export/MT_Data_RowUtil.js","model/main/entity/mass/table/export/MT_Data_Worksheet.js","model/main/entity/mass/table/export/MT_Data_WorksheetUtil.js","model/main/entity/mass/table/export/MT_RawData_Worksheet.js","model/main/entity/mass/table/export/MT_RawData_WorksheetUtil.js","model/main/entity/mass/table/export/MT_Workbook.js","model/main/entity/mass/table/export/MT_WorkbookUtil.js","model/main/entity/mass/table/MassGroupInput_StateType.js","model/main/entity/mass/table/MassTable.js","model/main/entity/mass/table/MassColumnUtil.js","model/export/excel/ExcelExportUtil.js","model/main/entity/mass/item/MassItem_Dict.js","model/main/entity/mass/item/MassItem_DictUtil.js","model/main/entity/mass/result/MassResultComp.js","model/main/entity/mass/result/MassResultCompUtil.js","model/main/entity/mass/rebar/RebarMass_DictUtil.js","model/main/entity/value/ValueUnit.js","model/main/entity/mass/rebar/RebarMass_Dict.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroup.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupUtil.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValue.js","model/main/entity/setting/typicallevel/filter/TLS_Filter.js","model/main/entity/setting/typicallevel/filter/TLS_FilterUtil.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItem.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSettingData.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSetting.js","model/main/entity/setting/typicallevel/TypicalLevelSettingUtil.js","model/main/entity/phase/Phase.js","model/main/entity/phase/PhaseUtil.js","model/main/entity/phase/Phase_Dict.js","model/main/entity/setting/base/SettingUtil.js","model/main/entity/phase/PhaseInput.js","model/main/entity/phase/Phase_DictUtil.js","model/main/entity/phase/PhaseInputUtil.js","model/main/entity/project/Project.js","model/main/entity/exportset/ExportSet.js","model/main/entity/exportset/ExportSetVersion.js","model/main/entity/exportset/ExportSetVersionUtil.js","model/main/entity/exportset/ExportSetUtil.js","model/main/entity/level/Level_Dict.js","model/main/entity/level/Level.js","model/main/entity/level/LevelUtil.js","model/main/entity/project/ProjectUtil.js","model/main/entity/value/ValueRetrieveFrom.js","model/main/entity/level/Level_DictUtil.js","model/main/entity/project/Project_Dict.js","model/main/entity/setting/elementFilter/ElementFilterSetting.js","model/main/entity/setting/elementFilter/ElementFilterSettingData.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingUtil.js","model/main/entity/setting/base/SettingInput.js","model/main/entity/setting/base/SettingInputUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingInput.js","model/main/entity/setting/elementFilter/ElementFilterSettingInputUtil.js","model/main/entity/setting/elementFilter/ElementFilterSetting_Dict.js","model/main/entity/setting/massExport/MassExportSettingData.js","model/main/entity/setting/massExport/MassExportSettingDataUtil.js","model/main/entity/setting/massExport/MassExportSetting.js","model/main/entity/setting/massExport/MassExportSettingUtil.js","model/main/entity/setting/massExport/MassExportSettingInput.js","model/main/entity/setting/massExport/MassExportSettingInputUtil.js","model/main/entity/setting/massExport/MassExportSetting_Dict.js","model/main/entity/setting/massGroup/MassGroupSetting_Dict.js","model/main/entity/setting/versionCompare/VCS_Item.js","model/main/entity/setting/versionCompare/VersionCompareSetting.js","model/main/entity/setting/versionCompare/VersionCompareSettingUtil.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_Dict.js","model/main/entity/tracking/TrackingItem.js","model/main/entity/tracking/Tracking.js","model/main/entity/workpackage/WorkpackageInput.js","model/main/entity/workpackage/Workpackage_Dict.js","model/main/single/model/PMDataUtil.js","model/main/single/model/PMData.js","model/main/entity/workpackage/Workpackage.js","model/main/entity/workpackage/WorkpackageUtil.js","model/main/entity/workpackage/Workpackage_DictVM.js","model/main/entity/workpackage/Workpackage_DictView.js","model/main/entity/filter/EntFilterView.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataView.js","model/main/entity/setting/elementFilter/ElementFilterSetting_DictView.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingView.js","model/main/entity/setting/massExport/MassExportSettingDataView.js","model/main/entity/setting/massExport/MassExportSetting_DictView.js","model/main/entity/mass/table/value/MassCell_ValueView.js","model/main/entity/mass/table/MassCellView.js","model/text/EditableTextView.js","model/main/entity/mass/table/MassRowView.js","model/export/csv/CSVExportView.js","model/main/entity/mass/table/MassTableView.js","model/main/entity/mass/result/MassResultCompView.js","model/table/TableView.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_DictView.js","model/main/entity/nav/left/LeftNav.js","model/main/entity/nav/left/LeftNavItem.js","model/main/entity/nav/left/LeftNavItemUtil.js","model/main/entity/nav/left/LeftNavUtil.js","model/main/entity/nav/left/LeftNavVMUtil.js","model/main/entity/nav/left/LeftNavVM.js","model/main/entity/nav/left/LeftNavView.js","model/table/CellVM.js","model/table/ColumnVM.js","model/table/RowVM.js","model/main/entity/mass/detail/MassDetailTableUtil.js","model/main/entity/mass/detail/MassDetailTable.js","model/main/entity/mass/detail/MassDetailVM.js","model/main/entity/mass/detail/MassDetailTableView.js","model/main/entity/mass/detail/MassDetailView.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupView.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValueView.js","model/main/entity/setting/typicallevel/filter/TLS_FilterView.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemView.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataView.js","model/main/entity/setting/typicallevel/TypicalLevelSettingView.js","model/main/entity/phase/Phase_DictView.js","model/main/entity/mass/rebar/RebarMass_DictView.js","model/main/entity/project/comp/ProjectCompVM.js","model/main/entity/project/comp/ProjectCompVMUtil.js","model/main/entity/project/comp/ProjectCompView.js","model/main/single/form/PMDataView.js","model/main/entity/doc/comp/DO_Comp.js","model/main/entity/doc/DO_Element.js","model/main/entity/doc/DO_ElementType.js","model/main/entity/doc/DO_ElementUtil.js","model/main/entity/doc/DO_ElementVM.js","model/main/entity/doc/DO_ElementVMUtil.js","model/main/entity/doc/comp/DO_CompVMUtil.js","model/main/entity/doc/comp/DO_CompUtil.js","model/main/entity/doc/comp/DO_CompVM.js","model/main/entity/doc/DO_ElementView.js","model/main/entity/doc/comp/DO_CompView.js","model/view/TestView.js","App.js","reportWebVitals.js","index.js"],"names":["text","password","TextVM","content","undefined","placeholder","State","ts","makeObservable","this","observable","v","onSetContent","style","inputStyle","wrapper","position","get","q","qI","InputView","props","onChange","e","value","target","state","Content","store","textVMUtil","data","Password","Component","observer","http","timeout","axios","create","baseURL","Accept","handleResponse","response","success","status","message","statusText","callApi","action","a","err","error","timeout_default","url","config","put","payload","result","post","concrete","formwork","rebar","Project","Phase","Workpackage","Value","Unit","partition","rebarType","elementName","MassType","workItem","level","diameter","block","zone","typename","materialName","systemtype","systemclassification","familyName","size","GetFullFields","massItem","field","fields","isFromElement","massType","includes","mt","groupName","GetValueString","massFieldValue","Name","FullName","GetListForTypicalLevelFilter","randomId","Intl","DateTimeFormat","Math","random","toString","substr","newGUID","replace","c","crypto","getRandomValues","Uint8Array","UpdateFromModel","obj","M2VM","MoveItem","list","oldIndex","newIndex","temp","IsSameValues","list1","list2","isValidCheck","isSame","length","forEach","x","i","Remove","dict","key","index","findIndex","Key","splice","Add","func","isDelete","newfunc","push","ExcelCellName","row","col","n","ordA","charCodeAt","len","s","String","fromCharCode","floor","ExcelColumnName","ExcelRangeName","row1","col1","row2","col2","MassColumn","Cells","_id","genUtil","Dict","Columns","indexOf","NewInputView","handleChange","OnPaste","preventDefault","pasteEvent","originalEvent","clipboardData","getData","contentEditable","React","createRef","minWidth","fontFamily","className","innerRef","Placeholder","html","onPaste","_default","edit","TextRenderItem","render","util","GetRender","rs","context","Is_Tool_Visible","Is_Edit_Visible","type","onClick","Edit","Is_OK_Visible","EditOK","TextRender_Dict","Items","item","Render","renderUtil","EditableTextVM","IsEditing","OnSet_RenderState_Func_Dict","renderState","CanChange_RenderState","RenderState","Render_Dict","titleFunc","render_Dict","CategoryData","categoryNames","instance","category","family","parameter","bystring","bynumber","byequal","bycontain","bynotcontain","bysmaller","bybigger","bybetween","categoryType","EntFilter","ValueType","valueType","NumberFilterType","numberFilterType","StringFilterType","stringFilterType","Values","values","CategoryType","GetValueStorageList","fct","Instance","CategoryNames","PMData","ParameterNames","IsValid","filter","isValid","filterValues","fvt","sft","lowerVal","toLowerCase","isNaN","nft","leftVal","rightVal","IsEqualLeft","IsEqualRight","valueStorageList","byuser","byauto","mgi","createType","MGI_Item","MassGroupItem","CreateType","ct","Title","Delete","Index","title","newMGI","newMGI_id","SupComponent","AllItems","id","supValue","SupValue","MassItem","IsGetElement","OnGetElementDone_Funcs","GetValue","mif","Element","getValFunc","AddDatabase","handle","apiData","ApiData","command","api","then","DeleteDatabase","IsGet_TLS_LevelGroup","OnGet_TLS_LevelGroup_Func_Dict","OnGet_FullValue_Func_Dict","GetPhaseItem","phaseName","PhaseItems","project","workpackage","phases","projectId","elementId","workpackageId","exportSetId","exportSetVersionId","unit","info","Info","get_TLS_LevelGroup","tls_LevelGroup","Get_TLS_LevelGroup","get_FullValue","fullValue","Get_FullValue","phaseItems","MIPh_Item","Handle_TLS_LevelGroup","phase","getLevelGroup_Func","tls","pi","GetValidTLS_PageItem","Data","GetValidTLS_LevelGroup","TypicalLevelSetting","TLS_LevelGroup","OnGetTypicalLevelSetting_Funcs","validPi","PageItems","IsValidTLS_PageItem","pageItem","filters","Filters","Field","validLg","LevelGroups","Primary","Handle_FullValue","IsGet_FullValue","getFullValue_Func","lg","count","Count","FullValue","pmData","Elements","GetProject","Project_Dict","getByViewDetail","viewDetail","masses","items","map","GetWorkpackage","Workpackage_Dict","Workpackages","GetPhases","Phase_Dict","exportSetVersionIds","GetValidPhasesByInput","inputPhases","MassResultComp","Phases","GetPhaseItems","phaseItemUtil","SubComponents","NotIncludeValues","AddNotIncludeValue","GetItem","itemUtil","SupRows","On_AddSupRow_Func_Dict","AddSupRow","NewRow","HandleCreatedByUserRows","OnIsFirstSetSupRow_Funcs","mgii_ct","IsAdd_Done","supRow","supRows","y","addRow","Table","GetRow","IsCreatedByUser","CreatedByUser_Rows","handleRow","handleNonField","subMgcIndex","Filter","replaceMgi","NewMGI","supName","Handle_ReplaceMGI","subComponents","valueOrders","ValueOrders","notIncludeValues","isFirstSetSupRow","IsHaveMassItem","table","MassGroupComponent","originComponent","OriginComponent","AllSubItems","apply","supItem","filterUtil","SupItem","Clone","GetOriginComponent","subComps","supCom","getFromDb","compUtil","IsHaveValueOrder","GetTable","initialItems","MultiSelectVM","InitialItems","GetInitialIndexs","selectedIndexs","GetSelectedItems","SelectedIndexs","open","canOpen","InitialIndexs","initialIndexs","SelectedItems","selectedItems","OnSelectedItemChanged","titleRender","DisplayContent","OnSetOpen","Option","Select","MultiSelectView","onValueChange","onDropdownVisibleChange","Open","width","elems","displayContent","TitleRender","mode","optionFilterProp","filterOption","input","option","children","CanOpen","EntHoverVM","IsElementVisible","ShowElement","HideElement","EntHoverView","onMouseEnter","onMouseLeave","initialItem","SelectVM","InitialItem","GetInitialIndex","selectedIndex","GetSelectedItem","SelectedIndex","CanClear","Clear","isDisabled","InitialIndex","initialIndex","SelectedItem","selectedItem","padding","FloatItemVM","getClassName","location","loc","FloatItemView","getWrapperContent","floatItemVMUtil","SelectView","floatElem","floatItemStore","DivStyle","showSearch","disabled","IsDisabled","inside","lower","ReplaceRowLocationFactory","Location","lt","ToggleLocation","backgroundColor","Color","border","select","TwoCol_SelectVM","inputTitle","outputTitle","availableItems","GetKey","index1","AvailableItems","IsChanged","Unselect","InputTitle","OutputTitle","TwoCol_SelectView","MassRow_ToolElement","editable_TitleVM_RenderState","Method","name","Editable_TitleVM","MassRow_ToolElementView","Editable_TitleVM_RenderState","trs","UpCircleOutlined","DownCircleOutlined","danger","ReloadOutlined","MassRow","SubItems","UpdateCells","UpdateData","isShowSub","rank","isHaveSub","IsToolVisible","FieldInputType","mr_f_it","Toggle_FieldInputType","TempField","FieldInputVM","FieldSelectVM","GetCellByColumn","Column","Is_Original_SupRow","CurrentList","Rank","IsHaveSub","ToggleSub","IsShowSub","SetSubFields","tempSubFields","TempSubFields","SubFields","supMgi","mgc","SubItem","subMgis","mgiUtil","SubMassGroupComponent","Original_SubMassGroupItem","ColumnField","ValidPhasesByInput","HandleItem","MoveUp","orderItems","OrderMGI","OrderItems","orderValues","OrderValues","mgiIndex1","mgiIndex2","MoveDown","AddSub","MainRows","ReplaceOK","factory","ReplaceFactory","refRow","ReferenceRow","rrlf_lt","Replace","Replace_SubItems","subItems","Temp_SelectSubItems","IsReplaced","Original_SupRow","oldMgi","newMgi","Replace_SubMassGroupItem","MainMGI","mgi_i","ReplaceMGI","cl","IsShowSubFieldSelect","IsModalVisible","OpenModal","TitleVM","SubFieldSelectVM","SelectSubItemsVM","LocationStorageList","locSelectVM","LocationSelectVM","ModalOK","warning","ModalCancel","PMS_WorkPackages","AddHandleTotal_Cell","cell","HandleTotal_Cells","Is_HandleTotal_Cells_Done","Add_Handled_CreatedByUser_Row","IsHaveAdditionInformation","AdditionInformation","Is_SelectSubItems_ModalOpen","Open_SelectSubItems_Modal","SelectSubItems_ModalCancel","SelectSubItems_ModalOK","isShow_RawValue","currentList","cells","reduce","b","concat","massGroupItem","replaceMGI","original_SubMassGroupItem","replace_SubMassGroupItem","isReplaced","original_SupRow","subFields","ToggleButtonContentVM","toggleButtonContent","toggleButtonContentVM","ToggleButtonContent","OnSetContent","fieldInputVM","fieldSelectVM","unCheckedChildren","checkedChildren","checked","subFieldSelectVM","titleVM","editable_TitleVM","canEdit","isToolVisible","editTextUtil","IsShow_RawValue","ToolElement","AllRows","locationSelectVM","replaceFactory","pms_WorkPackages_SelectVM","selectUtil","titleWidth","visible","onOk","onCancel","gutter","marginTop","flex","FieldInputElement","SelectSubItems_ModalElement","ButtonStyle","toolElement","trigger","InfoCircleOutlined","ExportInfo","TotalValue","Infos","ExportValue","on_HandleTotal_Cells_Done_Dict_Funcs","On_HandleTotal_Cells_Done_Dict_Funcs","selectSubItemsVM","tc_selectUtil","marginLeft","RawValue","TextView","MassCell","OnGet_TotalValue_Func_Dict","totalValue","AsString","console","log","Row","SubCells","IsHaveVCS_Item","ShowDetail","process","openTabFunc","window","getUrl","viewDetailId","GetViewDetailId","vcs_Item","valueColor","tdBgColor","massIds","OnGet_TLS_LevelGroups_Func_Dict","isHaveWarning","tls_LevelGroup_Descriptions","unitVM","Get_TotalValue","ContentVM","ValueString","contentVM","valueObject","subCells","isHaveVCS_Item","ValueColor","TDBgColor","color","fontWeight","tls_LevelGroups","Get_TLS_LevelGroups","MassCell_Value","GetIsHaveVCS_Item","ColumnIndex","GetValueColor","VCS_Item","GetTDBgColor","Handle_VCS_Item","VersionCompareSetting","compareIndex","compareItem","getItem","ratio","GetMassType","isPending","Handle_TLS_LevelGroups","IsGet_TLS_LevelGroups","handledCount","checkadd_Val","val","handle_Val","Array","isArray","TLS_LevelGroups","targetObj","ReGet_Unit","IsGet_Unit","Get_Unit","ReHandle_TotalValue","IsGet_TotalValue","Handle_TotalValue","CanHave_TotalValue","checkedList","totalVal","handleItems","Number","GetIsHaveWarning","getWarningFunc","levelGroups","IsHaveWarning","Handle_TLS_LevelGroup_Descriptions","IsGet_TLS_LevelGroup_Descriptions","TLS_LevelGroup_Descriptions","getDescFunc","FullDescription","OnGetLevelStorageList_Func_Dict","OnGet_TLS_LevelGroups_Funcs","Get_SubCells","subRows","Get_ValueObject","Get_ValueString","roundingFactor","formatValue","toLocaleString","maximumFractionDigits","GetRank","GetStyle","GetIsHaveSub","GetToggleButtonContent","GetFieldSelectVM","storageList","MIFs_ForMassGroup","GetSubFieldSelectVM","multiSelectUtil","Order","sort","GetLocationSelectVM","GetOriginal_SubMassGroupItem","GetReplace_SubMassGroupItem","GetSubFields","subMGI","SubMassGroupItem","mgis","lastValidIndex","isValidHandle","HaveMassItemSubComponents","currentIndex","CreateSubMassGroupItem","mgcIndex","mgi_I","mgi_iUtil","GetOn_HandleTotal_Cells_Done_Dict_Funcs","Get_Original_SupRow","IsGet_Original_SupRow","Get_Original_Full_SupRows","reverse","Get_IsHaveAdditionInformation","Get_AdditionInformation","Original_Full_SupRows","Get_ToolElement","Get_Cells","GetIsShow_RawValue","GetMassGroupName","MassGroupSetting","GetMainMGI","MainMGC","SupRow","elementfilter","massexport","massgroup","Setting","OnDelete","Input","EditItemId","OnNameChanged","description","OnDescriptionChanged","OnDataChanged","settingType","SettingType","Description","MassGroupSettingData","AddNewField","MassPropertyNames","Fields","Category","GetDefaultFields","mpn","massGroupCompUtil","massGroupComponent","dataUtil","WorkpackageVM","code","fullName","WorkpackageVMs","Code","codeVM","nameVM","descriptionVM","OnCodeChanged","OnFullNameChanged","GetSupItem","supWp","PMDataVM","Workpackage_DictVM","CheckboxVM","Cancel","ischecked","isDisable","onCheckChange","WorkpackageInputVM","workpackageVMStorageList","isNew","commandName","IsNew","WorkpackageInput","DeleteFunc","CodeVM","NameVM","DescriptionVM","IsNewVM","Ischecked","selectVM","SupItemSelectVM","supItemSelectVM","selectVMUtil","WorkpackageVMStorageList","CommandVM","workpackageVM","isNewVM","checkboxVMUtil","commandVM","CommandName","pmDataVM","GetCommandName","GetWorkpackageVMStorageList","GetWorkpackageInputVM","dictVM","OnGetItemsDone_Funcs","OnAddDatabaseDone","OnAdd","workpackageInputVMUtil","ElementFilterSetting_DictVM","ModelItem","OnGetItemsDone","currentItem","CurrentItem","EditItem","SettingVM","GetDataVM","OnGetDataVM","textUtil","dataVM","OnInitialSetDataVM","ElementFilterSettingVM","cateFilterVM","CategoryFilterVM","OnInitialData","famFilterVM","FamilyFilterVM","EntFilterVM","SetData","ValueTypeSelectVM","StringFilterTypeSelectVM","ValuesSelectVM","ValueStorageList","valueTypeSelectVM","FilterValueTypes","stringFilterTypeSelectVM","StringFilterTypes","valuesSelectVM","multiSelectVMUtil","ValueSelectPlaceholder","ElementFilterSettingDataVM","GetCategoryFilterVM","CategoryFilter","filterVMUtil","isHaveFamilyFilter","GetFamilyFilterVM","FamilyFilter","IsHaveFamilyFilter","IsHaveFamilyFilterVM","categoryFilterVM","familyFilterVM","isHaveFamilyFilterVM","DataVM","dataVMUtil","SettingInputVM","settingTypeVM","editItem","SettingTypeVM","ElementFilterSettingInputVM","GetItems","itemVMUtil","GetInput","inputVMUtil","MES_ValueSettingVM","ValueSettingVMs","RetrieveTypeSelectVM","RetrieveType","ValueFilterVM","WorkpackageSelectVM","MassTypeSelectVM","retrieveType","retrieveTypeSelectVM","RetrieveTypeStorageList","valueFilterVM","ValueFilter","modelItem","workpackageSelectVM","massTypeSelectVM","MassTypeStorageList","GetRetrieveTypeStorageList","ValueRetrieveTypes","GetWorkpackageVM","GetMassTypeStorageList","MassTypes","MES_ValueSetting","ValueSettings","byparameter","GetDefault","vrt","valueFilter","GetApiData","MassExportSettingDataVM","elementFilterVMStorageList","valueSettingVMs","AddNewValueSettingVM","AddNewValueSetting","itemView","valueSettingVMUtil","ElementFilterSelectVM","ElementFilterVM","elementFilterVM","ElementFilter","elementFilterSelectVM","ElementFilterVMStorageList","modelList","oldCount","newCount","delta","abs","originItemVM","valueSettingUtil","itemVM","GetElementFilterVMStorageList","GetElementFilterVM","elemFilter","GetValueSettingVMs","MassExportSettingVM","MassExportSettingInputVM","MassExportSetting_DictVM","MassGroupSetting_DictVM","PhaseVM","addversion","Phase_DictVM","AddVersion","stateType","OK","AddMassVersion","PhaseInputVM","ProjectVM","typicalLevelSetting","typicalLevelSetting_ForEdit","phase_DictVM","rebarMass_Dict","RebarMass_Dict","InputExportSet","Level_Dict","Url","CheckboxView","onCheckedChange","OnCheckChanging","LevelGroupVM","primary","isSelectOpen","LevelStorageList","Levels","levelSelectVM","OnGetLevelStorageList_Funcs","triggerVM","IsSelectOpen","buttonTypeVM","addContentVM","GetDefaultPrimary","TLS_FilterValueVM","inputType","ToggleInputType","InputType","it","ValueVM","SwitchChecked_Funcs","valueVM","SelectOpen","selectOpen","PopoverState","popoverState","GetPopoverState","TLS_FilterVM","AddItem","valueUtil","FieldFilterStorageList","FieldStorageList","TLS_PageItemVM","st","ToggleState","NameOK","NameCancel","isLast","IsLast","AllTabs","IsModelChangePageKey","CurrentPageKey","AddLevelGroup","levelGroupUtil","AddFilter","delElem","InputToolElement","InputElement","GetLevelGroups","GetFilters","TypicalLevelSettingDataVM","pageItems","AddPageItem","pageItemUtil","IsHaveAddCommandTab","allTabs","currentPageKey","ChangePageKey","addCommandTab","TitleElement","AddCommandTab","GetPageItems","TypicalLevelSettingVM","Save","GetPhase_DictVM","GetItemsDone","phaseDictVMUtil","GetTypicalLevelSetting_Func","model","typicalLevelUtil","GetTypicalLevelSetting","GetTypicalLevelSetting_ForEdit","TypicalLevelSetting_ForEdit","Project_DictVM","MassResultCompVM","IsShowProjectSelect","CanHavePhase","isHavePhase","massGroupSettingStorageList","IsDataPending","handledRatio","GetMassData","HandledRatio","projects","Projects","projectVMs","projectVMStorageList","ProjectSelectVM","projectSelectOpen","ProjectPopoverState","projectPopoverState","projectSelectVM","ProjectVMStorageList","ProjectVMs","placement","rel","href","ProjectSelectOpen","phaseVMs","massItem_Dict","MassItem_Dict","phaseVMStorageList","PhaseSelectVM","phaseSelectVM","PhaseVMStorageList","PhaseVMs","IsHavePhase","isShowPhaseSelectVM","MassGroupSettingSelectVM","massGroupSettingSelectVM","MassGroupSettingStorageList","toFixed","loadingSpinTipVM","LoadingSpinTip","LoadingSpinTipVM","isfetchProjects","ViewItem","GetProjectVMStorageList","massTable","MassTable","OnIsUpdateDataDone_Funcs","OnSetHandledRatio_Funcs","GetProjectVMs","GetPhaseVMs","GetMassGroupSettingStorageList","MassGroupSetting_Dict","GetProjectPopoverStateValue","RenderItem","dataIndex","inputVM","TitleRenderItem","column","display","CanEditColumn","CanDeleteColumn","TitleRender_Dict","TableColumn","TitleRenderState","OnSetTitleOK_Funcs","Update","titleRender_Dict","renders","DataIndex","GetByTitle","GetActionColumn","editElem","CanEdit","CanDelete","DeleteItem","CanAdd","AddColumn","TableRow","Item","Rows","TableCell","GetCells","cellUtil","TableVM","CanAddColumn","IsShowActionColumn","columns","dataSource","rows","OnGetItemForAdd","IsTypeNotDefined","DataSource","rowUtil","OnDeleteItem","OnEditItem","colUtil","ElementName","Diameter","Weight","WorkItemExportDataVM","WorkItemExportSettingVM","IsCategoryChecked","categoryCheckboxVM","checkboxUtil","WorkItemExportSetting","WorkItemExportSetting_DictVM","tableVM","GetTableVM","nameCol","isCateCol","CategoryCheckboxVM","isSubWorkItemCol","GetWorkpackage_DictVM","OnGetWorkpackagesDone","workpackageVMUtil","workpackage_DictVMUtil","GetElementFilterSetting_DictVM","elementFilterSetting_DictVMUtil","ElementFilterSetting_Dict","GetMassExportSetting_DictVM","massExportSetting_DictVMUtil","MassExportSetting_Dict","GetMassGroupSetting_DictVM","massGroupSetting_DictVMUtil","GetProject_DictVM","project_DictVMUtil","GetWorkItemExportSetting_Dict","wieDictVMUtil","WorkItemExportSetting_Dict","mass","typicallevel","inputdata","mepsetting","document","isDebug","OnSet_ProjectViewType_Func_Dict","projectViewType","pvt","OnSet_CurrentProject_Func_Dict","currentProject","workpackage_DictVM","elementFilterSetting_DictVM","massExportSetting_DictVM","massGroupSetting_DictVM","project_DictVM","massResultCompVM","massResultCompVMUtil","filterValueTypes","stringFilterTypes","valueRetrieveTypes","parameterNames","massPropertyNames","massTypes","workItemExportSetting_Dict","IsDebug","CurrentProject","UpdatedDate","MGS_FieldVM","FieldVMs","GetFieldStorageList","MassGroupSettingDataVM","fieldVMs","AddNewFieldVM","fieldVMUtil","GetFieldVMs","MassGroupSettingVM","CSVExport","Export","wb","Sheets","XLSX","json_to_sheet","Headers","SheetNames","excelBuffer","bookType","Blob","FileSaver","FileName","ExportTest","ws1","t","ws2","f","Override_Get_Data","Override_Get_FileName","fileName","ExcelExport","Workbook","Override_Get_Workbook","workbook","MT_Cell","Override_Get_Row","Override_Get_Column","Override_Get_Formula","formula","isContinueSubRows","Type","Formula","z","Format","Style","MT_Data_Row","Worksheet","FullRows","string","ws","GetSubItems","GetTitle","vc_dict","ValueCell_Dict","firstCol","First_ValueColumn","firstRow","First_ValueRow","getRowFunc","FullIndex","titleCell","c_vt","valueCell","IsContinueSubRows","Address","GetFullItems","FullItems","MT_Data_Worksheet","First_TitleColumn","First_TitleRow","mainRows","fullRows","valueCells","titleCells","fc","fr","font","bold","allCells","TitleCells","ValueCells","listCells","AllCells","range","minRow","minCol","maxRow","maxCol","RangeName","ResultData","MT_RawData_Worksheet","InfoFields","dataRows","Data_WS","tableRows","DataRows","records","ExportData","infoFields","Binding_DataRow","valueFields","Records","ifs","ifl","vfs","ValueFields","cell_val","data_cell","MT_Workbook","RawData_WS","data_WS","rawData_WS","All_WS","GetData_WS","GetRawData_WS","IsValidTable","columnField","Init","Handled_CreatedByUser_Rows","GetColumn","GetCell","canAdd","Build","colField","IsHaveAsyncData","IsOnSaveMassGroup","HandledItems","HandledItemPhases","AddHandledItems","IsUpdateDataDone","colFieldValue","initialRow","HandleRowFieldIndex","GetRow_Value_FieldIndex","rowFieldIndex","itemCount","lastRow","rowField","valueString","Handle_AddRow","subMgcs","subIndex","mgiItem","r1","originalSupRow","isGet_SupRow_Done","fullFunc","sr","getSupRow","r","r2","awaitGetSupRowForAdd","SaveMassGroup","refSelectVM","Reference_MassGroupSetting_SelectVM","MassGroupSelectVM","MassGroupInput_State","mgi_st","Toggle_MassGroupInput_State","massGroupName","MassGroupInputOK","MassGroupName","needValidateForOveride","handle_UpdateMassGroup","refVM","mgsUtil","mgsVMUtil","MassGroupNameVM","Override_MassGroup_Modal_OKFunc","Is_Override_MassGroup_Modal_Open","MassGroupInputCancel","AddMainRow","massGroupSetting","mainMGC","mgi1","mainMGI","massGroupNameVM","massGroupSelectVM","formatedDate","dayjs","Date","now","format","wbUtil","excelExport","ovrgFileName","ovrgWb","eeUtil","ExportTitle","ExcelWorkbook","Is_First_Get_MassTable","wp_Dict","IsDataChanged","RefreshData","projectIds","phaseIds","massItemUtil","setExportSetData","exportSet","currentVersion","CurrentVersion","OnGetCurrentVersionDone_Func","inputExportSet","OnGetInputExportSetDone_Funcs","LevelGroup","levels","getLevelStorageList","IsGet_LevelStorageList","GetLevelStorageList","min","LevelIndexs","max","MinLevel","MaxLevel","FilterDescription","TLS_FilterValue","TLS_Filter","arr","TLS_PageItem","TypicalLevelSettingData","fieldFilterStorageList","levelStorageList","GetTest","GetFromDb_Async","phaseId","resData","editData","GetFieldFilterStorageList","fieldUtil","SaveDatabase","level_Dict","getLevelsFunc","OnGetExportSetVersions_Func","exportSetVersions","IsOnGetDb_Async","GetExportSetVersionData","ExportSetVersions","GetExportSetVersions","settingUtil","addVersionFunc","PhaseInput","phaseUtil","inputUtil","phase_Dict","phaseDictUtil","GetInputExportSetDone","getInputExportSetDone","ExportSet","GetCurrentVersionDone","ExportSetVersion","RetrieveFrom","retrieveFrom","GetCurrentVersion_Async","versionUtil","AddVersion_Async","addItem","Level","getAll","Elevation","elevation","GetRebarMass_Dict","rebarMassDictUtil","GetInputExportSet_Async","exportSetUtil","GetLevel_Dict","levelDictUtil","ElementFilterSetting","ElementFilterSettingData","categoryFilter","familyFilter","SettingInput","GetData","OnGetData","prefix","UrlPrefix","AddDatabaseDone","NewItem","GetEditItem","urlPrefix","ElementFilterSettingInput","elementFilterSettingUtil","cateFilter","MassExportSettingData","elementFilter","elementFilterId","valueSettings","exportSettings","GetElementFilter","elemFilterId","GetDefaultValueSettings","MassExportSetting","MassExportSettingInput","massExportSettingUtil","TrackingItem","Tracking","WorkpackageId","supId","SupId","NewWorkpackage","workpackageUtil","wp","GetFullName","UpperList","LowerList","wps","GetWorkpackagesDone","workpackageInput","GetFilterValueTypes","GetStringFilterTypes","GetValueRetrieveTypes","GetMassPropertyNames","GetMassItemFields","GetMIFs_ForMassGroup","GetMassTypes","DebugPoints","workpackage_Dict","elementFilterSetting_Dict","massExportSetting_Dict","massGroupSetting_Dict","project_Dict","massResultComp","categoryData","massItemFields","mifs_ForMassGroup","versionCompareSetting","tracking","upperList","lowerList","dbItem","GetUpperList","GetLowerList","workpackageVMs","CurrentWorkpackage","workpackageInputVM","Workpackage_DictView","CurrentWorkpackageVM","searchName","SearchName","orientation","plain","margin","DeleteView","EntFilterView","test","ItemVMs","CurrentItemVM","ElementFilterSettingDataView","ElementFilterSetting_DictView","MES_ValueSettingView","borderRadius","MassExportSettingDataView","valueSettingElems","MassExportSetting_DictView","MassCell_ValueView","MassCellView","TDStyle","AStyle","EditableTextView","MassRowView","subElems","toggleButton","marginRight","scope","IsHave_Addition_Wrapper","AdditionInfomation_Element","RawValue_Element","HoverToolElement","ModalElement","j","CSVExportView","Test","filename","headers","MassTableView","thElems","tbodyElems","SaveFilled","DownloadOutlined","MassGroupInput_Element","MassGroupInput_Toggle_Classname","MassGroupInput_Toggle_Content","Override_MassGroup_ModalElement","MassResultCompView","IsShowPhaseSelectVM","justifyContent","TableView","tableElem","theadElem","tbodyElem","WorkItemExportSetting_DictView","LeftNav","LeftNavItem","LeftNavVM","modelUtil","GetPreTitle","preTitle","GetItemClass","ProjectViewType","SetView","PreTitle","LeftNavView","navUtil","CellVM","OnGetValueString","ColumnVM","RowVM","GetFields","GetColumns","GetValueTitle","MassDetailTable","GetRows","parseFloat","setValueFunc","MassDetailVM","DetailTable","detailTable","MassDetailTableView","colElems","rowElems","cellElems","MassDetailView","match","params","withRouter","LevelGroupView","LevelSelectVM","DeleteFilled","TLS_FilterValueView","TLS_FilterView","TLS_PageItemView","Tabs","TabPane","TypicalLevelSettingDataView","onKeyDown","stopPropagation","activeKey","tab","TypicalLevelSettingView","Phase_DictView","PlusCircleOutlined","RebarMass_DictView","ProjectCompVM","projectVM","projectUtil","projectVMUtil","massResComp","setItemsFuncs","GetMassResultCompVM","massResutlCompVMUtil","ProjectCompView","ViewElement","PMDataView","basename","exact","path","component","TestView","DO_Comp","DO_Element","element","elementinfo","elementinfo_identify","elementinfo_locate","et","DO_ElementVM","isOpenSub","IsOpenSub","ToggleSubContentVM","toggleSubContentVM","GetToggleSubContent","DO_CompVM","DO_ElementView","IsHaveButton","DO_CompView","elem","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1c30124d.chunk.js","sourcesContent":["export const text = 'text'\r\nexport const password = 'password'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as ts from './TextState'\r\n\r\nexport class TextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder : observable,\r\n      State : observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  get Content(){\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  inputStyle\r\n\r\n  style\r\n  get Style() {\r\n    if (!this.style) {\r\n      this.style = this.inputStyle ? this.inputStyle : {};\r\n\r\n      if (this.wrapper) {\r\n        this.style.position = 'relative';\r\n      }\r\n    }\r\n    return this.style;\r\n  }\r\n\r\n  State = ts.text\r\n}","import { TextVM } from \"./TextVM\"\r\n\r\nexport const get = (q, placeholder) => {\r\n  var qI = new TextVM();\r\n  qI.content = q;\r\n  qI.placeholder = placeholder;\r\n  return qI;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport * as ts from '../text/TextState'\r\n\r\nclass InputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    var { value } = e.target;\r\n    this.state.Content = value;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var { content, placeholder } = data;\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <Input value={content} onChange={this.onChange}\r\n            placeholder={placeholder} /> : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password value={content} onChange={this.onChange} /> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(InputView)","import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nexport const API_URL = 'https://api.bimdev.vn/api';\r\n\r\n// const http = axios.create({\r\n//   baseURL: API_URL,\r\n//   Accept: 'application/json',\r\n//   'Content-Type': 'application/json',\r\n//   //timeout: 20000\r\n//   timeout: 20000000\r\n// });\r\n\r\nconst http = (timeout) => axios.create({\r\n    baseURL: API_URL,\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n    timeout\r\n  });\r\n\r\nconst handleNetworkError = (err) => {\r\n  message.error(`Error sending request: ${err}`);\r\n  return {\r\n    success: false\r\n  };\r\n}\r\n\r\nconst handleResponse = (response) => {\r\n  // Parse the axios response\r\n  const success = response.status >= 200 && response.status < 300;\r\n  const data = response.data;\r\n  let message = response.statusText;\r\n  return {\r\n    success,\r\n    data,\r\n    message\r\n  };\r\n}\r\n\r\nexport const callApi = async (action) => {\r\n  try {\r\n    const response = await action;\r\n    return handleResponse(response);\r\n  } catch (err) {\r\n    return handleNetworkError(err);\r\n  } finally { }\r\n}\r\n\r\nexport const timeout_default = 20000\r\n\r\nexport const get = async (url, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  return callApi(http(timeout).get(url, config));\r\n}\r\n\r\nexport const put = async (url, payload, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).put(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const post = async (url, payload, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).post(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const del = async (url, payload,timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).delete(url, payload));\r\n  return result;\r\n}","export const concrete = \"concrete\";\r\nexport const formwork = \"formwork\";\r\nexport const rebar = \"rebar\";\r\n\r\nexport const GetAll = () => {\r\n  return [ concrete, formwork, rebar ];\r\n}\r\n\r\nexport const IsGetElement = (massType) => {\r\n  return massType === concrete || massType === formwork;\r\n}","import * as mt from '../MassType'\r\n\r\nexport const Project = 'Project'\r\nexport const Phase = 'Phase'\r\nexport const Workpackage = 'Workpackage'\r\nexport const Value = 'Value'\r\nexport const Unit = 'Unit'\r\nexport const partition = 'partition'\r\nexport const rebarType = 'rebarType'\r\nexport const elementName = 'elementName'\r\nexport const MassType = 'MassType'\r\nexport const workItem = 'workItem'\r\nexport const level = 'level'\r\nexport const diameter = 'diameter'\r\nexport const block = 'block'\r\nexport const discipline = 'discipline'\r\nexport const zone = 'zone'\r\nexport const typename = 'typename'\r\nexport const materialName = 'materialName'\r\nexport const systemtype = 'systemtype'\r\nexport const systemclassification = 'systemclassification'\r\nexport const familyName = 'familyName'\r\nexport const size = 'size'\r\n\r\nexport const GetAll = () => {\r\n  return [MassType, workItem, level, block, elementName, diameter]\r\n}\r\n\r\nexport const GetForMassGroup = () => {\r\n  return [\r\n    MassType, workItem, level, block, zone,\r\n    familyName, typename,\r\n    elementName, materialName,\r\n    systemtype, systemclassification, size\r\n\r\n  ]\r\n}\r\n\r\nexport const GetDirectiveFields = () => {\r\n  return [Project, Workpackage, Value, Unit];\r\n}\r\n\r\nexport const GetIdentifyFields = () => {\r\n  return [elementName];\r\n}\r\n\r\nexport const Get_MassInfo_Fields = () => {\r\n  return [materialName]\r\n}\r\n\r\nexport const GetFullFields = (massItem, field) => {\r\n  switch (field) {\r\n    case Project:\r\n    case Value:\r\n    case Unit:\r\n    case MassType:\r\n    case Phase:\r\n      return {\r\n        fields: [field],\r\n        isFromElement: false\r\n      };\r\n    case workItem:\r\n    case elementName:\r\n    case rebarType:\r\n    case partition:\r\n    case level:\r\n    case diameter:\r\n    case block:\r\n    case zone:\r\n    case typename:\r\n    case materialName:\r\n    case systemtype:\r\n    case systemclassification:\r\n    case familyName:\r\n    case size:\r\n      var massType = massItem[MassType];\r\n      if (Get_MassInfo_Fields().includes(field) ||\r\n        massType === mt.rebar) {\r\n        return {\r\n          fields: ['Info', field],\r\n          isFromElement: false\r\n        };\r\n      } else {\r\n        var groupName = undefined;\r\n        // kiểm tra các phân nhóm trong Element: identify, locate ...\r\n        switch (field) {\r\n          case workItem:\r\n          case elementName:\r\n          case typename:\r\n          case systemtype:\r\n          case systemclassification:\r\n          case familyName:\r\n            groupName = 'identify';\r\n            break;\r\n          case level:\r\n          case block:\r\n          case zone:\r\n            groupName = 'locate';\r\n            break;\r\n          case size:\r\n            groupName = 'geometry';\r\n            break;\r\n        }\r\n        return {\r\n          fields: ['Element', 'info', groupName, field],\r\n          isFromElement: true\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\nexport const GetValueString = (massFieldValue, field) => {\r\n  var value = undefined;\r\n\r\n  switch (field) {\r\n    case Project:\r\n    case Phase:\r\n      value = massFieldValue.Name;\r\n      break;\r\n    case Workpackage:\r\n      value = massFieldValue.FullName;\r\n      break;\r\n    default:\r\n      value = massFieldValue;\r\n      break;\r\n  }\r\n\r\n  return value ? value : 'undefined';\r\n}\r\n\r\nexport const GetListForTypicalLevelFilter = () => {\r\n  return [workItem, block, discipline]\r\n}\r\n\r\nexport const GetDefaultListValue = (field) => {\r\n  switch (field) {\r\n    case workItem:\r\n      return ['Dầm', 'Sàn', 'Cột', 'Vách'];\r\n    default:\r\n      return [];\r\n  }\r\n}","import * as api from './apiUtil'\r\n\r\nexport let dtFormat = new Intl.DateTimeFormat('en-GB');\r\n\r\nexport const deepClone = (q) => {\r\n  return JSON.parse(JSON.stringify(q));\r\n}\r\n\r\nexport const randomId = () => {\r\n  // Math.random should be unique because of its seeding algorithm.\r\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n  // after the decimal.\r\n  return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nexport const newGUID = () => {\r\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n  );\r\n}\r\n\r\nexport const UpdateFromModel = (obj, action) => {\r\n  obj.M2VM = true;\r\n  action();\r\n  obj.M2VM = false;\r\n}\r\n\r\nexport const MoveItem = (list, oldIndex, newIndex) => {\r\n  if (oldIndex === -1 || newIndex === -1 ||\r\n    oldIndex === newIndex) return;\r\n  var temp = list[oldIndex];\r\n  list[oldIndex] = list[newIndex];\r\n  list[newIndex] = temp; \r\n}\r\n\r\nexport const IsEqual = (list1, list2) => {\r\n  if (list1.length !== list2.length) return false;\r\n  var isValidCheck = true;\r\n  var isEqual = true;\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && x !== list2[i]) {\r\n      isValidCheck = false; isEqual = false;\r\n    }\r\n  })\r\n\r\n  return isEqual;\r\n}\r\n\r\nexport const IsSameValues = (list1, list2) => {\r\n  var isValidCheck = true;\r\n  var isSame = true;\r\n\r\n  if (list1.length !== list2.length) return false;\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && !list2.includes(x)) {\r\n      isValidCheck = false; isSame = false;\r\n    }\r\n  })\r\n\r\n  return isSame;\r\n}\r\n\r\nexport const GroupBy = function (xs, key) {\r\n  var groups = [];\r\n\r\n  xs.forEach(x => {\r\n    var val = x[key];\r\n    var group = undefined;\r\n    var index = groups.findIndex(y => val === y.Key);\r\n    if (index === -1) {\r\n      group = {\r\n        Key: val,\r\n        Items: []\r\n      };\r\n      groups.push(group);\r\n    } else {\r\n      group = groups[index];\r\n    }\r\n    group.Items.push(x);\r\n  })\r\n\r\n  return groups;\r\n};\r\n\r\nexport const Remove = (dict, key) => {\r\n  var index = dict.findIndex(x => x.Key === key);\r\n  if (index !== 0) {\r\n    return dict.splice(index, 1);\r\n  }\r\n}\r\n\r\nexport const Add = (dict, func, isDelete = true) => {\r\n  var key = newGUID();\r\n\r\n  var newfunc = () => {\r\n    if (func) {\r\n      func();\r\n    }\r\n    if (isDelete) {\r\n      Remove(dict, key);\r\n    }\r\n  }\r\n\r\n  dict.push({\r\n    Key: newGUID(),\r\n    Value: newfunc\r\n  });\r\n}\r\n\r\n// Truy xuất thông tin Excel\r\nexport const ExcelColumnName = (n) => {\r\n  var ordA = 'A'.charCodeAt(0);\r\n  var ordZ = 'Z'.charCodeAt(0);\r\n  var len = ordZ - ordA + 1;\r\n\r\n  var s = \"\";\r\n  while(n >= 0) {\r\n      s = String.fromCharCode(n % len + ordA) + s;\r\n      n = Math.floor(n / len) - 1;\r\n  }\r\n  return s;\r\n}\r\n\r\nexport const ExcelCellName = (row, col) => {\r\n  return `${ExcelColumnName(col)}${row+1}`;\r\n}\r\n\r\nexport const ExcelRangeName = (row1, col1, row2, col2) => {\r\n  return `${ExcelCellName(row1, col1)}:${ExcelCellName(row2, col2)}`\r\n}\r\n\r\n// Max min\r\nexport const MinMax = (arr) => {\r\n  return arr.reduce(({min, max}, v) => ({\r\n    min: min < v ? min : v,\r\n    max: max > v ? max : v,\r\n  }), { min: arr[0], max: arr[0] });\r\n}\r\n\r\n// Save Database\r\nexport const SaveDatabse = (q, url, handle) => {\r\n  var apiData = q.ApiData\r\n  var _id = apiData._id;\r\n\r\n  var isNew = _id ? true : false\r\n  const apiFunc = () => isNew ?\r\n    api.put(`${url}/edit`, apiData) : api.post(`${url}/add`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (isNew){ \r\n        q._id = data._id\r\n      }\r\n      handle(data, isNew);\r\n    })\r\n}\r\n\r\n// Get plain text from paste\r\nexport const GetPlainText = (pasteEvent) => {\r\n  var text = (pasteEvent.originalEvent || pasteEvent).clipboardData.getData('text/plain');\r\n  return text;\r\n}","import * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport default class MassColumn {\r\n  _id\r\n  get id() {\r\n    if (!this._id){\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index(){\r\n    return this.Dict.Columns.indexOf(this);\r\n  }\r\n\r\n  Cells = []\r\n}","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport * as ts from '../text/TextState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nclass NewInputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.contentEditable = React.createRef();\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    var data = this.state;\r\n    data.Content = e.target.value;\r\n  };\r\n\r\n  OnPaste = (e) => {\r\n    e.preventDefault();\r\n    var text = genUtil.GetPlainText(e);\r\n    \r\n    var data = this.state;\r\n    data.Content = text;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var Content = data.Content;\r\n    var style = this.props.style ? this.props.style : {};\r\n    if (!style.minWidth) {\r\n      style.minWidth = 150\r\n      style.fontFamily = 'password'\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <ContentEditable className='ant-input' innerRef={this.contentEditable}\r\n            placeholder={data.Placeholder}\r\n            style={style}\r\n            html={Content ? Content : ''}\r\n            onChange={this.handleChange}\r\n            onPaste={this.OnPaste} />\r\n          : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password value={Content} onChange={this.handleChange}\r\n            style={style} /> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(NewInputView)","export const _default = \"default\";\r\nexport const edit = \"edit\";","import * as util from './TextRenderItemUtil'\r\n\r\nexport class TextRenderItem {\r\n  render\r\n  get Render(){\r\n    if (!this.render){\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v){\r\n    this.render = v;\r\n  }\r\n}","import InputView from \"../input/InputView\";\r\nimport * as rs from './TextRenderState'\r\nimport { TextRenderItem } from \"./TextRenderItem\";\r\nimport NewInputView from \"../input/NewInputView\";\r\nimport { Button } from \"antd\";\r\n\r\nexport const get = (state, render) => {\r\n  var qI = new TextRenderItem();\r\n  qI.State = state;\r\n  qI.Render = render;\r\n  return qI;\r\n}\r\n\r\nexport const GetRender = (q) => {\r\n  switch (q.State) {\r\n    case rs._default:\r\n      return (content, context) => <>\r\n        {content}\r\n        { context.Is_Tool_Visible && context.Is_Edit_Visible ?\r\n          <Button type='primary' size='small'\r\n            className='left10 btn-warning' onClick={context.Edit}\r\n          >e</Button>\r\n          : ''}\r\n      </>\r\n    case rs.edit:\r\n      return (content, context) => <>\r\n        <span className='input__wrapper'>\r\n          <NewInputView store={context} />\r\n          {context.Is_Tool_Visible && context.Is_OK_Visible ?\r\n            <Button type='primary' size='small'\r\n              onClick={context.EditOK}>ok</Button>\r\n            : ''}\r\n        </span>\r\n      </>\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import * as renderUtil from './TextRenderItemUtil'\r\n\r\nexport default class TextRender_Dict {\r\n  Items = []\r\n\r\n  GetRender = (state) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x.State === state);\r\n    if (index === -1){\r\n      var item = renderUtil.get(state);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport NewInputView from '../input/NewInputView';\r\nimport TextRender_Dict from './TextRender_Dict';\r\nimport * as ts from './TextState'\r\nimport * as rs from './TextRenderState'\r\n\r\nexport class EditableTextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder: observable,\r\n      State: observable,\r\n       IsEditing: observable,\r\n      renderState: observable,\r\n      Is_Tool_Visible: observable,\r\n      Is_Edit_Visible : observable,\r\n      Is_OK_Visible: observable,\r\n      CanChange_RenderState : observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  get Content() {\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  inputStyle\r\n\r\n  style\r\n  get Style() {\r\n    if (!this.style) {\r\n      this.style = this.inputStyle ? this.inputStyle : {};\r\n\r\n      if (this.wrapper) {\r\n        this.style.position = 'relative';\r\n      }\r\n    }\r\n    return this.style;\r\n  }\r\n\r\n  State = ts.text\r\n\r\n  IsEditing = false\r\n\r\n  titleFunc\r\n  get TitleFunc() {\r\n    if (!this.titleFunc) {\r\n      this.titleFunc = () => this.Content;\r\n    }\r\n    return this.titleFunc;\r\n  } set TitleFunc(v) {\r\n    this.titleFunc = v;\r\n  }\r\n\r\n  render_Dict\r\n  get Render_Dict() {\r\n    if (!this.render_Dict) {\r\n      this.render_Dict = new TextRender_Dict();\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n  set Render_Dict(v) {\r\n    this.render_Dict = v;\r\n  }\r\n\r\n  OnSet_RenderState_Func_Dict = []\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState;\r\n  } set RenderState(v) {\r\n    if (!this.CanChange_RenderState) {\r\n      return;\r\n    }\r\n\r\n    this.renderState = v;\r\n    this.OnSet_RenderState_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  CanChange_RenderState = true\r\n\r\n  Is_Tool_Visible = true\r\n  Is_Edit_Visible = true\r\n  Is_OK_Visible = true;\r\n\r\n  Edit = () => {\r\n    this.RenderState = rs.edit\r\n  }\r\n\r\n  EditOK = () => {\r\n    this.RenderState = rs._default\r\n  }\r\n\r\n  Render = () => {\r\n    var render = this.Render_Dict.GetRender(this.RenderState);\r\n    return render.Render(this.Content, this);\r\n  }\r\n}","import * as util from './CategoryDataUtil'\r\n\r\nexport class CategoryData {\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new CategoryData();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = util.GetCategoryNames();\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n}","export const GetCategoryNames = (data) => {\r\n  return ['Floors', 'Structural Framing', 'Walls', 'Structural Columns']\r\n}","export const category = \"category\";\r\nexport const family = \"family\";\r\nexport const parameter = 'parameter'\r\n\r\nexport const GetAll = () => {\r\n  return [ category, family, parameter ];\r\n}","export const bystring = \"bystring\";\r\nexport const bynumber = \"bynumber\";\r\n\r\nexport const GetAll = () => {\r\n  return [ bystring, bynumber ];\r\n}","export const byequal = \"byequal\";\r\nexport const bycontain = \"bycontain\";\r\nexport const bynotcontain = \"bynotcontain\";\r\n\r\nexport const GetAll = () => {\r\n  return [ byequal, bycontain, bynotcontain ];\r\n}","export const byequal = \"byequal\";\r\nexport const bysmaller = \"bysmaller\";\r\nexport const bysmallerorequal = \"bysmallerorequal\";\r\nexport const bybigger = \"bybigger\";\r\nexport const bybiggerorequal = \"bybiggerorequal\";\r\nexport const bybetween = \"bybetween\";\r\n\r\nexport const GetAll = () => {\r\n  return [ byequal, bysmaller, bybigger, bybetween ];\r\n}","import { CategoryData } from \"../../single/model/CategoryData\"\r\nimport { PMData } from \"../../single/model/PMData\";\r\nimport { EntFilter } from \"./EntFilter\"\r\nimport * as fct from './FilterCategoryType'\r\nimport * as fvt from './FilterValueType'\r\nimport * as sft from './StringFilterType'\r\nimport * as nft from './NumberFilterType'\r\n\r\nexport const categoryData = () => {\r\n  return CategoryData.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, categoryType) => {\r\n  var qI = new EntFilter();\r\n  qI.ValueType = q.valueType;\r\n  qI.NumberFilterType = q.numberFilterType;\r\n  qI.StringFilterType = q.stringFilterType;\r\n  qI.Values = q.values;\r\n  qI.CategoryType = categoryType;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q) => {\r\n  if (!q) return q;\r\n  var qI = new EntFilter();\r\n  qI.ValueType = q.ValueType;\r\n  qI.NumberFilterType = q.NumberFilterType;\r\n  qI.StringFilterType = q.StringFilterType;\r\n  qI.Values = [...q.Values];\r\n  qI.CategoryType = q.CategoryType;\r\n  return qI;\r\n}\r\n\r\nexport const GetValueStorageList = (q) => {\r\n  var list = [];\r\n\r\n  switch (q.CategoryType) {\r\n    case fct.category:\r\n      list = categoryData().CategoryNames;\r\n      break;\r\n    case fct.parameter:\r\n      list = pmData().ParameterNames;\r\n      break;\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    valueType: q.ValueType,\r\n    numberFilterType: q.NumberFilterType,\r\n    stringFilterType: q.StringFilterType,\r\n    values: q.Values\r\n  }\r\n}\r\n\r\nexport const IsValid = (filter, value) => {\r\n  if (value === undefined || value === null) return false;\r\n\r\n  var isValid = false;\r\n  var filterValues = filter.Values;\r\n  switch (filter.ValueType) {\r\n    case fvt.bystring:\r\n      if (typeof value === 'string') {\r\n        var filterType = filter.StringFilterType;\r\n        switch (filterType) {\r\n          case sft.byequal:\r\n            filterValues.forEach(x => {\r\n              if (!isValid && x === value) {\r\n                isValid = true;\r\n              }\r\n            })\r\n            break;\r\n          case sft.bycontain:\r\n            var lowerVal = value.toLowerCase();\r\n            filterValues.forEach(x => {\r\n              if (!isValid && lowerVal.includes(x.toLowerCase())) {\r\n                isValid = true;\r\n              }\r\n            })\r\n            break;\r\n          case sft.bynotcontain:\r\n            var lowerVal = value.toLowerCase();\r\n            isValid = true;\r\n            filterValues.forEach(x => {\r\n              if (isValid && lowerVal.includes(x.toLowerCase())) {\r\n                isValid = false;\r\n              }\r\n            })\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    case fvt.bynumber:\r\n      if (!isNaN(value)) {\r\n        var filterType = filter.NumberFilterType;\r\n        switch (filterType) {\r\n          case nft.byequal:\r\n            return value === filterValues[0];\r\n          case nft.bysmaller:\r\n            return value < filterValues[0];\r\n          case nft.bysmallerorequal:\r\n            return value <= filterValues[0];\r\n          case nft.bybigger:\r\n            return value > filterValues[0];\r\n          case nft.bybiggerorequal:\r\n            return value >= filterValues[0];\r\n          case nft.bybetween:\r\n            var leftVal = filterValues[0];\r\n            var rightVal = filterValues[1];\r\n            return (filter.IsEqualLeft && leftVal === value) ||\r\n              leftVal < value && value < rightVal\r\n              || (filter.IsEqualRight && value === rightVal);\r\n        }\r\n      }\r\n      break;\r\n  }\r\n\r\n  L1:\r\n  return isValid;\r\n}","import * as util from './EntFilterUtil'\r\n\r\nexport class EntFilter\r\n{\r\n  ValueType\r\n  NumberFilterType\r\n  StringFilterType\r\n  IsEqualLeft\r\n  IsEqualRight\r\n\r\n  values\r\n  get Values(){\r\n    return this.values;\r\n  }\r\n  set Values(v){\r\n    this.values = v;\r\n  }\r\n\r\n  CategoryType\r\n\r\n  valueStorageList\r\n  get ValueStorageList(){\r\n    if (!this.valueStorageList){\r\n      this.valueStorageList = util.GetValueStorageList(this);\r\n    }\r\n    return this.valueStorageList;\r\n  }\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","export const byuser = 'byuser'\r\nexport const byauto = 'byauto'","import MGI_Item from \"./MGI_Item\";\r\nimport * as ct from './MGI_I_CreateType'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport const create = (mgi, createType) => {\r\n  var qI = new MGI_Item();\r\n  qI.MassGroupItem = mgi;\r\n\r\n  if (!createType) {\r\n    qI.CreateType = ct.byauto;\r\n  } else {\r\n    qI.CreateType = ct.byuser;\r\n    qI.Value = genUtil.newGUID();\r\n    qI.Title = 'Tên đầu mục';\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getFromDb = (data, mgi) => {\r\n  var qI = new MGI_Item();\r\n\r\n  qI.Value = data.value;\r\n  qI.SupValue = data.supValue\r\n  qI.Title = data.title;\r\n  qI.newMGI_id = data.newMGI_id;\r\n  qI.MassGroupItem = mgi;\r\n  qI.CreateType = data.createType ? data.createType : ct.byauto\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, mgi) => {\r\n  var qI = new MGI_Item();\r\n\r\n  qI.Value = q.Value;\r\n  qI.SupValue = q.SupValue;\r\n  qI.Title = q.Title;\r\n  qI.newMGI_id = q.newMGI_id;\r\n  qI.MassGroupItem = mgi;\r\n  qI.CreateType = q.CreateType;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetNewMGI = (q) => {\r\n  var _id = q.newMGI_id;\r\n  if (!_id) return undefined;\r\n  var list = q.MassGroupItem.SupComponent.AllItems;\r\n\r\n  var index = list.findIndex(x => x._id === _id);\r\n  return index !== -1 ? list[index] : undefined;\r\n}","import { PMData } from '../../../../single/model/PMData';\r\nimport * as util from './MGI_ItemUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport default class MGI_Item {\r\n  Value\r\n\r\n  SupValue\r\n\r\n  get Index() {\r\n    return this.MassGroupItem.Items.indexOf(this);\r\n  }\r\n\r\n  title\r\n  get Title(){\r\n    if (!this.title){\r\n      this.title = this.Value;\r\n    }\r\n    return this.title;\r\n  }\r\n  set Title(v){\r\n    this.title = v;\r\n  }\r\n\r\n  newMGI\r\n  get NewMGI(){\r\n    if (!this.newMGI){\r\n      this.newMGI = util.GetNewMGI(this);\r\n\r\n      if (!this.newMGI && this.newMGI_id){\r\n        this.newMGI_id = undefined;\r\n      }\r\n    }\r\n    return this.newMGI;\r\n  }\r\n  set NewMGI(v){\r\n    this.newMGI = v;\r\n    if (!v || v === this.MassGroupItem){\r\n      this.newMGI_id = undefined;\r\n    }\r\n    else{\r\n      this.newMGI_id = v.id;\r\n    }\r\n  }\r\n\r\n  newMGI_id\r\n\r\n  get ApiData(){\r\n    return {\r\n      value : this.Value,\r\n      supValue: this.SupValue,\r\n      title : this.Title,\r\n      newMGI_id : this.newMGI_id,\r\n      createType : this.CreateType\r\n    }\r\n  }\r\n\r\n  Delete = () => {\r\n    this.MassGroupItem.Items.splice(this.Index, 1);\r\n  }\r\n}","import * as util from './MassItemUtil'\r\nimport * as mif from './MassItemField'\r\nimport { message } from 'antd'\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\nexport default class MassItem {\r\n  Value\r\n  Unit\r\n\r\n  projectId\r\n\r\n  project\r\n  get Project() {\r\n    if (!this.project) {\r\n      this.project = util.GetProject(this);\r\n    }\r\n    return this.project;\r\n  }\r\n\r\n  workpackageId\r\n\r\n  workpackage\r\n  get Workpackage() {\r\n    if (!this.workpackage) {\r\n      this.workpackage = util.GetWorkpackage(this);\r\n    }\r\n    return this.workpackage;\r\n  }\r\n\r\n  phases\r\n  get Phases() {\r\n    if (!this.phases) {\r\n      this.phases = util.GetPhases(this);\r\n    }\r\n    return this.phases;\r\n  }\r\n\r\n  get ValidPhasesByInput() {\r\n    return util.GetValidPhasesByInput(this);\r\n  }\r\n\r\n  IsGetElement = false\r\n\r\n  OnGetElementDone_Funcs = []\r\n\r\n  set GetElementDone(v) {\r\n    this.OnGetElementDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  GetValue = (field) => {\r\n    if (!field) {\r\n      return;\r\n    }\r\n\r\n    var data = mif.GetFullFields(this, field);\r\n    var { fields, isFromElement } = data;\r\n\r\n    var getValFunc = () => {\r\n      var obj = this;\r\n      var isValid = true;\r\n\r\n      fields.forEach(x => {\r\n        if (isValid) {\r\n          var temp = obj[x];\r\n          obj = temp;\r\n          if (obj === undefined) {\r\n            isValid = false;\r\n          }\r\n        }\r\n      })\r\n\r\n      return obj;\r\n    }\r\n\r\n    if (!isFromElement || this.Element) {\r\n      return getValFunc();\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      _id: this._id,\r\n      projectId: this.projectId,\r\n      elementId: this.elementId,\r\n      workpackageId: this.workpackageId,\r\n      exportSetId: this.exportSetId,\r\n      exportSetVersionId: this.exportSetVersionId,\r\n      value: this.Value,\r\n      unit: this.Unit,\r\n      massType: this.MassType,\r\n      info: this.Info\r\n    }\r\n  }\r\n\r\n  AddDatabase = (handle) => {\r\n    var apiData = this.ApiData;\r\n    var { _id } = apiData;\r\n    var url = `https://api.bimdev.vn/api/hbm`;\r\n\r\n    var command = _id ? 'edit' : 'add';\r\n    const apiFunc = () => _id ?\r\n      api.put(`${url}/${command}`, apiData) : api.post(`${url}/${command}`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        if (command === 'add') {\r\n          this._id = data._id;\r\n        }\r\n        if (handle) {\r\n          handle(data);\r\n        }\r\n        message.success(`${command} mass successfully`);\r\n      })\r\n  }\r\n\r\n  DeleteDatabase = (handle) => {\r\n    var apiData = {\r\n      _id: this._id\r\n    };\r\n    var url = `https://api.bimdev.vn/api/hbm`;\r\n    const apiFunc = () => api.put(`${url}/delete`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        if (handle) {\r\n          handle(data);\r\n        }\r\n        message.success(`delete mass successfully`);\r\n      })\r\n  }\r\n\r\n  IsGet_TLS_LevelGroup = false\r\n  OnGet_TLS_LevelGroup_Func_Dict = []\r\n\r\n  get Get_TLS_LevelGroup(){\r\n    return this.get_TLS_LevelGroup\r\n  }\r\n  set Get_TLS_LevelGroup(v) {\r\n    this.OnGet_TLS_LevelGroup_Func_Dict.forEach(x => x.Value());\r\n    this.get_TLS_LevelGroup = v;\r\n  }\r\n\r\n  tls_LevelGroup\r\n  get TLS_LevelGroup() {\r\n    if (!this.tls_LevelGroup) {\r\n      util.Handle_TLS_LevelGroup(this);\r\n    }\r\n    return this.tls_LevelGroup;\r\n  } set TLS_LevelGroup(v) {\r\n    this.tls_LevelGroup = v;\r\n    this.Get_TLS_LevelGroup = true;\r\n  }\r\n\r\n  OnGet_FullValue_Func_Dict = []\r\n  set Get_FullValue(v) {\r\n    this.OnGet_FullValue_Func_Dict.forEach(x => x.Value())\r\n    this.get_FullValue = v;\r\n  }\r\n\r\n  // bao gồm giá trị tầng điển hình\r\n  fullValue\r\n  get FullValue() {\r\n    if (!this.fullValue) {\r\n      util.Handle_FullValue(this);\r\n    }\r\n    return this.fullValue;\r\n  } set FullValue(v) {\r\n    this.fullValue = v;\r\n    this.Get_FullValue = true;\r\n  }\r\n\r\n  phaseItems\r\n  get PhaseItems(){\r\n    if (!this.phaseItems){\r\n      this.phaseItems = util.GetPhaseItems(this);\r\n    }\r\n    return this.phaseItems;\r\n  }\r\n\r\n  GetPhaseItem = (phaseName) => {\r\n    var list = this.PhaseItems;\r\n    var index = list.findIndex(x => x.Phase.Name === phaseName);\r\n    return list[index];\r\n  }\r\n}","import * as util from './MIPh_ItemUtil'\r\n\r\nexport default class MIPh_Item {\r\n  Phase\r\n\r\n  get Project(){\r\n    return this.Phase.Project\r\n  }\r\n\r\n  get MassItem(){\r\n    return this.Dict;\r\n  }\r\n\r\n  IsGet_TLS_LevelGroup = false\r\n  OnGet_TLS_LevelGroup_Func_Dict = []\r\n\r\n  get Get_TLS_LevelGroup(){\r\n    return this.get_TLS_LevelGroup\r\n  }\r\n  set Get_TLS_LevelGroup(v) {\r\n    this.OnGet_TLS_LevelGroup_Func_Dict.forEach(x => x.Value());\r\n    this.get_TLS_LevelGroup = v\r\n  }\r\n\r\n  tls_LevelGroup\r\n  get TLS_LevelGroup() {\r\n    if (!this.tls_LevelGroup) {\r\n      util.Handle_TLS_LevelGroup(this);\r\n    }\r\n    return this.tls_LevelGroup;\r\n  } set TLS_LevelGroup(v) {\r\n    this.tls_LevelGroup = v;\r\n    this.Get_TLS_LevelGroup = true;\r\n  }\r\n\r\n  OnGet_FullValue_Func_Dict = []\r\n  set Get_FullValue(v) {\r\n    this.OnGet_FullValue_Func_Dict.forEach(x => x.Value())\r\n  }\r\n\r\n  // bao gồm giá trị tầng điển hình\r\n  fullValue\r\n  get FullValue() {\r\n    if (!this.fullValue) {\r\n      util.Handle_FullValue(this);\r\n    }\r\n    return this.fullValue;\r\n  } set FullValue(v) {\r\n    this.fullValue = v;\r\n    this.Get_FullValue = true;\r\n  }\r\n}","import MIPh_Item from \"./MIPh_Item\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as mif from '../MassItemField'\r\n\r\n// Instance\r\nexport const get = (phase, dict) => {\r\n  var qI = new MIPh_Item();\r\n  qI.Phase = phase;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_TLS_LevelGroup = (q) => {\r\n  if (q.IsGet_TLS_LevelGroup) return undefined;\r\n  q.IsGet_TLS_LevelGroup = true;\r\n\r\n  var phase = q.Phase;\r\n\r\n  const getLevelGroup_Func = (tls) => {\r\n    var pi = GetValidTLS_PageItem(q, tls.Data);\r\n    return GetValidTLS_LevelGroup(q, pi);\r\n  }\r\n\r\n  var tls = phase.TypicalLevelSetting;\r\n  if (tls) {\r\n    q.TLS_LevelGroup = getLevelGroup_Func(tls);\r\n  } else {\r\n    phase.OnGetTypicalLevelSetting_Funcs.push(() => {\r\n      q.TLS_LevelGroup = getLevelGroup_Func(phase.TypicalLevelSetting);\r\n    })\r\n  }\r\n}\r\n\r\nexport const GetValidTLS_PageItem = (q, tls) => {\r\n  if (!tls) return undefined;\r\n  var validPi = undefined\r\n  tls.PageItems.forEach(x => {\r\n    if (!validPi && IsValidTLS_PageItem(q, x)) {\r\n      validPi = x;\r\n    }\r\n  })\r\n\r\n  return validPi;\r\n}\r\n\r\nexport const IsValidTLS_PageItem = (q, pageItem) => {\r\n  var filters = pageItem.Filters;\r\n  var isValid = true;\r\n  filters.forEach(x => {\r\n    if (isValid) {\r\n      var field = x.Field;\r\n      isValid = x.Values.includes(q.MassItem.GetValue(field));\r\n    }\r\n  })\r\n  return isValid;\r\n}\r\n\r\nexport const GetValidTLS_LevelGroup = (q, pageItem) => {\r\n  if (!pageItem) return undefined;\r\n  var validLg = undefined\r\n  pageItem.LevelGroups.forEach(x => {\r\n    // Kiểm tra Level hiện tại có trong tập hợp Level hay không\r\n    //if (!validLg && x.Levels.includes(q.GetValue(mif.level))) {\r\n\r\n    // Cách kiểm tra mới: Level primary tương ứng Leve hiện tại\r\n    if (!validLg && x.Primary === q.MassItem.GetValue(mif.level)) {\r\n      validLg = x;\r\n    }\r\n  })\r\n  return validLg;\r\n}\r\n\r\nexport const Handle_FullValue = (q) => {\r\n  if (q.IsGet_FullValue) return undefined;\r\n  q.IsGet_FullValue = true;\r\n\r\n  const getFullValue_Func = (lg) => {\r\n    var count = lg ? lg.Count : 1\r\n    var obj = q.MassItem.Value * count;\r\n    return obj;\r\n  }\r\n\r\n  if (q.TLS_LevelGroup || q.Get_TLS_LevelGroup) {\r\n    q.FullValue = getFullValue_Func(q.TLS_LevelGroup)\r\n  } else {\r\n    genUtil.Add(q.OnGet_TLS_LevelGroup_Func_Dict,\r\n      () => {\r\n        q.FullValue = getFullValue_Func(q.TLS_LevelGroup)\r\n      });\r\n  }\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport MassItem from './MassItem';\r\nimport * as elementUtil from '../../element/ElementUtil'\r\nimport * as mt from '../MassType'\r\nimport * as ut from '../../value/ValueUnit'\r\nimport * as mif from './MassItemField'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as phaseItemUtil from './phaseValue/MIPh_ItemUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const get = (q) => {\r\n  var qI = new MassItem();\r\n\r\n  qI._id = q._id;\r\n  qI.Value = q.value;\r\n  qI.Unit = q.unit;\r\n  qI.MassType = q.massType;\r\n  qI.Info = q.info;\r\n  qI.projectId = q.projectId;\r\n  qI.workpackageId = q.workpackageId;\r\n  qI.exportSetId = q.exportSetId;\r\n  qI.exportSetVersionId = q.exportSetVersionId;\r\n  qI.Element = q.Elements && q.Elements.length !== 0 ? q.Elements[0] : undefined;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefaultRebarMass = (project) => {\r\n  var qI = new MassItem();\r\n\r\n  qI.Unit = ut.kg;\r\n  qI.MassType = mt.rebar;\r\n  qI.Info = {}\r\n  qI.projectId = project._id;\r\n\r\n  const setExportSetData = (exportSet) => {\r\n    qI.exportSetId = exportSet._id;\r\n\r\n    var currentVersion = exportSet.CurrentVersion;\r\n    if (!currentVersion) {\r\n      exportSet.OnGetCurrentVersionDone_Func.push(() => {\r\n        currentVersion = exportSet.CurrentVersion;\r\n        qI.exportSetVersionId = currentVersion._id;\r\n      })\r\n    } else {\r\n      qI.exportSetVersionId = currentVersion._id;\r\n    }\r\n  }\r\n\r\n  var inputExportSet = project.InputExportSet;\r\n  if (!inputExportSet) {\r\n    project.OnGetInputExportSetDone_Funcs\r\n      .push(() => {\r\n        inputExportSet = project.InputExportSet;\r\n        setExportSetData(inputExportSet);\r\n      })\r\n  } else {\r\n    setExportSetData(inputExportSet);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetProject = (q) => {\r\n  var list = pmData().Project_Dict.Items;\r\n  var { projectId } = q;\r\n  var index = list.findIndex(x => x._id === projectId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const getAll = (apiData, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbmr/newlist\";\r\n\r\n  //var start = window.performance.now();\r\n\r\n  api.post(url, apiData, undefined, 2000000)\r\n    .then(response => response.data)\r\n    .then(data => {\r\n      //var end = window.performance.now();\r\n      //console.log(`Execution time: ${(end - start)/1000} s`);\r\n\r\n      if (!data) {\r\n        console.log('mass result undefined');\r\n        return;\r\n      }\r\n\r\n      var items = data.map(x => {\r\n        return get(x)\r\n      })\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getRebars = (projectId, handle) => {\r\n  if (!projectId) return;\r\n  var url = `https://api.bimdev.vn/api/hbmr/rebar?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = undefined;\r\n      if (!data) {\r\n        items = [];\r\n      } else {\r\n        var items = data.map(x => get(x))\r\n      }\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getByViewDetail = (_id, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbdv/massdetail?id=${_id}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var { viewDetail, masses } = data;\r\n      var isGetElement = mt.IsGetElement(viewDetail.massType);\r\n      var items = masses.map(x => get(x, isGetElement));\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\n// Property\r\nexport const GetWorkpackage = (q) => {\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  var { workpackageId } = q;\r\n  var index = list.findIndex(x => x._id === workpackageId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetPhases = (q) => {\r\n  var list = [];\r\n  var phases = pmData().Phase_Dict.Items;\r\n  var exportSetVersionId = q.exportSetVersionId;\r\n  phases.forEach(x => {\r\n    if (x.exportSetVersionIds.includes(exportSetVersionId)) {\r\n      list.push(x);\r\n    }\r\n  })\r\n  return list;\r\n}\r\n\r\nexport const GetValidPhasesByInput = (q) => {\r\n  var inputPhases = pmData().MassResultComp.Phases;\r\n  var phases = q.Phases;\r\n  var list = [];\r\n  phases.forEach(x => {\r\n    if (inputPhases.includes(x)) {\r\n      list.push(x);\r\n    }\r\n  })\r\n  return list;\r\n}\r\n\r\nexport const GetElementAsync = (q) => {\r\n  var elemId = q.elementId\r\n  if (elemId) {\r\n    elementUtil.GetById(elemId, (data) => {\r\n      q.Element = data\r\n      q.IsGetElement = true;\r\n      q.GetElementDone = true;\r\n    });\r\n  } else {\r\n    q.IsGetElement = true;\r\n  }\r\n}\r\n\r\nexport const Handle_TLS_LevelGroup = (q) => {\r\n  if (q.IsGet_TLS_LevelGroup) return undefined;\r\n  q.IsGet_TLS_LevelGroup = true;\r\n\r\n  var project = q.Project;\r\n\r\n  const getLevelGroup_Func = (tls) => {\r\n    var pi = GetValidTLS_PageItem(q, tls.Data);\r\n    return GetValidTLS_LevelGroup(q, pi);\r\n  }\r\n\r\n  var tls = project.TypicalLevelSetting;\r\n  if (tls) {\r\n    q.TLS_LevelGroup = getLevelGroup_Func(tls);\r\n  } else {\r\n    project.OnGetTypicalLevelSetting_Funcs.push(() => {\r\n      q.TLS_LevelGroup = getLevelGroup_Func(project.TypicalLevelSetting);\r\n    })\r\n  }\r\n}\r\n\r\nexport const GetValidTLS_PageItem = (q, tls) => {\r\n  if (!tls) return undefined;\r\n  var validPi = undefined\r\n  tls.PageItems.forEach(x => {\r\n    if (!validPi && IsValidTLS_PageItem(q, x)) {\r\n      validPi = x;\r\n    }\r\n  })\r\n\r\n  return validPi;\r\n}\r\n\r\nexport const IsValidTLS_PageItem = (q, pageItem) => {\r\n  var filters = pageItem.Filters;\r\n  var isValid = true;\r\n  filters.forEach(x => {\r\n    if (isValid) {\r\n      var field = x.Field;\r\n      isValid = x.Values.includes(q.GetValue(field));\r\n    }\r\n  })\r\n  return isValid;\r\n}\r\n\r\nexport const GetValidTLS_LevelGroup = (q, pageItem) => {\r\n  if (!pageItem) return undefined;\r\n  var validLg = undefined\r\n  pageItem.LevelGroups.forEach(x => {\r\n    // Kiểm tra Level hiện tại có trong tập hợp Level hay không\r\n    //if (!validLg && x.Levels.includes(q.GetValue(mif.level))) {\r\n\r\n    // Cách kiểm tra mới: Level primary tương ứng Leve hiện tại\r\n    if (!validLg && x.Primary === q.GetValue(mif.level)) {\r\n      validLg = x;\r\n    }\r\n  })\r\n  return validLg;\r\n}\r\n\r\nexport const Handle_FullValue = (q) => {\r\n  if (q.IsGet_FullValue) return undefined;\r\n  q.IsGet_FullValue = true;\r\n\r\n  const getFullValue_Func = (lg) => {\r\n    var count = lg ? lg.Count : 1\r\n    return q.Value * count;\r\n  }\r\n\r\n  if (q.TLS_LevelGroup || q.Get_TLS_LevelGroup) {\r\n    q.FullValue = getFullValue_Func(q.TLS_LevelGroup)\r\n  } else {\r\n    genUtil.Add(q.OnGet_TLS_LevelGroup_Func_Dict,\r\n      () => {\r\n        q.FullValue = getFullValue_Func(q.TLS_LevelGroup)\r\n      });\r\n  }\r\n}\r\n\r\nexport const GetPhaseItems = (q) => {\r\n  return q.Phases.map(x => phaseItemUtil.get(x, q));\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport MGI_Item from './MGI_Item'\r\nimport * as itemUtil from './MGI_ItemUtil'\r\nimport * as mgii_ct from './MGI_I_CreateType'\r\nimport * as rowUtil from '../MassRowUtil'\r\nimport * as util from './MassGroupItemUtil'\r\nimport { pmData } from '../../item/MassItemUtil'\r\n\r\nexport default class MassGroupItem {\r\n  Field\r\n  SubComponents = []\r\n  NotIncludeValues = []\r\n  IsHaveValueOrder\r\n  BindingRows\r\n  SupComponent\r\n\r\n  Items = []\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  get Index() {\r\n    return this.SupComponent.Items.indexOf(this);\r\n  }\r\n\r\n  get OrderItems() {\r\n    return this.Items;\r\n  }\r\n\r\n  get OrderValues() {\r\n    return this.Items.map(x => x.Value);\r\n  }\r\n\r\n  get ApiData() {\r\n    var items = this.Items.map(x => x.ApiData);\r\n\r\n    return {\r\n      _id: this.id,\r\n      field: this.Field,\r\n      subComponents: this.SubComponents.map(x => x.ApiData),\r\n      valueOrders: this.ValueOrders,\r\n      notIncludeValues: this.NotIncludeValues,\r\n      items\r\n    }\r\n  }\r\n\r\n  AddNotIncludeValue = (v) => {\r\n    var index = this.NotIncludeValues.indexOf(v);\r\n    if (index === -1) {\r\n      this.NotIncludeValues.push(v);\r\n    }\r\n  }\r\n\r\n  GetItem = (v, title) => {\r\n    var index = this.Items.findIndex(x => x.Value === v);\r\n    if (index === -1) {\r\n      var item = itemUtil.create(this)\r\n      item.Value = v;\r\n      item.Title = title;\r\n      this.Items.push(item);\r\n      return item;\r\n    }\r\n    return this.Items[index];\r\n  }\r\n\r\n  SupRows = []\r\n\r\n  On_AddSupRow_Func_Dict = []\r\n\r\n  AddSupRow = (v) => {\r\n    var list = this.SupRows;\r\n    if (list.indexOf(v) !== -1) return;\r\n\r\n    this.NewRow = v;\r\n    list.push(v);\r\n    this.HandleCreatedByUserRows();\r\n\r\n    this.On_AddSupRow_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  OnIsFirstSetSupRow_Funcs = []\r\n\r\n  isFirstSetSupRow\r\n  get IsFirstSetSupRow() {\r\n    return this.isFirstSetSupRow;\r\n  }\r\n  set IsFirstSetSupRow(v) {\r\n    this.isFirstSetSupRow = v;\r\n    this.OnIsFirstSetSupRow_Funcs.forEach(x => x());\r\n  }\r\n\r\n  get HaveMassItemSubComponents() {\r\n    return this.SubComponents.filter(x => x.IsHaveMassItem);\r\n  }\r\n\r\n  table\r\n  get Table() {\r\n    if (!this.table) {\r\n      this.table = util.GetTable(this);\r\n    }\r\n    return this.table;\r\n  }\r\n  set Table(v) {\r\n    this.table = v;\r\n  }\r\n\r\n  HandleCreatedByUserRows = () => {\r\n    var userItems = this.Items\r\n      .filter(x => x.CreateType === mgii_ct.byuser && !x.IsAdd_Done);\r\n\r\n    userItems.forEach(x => {\r\n      var value = x.Value;\r\n      var supRows = this.SupRows;\r\n      var supRow\r\n\r\n      var isValid = true;\r\n      if (!x.SupValue && supRows.length !== 0) {\r\n        supRow = supRows[0]\r\n      } else {\r\n        var index = supRows.findIndex(y => y.Name === x.SupValue);\r\n        if (index !== -1) {\r\n          supRow = supRows[index];\r\n        } else {\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      if (!isValid) return false;\r\n\r\n      // Gán nhãn IsAdd_Done\r\n      x.IsAdd_Done = true;\r\n\r\n      const addRow = (supRow) => {\r\n        var row = this.Table.GetRow(value, supRow);\r\n        row.FullValue = value;\r\n        row.IsCreatedByUser = true;\r\n\r\n        // Lưu vào danh sách Tạo bởi người dùng trong đối tượng Table\r\n        this.Table.CreatedByUser_Rows.push(row);\r\n        return row;\r\n      }\r\n\r\n      const handleRow = (row) => {\r\n        row.MassGroupItem = this;\r\n        handleNonField(row);\r\n      }\r\n\r\n      const handleNonField = (row) => {\r\n        var subMgcIndex = this.SubComponents.findIndex(y =>\r\n          y.Filter.Values.includes(x.Value))\r\n        if (subMgcIndex !== -1) {\r\n          var subMgi = this.SubComponents[subMgcIndex].Items[0];\r\n          subMgi.AddSupRow(row);\r\n        }\r\n      }\r\n\r\n      var replaceMgi = x.NewMGI;\r\n      if (replaceMgi) {\r\n        var supName = x.SupValue;\r\n\r\n        replaceMgi.GetItem(value);\r\n        this.Table.Handle_ReplaceMGI(replaceMgi,supName, addRow, handleRow);\r\n      } else {\r\n        handleRow(addRow(supRow));\r\n      }\r\n    })\r\n  }\r\n}","import * as util from './MassGroupComponentUtil'\r\n\r\nexport default class MassGroupComponent {\r\n  Filter\r\n  Items\r\n  SupItem\r\n\r\n  originComponent\r\n  get OriginComponent(){\r\n    if (!this.originComponent){\r\n      this.originComponent = util.GetOriginComponent(this);\r\n    }\r\n    return this.originComponent;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      filter : this.Filter ? this.Filter.ApiData : undefined,\r\n      items: this.Items.map(x => x.ApiData)\r\n    }\r\n  }\r\n\r\n  get AllItems(){\r\n    return this.OriginComponent.AllSubItems;\r\n  }\r\n\r\n  get AllSubItems(){\r\n    var list = [...this.Items];\r\n    this.Items.forEach(x => \r\n      x.SubComponents.forEach(y => list.push.apply(list, y.AllSubItems)));\r\n    return list;\r\n  }\r\n}","import MassGroupComponent from \"./MassGroupComponent\"\r\nimport * as filterUtil from '../../../filter/EntFilterUtil'\r\nimport * as itemUtil from './MassGroupItemUtil'\r\nimport { PMData } from \"../../../../single/model/PMData\"\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (data, supItem) => {\r\n  var qI = new MassGroupComponent();\r\n\r\n  qI.Filter = data.filter ? filterUtil.get(data.filter) : undefined;\r\n\r\n  qI.Items = data.items.map(x => itemUtil.getFromDb(x, qI));\r\n  qI.SupItem = supItem;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, supItem) => {\r\n  if (!q) return q;\r\n  var qI = new MassGroupComponent();\r\n  qI.Filter = filterUtil.Clone(q.Filter);\r\n\r\n  qI.Items = q.Items.map(x => itemUtil.Clone(x, qI));\r\n  qI.SupItem = supItem;\r\n  return qI;\r\n}\r\n\r\nexport const GetOriginComponent = (q) => {\r\n  return q.SupItem ? q.SupItem.SupComponent.OriginComponent : q;\r\n}","import MassGroupItem from \"./MassGroupItem\"\r\nimport * as compUtil from './MassGroupComponentUtil'\r\nimport * as itemUtil from './MGI_ItemUtil'\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (field, subComps, supCom) => {\r\n  var qI = new MassGroupItem();\r\n  qI.Field = field;\r\n  qI.SupComponent = supCom;\r\n  if (subComps) {\r\n    qI.SubComponents = subComps;\r\n  }\r\n  return qI;\r\n}\r\n\r\nexport const getFromDb = (data, supCom) => {\r\n  var qI = new MassGroupItem();\r\n  qI._id = data._id;\r\n  qI.Field = data.field;\r\n  qI.SupComponent = supCom;\r\n  qI.SubComponents = data.subComponents ? data.subComponents.map(x => compUtil.get(x, qI))\r\n    : [];\r\n\r\n  if (data.items) {\r\n    qI.Items = data.items.map(x => itemUtil.getFromDb(x, qI))\r\n      .filter(x => x.Value);\r\n    qI.IsHaveValueOrder = true;\r\n  } else {\r\n    qI.Items = []\r\n    qI.IsHaveValueOrder = false;\r\n  }\r\n\r\n  qI.NotIncludeValues = data.notIncludeValues ? data.notIncludeValues : [];\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, supCom) => {\r\n  if (!q) return q;\r\n  var qI = new MassGroupItem();\r\n  qI.id = q.id;\r\n  qI.Field = q.Field;\r\n  qI.Items = q.Items.map(x => itemUtil.Clone(x, qI));\r\n  qI.NotIncludeValues = [...q.NotIncludeValues];\r\n  qI.IsHaveValueOrder = q.IsHaveValueOrder;\r\n  qI.SupComponent = supCom;\r\n  qI.SubComponents = q.SubComponents.map(x => compUtil.Clone(x, qI));\r\n  return qI;\r\n}\r\n\r\nexport const GetTable = (q) => {\r\n  return q.SupComponent.SupItem.Table;\r\n}","import { MultiSelectVM } from \"./MultiSelectVM\";\r\n\r\nexport const get = (items, initialItems) => {\r\n  var qI = new MultiSelectVM();\r\n  qI.Items = items;\r\n  qI.InitialItems = initialItems;\r\n  return qI;\r\n}\r\n\r\nexport const GetTitleRender = (q) => {\r\n  return (item) => item.DisplayContent ? item.DisplayContent : `${item}`;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MultiSelectVMUtil'\r\n\r\nexport class MultiSelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      selectedIndexs: observable,\r\n      open : observable,\r\n      canOpen : observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  initialItems;\r\n  get InitialItems() {\r\n    return this.initialItems;\r\n  }\r\n  set InitialItems(v){\r\n    this.initialItems = v;\r\n    this.InitialIndexs = this.GetInitialIndexs();\r\n    this.SelectedIndexs = this.InitialIndexs;\r\n  }\r\n\r\n  initialIndexs;\r\n  get InitialIndexs() {\r\n    if (!this.initialIndexs) {\r\n      this.initialIndexs = this.GetInitialIndexs();\r\n    }\r\n    return this.initialIndexs;\r\n  }\r\n  set InitialIndexs(v){\r\n    this.initialIndexs = v;\r\n  }\r\n\r\n  GetInitialIndexs =() => {\r\n    var initialItems = this.InitialItems;\r\n    if (!initialItems) return [];\r\n    return initialItems.map(x => this.Items.indexOf(x)).filter(x => x !== -1);\r\n  }\r\n\r\n  selectedIndexs = []\r\n  get SelectedIndexs() {\r\n    return this.selectedIndexs;\r\n  }\r\n  set SelectedIndexs(v) {\r\n    this.selectedIndexs = v;\r\n    this.SelectedItems = this.GetSelectedItems();\r\n  }\r\n\r\n  selectedItems\r\n  get SelectedItems() {\r\n    if (!this.selectedItems) {\r\n      this.selectedItems = this.GetSelectedItems();\r\n    }\r\n    return this.selectedItems;\r\n  }\r\n  set SelectedItems(v) {\r\n    this.selectedItems = v;\r\n    if (this.OnSelectedItemChanged) {\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  GetSelectedItems = () => {\r\n    return this.SelectedIndexs.map(x => this.Items[x]);\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder() {\r\n    if (!this.placeholder) {\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender){\r\n      this.titleRender = util.GetTitleRender(this);\r\n    }\r\n    return this.titleRender;\r\n  }\r\n  set TitleRender (v){\r\n    this.titleRender = v;\r\n  }\r\n\r\n  open = false\r\n  get Open(){\r\n    return this.open;\r\n  }\r\n  set Open(v){\r\n    this.open = v;\r\n    if (this.OnSetOpen){\r\n      this.OnSetOpen(v);\r\n    }\r\n  }\r\n\r\n  canOpen = true\r\n  get CanOpen(){\r\n    return this.canOpen;\r\n  } set CanOpen(v){\r\n    this.canOpen = v;\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { MultiSelectVM } from \"./MultiSelectVM\";\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nconst { Option } = Select;\r\n\r\nclass MultiSelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MultiSelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndexs = v;\r\n  }\r\n\r\n  onDropdownVisibleChange = (v) => {\r\n    var data = this.state;\r\n    data.Open = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var style = this.props.style ? this.props.style : { width: '100%' }; \r\n    var { Placeholder, Items, SelectedIndexs, InitialIndexs } = data;\r\n\r\n    if (SelectedIndexs.length === 0) {\r\n      SelectedIndexs = InitialIndexs;\r\n      data.InitialIndexs = [];\r\n    }\r\n\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = data.TitleRender(item);\r\n\r\n      var id = undefined;\r\n      if (item === undefined){\r\n        id = genUtil.randomId();\r\n      }else if (typeof item === 'string' || !isNaN(item)) {\r\n        id = item;\r\n      } else {\r\n        id = item._id ? item._id : item.id;\r\n      }\r\n      return <Option key={id} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    return (\r\n      <>\r\n        <Select style={style}\r\n          mode=\"multiple\"\r\n          placeholder={Placeholder}\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={SelectedIndexs}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n          open={data.CanOpen && data.Open}\r\n          onDropdownVisibleChange={this.onDropdownVisibleChange}\r\n        >\r\n          {elems}\r\n        </Select>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MultiSelectView)","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class EntHoverVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsElementVisible: observable,\r\n    })\r\n  }\r\n\r\n  IsElementVisible = false;\r\n\r\n  ShowElement = () => {\r\n    this.IsElementVisible =  true;\r\n  }\r\n\r\n  HideElement = () => {\r\n    this.IsElementVisible =  false;\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport EntHoverVM from \"./EntHoverVM\";\r\n\r\nclass EntHoverView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntHoverVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var className = this.props.className;\r\n    if (!data.style) {\r\n      var style = this.props.style ? this.props.style : {};\r\n      if (!style.minWidth) {\r\n        style.minWidth = 150;\r\n      }\r\n      data.style = style;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={className} style={data.style}\r\n          onMouseEnter={data.ShowElement}\r\n          onMouseLeave={data.HideElement}>\r\n          {data.IsElementVisible ? data.Element : ''}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EntHoverView)","import { SelectVM } from \"./SelectVM\";\r\n\r\nexport const get = (items, initialItem) => {\r\n  var qI = new SelectVM();\r\n  qI.Items = items;\r\n  qI.InitialItem = initialItem;\r\n  return qI;\r\n}\r\n\r\nexport const GetTitleRender = (q) => {\r\n  return (item) => item.DisplayContent ? item.DisplayContent : `${item}`;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './SelectVMUtil'\r\n\r\nexport class SelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable,\r\n      selectedIndex : observable,\r\n      CanClear :observable,\r\n      open : observable,\r\n      canOpen : observable,\r\n      isDisabled : observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = [];\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n  }\r\n\r\n  initialItem = undefined\r\n  get InitialItem() {\r\n    return this.initialItem;\r\n  }\r\n  set InitialItem(v){\r\n    this.initialItem = v;\r\n    this.InitialIndex = this.GetInitialIndex();\r\n    this.SelectedIndex = this.InitialIndex;\r\n  }\r\n\r\n  initialIndex\r\n  get InitialIndex(){\r\n    if (!this.initialIndex){\r\n      this.initialIndex = this.GetInitialIndex();\r\n    }\r\n    return this.initialIndex;\r\n  }\r\n  set InitialIndex(v){\r\n    this.initialIndex = v;\r\n  }\r\n\r\n  GetInitialIndex = () => {\r\n    var index = this.Items.indexOf(this.InitialItem);\r\n    return index !== -1 ? index : null;\r\n  }\r\n\r\n  selectedIndex = undefined\r\n  get SelectedIndex(){\r\n    return this.selectedIndex;\r\n  }\r\n  set SelectedIndex(v){\r\n    this.selectedIndex = v;\r\n    this.SelectedItem = this.GetSelectedItem();\r\n  }\r\n\r\n  selectedItem\r\n  get SelectedItem (){\r\n    if (!this.selectedItem){\r\n      this.selectedItem = this.GetSelectedItem();\r\n    }\r\n    return this.selectedItem;\r\n  }\r\n  set SelectedItem (v) {\r\n    this.selectedItem = v;\r\n    if (this.OnSelectedItemChanged){\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  GetSelectedItem = () => {\r\n    var index = this.SelectedIndex;\r\n    if (index === -1) return undefined;\r\n    return this.Items[index];\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder(){\r\n    if (!this.placeholder){\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v){\r\n    this.placeholder = v;\r\n  }\r\n\r\n  CanClear = false\r\n\r\n  Clear = () => {\r\n    this.SelectedIndex = null\r\n  }\r\n  \r\n  get DivStyle() {\r\n    return this.CanClear ? { \r\n      position: 'relative', \r\n      padding: '0 22px 0 0' \r\n    } : {};\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender){\r\n      this.titleRender = util.GetTitleRender(this);\r\n    }\r\n    return this.titleRender;\r\n  }\r\n  set TitleRender (v){\r\n    this.titleRender = v;\r\n  }\r\n\r\n  open = false\r\n  get Open(){\r\n    return this.open;\r\n  }\r\n  set Open(v){\r\n    this.open = v;\r\n    if (this.OnSetOpen){\r\n      this.OnSetOpen(v);\r\n    }\r\n  }\r\n\r\n  canOpen = true\r\n  get CanOpen(){\r\n    return this.canOpen;\r\n  } set CanOpen(v){\r\n    this.canOpen = v;\r\n  }\r\n\r\n  isDisabled = false\r\n  get IsDisabled(){\r\n    return this.isDisabled;\r\n  } set IsDisabled(v){\r\n    this.isDisabled = v;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class FloatItemVM {\r\n  location\r\n\r\n  className\r\n  getClassName = () => {\r\n    if (!this.className){\r\n      this.className = `float ${this.location}`;\r\n    }\r\n    return this.className\r\n  }\r\n}","import FloatItemVM from \"./FloatItemVM\";\r\n\r\nexport const get = (loc) => {\r\n  var qI = new FloatItemVM();\r\n  qI.location = loc;\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport * as floatItemVMUtil from './FloatItemVMUtil'\r\n\r\nclass FloatItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = floatItemVMUtil.get('top right', 'Test')\r\n    }else{\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <span className={data.getClassName()}>{this.getWrapperContent()}</span>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FloatItemView);\r\n","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { SelectVM } from \"./SelectVM\";\r\nimport * as floatItemVMUtil from '../float/FloatItemVMUtil'\r\nimport FloatItemView from \"../float/FloatItemView\";\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport './Select.css'\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new SelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  onDropdownVisibleChange = (v) => {\r\n    var data = this.state;\r\n    data.Open = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var className = this.props.className ? this.props.className : ''\r\n    var style = this.props.style ? this.props.style : { width: '100%' };\r\n    var { Placeholder, Items, SelectedIndex, InitialIndex } = data;\r\n\r\n    if (SelectedIndex === -1) {\r\n      SelectedIndex = InitialIndex;\r\n      data.InitialIndex = -1;\r\n    }\r\n\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = data.TitleRender(item);\r\n\r\n      var id = undefined;\r\n      if (item === undefined) {\r\n        id = genUtil.randomId();\r\n      } else if (typeof item === 'string' || !isNaN(item)) {\r\n        id = item;\r\n      } else {\r\n        id = item._id ? item._id : item.id;\r\n      }\r\n      return <Option key={id} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    var floatElem = ''\r\n    if (data.CanClear) {\r\n      var floatItemStore = floatItemVMUtil.get('right')\r\n      floatItemStore.wrapper = <Button size='small' type='primary'\r\n        onClick={data.Clear}>x</Button>\r\n\r\n      floatElem = <FloatItemView store={floatItemStore} />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={`select__wrapper ${className}`}\r\n          style={data.DivStyle} >\r\n          {floatElem}\r\n          <Select style={style}\r\n            showSearch\r\n            placeholder={Placeholder}\r\n            optionFilterProp=\"children\"\r\n            onChange={this.onValueChange}\r\n            value={SelectedIndex}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            open={data.CanOpen && data.Open}\r\n            onDropdownVisibleChange={this.onDropdownVisibleChange}\r\n            disabled={data.IsDisabled}\r\n          >\r\n            {elems}\r\n          </Select>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(SelectView)","export const inside = 'inside'\r\nexport const lower = 'lower'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ReplaceRowLocationFactoryUtil'\r\nimport { PMData } from '../../../../single/model/PMData';\r\nimport * as lt from './RRLF_LocationType'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance\r\n}\r\n\r\nexport default class ReplaceRowLocationFactory {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Location: observable,\r\n    })\r\n  }\r\n\r\n  ReferenceRow\r\n  Location = lt.inside\r\n\r\n  get Color(){\r\n    return util.GetColor(this);\r\n  }\r\n\r\n  get ButtonStyle(){\r\n    return {\r\n      width: 50,\r\n      backgroundColor: this.Color,\r\n      border: 'none'\r\n    };\r\n  }\r\n\r\n  ToggleLocation = () =>{\r\n    switch (this.Location) {\r\n      case lt.inside:\r\n        this.Location = lt.lower;\r\n        break;\r\n      case lt.lower:\r\n        this.Location = lt.inside;\r\n        break;\r\n    }\r\n  }\r\n}","import * as lt from './RRLF_LocationType'\r\n\r\nexport const GetColor = (v) => {\r\n  switch (v.Location) {\r\n    case lt.inside:\r\n      return \"#52c41a\";\r\n    case lt.lower:\r\n      return \"#faad14\";\r\n  }\r\n}","export const input = 'input'\r\nexport const select = 'select'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './TwoCol_SelectVMUtil'\r\nimport * as genUtil from '../../../util/generalUtil'\r\n\r\nexport class TwoCol_SelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      availableItems: observable,\r\n      selectedItems: observable,\r\n      inputTitle: observable,\r\n      outputTitle: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    this.AvailableItems = [...this.Items];\r\n    this.SelectedItems = [];\r\n  }\r\n\r\n  inputTitle = undefined\r\n  get InputTitle(){\r\n    if (!this.inputTitle){\r\n      this.inputTitle = 'Dữ liệu input'\r\n    }\r\n    return this.inputTitle;\r\n  } set InputTitle(v){\r\n    this.inputTitle = v;\r\n  }\r\n\r\n  outputTitle = undefined\r\n  get OutputTitle(){\r\n    if (!this.outputTitle){\r\n      this.outputTitle = 'Dữ liệu output'\r\n    }\r\n    return this.outputTitle;\r\n  } set OutputTitle(v){\r\n    this.outputTitle = v;\r\n  }\r\n\r\n  availableItems = undefined\r\n  get AvailableItems() {\r\n    return this.availableItems;\r\n  } set AvailableItems(v) {\r\n    this.availableItems = v;\r\n  }\r\n\r\n  selectedItems = []\r\n  get SelectedItems() {\r\n    return this.selectedItems;\r\n  } set SelectedItems(v) {\r\n    this.selectedItems = v;\r\n  }\r\n\r\n  GetKey = (item) => {\r\n    if (typeof item === 'string') return item;\r\n    var id = item.id ? item.id : genUtil.newGUID();\r\n    return id;\r\n  }\r\n\r\n  Select = (item) => {\r\n    var index1 = this.AvailableItems.indexOf(item);\r\n    this.AvailableItems.splice(index1, 1);\r\n\r\n    this.SelectedItems.push(item);\r\n\r\n    this.IsChanged = true;\r\n  }\r\n\r\n  Unselect = (item) => {\r\n    var index1 = this.SelectedItems.indexOf(item);\r\n    this.SelectedItems.splice(index1, 1);\r\n\r\n    var index = this.Items.indexOf(item);\r\n    if (index < this.AvailableItems.length) {\r\n      this.AvailableItems.splice(index, 0, item);\r\n    } else {\r\n      this.AvailableItems.push(item);\r\n    }\r\n\r\n    this.IsChanged = true;\r\n  }\r\n\r\n  set IsChanged(v) {\r\n    if (this.OnSelectedItemChanged) {\r\n      this.OnSelectedItemChanged(this.SelectedItems);\r\n    }\r\n  }\r\n\r\n  render\r\n  get Render() {\r\n    if (!this.render) {\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v) {\r\n    this.render = v;\r\n  }\r\n}","import { TwoCol_SelectVM } from \"./TwoCol_SelectVM\";\r\n\r\n// Instance\r\nexport const get = (items, render, inputTitle, outputTitle) => {\r\n  var qI = new TwoCol_SelectVM();\r\n\r\n  qI.Items = items;\r\n  qI.Render = render;\r\n  qI.InputTitle = inputTitle;\r\n  qI.OutputTitle = outputTitle;\r\n  \r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return get(\r\n    [\r\n      'a', 'b', 'c',\r\n      'd', 'e', 'f',\r\n      'g', 'h', 'i',\r\n      'j', 'k', 'q',\r\n      'r', 's', 't',\r\n    ]\r\n  )\r\n}\r\n\r\n// Property\r\nexport const GetRender = (q) => {\r\n  return (item) => item;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { TwoCol_SelectVM } from \"./TwoCol_SelectVM\";\r\nimport * as util from './TwoCol_SelectVMUtil'\r\nimport './TwoCol_Select.css'\r\n\r\nclass TwoCol_SelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = util.GetTest();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndexs = v;\r\n  }\r\n\r\n  onDropdownVisibleChange = (v) => {\r\n    var data = this.state;\r\n    data.Open = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var style = this.props.style;\r\n\r\n    return (\r\n      <>\r\n        <table className='tc_table'>\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <div className='tc_table__title'>\r\n                  <span>\r\n                    {data.InputTitle}\r\n                  </span>\r\n                </div>\r\n              </th>\r\n              <th>\r\n                <div className='tc_table__title'>\r\n                  {data.OutputTitle}\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <span className='tc_select__partition__items'>\r\n                  {data.AvailableItems.map(x => {\r\n                    return <span key={data.GetKey(x)} onClick={() => data.Select(x)}>\r\n                      {data.Render(x)}\r\n                    </span>\r\n                  })}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className='tc_select__partition__items'>\r\n                  {data.SelectedItems.map(x => {\r\n                    return <span key={data.GetKey(x)} onClick={() => data.Unselect(x)}>\r\n                      {data.Render(x)}\r\n                    </span>\r\n                  })}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TwoCol_SelectView)","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassRow_ToolElementUtil'\r\n\r\nexport default class MassRow_ToolElement {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      editable_TitleVM_RenderState: observable\r\n    })\r\n  }\r\n\r\n  get Editable_TitleVM() {\r\n    return this.Dict.Editable_TitleVM;\r\n  }\r\n\r\n  editable_TitleVM_RenderState= undefined\r\n  get Editable_TitleVM_RenderState(){\r\n    if (this.editable_TitleVM_RenderState === undefined){\r\n      this.editable_TitleVM_RenderState =\r\n        util.GetEditable_TitleVM_RenderState(this);\r\n    }\r\n    return this.editable_TitleVM_RenderState;\r\n  } set Editable_TitleVM_RenderState(v){\r\n    this.editable_TitleVM_RenderState = v;\r\n\r\n    this.Editable_TitleVM.RenderState= v;\r\n  }\r\n\r\n  Method = (name) => {\r\n    return this.Dict[name];\r\n  }\r\n}","\r\n// Property\r\nexport const GetEditable_TitleVM_RenderState = (q) => {\r\n  return q.Editable_TitleVM.RenderState;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport MassRow_ToolElement from \"./MassRow_ToolElement\";\r\nimport { Button } from \"antd\";\r\nimport { DownCircleOutlined, ReloadOutlined, UpCircleOutlined } from \"@ant-design/icons\";\r\nimport * as trs from '../../../../../text/TextRenderState';\r\n\r\n\r\nclass MassRow_ToolElementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassRow_ToolElement();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.Editable_TitleVM_RenderState === trs._default ?\r\n          <Button size='small' type='primary'\r\n            className='btn-warning'\r\n            onClick={() => data.Editable_TitleVM_RenderState = trs.edit}>\r\n            e\r\n          </Button> :\r\n          ''}\r\n\r\n        <Button size='small' type='primary'\r\n          className='btn-success'\r\n          onClick={data.Method('MoveUp')}>\r\n          <UpCircleOutlined />\r\n        </Button>\r\n        <Button size='small' type='primary'\r\n          className='btn-success'\r\n          onClick={data.Method('MoveDown')}>\r\n          <DownCircleOutlined />\r\n        </Button>\r\n\r\n        <Button type='primary' size='small'\r\n          className='btn-warning'\r\n          onClick={data.Method('OpenModal')}>...</Button>\r\n\r\n        <Button size='small' type='primary'\r\n          className='btn-success'\r\n          onClick={data.Method('AddSub')}>+</Button>\r\n        <Button type='primary' size='small' danger\r\n          onClick={data.Method('Delete')}>x</Button>\r\n\r\n        <Button type='primary' size='small'\r\n          onClick={data.Method('UpdateCells')}>\r\n          <ReloadOutlined />\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassRow_ToolElementView)","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil';\r\nimport * as editTextUtil from '../../../../text/EditableTextVMUtil';\r\nimport * as trs from '../../../../text/TextRenderState';\r\nimport * as util from './MassRowUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { EntFilter } from '../../filter/EntFilter';\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as mgiUtil from './rowgroup/MassGroupItemUtil'\r\nimport MassGroupComponent from './rowgroup/MassGroupComponent';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport MultiSelectView from '../../../../select/MultiSelectView';\r\nimport { Col, Row, Space, Button, Switch, message, Popover } from 'antd';\r\nimport EntHoverVM from '../../../../hover/EntHoverVM';\r\nimport EntHoverView from '../../../../hover/EntHoverView';\r\nimport { DownCircleOutlined, EnterOutlined, InfoCircleOutlined, UpCircleOutlined } from '@ant-design/icons';\r\nimport SelectView from '../../../../select/SelectView';\r\nimport ReplaceRowLocationFactory from './location/ReplaceRowLocationFactory';\r\nimport * as rrlf_lt from './location/RRLF_LocationType';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport InputView from '../../../../input/InputView';\r\nimport * as mif from '../item/MassItemField'\r\nimport * as selectUtil from '../../../../select/SelectVMUtil';\r\nimport * as mr_f_it from './MassRow_Field_InputType'\r\nimport NewInputView from '../../../../input/NewInputView';\r\nimport * as tc_selectUtil from '../../../../select/twocol/TwoCol_SelectVMUtil';\r\nimport TwoCol_SelectView from \"../../../../select/twocol/TwoCol_SelectView\";\r\nimport MassRow_ToolElementView from './tool/MassRow_ToolElementView';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n\r\nexport default class MassRow {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      rank: observable,\r\n      isShowSub: observable,\r\n      isHaveSub: observable,\r\n      IsToolVisible: observable,\r\n      SubItems: observable,\r\n      IsModalVisible: observable,\r\n      title: observable,\r\n      FieldInputType: observable,\r\n      IsHaveAdditionInformation: observable,\r\n      AdditionInformation: observable,\r\n      Is_SelectSubItems_ModalOpen: observable,\r\n      Temp_SelectSubItems: observable,\r\n      isShow_RawValue: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this);\r\n  }\r\n\r\n  supItem\r\n  get SupItem() {\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v) {\r\n    this.supItem = v;\r\n    this.CurrentList = undefined;\r\n    this.Rank = undefined;\r\n  }\r\n\r\n  currentList\r\n  get CurrentList() {\r\n    if (!this.currentList) {\r\n      this.currentList = this.SupItem ? this.SupItem.SubItems : this.Table.MainRows;\r\n    }\r\n    return this.currentList;\r\n  }\r\n  set CurrentList(v) {\r\n    this.currentList = v;\r\n  }\r\n\r\n  get Table() {\r\n    return this.Dict;\r\n  }\r\n\r\n  SubItems = []\r\n\r\n  get AllItems() {\r\n    var list = [];\r\n    list.push(this);\r\n    this.SubItems.forEach(x => {\r\n      list.push.apply(list, x.AllItems)\r\n    });\r\n    return list;\r\n  }\r\n\r\n  // Cells\r\n  cells\r\n  get Cells() {\r\n    if (!this.cells) {\r\n      this.cells = util.Get_Cells(this)\r\n    }\r\n\r\n    return this.cells;\r\n  }\r\n\r\n  UpdateCells = () => {\r\n    this.Cells.forEach(x => x.UpdateData());\r\n  }\r\n\r\n  get Items() {\r\n    var items = this.Cells.reduce((a, b) => a.concat(b.Items), []);\r\n    items = items.filter((x, i, a) => a.indexOf(x) === i);\r\n    return items;\r\n  }\r\n\r\n  // MassGroupItem\r\n  massGroupItem\r\n  get MassGroupItem() {\r\n    return this.massGroupItem;\r\n  }\r\n  set MassGroupItem(v) {\r\n    this.massGroupItem = v;\r\n    if (v) {\r\n      var title = v.GetItem(this.FullValue).Title;\r\n      this.Title = title;\r\n    }\r\n  }\r\n\r\n  replaceMGI\r\n  get ReplaceMGI() {\r\n    return this.replaceMGI\r\n  } set ReplaceMGI(v) {\r\n    this.replaceMGI = v;\r\n  }\r\n\r\n  original_SubMassGroupItem\r\n  get Original_SubMassGroupItem() {\r\n    if (!this.original_SubMassGroupItem) {\r\n      this.original_SubMassGroupItem = util.GetOriginal_SubMassGroupItem(this);\r\n    }\r\n    return this.original_SubMassGroupItem\r\n  }\r\n  set Original_SubMassGroupItem(v) {\r\n    this.original_SubMassGroupItem = v;\r\n  }\r\n\r\n  replace_SubMassGroupItem\r\n  get Replace_SubMassGroupItem() {\r\n    if (!this.replace_SubMassGroupItem) {\r\n      this.replace_SubMassGroupItem = util.GetReplace_SubMassGroupItem(this);\r\n    }\r\n    return this.replace_SubMassGroupItem\r\n  }\r\n  set Replace_SubMassGroupItem(v) {\r\n    this.replace_SubMassGroupItem = v;\r\n  }\r\n\r\n  get SubMassGroupItem() {\r\n    return this.Replace_SubMassGroupItem ?\r\n      this.Replace_SubMassGroupItem : this.Original_SubMassGroupItem\r\n  } set SubMassGroupItem(v) {\r\n    this.Replace_SubMassGroupItem = v;\r\n  }\r\n\r\n  field\r\n  get Field() {\r\n    if (!this.field) {\r\n      this.field = this.MassGroupItem ? this.MassGroupItem.Field : undefined;\r\n    }\r\n    return this.field;\r\n  } set Field(v) {\r\n    this.field = v;\r\n  }\r\n\r\n  isReplaced\r\n  get IsReplaced() {\r\n    return this.isReplaced;\r\n  } set IsReplaced(v) {\r\n    this.isReplaced = v;\r\n    var obj = this.IsHaveAdditionInformation\r\n      = util.Get_IsHaveAdditionInformation(this);\r\n\r\n    if (obj) {\r\n      this.AdditionInformation = util.Get_AdditionInformation(this);\r\n    }\r\n  }\r\n\r\n  original_SupRow\r\n  get Original_SupRow() {\r\n    if (!this.original_SupRow) {\r\n      this.original_SupRow = util.Get_Original_SupRow(this);\r\n    }\r\n    return this.original_SupRow;\r\n  } set Original_SupRow(v) {\r\n    this.original_SupRow = v;\r\n  }\r\n\r\n  get Original_Full_SupRows() {\r\n    return util.Get_Original_Full_SupRows(this);\r\n  }\r\n\r\n  get OrderMGI() {\r\n    return this.ReplaceMGI ? this.ReplaceMGI : this.MassGroupItem;\r\n  }\r\n\r\n  subFields\r\n  get SubFields() {\r\n    if (!this.subFields) {\r\n      this.subFields = util.GetSubFields(this);\r\n    }\r\n    return this.subFields;\r\n  }\r\n  set SubFields(v) {\r\n    this.subFields = v;\r\n  }\r\n\r\n  TempSubFields\r\n\r\n  isShowSub = true\r\n  get IsShowSub() {\r\n    return this.isShowSub;\r\n  }\r\n  set IsShowSub(v) {\r\n    this.isShowSub = v;\r\n    this.ToggleButtonContentVM.Content = util.GetToggleButtonContent(this);\r\n  }\r\n\r\n  toggleButtonContent\r\n  get ToggleButtonContent() {\r\n    if (!this.toggleButtonContent) {\r\n      this.toggleButtonContent = util.GetToggleButtonContent(this);\r\n    }\r\n    return this.toggleButtonContent;\r\n  }\r\n  set ToggleButtonContent(v) {\r\n    this.toggleButtonContent = v;\r\n  }\r\n\r\n  toggleButtonContentVM\r\n  get ToggleButtonContentVM() {\r\n    if (!this.toggleButtonContentVM) {\r\n      var obj = this.toggleButtonContentVM = textVMUtil.get(this.ToggleButtonContent);\r\n      obj.OnSetContent = (v) => this.ToggleButtonContent = v;\r\n    }\r\n    return this.toggleButtonContentVM;\r\n  }\r\n\r\n  rank = undefined\r\n  get Rank() {\r\n    if (this.rank === undefined) {\r\n      this.rank = util.GetRank(this);\r\n    }\r\n    return this.rank;\r\n  }\r\n  set Rank(v) {\r\n    this.rank = v;\r\n    this.SubItems.forEach(x => x.Rank = undefined);\r\n  }\r\n\r\n  isHaveSub = undefined\r\n  get IsHaveSub() {\r\n    if (!this.isHaveSub) {\r\n      this.isHaveSub = util.GetIsHaveSub(this);\r\n    }\r\n    return this.isHaveSub;\r\n  }\r\n  set IsHaveSub(v) {\r\n    this.isHaveSub = v;\r\n  }\r\n\r\n  get Style() {\r\n    return util.GetStyle(this);\r\n  }\r\n\r\n  IsToolVisible = false\r\n\r\n  FieldInputType = mr_f_it.select\r\n\r\n  Toggle_FieldInputType = () => {\r\n    switch (this.FieldInputType) {\r\n      case mr_f_it.select:\r\n        this.TempField = this.FieldInputVM.Content;\r\n        this.FieldInputType = mr_f_it.input;\r\n        break;\r\n      case mr_f_it.input:\r\n        this.FieldSelectVM.InitialItem = this.TempField\r\n        this.FieldInputType = mr_f_it.select;\r\n        break;\r\n    }\r\n  }\r\n\r\n  TempField\r\n\r\n  fieldInputVM\r\n  get FieldInputVM() {\r\n    if (!this.fieldInputVM) {\r\n      var obj = this.fieldInputVM = textVMUtil.get();\r\n      obj.onSetContent = (v) => this.TempField = v;\r\n    }\r\n    return this.fieldInputVM;\r\n  }\r\n\r\n  fieldSelectVM\r\n  get FieldSelectVM() {\r\n    if (!this.fieldSelectVM) {\r\n      this.fieldSelectVM = util.GetFieldSelectVM(this);\r\n    }\r\n    return this.fieldSelectVM;\r\n  }\r\n\r\n  get FieldInputElement() {\r\n    return <>\r\n      <div className='massrow__fieldinput_wrapper'>\r\n        <div className='massrow__fieldinput'>\r\n          {this.FieldInputType === mr_f_it.select ?\r\n            <SelectView store={this.FieldSelectVM} /> :\r\n            <NewInputView store={this.FieldInputVM} />\r\n          }\r\n        </div>\r\n        {this.IsCreatedByUser ?\r\n          <Switch unCheckedChildren='inp' checkedChildren='sel'\r\n            checked={this.FieldInputType === mr_f_it.select}\r\n            onChange={this.Toggle_FieldInputType} />\r\n          : ''}\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  subFieldSelectVM\r\n  get SubFieldSelectVM() {\r\n    if (!this.subFieldSelectVM) {\r\n      this.subFieldSelectVM = util.GetSubFieldSelectVM(this);\r\n    }\r\n    return this.subFieldSelectVM;\r\n  }\r\n\r\n  // Title\r\n  title = undefined\r\n  get Title() {\r\n    // if (!this.title) {\r\n    //   util.Handle_Title(this);\r\n    // }\r\n    return this.title;\r\n  }\r\n  set Title(v) {\r\n    this.title = v;\r\n    this.TitleVM.Content = v;\r\n    this.Editable_TitleVM.Content = v;\r\n  }\r\n\r\n  titleVM\r\n  get TitleVM() {\r\n    if (!this.titleVM) {\r\n      this.titleVM = textVMUtil.get(this.Title, 'tiêu đề');\r\n    }\r\n    return this.titleVM;\r\n  }\r\n\r\n  editable_TitleVM\r\n  get Editable_TitleVM() {\r\n    if (!this.editable_TitleVM) {\r\n      var obj = this.editable_TitleVM =\r\n        editTextUtil.get(this.Title, true, true);\r\n\r\n      obj.Is_Edit_Visible = false\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === trs._default) {\r\n            // Lưu thông tin Title\r\n            var title = this.title = obj.Content;\r\n            this.IsShow_RawValue = util.GetIsShow_RawValue(this);\r\n            this.MassGroupItem.GetItem(this.FullValue).Title = title;\r\n\r\n            this.ToolElement.editable_TitleVM_RenderState = obj.RenderState\r\n          }\r\n        },\r\n        false\r\n      )\r\n    }\r\n    return this.editable_TitleVM;\r\n  }\r\n\r\n  get LocationStorageList() {\r\n    return this.Table.AllRows;\r\n  }\r\n\r\n  locationSelectVM\r\n  get LocationSelectVM() {\r\n    if (!this.locationSelectVM) {\r\n      this.locationSelectVM = util.GetLocationSelectVM(this);\r\n    }\r\n    return this.locationSelectVM;\r\n  }\r\n\r\n  // Value lồng giữa Row hiện tại và SupRow\r\n  // Ví dụ: concrete__Tầng 6__Dầm\r\n  FullValue\r\n\r\n  GetCellByColumn = (col) => {\r\n    var index = this.Cells.findIndex(x => x.Column === col);\r\n    return index !== -1 ? this.Cells[index] : undefined;\r\n  }\r\n\r\n  UpdateData = () => {\r\n    // trước là sup Row nhưng sau khi di chuyển vị trí\r\n    // đã mất các item con bên trong\r\n    // => tiến hành xóa đối tượng\r\n    if (this.Is_Original_SupRow && this.SubItems.length === 0) {\r\n      this.CurrentList.splice(this.Index, 1);\r\n      return;\r\n    }\r\n\r\n    this.Rank = util.GetRank(this);\r\n    this.IsHaveSub = util.GetIsHaveSub(this);\r\n\r\n    this.SubItems = util.Order(this.SubItems);\r\n    this.SubItems.forEach(x => x.UpdateData());\r\n  }\r\n\r\n  ToggleSub = () => {\r\n    this.IsShowSub = !this.IsShowSub;\r\n  }\r\n\r\n  SetSubFields = () => {\r\n    var tempSubFields = this.TempSubFields ? this.TempSubFields : [];\r\n\r\n    var isSame = true;\r\n    if (this.SubFields.length !== tempSubFields.length) {\r\n      isSame = false;\r\n    } else {\r\n      this.SubFields.forEach((x, i) => {\r\n        if (isSame && x !== tempSubFields[i]) {\r\n          isSame = false;\r\n        }\r\n      })\r\n    }\r\n    if (isSame) return;\r\n    this.SubFields = tempSubFields;\r\n\r\n    var filter = new EntFilter();\r\n    filter.ValueType = fvt.bystring;\r\n    filter.StringFilterType = sft.byequal;\r\n    filter.Values = [this.FullValue];\r\n\r\n    var supMgi = this.MassGroupItem;\r\n\r\n    var mgc = new MassGroupComponent();\r\n    mgc.SubItem = supMgi;\r\n    mgc.Filter = filter;\r\n\r\n    var subMgis = mgc.Items = tempSubFields.map(x => mgiUtil.get(x, null, mgc));\r\n\r\n    var subComps = supMgi.SubComponents;\r\n    if (this.SubMassGroupComponent) {\r\n      var index = subComps.indexOf(this.SubMassGroupComponent);\r\n      subComps[index] = mgc;\r\n    } else {\r\n      subComps.push(mgc);\r\n    }\r\n\r\n    this.SubMassGroupComponent = mgc;\r\n    this.SubItems = [];\r\n    this.Original_SubMassGroupItem = undefined;\r\n\r\n    if (subMgis.length !== 0) {\r\n      var table = this.Table;\r\n      this.Items.forEach(x => {\r\n        // Xử lý Item theo ColumnField: Project ... (single value)\r\n        // hoặc theo Phase (multiple values)\r\n        switch (table.ColumnField) {\r\n          case mif.Phase:\r\n            x.ValidPhasesByInput.forEach(y =>\r\n              table.HandleItem(x, y, mgc, this));\r\n            break;\r\n          default:\r\n            table.HandleItem(x, x.GetValue(table.ColumnField), mgc, this);\r\n            break;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  MoveUp = () => {\r\n    var list = this.CurrentList;\r\n    var index = this.Index;\r\n    if (0 === index) return;\r\n\r\n    var orderItems = this.OrderMGI.OrderItems;\r\n    var orderValues = this.OrderMGI.OrderValues;\r\n    var mgiIndex1 = orderValues.indexOf(list[index].FullValue);\r\n    var mgiIndex2 = orderValues.indexOf(list[index - 1].FullValue);\r\n\r\n    genUtil.MoveItem(list, index, index - 1);\r\n    genUtil.MoveItem(orderItems, mgiIndex1, mgiIndex2);\r\n  }\r\n\r\n  MoveDown = () => {\r\n    var list = this.CurrentList;\r\n    var index = this.Index;\r\n    if (list.length - 1 === index) return;\r\n\r\n    var orderItems = this.OrderMGI.OrderItems;\r\n    var orderValues = this.OrderMGI.OrderValues;\r\n    var mgiIndex1 = orderValues.indexOf(list[index].FullValue);\r\n    var mgiIndex2 = orderValues.indexOf(list[index + 1].FullValue);\r\n\r\n    genUtil.MoveItem(list, index, index + 1);\r\n    genUtil.MoveItem(orderItems, mgiIndex1, mgiIndex2);\r\n  }\r\n\r\n  AddSub = () => {\r\n    util.Add(this, this.Table);\r\n  }\r\n\r\n  Delete = () => {\r\n    var supItem = this.SupItem;\r\n    var list = this.CurrentList;\r\n\r\n    if (this.IsCreatedByUser) {\r\n      this.MassGroupItem.GetItem(this.FullValue).Delete();\r\n    } else {\r\n      this.MassGroupItem.AddNotIncludeValue(this.FullValue);\r\n    }\r\n\r\n    list.splice(this.Index, 1);\r\n\r\n    if (supItem) {\r\n      if (list.length === 0) {\r\n        var supList = supItem ? this.Table.MainRows : supItem.CurrentList;\r\n        supList.splice(supItem.Index, 1);\r\n      } else {\r\n        supItem.Cells.forEach(x => {\r\n          x.UpdateData();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  replaceFactory\r\n  get ReplaceFactory() {\r\n    if (!this.replaceFactory) {\r\n      this.replaceFactory = new ReplaceRowLocationFactory();\r\n    }\r\n    return this.replaceFactory;\r\n  }\r\n\r\n  ReplaceOK = () => {\r\n    var factory = this.ReplaceFactory;\r\n    var refRow = factory.ReferenceRow;\r\n\r\n    if (!refRow) return;\r\n\r\n    var loc = factory.Location;\r\n    if ((refRow === this && loc === rrlf_lt.lower) ||\r\n      (refRow === this.SupItem && loc === rrlf_lt.inside)) {\r\n      return\r\n    }\r\n\r\n    this.Replace(refRow, loc);\r\n\r\n    factory.Location = rrlf_lt.inside;\r\n  }\r\n\r\n  Replace_SubItems = () => {\r\n    var subItems = this.Temp_SelectSubItems;\r\n    if (subItems) {\r\n      subItems.forEach(x => {\r\n        x.Replace(this, rrlf_lt.inside)\r\n      })\r\n    }\r\n  }\r\n\r\n  Replace = (refRow, loc) => {\r\n    // Init OriginalSupRow && IsReplaced\r\n    this.IsReplaced = true;\r\n    var osr = this.Original_SupRow;\r\n\r\n    // Save data\r\n    var oldMgi = this.MassGroupItem;\r\n    var supRow = undefined;\r\n    var newMgi = undefined;\r\n\r\n    switch (loc) {\r\n      case rrlf_lt.inside:\r\n        supRow = refRow;\r\n        break;\r\n      case rrlf_lt.lower:\r\n        supRow = refRow.SupItem;\r\n        break;\r\n    }\r\n\r\n    // Đối tượng đã nằm trong mục cần đặt\r\n    if (this.SupItem === supRow) return;\r\n\r\n    //var newMgi = supRow ? supRow.SubMassGroupItem : this.Table.MainMGI;\r\n    var newMgi = supRow ?\r\n      (supRow.Replace_SubMassGroupItem ? supRow.Replace_SubMassGroupItem :\r\n        util.CreateSubMassGroupItem(supRow))\r\n      : this.Table.MainMGI;\r\n\r\n    //pmData().IsDebug = true;\r\n    var mgi_i = oldMgi.GetItem(this.FullValue);\r\n    mgi_i.NewMGI = newMgi;\r\n    mgi_i.SupValue = supRow?.Name;\r\n\r\n    this.ReplaceMGI = newMgi;\r\n\r\n    // Remove SupRow cũ trong tập hợp cũ\r\n    var cl = this.CurrentList;\r\n    cl.splice(this.Index, 1);\r\n\r\n    // Cập nhập lại TotalValue của SupItem cũ\r\n    // Nếu list ko chưa Item nào thì remove khỏi giao diện\r\n    var supItem = this.SupItem;\r\n    if (cl.length === 0) {\r\n      var supList = supItem ? this.Table.MainRows : supItem.CurrentList;\r\n      supList.splice(supItem.Index, 1);\r\n    } else {\r\n      if (supItem) {\r\n        supItem.Cells.forEach(x => {\r\n          x.UpdateData();\r\n        });\r\n      }\r\n    }\r\n\r\n    // Thiết lập SupRow\r\n    this.SupItem = supRow;\r\n    var list = this.CurrentList;\r\n    list.push(this);\r\n\r\n    // Cập nhập lại TotalValue của SupItem mới\r\n    if (supRow) {\r\n      supRow.Cells.forEach(x => {\r\n        x.UpdateData();\r\n      });\r\n    }\r\n\r\n    this.IsShowSubFieldSelect = false;\r\n  }\r\n\r\n  IsModalVisible = false\r\n\r\n  OpenModal = () => {\r\n    this.IsModalVisible = true\r\n\r\n    // Set tiêu đề hiện tại\r\n    this.TitleVM.Content = this.Title;\r\n\r\n    // Set giá trị nhóm hiện tại\r\n    this.FieldInputVM.Content = this.Field\r\n    this.FieldSelectVM.InitialItem = this.Field;\r\n    this.TempField = this.Field;\r\n\r\n    // Set giá trị phân nhóm hiện tại\r\n    var subFieldSelectVM = this.SubFieldSelectVM;\r\n    subFieldSelectVM.InitialItems = this.SubFields;\r\n\r\n    // Reset lại giá trị Select SubItems\r\n    this.Temp_SelectSubItems = undefined\r\n    this.SelectSubItemsVM.Items = this.LocationStorageList;\r\n\r\n    var locSelectVM = this.LocationSelectVM;\r\n    locSelectVM.Items = this.LocationStorageList\r\n    locSelectVM.InitialItem = undefined;\r\n  }\r\n\r\n  ModalOK = () => {\r\n    if (!this.TempField || this.TempField.length === 0) {\r\n      message.warning('Thông tin nhóm hiện tại đang để trống!');\r\n      return;\r\n    }\r\n\r\n    this.IsModalVisible = false;\r\n\r\n    // Thiết lập tiêu đề\r\n    var title = this.TitleVM.Content;\r\n    this.Title = title;\r\n    this.MassGroupItem.GetItem(this.FullValue).Title = title;\r\n\r\n    // Thiết lập nhóm hiện tại\r\n    if (this.Field !== this.TempField) {\r\n      this.Field = this.TempField;\r\n    }\r\n\r\n    // Thiết lập phân nhóm hiện tại\r\n    this.SetSubFields();\r\n\r\n    // Dịch chuyển tập hợp con\r\n    this.Replace_SubItems();\r\n\r\n    // Dịch chuyển vị trí\r\n    this.ReplaceOK();\r\n  }\r\n\r\n  ModalCancel = () => {\r\n    this.IsModalVisible = false;\r\n  }\r\n\r\n  PMS_WorkPackages = [\r\n    'THI CÔNG CHÍNH (HBC)',\r\n    'CÔNG TÁC CHUẨN BỊ PHẦN NGẦM',\r\n    'CÔNG TÁC CHUẨN BỊ PHẦN NGẦM (PHƯƠNG ...)',\r\n    'Kết thúc thô - Bàn giao'\r\n  ]\r\n\r\n  pms_WorkPackages_SelectVM\r\n  get PMS_WorkPackages_SelectVM() {\r\n    if (!this.pms_WorkPackages_SelectVM) {\r\n      this.pms_WorkPackages_SelectVM = selectUtil.get(this.PMS_WorkPackages);\r\n    }\r\n    return this.pms_WorkPackages_SelectVM;\r\n  }\r\n\r\n  get ModalElement() {\r\n    var factory = this.ReplaceFactory;\r\n    var titleWidth = '180px';\r\n\r\n    return <Modal title={this.Title} visible={this.IsModalVisible}\r\n      width={700}\r\n      onOk={this.ModalOK} onCancel={this.ModalCancel}>\r\n      {/* Tiêu đề */}\r\n      <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex={titleWidth}>\r\n          <b> Tiêu đề:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <InputView store={this.TitleVM} />\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Thiết lập nhóm hiện tại */}\r\n      <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex={titleWidth}>\r\n          <b> Nhóm hiện tại:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          {this.FieldInputElement}\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Thiết lập phân nhóm */}\r\n      {!this.IsCreatedByUser ? <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex={titleWidth}>\r\n          <b> Thiết lập phân nhóm:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <MultiSelectView store={this.SubFieldSelectVM} />\r\n        </Col>\r\n      </Row> : ''}\r\n\r\n      {/* Đổi vị trí */}\r\n      <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex={titleWidth} className='mass__modal__title__wrapper'>\r\n          <b>Đổi vị trí /</b>\r\n          <Button type='primary' size='small'\r\n            className={this.Temp_SelectSubItems ?\r\n              'mass__modal__title__selectsubitems__button' : ''}\r\n            onClick={this.Open_SelectSubItems_Modal}>chọn tập con</Button>\r\n          {this.SelectSubItems_ModalElement}\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <Row>\r\n            <Col flex='auto'>\r\n              <SelectView store={this.LocationSelectVM} />\r\n            </Col>\r\n            <Col>\r\n              <Button type='primary' size='small'\r\n                style={factory.ButtonStyle} onClick={factory.ToggleLocation}\r\n              >{factory.Location}</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Gói công việc PMS */}\r\n      {/* <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex={titleWidth}>\r\n          <b> Gói công việc PMS:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <SelectView store={this.PMS_WorkPackages_SelectVM} />\r\n        </Col>\r\n      </Row> */}\r\n    </Modal>\r\n  }\r\n\r\n  get HoverToolElement() {\r\n    var obj = new EntHoverVM();\r\n    obj.Element = <MassRow_ToolElementView store={this.ToolElement} />\r\n    return <EntHoverView className='mass__row__hovertool' store={obj} />\r\n  }\r\n\r\n  toolElement\r\n  get ToolElement() {\r\n    if (!this.toolElement) {\r\n      this.toolElement = util.Get_ToolElement(this);\r\n    }\r\n    return this.toolElement;\r\n  }\r\n\r\n  get AdditionInfomation_Element() {\r\n    return <>\r\n      {this.IsHaveAdditionInformation ?\r\n        <Popover trigger='hover'\r\n          content={\r\n            <span className='info'>\r\n              {this.AdditionInformation}\r\n            </span>\r\n          } >\r\n          <InfoCircleOutlined className='info' />\r\n        </Popover>\r\n        : ''}\r\n    </>\r\n  }\r\n\r\n  // Excel Export\r\n  get ExportInfo() {\r\n    var key = this.Field;\r\n    var info = {\r\n      Key: key,\r\n      Value: this.Title\r\n    }\r\n\r\n    var list\r\n    if (!this.SupItem) {\r\n      list = [info]\r\n    } else {\r\n      list = [...this.SupItem.ExportInfo]\r\n      list.push(info);\r\n    }\r\n\r\n    return list;\r\n  }\r\n\r\n  get ExportValue() {\r\n    var list = []\r\n    this.Cells.forEach(x => {\r\n      list.push({\r\n        Key: x.Column.Name,\r\n        Value: x.TotalValue\r\n      })\r\n    })\r\n\r\n    return list;\r\n  }\r\n\r\n  get ExportData() {\r\n    return {\r\n      Infos: this.ExportInfo,\r\n      Values: this.ExportValue\r\n    }\r\n  }\r\n\r\n  on_HandleTotal_Cells_Done_Dict_Funcs\r\n  get On_HandleTotal_Cells_Done_Dict_Funcs() {\r\n    if (!this.on_HandleTotal_Cells_Done_Dict_Funcs) {\r\n      this.on_HandleTotal_Cells_Done_Dict_Funcs =\r\n        util.GetOn_HandleTotal_Cells_Done_Dict_Funcs(this);\r\n    }\r\n    return this.on_HandleTotal_Cells_Done_Dict_Funcs;\r\n  }\r\n\r\n  set Is_HandleTotal_Cells_Done(v) {\r\n    this.On_HandleTotal_Cells_Done_Dict_Funcs\r\n      .forEach(x => x.Value())\r\n  }\r\n\r\n  HandleTotal_Cells\r\n\r\n  AddHandleTotal_Cell = (cell) => {\r\n    if (!this.HandleTotal_Cells) {\r\n      this.HandleTotal_Cells = []\r\n    };\r\n\r\n    var list = this.HandleTotal_Cells\r\n\r\n    list.push(cell);\r\n    if (list.length === this.Cells.length) {\r\n      this.HandleTotal_Cells = undefined\r\n      this.Is_HandleTotal_Cells_Done = true;\r\n\r\n      // nếu IsCreatedByUser \r\n      // => thêm thông tin vào danh sách Handled_CreatedByUser_Rows \r\n      // đối tượng Table\r\n      if (this.IsCreatedByUser) {\r\n        this.Table.Add_Handled_CreatedByUser_Row(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  IsHaveAdditionInformation = false\r\n\r\n  get IsHave_Addition_Wrapper() {\r\n    return this.IsHaveAdditionInformation || this.IsShow_RawValue\r\n  }\r\n\r\n  AdditionInformation = undefined\r\n\r\n  // Tùy chọn SelectSubItems\r\n  Is_SelectSubItems_ModalOpen = false\r\n\r\n  get SelectSubItems_ModalElement() {\r\n    return <Modal\r\n      title='Chọn tập hợp đầu mục con'\r\n      visible={this.Is_SelectSubItems_ModalOpen}\r\n      onOk={this.SelectSubItems_ModalOK}\r\n      onCancel={this.SelectSubItems_ModalCancel}>\r\n      <div className='mass__subitemmodal__wrapper'>\r\n        <TwoCol_SelectView store={this.SelectSubItemsVM} />\r\n      </div>\r\n    </Modal>\r\n  }\r\n\r\n  Open_SelectSubItems_Modal = () => {\r\n    this.Is_SelectSubItems_ModalOpen = true;\r\n  }\r\n\r\n  SelectSubItems_ModalCancel = () => {\r\n    this.Is_SelectSubItems_ModalOpen = false;\r\n  }\r\n\r\n  SelectSubItems_ModalOK = () => {\r\n    this.Is_SelectSubItems_ModalOpen = false;\r\n  }\r\n\r\n  selectSubItemsVM\r\n  get SelectSubItemsVM() {\r\n    if (!this.selectSubItemsVM) {\r\n      var obj = this.selectSubItemsVM = tc_selectUtil.get(\r\n        [],\r\n        (item) => {\r\n          var marginLeft = item.Rank * 15;\r\n          return <div\r\n            style={{ marginLeft }}>\r\n            {item.Title}\r\n          </div>\r\n        },\r\n        'Tập hợp vị trí',\r\n        'Vị trí được chọn'\r\n      )\r\n      obj.OnSelectedItemChanged = (v) => this.Temp_SelectSubItems = v;\r\n    }\r\n    return this.selectSubItemsVM;\r\n  }\r\n\r\n  Temp_SelectSubItems = undefined\r\n\r\n  isShow_RawValue = undefined\r\n  get IsShow_RawValue() {\r\n    if (!this.isShow_RawValue) {\r\n      this.isShow_RawValue = util.GetIsShow_RawValue(this);\r\n    }\r\n    return this.isShow_RawValue;\r\n  } set IsShow_RawValue(v) {\r\n    this.isShow_RawValue = v;\r\n  }\r\n\r\n  get RawValue_Element() {\r\n    return <>\r\n      {this.IsShow_RawValue ?\r\n        <Popover trigger='hover'\r\n          content={\r\n            <span className='success'>\r\n              {this.RawValue}\r\n            </span>\r\n          }\r\n        >\r\n          <InfoCircleOutlined className='success' />\r\n        </Popover>\r\n        : ''}\r\n    </>\r\n  }\r\n\r\n  IsCreatedByUser\r\n}","import { EditableTextVM } from \"./EditableTextVM\"\r\n\r\nexport const get = (content, canEdit = true, isToolVisible) => {\r\n  var qI = new EditableTextVM();\r\n  \r\n  qI.Content = content;\r\n  qI.CanChange_RenderState = canEdit;\r\n\r\n  if (isToolVisible === undefined){\r\n    isToolVisible = canEdit;\r\n  }\r\n\r\n  qI.Is_Tool_Visible = isToolVisible;\r\n\r\n  return qI;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from \"antd\";\r\n\r\nclass TextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = {\r\n        content: `Nội dung`\r\n      }\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var { content } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {content}\r\n        {this.getWrapperContent()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TextView)","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil'\r\nimport * as api from '../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as mif from '../item/MassItemField'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as util from './MassCellUtil'\r\nimport TextView from '../../../../text/TextView';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassCell {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueColor: observable,\r\n      tdBgColor: observable,\r\n      isHaveWarning: observable,\r\n      tls_LevelGroup_Descriptions: observable,\r\n      vcs_Item: observable,\r\n      // valueString : observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get ColumnIndex() {\r\n    return this.Column.Index;\r\n  }\r\n\r\n  items = []\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  unit\r\n  get Unit() {\r\n    if (!this.unit) {\r\n      this.unit = util.Get_Unit(this);\r\n    }\r\n    return this.unit;\r\n  }\r\n  set Unit(v) {\r\n    this.unit = v;\r\n  }\r\n\r\n  unitVM\r\n  get UnitVM() {\r\n    if (!this.unitVM) {\r\n      this.unitVM = textVMUtil.get(this.Unit);\r\n      this.unitVM.OnSetContent = (v) => this.Unit = v;\r\n    }\r\n    return this.unitVM;\r\n  }\r\n\r\n  // TotalValue\r\n  get CanHave_TotalValue(){\r\n    return this.Unit !== undefined;\r\n  }\r\n\r\n  OnGet_TotalValue_Func_Dict = []\r\n  set Get_TotalValue(v) {\r\n    this.OnGet_TotalValue_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  totalValue = undefined\r\n  get TotalValue() {\r\n    // Chỉnh sửa Value thành FullValue (chứa khối lượng tầng điển hình)\r\n    //this.TotalValue = this.GetTotalValue();\r\n    if (this.totalValue === undefined) {\r\n      util.Handle_TotalValue(this);\r\n    }\r\n    return this.totalValue;\r\n  }\r\n  set TotalValue(v) {\r\n    this.totalValue = v;\r\n    \r\n    // cập nhập vào list handle trong row\r\n    this.Row.AddHandleTotal_Cell(this);\r\n\r\n    this.Get_TotalValue = true;\r\n    // Thiết lập phần màu sắc đối với Phase\r\n    if (this.IsHaveVCS_Item) {\r\n      util.Handle_VCS_Item(this);\r\n    }\r\n\r\n    // Thiết lập giá trị Cell\r\n    this.ContentVM.Content = this.ValueString;\r\n  }\r\n\r\n  contentVM\r\n  get ContentVM() {\r\n    if (!this.contentVM) {\r\n      this.contentVM = textVMUtil.get(this.ValueString);\r\n    }\r\n    return this.contentVM;\r\n  }\r\n\r\n  // ValueString\r\n  valueObject\r\n  get ValueObject(){\r\n    if (!this.valueObject){\r\n      this.valueObject = util.Get_ValueObject(this);\r\n    }\r\n    return this.valueObject;\r\n  }\r\n\r\n  get ValueString() {\r\n    return util.Get_ValueString(this);\r\n  }\r\n\r\n  subCells\r\n  get SubCells() {\r\n    if (!this.subCells) {\r\n      this.subCells = util.Get_SubCells(this);\r\n    }\r\n    return this.subCells;\r\n  }\r\n  set SubCells(v) {\r\n    this.subCells = v;\r\n  }\r\n\r\n  massType\r\n  get MassType() {\r\n    if (!this.massType) {\r\n      this.massType = util.GetMassType(this);\r\n    }\r\n    return this.massType;\r\n  }\r\n  set MassType(v) {\r\n    this.massType = v;\r\n  }\r\n\r\n  AsString = () => {\r\n    console.log(`${this.Column.Name} - ${this.Row.Name} - ${this.TotalValue}`)\r\n  }\r\n\r\n  UpdateData = () => {\r\n    this.SubCells = util.Get_SubCells(this);\r\n\r\n    this.Unit = util.ReGet_Unit(this);\r\n    util.ReHandle_TotalValue(this);\r\n    this.MassType = util.GetMassType(this);\r\n    this.IsHaveVCS_Item = util.GetIsHaveVCS_Item(this);\r\n  }\r\n\r\n  ShowDetail = () => {\r\n    var isHash = true;\r\n    var url = `${process.env.PUBLIC_URL}${isHash ? '/#' : ''}/massdetail`;\r\n    var getUrl = (v) => `${url}/${v}`;\r\n    var openTabFunc = (v) =>\r\n      window.open(getUrl(v), \"_blank\");\r\n\r\n    if (!this.viewDetailId) {\r\n      this.GetViewDetailId(data => {\r\n        var _id = this.viewDetailId = data._id;\r\n        openTabFunc(_id);\r\n      })\r\n    } else {\r\n      openTabFunc(this.viewDetailId);\r\n    }\r\n  }\r\n\r\n  viewDetailId\r\n\r\n  get AllItems() {\r\n    if (this.SubCells) {\r\n      return this.SubCells.map(x => x.Items).reduce((a, b) => a.concat(b), []);\r\n    }\r\n    return this.Items;\r\n  }\r\n\r\n  isHaveVCS_Item\r\n  get IsHaveVCS_Item() {\r\n    if (!this.isHaveVCS_Item) {\r\n      this.isHaveVCS_Item = util.GetIsHaveVCS_Item(this);\r\n    }\r\n    return this.isHaveVCS_Item;\r\n  }\r\n  set IsHaveVCS_Item(v) {\r\n    this.isHaveVCS_Item = v;\r\n  }\r\n\r\n  vcs_Item = undefined\r\n  get VCS_Item() {\r\n    return this.vcs_Item;\r\n  }\r\n  set VCS_Item(v) {\r\n    this.vcs_Item = v;\r\n\r\n    this.ValueColor = util.GetValueColor(this);\r\n    this.TDBgColor = util.GetTDBgColor(this)\r\n  }\r\n\r\n  valueColor = '#1890ff'\r\n  get ValueColor() {\r\n    return this.valueColor;\r\n  }\r\n  set ValueColor(v) {\r\n    this.valueColor = v\r\n  }\r\n\r\n  tdBgColor = undefined\r\n  get TDBgColor() {\r\n    return this.tdBgColor;\r\n  }\r\n  set TDBgColor(v) {\r\n    this.tdBgColor = v;\r\n  }\r\n\r\n  get AStyle() {\r\n    return {\r\n      color: this.ValueColor,\r\n      fontWeight: 'bold'\r\n    }\r\n  }\r\n\r\n  get TDStyle() {\r\n    return {\r\n      backgroundColor: this.TDBgColor\r\n    }\r\n  }\r\n\r\n  ApiData = () => {\r\n    var massIds = this.AllItems.map(x => x._id);\r\n    return {\r\n      massType: this.MassType,\r\n      massIds\r\n    };\r\n  }\r\n\r\n  GetViewDetailId = (handle) => {\r\n    var apiData = this.ApiData();\r\n    var url = \"https://api.bimdev.vn/api/hbdv/updatemass\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => handle(data))\r\n  }\r\n\r\n  OnGet_TLS_LevelGroups_Func_Dict = []\r\n  set Get_TLS_LevelGroups(v) {\r\n    this.OnGet_TLS_LevelGroups_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  tls_LevelGroups\r\n  get TLS_LevelGroups() {\r\n    if (!this.tls_LevelGroups) {\r\n      util.Handle_TLS_LevelGroups(this);\r\n    }\r\n    return this.tls_LevelGroups;\r\n  } set TLS_LevelGroups(v) {\r\n    this.tls_LevelGroups = v;\r\n    this.Get_TLS_LevelGroups = true;\r\n  }\r\n\r\n  isHaveWarning = undefined\r\n  get IsHaveWarning() {\r\n    if (this.isHaveWarning === undefined) {\r\n      this.isHaveWarning = util.GetIsHaveWarning(this);\r\n    }\r\n    return this.isHaveWarning;\r\n  } set IsHaveWarning(v) {\r\n    this.isHaveWarning = v;\r\n  }\r\n\r\n  tls_LevelGroup_Descriptions = undefined\r\n  get TLS_LevelGroup_Descriptions() {\r\n    if (!this.tls_LevelGroup_Descriptions) {\r\n      util.Handle_TLS_LevelGroup_Descriptions(this);\r\n    }\r\n    return this.tls_LevelGroup_Descriptions;\r\n  } set TLS_LevelGroup_Descriptions(v) {\r\n    this.tls_LevelGroup_Descriptions = v;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class MassCell_Value {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Value: observable\r\n    })\r\n  }\r\n\r\n  Value = undefined\r\n}","import Column from \"antd/lib/table/Column\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport MassCell from \"./MassCell\"\r\nimport * as mif from '../item/MassItemField'\r\nimport * as filterUtil from '../../filter/EntFilterUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport MassCell_Value from \"./value/MassCell_Value\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (col, row, dict) => {\r\n  var qI = new MassCell();\r\n  qI.Column = col;\r\n  qI.Row = row;\r\n  qI.Dict = dict;\r\n\r\n  col.Cells.push(qI);\r\n  row.Cells.push(qI);\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetIsHaveVCS_Item = (q) => {\r\n  return q.Dict.ColumnField === mif.Phase\r\n    && pmData().MassResultComp.Phases.length === 2\r\n    && q.ColumnIndex === 1;\r\n}\r\n\r\nexport const GetValueColor = (q) => {\r\n  if (q.IsHaveVCS_Item && q.VCS_Item) {\r\n    return '#FFFFFF';\r\n  } else {\r\n    return '#1890ff';\r\n  }\r\n}\r\n\r\nexport const GetTDBgColor = (q) => {\r\n  if (q.IsHaveVCS_Item && q.VCS_Item) {\r\n    return q.VCS_Item.Color;\r\n  } else {\r\n    return '#FFFFFF';\r\n  }\r\n}\r\n\r\n// Liên quan tới việc lấy TotalValue\r\nexport const Handle_VCS_Item = (q) => {\r\n  var list = pmData().VersionCompareSetting.Items;\r\n\r\n  var cells = q.Row.Cells;\r\n  var compareIndex = cells.findIndex(x => x.ColumnIndex === 0);\r\n  if (compareIndex === -1) {\r\n    q.VCS_Item = undefined;\r\n    return\r\n  }\r\n  var compareItem = cells[compareIndex];\r\n\r\n  const getItem = () => {\r\n    var ratio = q.TotalValue / compareItem.TotalValue;\r\n    var index = list\r\n      .findIndex(x => filterUtil.IsValid(x.Filter, ratio));\r\n    return index !== -1 ? list[index] : undefined;\r\n  }\r\n\r\n  if (compareItem.TotalValue !== undefined) {\r\n    q.VCS_Item = getItem();\r\n  } else {\r\n    genUtil.Add(compareItem.OnGet_TotalValue_Func_Dict, () =>\r\n      q.VCS_Item = getItem())\r\n  }\r\n}\r\n\r\nexport const GetMassType = (q) => {\r\n  var massType = undefined\r\n  if (q.SubCells) {\r\n    var isPending = true;\r\n    q.SubCells.forEach(x => {\r\n      if (isPending && x.MassType) {\r\n        massType = x.MassType;\r\n        isPending = false;\r\n      }\r\n    })\r\n  } else {\r\n    if (q.Items && q.Items.length > 0) {\r\n      massType = q.Items[0].MassType;\r\n    }\r\n  }\r\n  return massType;\r\n}\r\n\r\nexport const Handle_TLS_LevelGroups = (q) => {\r\n  if (q.IsGet_TLS_LevelGroups) return undefined;\r\n  q.IsGet_TLS_LevelGroups = true;\r\n\r\n  var list = [];\r\n  var handledCount = 0;\r\n  var count = q.SubCells ?\r\n    q.SubCells.length : q.Items.length;\r\n\r\n  const checkadd_Val = (val, list) => {\r\n    if (list.findIndex(x => x.id === val.id) === -1) {\r\n      list.push(val);\r\n    }\r\n  }\r\n\r\n  const handle_Val = (val) => {\r\n    handledCount++;\r\n    if (val) {\r\n      if (Array.isArray(val)) {\r\n        val.forEach(x => checkadd_Val(x, list));\r\n      } else {\r\n        checkadd_Val(val, list)\r\n      }\r\n    }\r\n    if (handledCount === count) {\r\n      q.TLS_LevelGroups = list;\r\n    }\r\n  }\r\n\r\n  if (q.SubCells) {\r\n    // Tồn tại sub cells\r\n    q.SubCells.forEach(x => {\r\n      if (x.TLS_LevelGroups) {\r\n        handle_Val(x.TLS_LevelGroups);\r\n      } else {\r\n        genUtil.Add(x.OnGet_TLS_LevelGroups_Func_Dict,\r\n          () => handle_Val(x.TLS_LevelGroup));\r\n      }\r\n    })\r\n  } else {\r\n    // Không có sub cells\r\n    q.Items.forEach(x => {\r\n      var targetObj = x;\r\n\r\n      // Kiểm tra value theo Phase hay theo Property khác (Project ...)\r\n      var table = q.Dict;\r\n      var colField = table.ColumnField;\r\n      if (colField === mif.Phase) {\r\n        // Khối lượng theo Phase\r\n        targetObj = x.GetPhaseItem(q.Column.Name);\r\n      } else {\r\n        // Khối lượng theo các thuộc tính khác\r\n      }\r\n\r\n      if (targetObj.TLS_LevelGroup || targetObj.Get_TLS_LevelGroup) {\r\n        handle_Val(targetObj.TLS_LevelGroup);\r\n      } else {\r\n        genUtil.Add(targetObj.OnGet_TLS_LevelGroup_Func_Dict,\r\n          () => handle_Val(targetObj.TLS_LevelGroup));\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n// TotalValue\r\nexport const ReGet_Unit = (q) => {\r\n  q.IsGet_Unit = false;\r\n  return Get_Unit(q);\r\n}\r\n\r\nexport const Get_Unit = (q) => {\r\n  if (q.IsGet_Unit) return undefined;\r\n  q.IsGet_Unit = true;\r\n\r\n  var unit\r\n  var isValid = true;\r\n  var list = q.SubCells ? q.SubCells : q.Items;\r\n  list.forEach((x, i, a) => {\r\n    if (isValid) {\r\n      if (i == 0) {\r\n        unit = x.Unit\r\n      }\r\n      else {\r\n        if (unit !== x.Unit) {\r\n          isValid = false;\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  if (!isValid) {\r\n    unit = undefined\r\n  }\r\n\r\n  return unit;\r\n}\r\n\r\nexport const ReHandle_TotalValue = (q) => {\r\n  q.IsGet_TotalValue = false;\r\n  Handle_TotalValue(q);\r\n}\r\n\r\nexport const Handle_TotalValue = (q) => {\r\n  if (q.IsGet_TotalValue) return undefined;\r\n  q.IsGet_TotalValue = true;\r\n\r\n  // Bỏ qua TotalValue nếu CanHave = false\r\n  if (!q.CanHave_TotalValue) return;\r\n\r\n  var checkedList = [];\r\n  var totalVal = 0;\r\n  var handledCount = 0;\r\n  var handleItems = [];\r\n  var list = q.SubCells ? q.SubCells : q.Items\r\n  var count = list.length\r\n\r\n  const handle_Val = (val, item) => {\r\n    var index = handleItems.indexOf(item);\r\n    // Bị trùng đối tượng khi tính toán khối lượng\r\n    if (index !== -1) return;\r\n    handleItems.push(item);\r\n\r\n    handledCount++;\r\n\r\n    if (!Number.isNaN(val)) {\r\n      totalVal += val;\r\n    }\r\n    checkedList.push(val);\r\n\r\n    if (handledCount === count) {\r\n      q.TotalValue = totalVal;\r\n    }\r\n  }\r\n\r\n  if (q.SubCells) {\r\n    // Tồn tại sub cells\r\n    q.SubCells.forEach(x => {\r\n      if (x.TotalValue) {\r\n        handle_Val(x.TotalValue, x)\r\n      } else {\r\n        genUtil.Add(x.OnGet_TotalValue_Func_Dict,\r\n          () => {\r\n            handle_Val(x.TotalValue, x)\r\n          });\r\n      }\r\n    })\r\n  } else {\r\n    // Không có sub cells\r\n    q.Items.forEach(x => {\r\n      var targetObj = x;\r\n\r\n      // Kiểm tra value theo Phase hay theo Property khác (Project ...)\r\n      var table = q.Dict;\r\n      var colField = table.ColumnField;\r\n      if (colField === mif.Phase) {\r\n        // Khối lượng theo Phase\r\n        targetObj = x.GetPhaseItem(q.Column.Name);\r\n      } else {\r\n        // Khối lượng theo các thuộc tính khác\r\n      }\r\n\r\n      if (targetObj.FullValue !== undefined) {\r\n        handle_Val(targetObj.FullValue, x)\r\n      } else {\r\n        genUtil.Add(targetObj.OnGet_FullValue_Func_Dict,\r\n          () => {\r\n            handle_Val(targetObj.FullValue, x)\r\n          });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const GetIsHaveWarning = (q) => {\r\n  if (q.Row.Field !== mif.level) {\r\n    return false\r\n  } else {\r\n    const getWarningFunc = (levelGroups) => {\r\n      return levelGroups.length !== 0;\r\n    }\r\n\r\n    if (q.TLS_LevelGroups) {\r\n      return getWarningFunc(q.TLS_LevelGroups);\r\n    } else {\r\n      genUtil.Add(q.OnGet_TLS_LevelGroups_Func_Dict,\r\n        () => {\r\n          q.IsHaveWarning = getWarningFunc(q.TLS_LevelGroups)\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nexport const Handle_TLS_LevelGroup_Descriptions = (q) => {\r\n  if (q.IsGet_TLS_LevelGroup_Descriptions) return undefined;\r\n  q.IsGet_TLS_LevelGroup_Descriptions = true;\r\n\r\n  const handle_Val = (val, list, handledCount, count) => {\r\n    handledCount++;\r\n    if (list.indexOf(val) === -1) {\r\n      list.push(val);\r\n    }\r\n    if (handledCount === count) {\r\n      q.TLS_LevelGroup_Descriptions = list;\r\n    }\r\n  }\r\n\r\n  const getDescFunc = (levelGroups) => {\r\n    var list = [];\r\n    var handledCount = 0;\r\n    var count = levelGroups.length\r\n\r\n    levelGroups.forEach(x => {\r\n      if (x.FullDescription) {\r\n        handle_Val(x.FullDescription, list, handledCount, count);\r\n      } else {\r\n        // Để false, xử lý nhiều Funcs hơn, nhưng thực thi thành công :v\r\n        genUtil.Add(x.OnGetLevelStorageList_Func_Dict, () => {\r\n          handle_Val(x.FullDescription, list, handledCount, count)\r\n        }, false)\r\n      }\r\n    })\r\n  }\r\n\r\n  if (q.TLS_LevelGroups) {\r\n    getDescFunc(q.TLS_LevelGroups)\r\n  } else {\r\n    q.OnGet_TLS_LevelGroups_Funcs.push(() => {\r\n      getDescFunc(q.TLS_LevelGroups)\r\n    })\r\n  }\r\n}\r\n\r\n// SubCells\r\nexport const Get_SubCells = (q) => {\r\n  var subRows = q.Row.SubItems;\r\n  if (subRows && subRows.length !== 0) {\r\n    var col = q.Column;\r\n    var list = subRows.map((x, i, a) => {\r\n      var obj = x.GetCellByColumn(col)\r\n      return obj;\r\n    }).filter(x => x !== undefined);\r\n\r\n    return list;\r\n  }\r\n}\r\n\r\n// ValueString\r\nexport const Get_ValueObject = (q) => {\r\n  var qI = new MassCell_Value();\r\n\r\n  qI.Dict = q;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Get_ValueString = (q) => {\r\n  if (!q.CanHave_TotalValue) return '';\r\n\r\n  var totalValue = q.TotalValue;\r\n  if (!totalValue) return '';\r\n\r\n  var roundingFactor = 2;\r\n  var unit = q.Unit;\r\n  switch (unit) {\r\n    case 'each':\r\n      unit = 'cái';\r\n      roundingFactor = 0;\r\n      break;\r\n    default:\r\n      roundingFactor = 2;\r\n      break;\r\n  }\r\n\r\n  var formatValue = totalValue.toLocaleString('en-US', { maximumFractionDigits: roundingFactor });\r\n  return `${formatValue} ${unit}`;\r\n}","import { PMData } from \"../../../single/model/PMData\";\r\nimport MassRow from \"./MassRow\";\r\nimport * as multiSelectUtil from '../../../../select/MultiSelectVMUtil';\r\nimport * as selectUtil from '../../../../select/SelectVMUtil';\r\nimport * as rrlf_lt from './location/RRLF_LocationType';\r\nimport * as mgiUtil from './rowgroup/MassGroupItemUtil'\r\nimport * as mgi_iUtil from './rowgroup/MGI_ItemUtil'\r\nimport * as mgii_ct from './rowgroup/MGI_I_CreateType'\r\nimport * as genUtil from '../../../../../util/generalUtil';\r\nimport { EntFilter } from \"../../filter/EntFilter\";\r\nimport MassGroupComponent from \"./rowgroup/MassGroupComponent\";\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as mif from '../item/MassItemField'\r\nimport MassRow_ToolElement from \"./tool/MassRow_ToolElement\";\r\nimport * as trs from '../../../../text/TextRenderState';\r\nimport * as cellUtil from './MassCellUtil'\r\nimport MassCell from \"./MassCell\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassRow();\r\n  qI.Name = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetRank = (q) => {\r\n  return q.SupItem ? q.SupItem.Rank + 1 : 0;\r\n}\r\n\r\nexport const GetStyle = (q) => {\r\n  return {\r\n    marginLeft: q.Rank * 20\r\n  }\r\n}\r\n\r\nexport const GetIsHaveSub = (q) => {\r\n  return q.SubItems.length !== 0;\r\n}\r\n\r\nexport const GetToggleButtonContent = (q) => {\r\n  return q.IsShowSub ? '-' : '+';\r\n}\r\n\r\nexport const GetFieldSelectVM = (q) => {\r\n  var storageList = pmData().MIFs_ForMassGroup;\r\n  var obj = selectUtil.get(storageList, q.Field);\r\n  obj.Placeholder = 'chọn nhóm'\r\n\r\n  obj.IsDisabled = !q.IsCreatedByUser\r\n\r\n  obj.OnSelectedItemChanged = (v) => q.TempField = v;\r\n  return obj;\r\n}\r\n\r\nexport const GetSubFieldSelectVM = (q) => {\r\n  var storageList = pmData().MIFs_ForMassGroup;\r\n  var obj = multiSelectUtil.get(storageList, undefined);\r\n  obj.Placeholder = 'chọn phân nhóm'\r\n  obj.OnSelectedItemChanged = (v) => q.TempSubFields = v;\r\n  return obj;\r\n}\r\n\r\nexport const Order = (list) => {\r\n  if (list.length === 0) return list;\r\n\r\n  var firstRow = list[0]\r\n  var mgi = firstRow.OrderMGI;\r\n  if (!mgi.IsHaveValueOrder) return list;\r\n\r\n  var orderValues = mgi.OrderValues;\r\n  return list.sort((a, b) => {\r\n    return orderValues.indexOf(a.FullValue) - orderValues.indexOf(b.FullValue);\r\n  });\r\n}\r\n\r\nexport const Handle_Title = (q) => {\r\n  var field = q.MassGroupItem.Field;\r\n  if (field !== mif.level) {\r\n    q.Title = q.Name;\r\n  } else {\r\n    // Xử lý phần tiêu đề của Row dựa trên Name và thông tin Tầng điển hình\r\n    var list = [];\r\n    var handledCount = 0;\r\n    var count = q.Cells.length;\r\n\r\n    const handle_LS = (ls) => {\r\n      if (ls.Description) {\r\n        q.Title = ls.Description;\r\n      } else {\r\n        ls.OnGetLevelStorageList_Funcs.push(() => {\r\n          q.Title = ls.Description;\r\n        })\r\n      }\r\n    }\r\n\r\n    const handle_Val = (val) => {\r\n      handledCount++;\r\n      list.push.apply(list, val);\r\n      if (handledCount === count) {\r\n        if (list.length === 1) {\r\n          handle_LS(list[0]);\r\n        } else {\r\n          q.Title = q.Name;\r\n        }\r\n      }\r\n    }\r\n\r\n    q.Cells.forEach(x => {\r\n      if (x.TLS_LevelGroups) {\r\n        handle_Val(x.TLS_LevelGroups);\r\n      } else {\r\n        x.OnGet_TLS_LevelGroups_Funcs.push(() => {\r\n          handle_Val(x.TLS_LevelGroups);\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const GetLocationSelectVM = (q) => {\r\n  var obj = selectUtil.get([], undefined);\r\n  obj.Placeholder = 'chọn vị trí'\r\n  obj.TitleRender = (item) => {\r\n    var marginLeft = item.Rank * 15;\r\n    return <div\r\n      style={{ marginLeft }}>\r\n      {item.Title}\r\n    </div>\r\n  }\r\n  obj.OnSelectedItemChanged = (v) => {\r\n    var factory = q.ReplaceFactory;\r\n    factory.ReferenceRow = v;\r\n  }\r\n  return obj;\r\n}\r\n\r\nexport const GetOriginal_SubMassGroupItem = (q) => {\r\n  var subItems = q.SubItems;\r\n  if (subItems.length === 0) return undefined;\r\n  return subItems[0].MassGroupItem;\r\n}\r\n\r\nexport const GetReplace_SubMassGroupItem = (q) => {\r\n  var subItems = q.SubItems;\r\n  if (subItems.length === 0) return undefined;\r\n  return subItems[0].ReplaceMGI;\r\n}\r\n\r\nexport const GetSubFields = (q) => {\r\n  var subMGI = q.SubMassGroupItem;\r\n  if (!subMGI) return [];\r\n  var mgis = subMGI.SupComponent.Items;\r\n\r\n  var lastValidIndex = -1;\r\n  var isValidHandle = true\r\n  mgis.forEach((x, i) => {\r\n    if (isValidHandle && x.HaveMassItemSubComponents.length === 0) {\r\n      lastValidIndex = i;\r\n    } else {\r\n      isValidHandle = false;\r\n    }\r\n  })\r\n\r\n  var currentIndex = mgis.indexOf(q.MassGroupItem);\r\n  if (lastValidIndex === -1) return [subMGI.Field];\r\n  var fields = mgis.filter((x, i) =>\r\n    (currentIndex === -1 || currentIndex < i) &&\r\n    i <= lastValidIndex)\r\n    .map(x => x.Field);\r\n  return fields;\r\n}\r\n\r\n// MassGroupItem phụ để đặt đầu mục được tạo mới\r\nexport const CreateSubMassGroupItem = (q) => {\r\n  var filter = new EntFilter();\r\n  filter.ValueType = fvt.bystring;\r\n  filter.StringFilterType = sft.byequal;\r\n  filter.Values = [q.FullValue];\r\n\r\n  var supMgi = q.MassGroupItem;\r\n\r\n  var mgc = undefined;\r\n  var mgcIndex = supMgi.SubComponents\r\n    .findIndex(x => genUtil.IsSameValues(x.Filter.Values, filter.Values));\r\n\r\n  if (mgcIndex !== -1) {\r\n    mgc = supMgi.SubComponents[mgcIndex]\r\n  } else {\r\n    mgc = new MassGroupComponent();\r\n    mgc.SubItem = supMgi;\r\n    mgc.Filter = filter;\r\n    supMgi.SubComponents.push(mgc);\r\n  }\r\n\r\n  var mgi = mgiUtil.get(null, null, mgc);\r\n  mgc.Items = [mgi];\r\n\r\n  q.SubMassGroupItem = mgi;\r\n  return mgi;\r\n}\r\n\r\nexport const Add = (supRow, table) => {\r\n  var mgi = supRow ?\r\n    (supRow.SubMassGroupItem ? supRow.SubMassGroupItem :\r\n      CreateSubMassGroupItem(supRow))\r\n    : table.MainMGI;\r\n\r\n  var mgi_I = mgi_iUtil.create(mgi, mgii_ct.byuser);\r\n\r\n  // Thêm trường SupValue để xác định SupRow \r\n  // trong trường hợp SupRow.CurrentList.length !== 0\r\n  mgi_I.SupValue = supRow?.Name;\r\n\r\n  mgi.Items.push(mgi_I);\r\n\r\n  var row = get(mgi_I.Value, table);\r\n  row.FullValue = mgi_I.Value;\r\n  row.IsCreatedByUser = true;\r\n\r\n  // Lấy thông tin Cell vì hiện tại đang bị lỗi khi render\r\n  var obj = row.Cells\r\n\r\n  row.MassGroupItem = mgi;\r\n\r\n  row.SupItem = supRow;\r\n  row.CurrentList.push(row);\r\n\r\n  row.Editable_TitleVM.RenderState = trs.edit;\r\n\r\n  return row;\r\n}\r\n\r\nexport const GetOn_HandleTotal_Cells_Done_Dict_Funcs = (q) => {\r\n  var obj = [];\r\n  return obj;\r\n}\r\n\r\nexport const Get_Original_SupRow = (q) => {\r\n  if (q.IsGet_Original_SupRow) return undefined;\r\n  q.IsGet_Original_SupRow = true;\r\n\r\n  return q.SupItem;\r\n}\r\n\r\nexport const Get_Original_Full_SupRows = (q) => {\r\n  var list = [];\r\n  var supItem = q.Original_SupRow;\r\n\r\n  while (supItem) {\r\n    list.push(supItem);\r\n    supItem = supItem.Original_SupRow;\r\n  }\r\n\r\n  list.reverse();\r\n  return list;\r\n}\r\n\r\n// Aditional Infomation\r\nexport const Get_IsHaveAdditionInformation = (q) => {\r\n  return q.IsReplaced ? true : false\r\n}\r\n\r\nexport const Get_AdditionInformation = (q) => {\r\n  var obj = q.Original_Full_SupRows.reduce((a, x, i) => {\r\n    if (i != 0) {\r\n      a += ' > '\r\n    }\r\n    a += x.Title;\r\n    return a;\r\n  }, '')\r\n\r\n  return obj;\r\n}\r\n\r\nexport const Get_ToolElement = (q) => {\r\n  var qI = new MassRow_ToolElement();\r\n  qI.Dict = q;\r\n  return qI;\r\n}\r\n\r\n// Cells\r\nexport const Get_Cells = (q) => {\r\n  if (!q.IsCreatedByUser) return [];\r\n\r\n  var table = q.Table;\r\n\r\n  var list = table.Columns.map(x => {\r\n    var qI = new MassCell();\r\n    qI.Column = x;\r\n    qI.Row = q;\r\n    qI.Dict = table;\r\n\r\n    table.Cells.push(qI);\r\n\r\n    return qI;\r\n  });\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetIsShow_RawValue = (q) => {\r\n  return !q.IsCreatedByUser && q.RawValue !== q.Title;\r\n}","import * as mif from '../item/MassItemField'\r\nimport { EntFilter } from '../../filter/EntFilter'\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as mt from '../MassType'\r\nimport MassGroupComponent from './rowgroup/MassGroupComponent'\r\nimport MassGroupItem from './rowgroup/MassGroupItem'\r\nimport * as mgiUtil from './rowgroup/MassGroupItemUtil'\r\n\r\nexport const GetMainMGC = (q) => {\r\n  var qI = new MassGroupComponent();\r\n\r\n  var mgi1 = mgiUtil.get(mif.MassType);\r\n  qI.Items = [mgi1];\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetMassGroupName = (q) => {\r\n  return q.MassGroupSetting ? q.MassGroupSetting.Name\r\n    : '';\r\n}\r\n\r\nexport const GetAllRows = (q) => {\r\n  var list = [];\r\n  q.MainRows.forEach(x => {\r\n    list.push.apply(list, x.AllItems)\r\n  });\r\n  return list;\r\n}\r\n\r\nexport const GetMainMGI = (q) => {\r\n  var qI = q.MainMGC?.Items[0];\r\n  qI.Table = q;\r\n  qI.SupRow = undefined;\r\n  return qI;\r\n}","export const elementfilter = \"elementfilter\";\r\nexport const massexport = \"massexport\";\r\nexport const massgroup = \"massgroup\";\r\nexport const typicallevel = \"typicallevel\";","import { message } from 'antd'\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\nexport default class Setting{\r\n  name\r\n  get Name(){\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    if (this.OnNameChanged){\r\n      this.OnNameChanged(v);\r\n    }\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    return this.description;\r\n  }\r\n  set Description(v){\r\n    this.description = v;\r\n    if (this.OnDescriptionChanged){\r\n      this.OnDescriptionChanged(v);\r\n    }\r\n  }\r\n\r\n  SettingType\r\n\r\n  data\r\n  get Data(){\r\n    return this.data;\r\n  }\r\n  set Data(v){\r\n    this.data = v;\r\n    if (this.OnDataChanged){\r\n      this.OnDataChanged(v);\r\n    }\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.Name;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    var {_id} = this;\r\n    var apiData = {_id};\r\n\r\n    var  url = \"https://api.bimdev.vn/api/hbs/delete\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => message.success('Delete setting successfully'))\r\n\r\n    this.Dict.Items.splice(this.Index, 1);\r\n\r\n    if (this.OnDelete){\r\n      this.OnDelete();\r\n    }\r\n\r\n    this.Dict.Input.EditItemId = undefined;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      _id : this._id,\r\n      projectId : this.Project._id,\r\n      settingType : this.SettingType,\r\n      name : this.Name,\r\n      description : this.Description,\r\n      data : this.Data.ApiData\r\n    }\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './MassGroupSettingDataUtil'\r\nimport { reaction } from \"mobx\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassGroupSettingData {\r\n  fields\r\n  get Fields(){\r\n    if (!this.fields){\r\n      this.fields = util.GetDefaultFields(this);\r\n    }\r\n    return this.fields;\r\n  }\r\n  set Fields(v){\r\n    this.fields = v;\r\n  }\r\n\r\n  AddNewField = () => {\r\n    var item = pmData().MassPropertyNames[0];\r\n    this.Fields.push(item);\r\n    return item;\r\n  }\r\n}","export const Discipline = \"Discipline\";\r\nexport const Category = \"Category\";\r\n\r\nexport const GetAll = () => {\r\n  return [ Discipline, Category ];\r\n}","import { PMData } from '../../../single/model/PMData';\r\nimport MassGroupSettingData from './MassGroupSettingData';\r\nimport * as mpn from '../../../entity/mass/MassPropertyName'\r\nimport * as massGroupCompUtil from '../../mass/table/rowgroup/MassGroupComponentUtil'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSettingData();\r\n  qI.MassGroupComponent = massGroupCompUtil.get(q.massGroupComponent);\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = () => {\r\n  var qI = new MassGroupSettingData();\r\n  return qI;\r\n}\r\n\r\nexport const GetDefaultFields = () => {\r\n  return [ mpn.Category ]\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport default class MassGroupSetting extends Setting {\r\n  \r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as dataUtil from './MassGroupSettingDataUtil'\r\nimport MassGroupSetting from './MassGroupSetting';\r\nimport { PMData } from '../../../single/model/PMData';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassGroupSetting();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.SettingType = q.settingType;\r\n  qI.Data = dataUtil.get(q.data);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbs/mg/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../text/TextVMUtil'\r\nimport * as util from './WorkpackageVMUtil'\r\n\r\nexport class WorkpackageVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      fullName : observable\r\n    })\r\n  }\r\n\r\n  get _id(){\r\n    return this.Workpackage._id;\r\n  }\r\n\r\n  get Index(){\r\n    return this.Dict.WorkpackageVMs.indexOf(this);\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.Workpackage.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.Workpackage.M2VM = v;\r\n  }\r\n\r\n  Workpackage\r\n\r\n  supItem\r\n  get SupItem(){\r\n    if (!this.supItem){\r\n      this.supItem = util.GetSupItem(this);\r\n    }\r\n    return this.supItem;\r\n  }\r\n\r\n  code = undefined\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.Workpackage.Code;\r\n    }\r\n    return this.code\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Code = v;\r\n    }\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.Workpackage.Name;\r\n    }\r\n    return this.name\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Name = v;\r\n    }\r\n  }\r\n\r\n  description = undefined\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.Workpackage.Description;\r\n    }\r\n    return this.description\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Description = v;\r\n    }\r\n  }\r\n\r\n  fullName = undefined\r\n  get FullName() {\r\n    if (!this.fullName) {\r\n      this.fullName = this.Workpackage.FullName;\r\n    }\r\n    return this.fullName;\r\n  }\r\n  set FullName(v) {\r\n    this.fullName = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.FullName;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.FullName;\r\n  }\r\n\r\n  codeVM\r\n  get CodeVM() {\r\n    if (!this.codeVM) {\r\n      var obj = this.codeVM =\r\n        textVMUtil.get(this.Code, \"mã code\");\r\n      obj.onSetContent = (v) => this.Code = v;\r\n    }\r\n    return this.codeVM;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên công tác\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.WorkpackageVMs.splice(this.Index, 1);\r\n  }\r\n\r\n  AsString = () => {\r\n    console.log(this.Name, this.Code, this.Description);\r\n  }\r\n}","import { WorkpackageVM } from \"./WorkpackageVM\";\r\nimport { PMDataVM } from '../../single/form/PMDataVM'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new WorkpackageVM();\r\n  qI.Workpackage = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnCodeChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Code = v;\r\n    }\r\n  }\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnFullNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.FullName = v;\r\n    }\r\n  }\r\n\r\n  q.OnDelete = () => {\r\n    qI.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSupItem = (q) => {\r\n  var supWp = q.Workpackage.SupItem;\r\n  var list = pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n  var index = list.findIndex(x => x.Workpackage === supWp);\r\n  return index !== -1 ? list[index] : undefined;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class CheckboxVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      ischecked: observable,\r\n      isDisable : observable,\r\n      Cancel : observable\r\n    })\r\n  }\r\n\r\n  name\r\n\r\n  OnCheckChanging\r\n\r\n  Cancel = false;\r\n\r\n  ischecked = undefined\r\n  set Ischecked(v) {\r\n    this.ischecked = v;\r\n    if (this.onCheckChange) {\r\n      this.onCheckChange(v);\r\n    }\r\n  }\r\n\r\n  isDisable = false\r\n}","import { CheckboxVM } from \"./CheckboxVM\"\r\n\r\nexport const get = (name, ischecked) => {\r\n  var qI = new CheckboxVM();\r\n  qI.ischecked = ischecked;\r\n  qI.name = name;\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../text/TextVMUtil'\r\nimport * as checkboxVMUtil from '../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../select/SelectVMUtil'\r\nimport * as util from './WorkpackageInputVMUtil'\r\nimport { Button } from 'antd';\r\n\r\nexport class WorkpackageInputVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isNew: observable\r\n    })\r\n  }\r\n\r\n  WorkpackageInput\r\n\r\n  code = undefined\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.WorkpackageInput.Code;\r\n    }\r\n    return this.code\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    this.WorkpackageInput.Code = v;\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.WorkpackageInput.Name;\r\n    }\r\n    return this.name\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.WorkpackageInput.Name = v;\r\n  }\r\n\r\n  description = undefined\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.WorkpackageInput.Description;\r\n    }\r\n    return this.description\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.WorkpackageInput.Description = v;\r\n  }\r\n\r\n  supItem = undefined\r\n  get SupItem(){\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v){\r\n    this.supItem = v;\r\n    var input = this.WorkpackageInput;\r\n    if (!v) {\r\n      input.SupItem = v;\r\n    }else{\r\n      input.SupItem = v.Workpackage;\r\n    }\r\n  }\r\n\r\n  workpackageVMStorageList = undefined\r\n  get WorkpackageVMStorageList(){\r\n    if (!this.workpackageVMStorageList){\r\n      this.workpackageVMStorageList = util.GetWorkpackageVMStorageList(this);\r\n    }\r\n    return this.workpackageVMStorageList;\r\n  }\r\n  set WorkpackageVMStorageList(v){\r\n    this.workpackageVMStorageList = v;\r\n\r\n    var selectVM = this.SupItemSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItem = this.SupItem;\r\n  }\r\n\r\n  supItemSelectVM\r\n  get SupItemSelectVM(){\r\n    if (!this.supItemSelectVM){\r\n      var obj = this.supItemSelectVM = selectVMUtil.get\r\n        (this.WorkpackageVMStorageList, this.SupItem);\r\n      obj.Placeholder = 'công tác cha'\r\n      obj.CanClear = true;\r\n      obj.OnSelectedItemChanged = (v) => this.SupItem = v;\r\n    }\r\n    return this.supItemSelectVM;\r\n  }\r\n\r\n  isNew = undefined\r\n  get IsNew() {\r\n    if (this.isNew === undefined) {\r\n      this.isNew = this.WorkpackageInput.IsNew;\r\n    }\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v) {\r\n    this.isNew = v;\r\n    this.CommandVM.Content = util.GetCommandName(this);\r\n    this.WorkpackageInput.IsNew = v;\r\n  }\r\n\r\n  commandName = undefined\r\n  get CommandName() {\r\n    if (!this.commandName) {\r\n      this.commandName = util.GetCommandName(this);\r\n    }\r\n    return this.commandName;\r\n  }\r\n  set CommandName(v) {\r\n    this.commandName = v;\r\n  }\r\n\r\n  workpackageVM\r\n  get WorkpackageVM() {\r\n    return this.workpackageVM;\r\n  }\r\n  set WorkpackageVM(v) {\r\n    this.workpackageVM = v;\r\n\r\n    if (!v) {\r\n      this.WorkpackageInput.Workpackage = v;\r\n      this.IsNewVM.Ischecked = true;\r\n    }\r\n    else {\r\n      this.WorkpackageInput.Workpackage = v.Workpackage;\r\n\r\n      var { Code, Name, Description, SupItem } = v;\r\n      this.CodeVM.Content = Code;\r\n      this.NameVM.Content = Name;\r\n      this.DescriptionVM.Content = Description;\r\n\r\n      this.SupItemSelectVM.InitialItem = SupItem;\r\n\r\n      this.IsNewVM.Ischecked = false;\r\n    }\r\n  }\r\n\r\n  codeVM\r\n  get CodeVM() {\r\n    if (!this.codeVM) {\r\n      var obj = this.codeVM =\r\n        textVMUtil.get(this.Code, \"mã code\");\r\n      obj.onSetContent = (v) => this.Code = v;\r\n    }\r\n    return this.codeVM;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên công tác\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  isNewVM\r\n  get IsNewVM() {\r\n    if (!this.isNewVM) {\r\n      var obj = this.isNewVM\r\n        = checkboxVMUtil.get(\"Công tác mới\", this.IsNew);\r\n\r\n      obj.isDisable = true;\r\n      obj.onCheckChange = (v) => {\r\n        this.IsNew = v;\r\n        if (v) {\r\n          obj.isDisable = true;\r\n        } else {\r\n          obj.isDisable = false;\r\n        }\r\n      };\r\n    }\r\n    return this.isNewVM;\r\n  }\r\n\r\n  commandVM\r\n  get CommandVM() {\r\n    if (!this.commandVM) {\r\n      var obj = this.commandVM = textVMUtil.get(this.CommandName);\r\n      obj.onSetContent = (v) => this.CommandName = v;\r\n    }\r\n    return this.commandVM;\r\n  }\r\n\r\n  AsString = () => `${this.Code} ${this.Name} ${this.Description} ${this.IsNew}`\r\n\r\n  AddDatabase = () => {\r\n    this.WorkpackageInput.AddDatabase();\r\n  }\r\n\r\n  deleteView\r\n  get DeleteView() {\r\n    return !this.IsNew ?\r\n      <Button onClick={this.DeleteFunc}>Delete</Button>\r\n      : \"\";\r\n  }\r\n\r\n  DeleteFunc = () => {\r\n    this.WorkpackageVM.Workpackage.Delete();\r\n    this.WorkpackageVM = undefined;\r\n  }\r\n\r\n  Clear = () => {\r\n    this.CodeVM.Content = null;\r\n    this.NameVM.Content = null;\r\n    this.DescriptionVM.Content = null;\r\n    this.IsNewVM.Ischecked = true;\r\n  }\r\n}","import { message } from \"antd\";\r\nimport { PMDataVM } from \"../../single/form/PMDataVM\";\r\nimport { WorkpackageInputVM } from \"./WorkpackageInputVM\";\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new WorkpackageInputVM();\r\n  qI.WorkpackageInput = q;\r\n  qI.Dict = dict;\r\n\r\n  pmDataVM().Workpackage_DictVM.OnGetItemsDone_Funcs.push(() => {\r\n    qI.WorkpackageVMStorageList = GetWorkpackageVMStorageList(qI);\r\n  })\r\n\r\n  q.OnAddDatabaseDone = (v) => {\r\n    var command = qI.CommandName;\r\n    message.success(`${command} workpackage successfully`);\r\n    //qI.clear();\r\n  }\r\n\r\n  dict.OnAdd = (v) => {\r\n    qI.WorkpackageVM = v;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetCommandName = (qI) => {\r\n  var isNew = qI.IsNew;\r\n  return isNew ? \"Create\" : \"Edit\";\r\n}\r\n\r\nexport const GetWorkpackageVMStorageList = (q) => {\r\n  return pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n}","import { Workpackage_DictVM } from \"./Workpackage_DictVM\";\r\nimport * as workpackageVMUtil from './WorkpackageVMUtil';\r\nimport * as workpackageInputVMUtil from './WorkpackageInputVMUtil';\r\n\r\nexport const get = (q) => {\r\n  var qI = new Workpackage_DictVM();\r\n  qI.Workpackage_Dict = q;\r\n\r\n  q.OnGetWorkpackagesDone = (v) => {\r\n    var obj = qI.WorkpackageVMs;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  q.OnAdd = (item) => {\r\n    var itemView = workpackageVMUtil.get(item, qI);\r\n    qI.Add(itemView);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetWorkpackageVMs = (dictVM) => {\r\n  var wps = dictVM.Workpackage_Dict.Workpackages;\r\n  if (!wps) return undefined;\r\n  return wps.map(x => workpackageVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetWorkpackageInputVM= (dictVM) => {\r\n  var input = dictVM.Workpackage_Dict.WorkpackageInput;\r\n  return workpackageInputVMUtil.get(input, dictVM);\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ElementFilterSetting_DictVMUtil'\r\n\r\nexport class ElementFilterSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.ModelItem.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.ModelItem.M2VM = v;\r\n  }\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  items  = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n      this.Input.EditItem = v;\r\n    }\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textUtil from '../../../../text/TextVMUtil';\r\n\r\nexport class SettingVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      name: observable\r\n    })\r\n  }\r\n\r\n  get _id(){\r\n    return this.ModelItem._id;\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.ModelItem.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.ModelItem.M2VM = v;\r\n  }\r\n\r\n  ModelItem\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (!this.M2VM) {\r\n      this.ModelItem.Name = v;\r\n    }\r\n  }\r\n\r\n  nameVM\r\n  get NameVM(){\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM = textUtil.get(this.Name, 'tên thiết lập ...');\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (!this.M2VM) {\r\n      this.ModelItem.Description = v;\r\n    }\r\n  }\r\n\r\n  settingType\r\n  get SettingType() {\r\n    if (!this.settingType) {\r\n      this.settingType = this.ModelItem.SettingType;\r\n    }\r\n    return this.settingType;\r\n  }\r\n  set SettingType(v) {\r\n    this.settingType = v;\r\n    this.ModelItem.SettingType = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.Name;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.Name;\r\n  }\r\n\r\n  data\r\n  get Data(){\r\n    if (!this.data){\r\n      this.data = this.ModelItem.Data;\r\n    }\r\n    return this.data;\r\n  }\r\n  set Data(v) {\r\n    this.data = v;\r\n    if (!this.M2VM){\r\n      this.ModelItem.Data = v;\r\n    }\r\n  }\r\n\r\n  dataVM\r\n  get DataVM() {\r\n    if (!this.dataVM) {\r\n      this.dataVM = this.GetDataVM();\r\n    }\r\n    return this.dataVM;\r\n  }\r\n  set DataVM(v) {\r\n    this.dataVM = v;\r\n\r\n    // Gọi hàm để đổ dữ liệu về\r\n    if (v && this.OnInitialSetDataVM){\r\n      this.OnInitialSetDataVM(v);\r\n    }\r\n\r\n    if (!this.M2VM) {\r\n      if (!v) {\r\n        this.Data = v;\r\n      }\r\n      else {\r\n        this.Data = v.ModelItem;\r\n      }\r\n    }\r\n  }\r\n\r\n  GetDataVM = () => {\r\n    if (this.OnGetDataVM) {\r\n      return this.OnGetDataVM();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.Items.splice(this.Index, 1);\r\n  }\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\n\r\nexport default class ElementFilterSettingVM extends SettingVM {\r\n  OnInitialSetDataVM = (v) => {\r\n    var cateFilterVM = v.CategoryFilterVM;\r\n    if (cateFilterVM) {\r\n      cateFilterVM.OnInitialData();\r\n    }\r\n\r\n    var famFilterVM = v.FamilyFilterVM;\r\n    if (famFilterVM) {\r\n      famFilterVM.OnInitialData();\r\n    }\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../single/form/PMDataVM'\r\nimport * as selectVMUtil from '../../../select/SelectVMUtil'\r\nimport * as multiSelectVMUtil from '../../../select/MultiSelectVMUtil'\r\n\r\nexport class EntFilterVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  get pmDataVM () { return PMDataVM.Instance};\r\n\r\n  valueType\r\n  get ValueType() {\r\n    if (!this.valueType) {\r\n      this.valueType = this.ModelItem.ValueType;\r\n    }\r\n    return this.valueType;\r\n  }\r\n  set ValueType(v) {\r\n    this.valueType = v;\r\n    this.ModelItem.ValueType = v;\r\n  }\r\n\r\n  numberFilterType\r\n  get NumberFilterType() {\r\n    if (!this.numberFilterType) {\r\n      this.numberFilterType = this.ModelItem.NumberFilterType;\r\n    }\r\n    return this.numberFilterType;\r\n  }\r\n  set NumberFilterType(v) {\r\n    this.numberFilterType = v;\r\n    this.ModelItem.NumberFilterType = v;\r\n  }\r\n\r\n  stringFilterType\r\n  get StringFilterType() {\r\n    if (!this.stringFilterType) {\r\n      this.stringFilterType = this.ModelItem.StringFilterType;\r\n    }\r\n    return this.stringFilterType;\r\n  }\r\n  set StringFilterType(v) {\r\n    this.stringFilterType = v;\r\n    this.ModelItem.StringFilterType = v;\r\n  }\r\n\r\n  values\r\n  get Values() {\r\n    if (!this.values) {\r\n      this.values = this.ModelItem.Values;\r\n    }\r\n    return this.values;\r\n  }\r\n  set Values(v) {\r\n    this.values = v;\r\n    this.ModelItem.Values = v;\r\n  }\r\n\r\n  valueStorageList\r\n  get ValueStorageList() {\r\n    if (!this.valueStorageList){\r\n      this.valueStorageList = this.ModelItem.ValueStorageList;\r\n    }\r\n    return this.valueStorageList;\r\n  }\r\n\r\n  ValueSelectPlaceholder\r\n\r\n  valueTypeSelectVM\r\n  get ValueTypeSelectVM() {\r\n    if (!this.valueTypeSelectVM) {\r\n      var obj =this.valueTypeSelectVM = selectVMUtil.get(this.pmDataVM.FilterValueTypes, this.ValueType);\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.ValueType = v;\r\n      }\r\n    }\r\n    return this.valueTypeSelectVM;\r\n  }\r\n\r\n  stringFilterTypeSelectVM\r\n  get StringFilterTypeSelectVM() {\r\n    if (!this.stringFilterTypeSelectVM){\r\n      var obj = this.stringFilterTypeSelectVM = selectVMUtil.get(this.pmDataVM.StringFilterTypes, this.StringFilterType);\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.StringFilterType = v;\r\n      }\r\n    }\r\n    return this.stringFilterTypeSelectVM;\r\n  }\r\n\r\n  valuesSelectVM\r\n  get ValuesSelectVM() {\r\n    if (!this.valuesSelectVM){\r\n      var obj = this.valuesSelectVM = multiSelectVMUtil.get(this.ValueStorageList, this.Values);\r\n\r\n      if (this.ValueSelectPlaceholder){\r\n        obj.Placeholder = this.ValueSelectPlaceholder;\r\n      }\r\n\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.Values = v;\r\n      }\r\n    }\r\n    return this.valuesSelectVM;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    if (!v) return;\r\n\r\n    var {ValueType, NumberFilterType, StringFilterType, Values} = v;\r\n    this.ValueTypeSelectVM.InitialItem = ValueType;\r\n    this.StringFilterTypeSelectVM.InitialItem = StringFilterType;\r\n    this.ValuesSelectVM.InitialItems = Values;\r\n  }\r\n\r\n  OnInitialData = () => {\r\n    var valueType = this.ValueType;\r\n    var numberFilterType = this.NumberFilterType;\r\n    var stringFilterType = this.StringFilterType;\r\n    var values = this.Values;\r\n  }\r\n}","import { SettingVM } from \"../setting/base/SettingVM\";\r\nimport { EntFilterVM } from \"./EntFilterVM\";\r\n\r\nexport const get = (q) => {\r\n  if (!q) return undefined;\r\n  var qI = new EntFilterVM();\r\n  qI.ModelItem = q;\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\n\r\nexport default class ElementFilterSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isHaveFamilyFilter : observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  categoryFilterVM\r\n  get CategoryFilterVM(){\r\n    if (!this.categoryFilterVM && this.ModelItem){\r\n      this.categoryFilterVM = this.GetCategoryFilterVM();\r\n    }\r\n    return this.categoryFilterVM;\r\n  }\r\n\r\n  GetCategoryFilterVM = () => {\r\n    var filter = this.ModelItem.CategoryFilter;\r\n    return filterVMUtil.get(filter);\r\n  }\r\n\r\n  isHaveFamilyFilter = undefined\r\n  get IsHaveFamilyFilter(){\r\n    if (!this.isHaveFamilyFilter){\r\n      this.isHaveFamilyFilter = this.ModelItem.IsHaveFamilyFilter;\r\n    }\r\n    return this.isHaveFamilyFilter;\r\n  }\r\n  set IsHaveFamilyFilter(v){\r\n    this.isHaveFamilyFilter = v;\r\n    this.ModelItem.IsHaveFamilyFilter = v;\r\n  }\r\n\r\n  familyFilterVM\r\n  get FamilyFilterVM(){\r\n    if (!this.familyFilterVM && this.ModelItem){\r\n      this.familyFilterVM = this.GetFamilyFilterVM();\r\n    }\r\n    return this.familyFilterVM;\r\n  }\r\n\r\n  GetFamilyFilterVM = () => {\r\n    var filter = this.ModelItem.FamilyFilter;\r\n    return filterVMUtil.get(filter);\r\n  }\r\n\r\n  isHaveFamilyFilterVM\r\n  get IsHaveFamilyFilterVM() {\r\n    if (!this.isHaveFamilyFilterVM) {\r\n      var obj = this.isHaveFamilyFilterVM\r\n        = checkboxVMUtil.get(\"Thiết lập lọc Family\", this.IsHaveFamilyFilter);\r\n\r\n      obj.onCheckChange = (v) => {\r\n        this.IsHaveFamilyFilter = v;\r\n      };\r\n    }\r\n    return this.isHaveFamilyFilterVM;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.CategoryFilterVM.SetData(v.CategoryFilterVM);\r\n\r\n    var ischecked = v.IsHaveFamilyFilter === true;\r\n    this.IsHaveFamilyFilterVM.Ischecked = ischecked;\r\n    \r\n    this.FamilyFilterVM.SetData(v.FamilyFilterVM);\r\n  }\r\n}","import ElementFilterSettingDataVM from './ElementFilterSettingDataVM';\r\n\r\nexport const get = (q) => {\r\n  var qI = new ElementFilterSettingDataVM();\r\n  qI.ModelItem = q;\r\n  return qI;\r\n}","import ElementFilterSettingVM from \"./ElementFilterSettingVM\"\r\nimport * as dataVMUtil from './ElementFilterSettingDataVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new ElementFilterSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import { message } from \"antd\";\r\nimport { SettingVM } from \"./SettingVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new SettingVM();\r\n  qI.Setting = q;\r\n\r\n  q.OnDelete = () => {\r\n    qI.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetCommandName = (qI) => {\r\n  var isNew = qI.IsNew;\r\n  return isNew ? \"Create\" : \"Edit\";\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil'\r\nimport * as util from './SettingVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport { Button, message } from 'antd';\r\n\r\nexport default class SettingInputVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      dataVM : observable,\r\n      isNew: observable\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  name\r\n  get Name(){\r\n    if(!this.name){\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    if (!this.description){\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  settingType\r\n  get SettingType(){\r\n    if (!this.settingType){\r\n      this.settingType = this.ModelItem.SettingType;\r\n    }\r\n    return this.settingType;\r\n  }\r\n  set SettingType(v){\r\n    this.settingType = v;\r\n    this.ModelItem.SettingType = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.Name;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên bộ lọc\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM){\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  settingTypeVM\r\n  get SettingTypeVM() {\r\n    if (!this.settingTypeVM){\r\n      var obj = this.settingTypeVM = \r\n        textVMUtil.get(this.SettingType, \"loại thiết lập\");\r\n      obj.onSetContent = (v) => this.SettingType = v;\r\n    }\r\n    return this.settingTypeVM;\r\n  }\r\n\r\n  dataVM = undefined\r\n  get DataVM(){\r\n    if (!this.dataVM){\r\n      this.dataVM = this.GetDataVM();\r\n    }\r\n    return this.dataVM;\r\n  }\r\n  set DataVM (v){\r\n    if (this.DataVM.SetData){\r\n      this.DataVM.SetData(v);\r\n    }\r\n  }\r\n\r\n  GetDataVM = () => {\r\n    if (this.OnGetDataVM){\r\n      var dataVM = this.OnGetDataVM();\r\n      return dataVM;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  editItem\r\n  get EditItem() {\r\n    return this.editItem;\r\n  }\r\n  set EditItem(v) {\r\n    this.editItem = v;\r\n\r\n    var input = this.ModelItem;\r\n    if (!v) {\r\n      input.EditItem = v;\r\n      this.IsNewVM.Ischecked = true;\r\n    }\r\n    else {\r\n      input.EditItem = v.ModelItem;\r\n\r\n      var { Name, Description, SettingType } = v;\r\n      this.NameVM.Content = Name;\r\n      this.DescriptionVM.Content = Description;\r\n      this.SettingTypeVM.Content = SettingType;\r\n\r\n      this.DataVM = v.DataVM;\r\n      this.IsNewVM.Ischecked = false;\r\n    }\r\n  }\r\n\r\n  isNew = undefined\r\n  get IsNew() {\r\n    if (this.isNew === undefined) {\r\n      this.isNew = this.ModelItem.IsNew;\r\n    }\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v) {\r\n    this.isNew = v;\r\n    this.CommandVM.Content = util.GetCommandName(this);\r\n    this.ModelItem.IsNew = v;\r\n  }\r\n\r\n  isNewVM\r\n  get IsNewVM() {\r\n    if (!this.isNewVM) {\r\n      var obj = this.isNewVM\r\n        = checkboxVMUtil.get(\"Thiết lập mới\", this.IsNew);\r\n\r\n      obj.isDisable = true;\r\n      obj.onCheckChange = (v) => {\r\n        this.IsNew = v;\r\n        if (v) {\r\n          obj.isDisable = true;\r\n        } else {\r\n          obj.isDisable = false;\r\n        }\r\n      };\r\n    }\r\n    return this.isNewVM;\r\n  }\r\n\r\n  commandName = undefined\r\n  get CommandName() {\r\n    if (!this.commandName) {\r\n      this.commandName = util.GetCommandName(this);\r\n    }\r\n    return this.commandName;\r\n  }\r\n  set CommandName(v) {\r\n    this.commandName = v;\r\n  }\r\n\r\n  commandVM\r\n  get CommandVM() {\r\n    if (!this.commandVM) {\r\n      var obj = this.commandVM = textVMUtil.get(this.CommandName);\r\n      obj.onSetContent = (v) => this.CommandName = v;\r\n    }\r\n    return this.commandVM;\r\n  }\r\n\r\n  deleteView\r\n  get DeleteView() {\r\n    return !this.IsNew ?\r\n      <Button onClick={this.DeleteFunc}>Delete</Button>\r\n      : \"\";\r\n  }\r\n\r\n  \r\n  DeleteFunc = () => {\r\n    this.EditItem.ModelItem.Delete();\r\n    this.EditItem.Delete();\r\n    this.EditItem = undefined;\r\n  }\r\n\r\n  AddDatabase = () => {\r\n    this.ModelItem.AddDatabase();\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInputVM from \"../base/SettingInputVM\";\r\n\r\nexport default class ElementFilterSettingInputVM extends SettingInputVM {\r\n  \r\n}","import { ElementFilterSetting_DictVM } from \"./ElementFilterSetting_DictVM\";\r\nimport * as itemVMUtil from './ElementFilterSettingVMUtil'\r\nimport * as inputVMUtil from './ElementFilterSettingInputVMUtil'\r\n\r\nexport const get = (q) => {\r\n  var qI = new ElementFilterSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (dictVM) => {\r\n  var input = dictVM.ModelItem.Input;\r\n  return inputVMUtil.get(input, dictVM);\r\n}","import SettingInputVM from \"../base/SettingInputVM\";\r\nimport ElementFilterSettingInputVM from \"./ElementFilterSettingInputVM\"\r\nimport * as dataVMUtil from './ElementFilterSettingDataVMUtil'\r\nimport { message } from \"antd\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new ElementFilterSettingInputVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnAddDatabaseDone = (v) => {\r\n    var command = qI.CommandName;\r\n    message.success(`${command} element filter setting successfully`);\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../../filter/EntFilterVMUtil'\r\nimport * as util from './MES_ValueSettingVMUtil'\r\nimport * as selectVMUtil from '../../../../../select/SelectVMUtil'\r\n\r\nexport default class MES_ValueSettingVM {\r\n  // constructor() {\r\n  //   makeObservable(this, {\r\n\r\n  //   })\r\n  // }\r\n\r\n  get Index() {\r\n    return this.Dict.ValueSettingVMs.indexOf(this);\r\n  }\r\n\r\n  retrieveType\r\n  get RetrieveType() {\r\n    if (!this.retrieveType) {\r\n      this.retrieveType = this.ModelItem.RetrieveType;\r\n    }\r\n    return this.retrieveType;\r\n  }\r\n  set RetrieveType(v) {\r\n    this.retrieveType = v;\r\n    this.ModelItem.RetrieveType = v;\r\n  }\r\n\r\n  get RetrieveTypeStorageList() {\r\n    return util.GetRetrieveTypeStorageList(this);\r\n  }\r\n\r\n  retrieveTypeSelectVM\r\n  get RetrieveTypeSelectVM() {\r\n    if (!this.retrieveTypeSelectVM) {\r\n      var obj = this.retrieveTypeSelectVM = selectVMUtil.get(this.RetrieveTypeStorageList, this.RetrieveType);\r\n      obj.OnSelectedItemChanged = (v) => this.RetrieveType = v;\r\n    }\r\n    return this.retrieveTypeSelectVM;\r\n  }\r\n\r\n  valueFilterVM\r\n  get ValueFilterVM() {\r\n    if (!this.valueFilterVM) {\r\n      var obj = this.valueFilterVM = filterVMUtil.get(this.ModelItem.ValueFilter);\r\n      obj.ValueSelectPlaceholder = 'giá trị parameter';\r\n    }\r\n    return this.valueFilterVM;\r\n  }\r\n  set ValueFilterVM(v) {\r\n    this.valueFilterVM = v;\r\n    if (!v) {\r\n      this.ModelItem.ValueFilter = v;\r\n    }\r\n    else {\r\n      this.ModelItem.ValueFilter = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  workpackageVM\r\n  get WorkpackageVM() {\r\n    if (!this.workpackageVM) {\r\n      this.workpackageVM = util.GetWorkpackageVM(this);\r\n    }\r\n    return this.workpackageVM;\r\n  }\r\n  set WorkpackageVM(v) {\r\n    this.workpackageVM = v;\r\n    var modelItem = this.ModelItem;\r\n    if (!v) {\r\n      modelItem.Workpackage = v;\r\n    }\r\n    else {\r\n      this.ModelItem.Workpackage = v.Workpackage;\r\n    }\r\n  }\r\n\r\n  workpackageVMStorageList = undefined;\r\n  get WorkpackageVMStorageList() {\r\n    if (!this.workpackageVMStorageList) {\r\n      this.workpackageVMStorageList = util.GetWorkpackageVMStorageList(this);\r\n    }\r\n    return this.workpackageVMStorageList;\r\n  }\r\n  set WorkpackageVMStorageList(v) {\r\n    this.workpackageVMStorageList = v;\r\n\r\n    var selectVM = this.WorkpackageSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.SelectedIndex = -1;\r\n  }\r\n\r\n  workpackageSelectVM\r\n  get WorkpackageSelectVM() {\r\n    if (!this.workpackageSelectVM) {\r\n      var storageList = this.WorkpackageVMStorageList ?\r\n        this.WorkpackageVMStorageList : [];\r\n\r\n      var obj = this.workpackageSelectVM = selectVMUtil.get\r\n        (storageList, this.WorkpackageVM);\r\n      obj.Placeholder = 'chọn công tác';\r\n      obj.OnSelectedItemChanged = (v) => this.WorkpackageVM = v;\r\n    }\r\n\r\n    return this.workpackageSelectVM;\r\n  }\r\n\r\n  massType\r\n  get MassType() {\r\n    if (!this.massType) {\r\n      this.massType = this.ModelItem.MassType;\r\n    }\r\n    return this.massType;\r\n  }\r\n  set MassType(v) {\r\n    this.massType = v;\r\n    this.ModelItem.MassType = v;\r\n  }\r\n\r\n  get MassTypeStorageList() {\r\n    return util.GetMassTypeStorageList(this);\r\n  }\r\n\r\n  massTypeSelectVM\r\n  get MassTypeSelectVM() {\r\n    if (!this.massTypeSelectVM) {\r\n      var obj = this.massTypeSelectVM = selectVMUtil.get(this.MassTypeStorageList, \r\n        this.MassType);\r\n      obj.Placeholder = 'loại khối lượng';\r\n      obj.OnSelectedItemChanged = (v) => this.MassType = v;\r\n    }\r\n    return this.massTypeSelectVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n    var list = this.Dict.ValueSettingVMs;\r\n    list.splice(this.Index, 1);\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.RetrieveTypeSelectVM.InitialItem = v.RetrieveType;\r\n    this.ValueFilterVM.SetData(v.ValueFilterVM);\r\n    this.WorkpackageSelectVM.InitialItem = v.WorkpackageVM;\r\n    this.MassTypeSelectVM.InitialItem = v.MassType;\r\n  }\r\n}","import { PMDataVM } from \"../../../../single/form/PMDataVM\";\r\nimport MES_ValueSettingVM from \"./MES_ValueSettingVM\"\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MES_ValueSettingVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  pmDataVM().Workpackage_DictVM.OnGetItemsDone_Funcs.push((v) => {\r\n    qI.WorkpackageVMStorageList = GetWorkpackageVMStorageList(qI);\r\n  });\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetRetrieveTypeStorageList = (q) => {\r\n  return pmDataVM().ValueRetrieveTypes;\r\n}\r\n\r\nexport const GetWorkpackageVM = (q) => {\r\n  var workpackage = q.ModelItem.Workpackage;\r\n  if (!workpackage) return undefined;\r\n\r\n  var list = pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x.Workpackage === workpackage);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetWorkpackageVMStorageList = (q) => {\r\n  return pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n}\r\n\r\nexport const GetMassTypeStorageList = (q) => {\r\n  return pmDataVM().MassTypes;\r\n}","import * as util from './MES_ValueSettingUtil'\r\n\r\nexport default class MES_ValueSetting{\r\n  get Index() {\r\n    return this.Dict.ValueSettings.indexOf(this);\r\n  }\r\n\r\n  RetrieveType\r\n\r\n  MassType\r\n  \r\n  ValueFiter\r\n\r\n  workpackageId\r\n  \r\n  workpackage\r\n  get Workpackage(){\r\n    if (!this.workpackage){\r\n      this.workpackage = util.GetWorkpackage(this);\r\n    }\r\n    return this.workpackage;\r\n  }\r\n  set Workpackage(v){\r\n    this.workpackage = v;\r\n    if (!v){\r\n      this.workpackageId = undefined;\r\n    }\r\n    else{\r\n      this.workpackageId = v._id;\r\n    }\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.ValueSettings.splice(this.Index, 1);\r\n  }\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","export const byparameter = \"byparameter\";\r\nexport const bymaterial = \"bymaterial\";\r\nexport const byrebar = \"byrebar\";\r\n\r\nexport const GetAll = () => {\r\n  return [byparameter, bymaterial, byrebar]\r\n}","import MES_ValueSetting from './MES_ValueSetting'\r\nimport * as filterUtil from '../../../filter/EntFilterUtil'\r\nimport * as vrt from './MES_ValueRetrieveType'\r\nimport * as fvt from '../../../filter/FilterValueType'\r\nimport * as sft from '../../../filter/StringFilterType'\r\nimport * as fct from '../../../filter/FilterCategoryType'\r\nimport { EntFilter } from '../../../filter/EntFilter';\r\nimport { PMData } from '../../../../single/model/PMData'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MES_ValueSetting();\r\n  qI.RetrieveType = q.retrieveType;\r\n  qI.MassType = q.massType;\r\n  qI.ValueFilter = filterUtil.get(q.valueFilter, fct.parameter);\r\n  qI.workpackageId = q.workpackageId;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, dict) => {\r\n  var qI = new MES_ValueSetting();\r\n  qI.RetrieveType = q.RetrieveType;\r\n  qI.MassType = q.MassType;\r\n  qI.ValueFilter = q.ValueFilter;\r\n  qI.Workpackage = q.Workpackage;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new MES_ValueSetting();\r\n  qI.RetrieveType = vrt.byparameter;\r\n  qI.Dict = dict;\r\n  \r\n  var valueFilter = new EntFilter();\r\n  valueFilter.CategoryType = fct.parameter;\r\n  valueFilter.ValueType = fvt.bystring;\r\n  valueFilter.StringFilterType = sft.byequal;\r\n  valueFilter.Values = [ 'Volume' ];\r\n\r\n  qI.ValueFilter = valueFilter;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetWorkpackage = (q) => {\r\n  var workpackageId = q.workpackageId;\r\n  if (!workpackageId) return undefined;\r\n\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x._id === workpackageId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    retrieveType : q.RetrieveType,\r\n    massType : q.MassType,\r\n    valueFilter: q.ValueFilter.ApiData,\r\n    workpackageId : q.workpackageId\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as util from './MassExportSettingDataVMUtil'\r\nimport * as valueSettingVMUtil from './exportSetting/MES_ValueSettingVMUtil'\r\nimport * as valueSettingUtil from './exportSetting/MES_ValueSettingUtil'\r\n\r\nexport default class MassExportSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueSettingVMs: observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  elementFilterVM\r\n  get ElementFilterVM() {\r\n    if (!this.elementFilterVM) {\r\n      this.elementFilterVM = util.GetElementFilterVM(this);\r\n    }\r\n    return this.elementFilterVM;\r\n  }\r\n  set ElementFilterVM(v) {\r\n    this.elementFilterVM = v;\r\n    var modelItem = this.ModelItem;\r\n    if (!v) {\r\n      modelItem.ElementFilter = v;\r\n    }\r\n    else {\r\n      modelItem.ElementFilter = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  elementFilterVMStorageList = undefined\r\n  get ElementFilterVMStorageList() {\r\n    if (!this.elementFilterVMStorageList) {\r\n      this.elementFilterVMStorageList = util.GetElementFilterVMStorageList(this);\r\n    }\r\n    return this.elementFilterVMStorageList;\r\n  }\r\n  set ElementFilterVMStorageList(v) {\r\n    this.elementFilterVMStorageList = v;\r\n\r\n    var selectVM = this.ElementFilterSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.SelectedIndex = 0;\r\n  }\r\n\r\n  elementFilterSelectVM\r\n  get ElementFilterSelectVM() {\r\n    if (!this.elementFilterSelectVM) {\r\n      var storageList = this.ElementFilterVMStorageList ? this.ElementFilterVMStorageList : [];\r\n\r\n      var obj = this.elementFilterSelectVM = selectVMUtil.get(storageList, this.ElementFilterVM);\r\n      obj.Placeholder = 'chọn bộ lọc'\r\n      obj.OnSelectedItemChanged = (v) => this.ElementFilterVM = v;\r\n    }\r\n    return this.elementFilterSelectVM;\r\n  }\r\n\r\n  valueSettingVMs = undefined\r\n  get ValueSettingVMs() {\r\n    if (!this.valueSettingVMs) {\r\n      this.valueSettingVMs = util.GetValueSettingVMs(this);\r\n    }\r\n    return this.valueSettingVMs;\r\n  }\r\n  set ValueSettingVMs(v) {\r\n    var list = this.valueSettingVMs;\r\n    var modelList = this.ModelItem.ValueSettings;\r\n\r\n    var oldCount = list.length;\r\n    var newCount = v.length;\r\n\r\n    list.forEach((x, i) => {\r\n      if (i >= newCount) return;\r\n      x.SetData(v[i]);\r\n    });\r\n\r\n    var delta = Math.abs(oldCount - newCount);\r\n    if (oldCount > newCount) {\r\n      list.splice(newCount, delta);\r\n      modelList.splice(newCount, delta);\r\n    }\r\n    else if (oldCount < newCount) {\r\n      for (var i = 0; i < delta; i++) {\r\n        var originItemVM = v[oldCount + i];\r\n\r\n        var item = valueSettingUtil.Clone\r\n          (originItemVM.ModelItem, this.ModelItem);\r\n        modelList.push(item);\r\n\r\n        var itemVM = valueSettingVMUtil.get(item, this);\r\n        list.push(itemVM);\r\n      }\r\n    }\r\n  }\r\n\r\n  AddNewValueSettingVM = () => {\r\n    var item = this.ModelItem.AddNewValueSetting();\r\n    var itemView = valueSettingVMUtil.get(item, this);\r\n    this.ValueSettingVMs.push(itemView);\r\n    return itemView;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.ElementFilterSelectVM.InitialItem = v.ElementFilterVM;\r\n    this.ValueSettingVMs = v.ValueSettingVMs;\r\n  }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport MassExportSettingDataVM from './MassExportSettingDataVM';\r\nimport * as valueSettingVMUtil from './exportSetting/MES_ValueSettingVMUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassExportSettingDataVM();\r\n  qI.ModelItem = q;\r\n\r\n  pmDataVM().ElementFilterSetting_DictVM.OnGetItemsDone = (v) => {\r\n    qI.ElementFilterVMStorageList = GetElementFilterVMStorageList(qI);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetElementFilterVM = (q) => {\r\n  var elemFilter = q.ModelItem.ElementFilter;\r\n  if (!elemFilter) return undefined;\r\n\r\n  var list = pmDataVM().ElementFilterSetting_DictVM.Items;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x.ModelItem === elemFilter);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetElementFilterVMStorageList = (q) => {\r\n  return pmDataVM().ElementFilterSetting_DictVM.Items;\r\n}\r\n\r\nexport const GetValueSettingVMs = (q) => {\r\n  var valueSettings = q.ModelItem.ValueSettings;\r\n  return valueSettings.map(x => valueSettingVMUtil.get(x, q));\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\n\r\nexport default class MassExportSettingVM extends SettingVM {\r\n  OnInitialSetDataVM = (v) => {\r\n    var valueSettingVMs = v.ValueSettingVMs;\r\n  }\r\n}","import * as dataVMUtil from './MassExportSettingDataVMUtil'\r\nimport MassExportSettingVM from \"./MassExportSettingVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassExportSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInputVM from \"../base/SettingInputVM\";\r\n\r\nexport default class MassExportSettingInputVM extends SettingInputVM {\r\n  \r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassExportSetting_DictVMUtil'\r\n\r\nexport class MassExportSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n      this.Input.EditItem = v;\r\n    }\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","import * as itemVMUtil from './MassExportSettingVMUtil'\r\nimport * as inputVMUtil from './MassExportSettingInputVMUtil'\r\nimport { MassExportSetting_DictVM } from \"./MassExportSetting_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassExportSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (dictVM) => {\r\n  var input = dictVM.ModelItem.Input;\r\n  return inputVMUtil.get(input, dictVM);\r\n}","import SettingInputVM from \"../base/SettingInputVM\";\r\nimport * as dataVMUtil from './MassExportSettingDataVMUtil'\r\nimport { message } from \"antd\";\r\nimport MassExportSettingInputVM from \"./MassExportSettingInputVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassExportSettingInputVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnAddDatabaseDone = (v) => {\r\n    var command = qI.CommandName;\r\n    message.success(`${command} setting successfully`);\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassGroupSetting_DictVMUtil'\r\n\r\nexport class MassGroupSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","import * as itemVMUtil from './MassGroupSettingVMUtil'\r\nimport { MassGroupSetting_DictVM } from \"./MassGroupSetting_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n","\r\nexport default class PhaseVM {\r\n  get _id(){\r\n    return this.ModelItem._id;\r\n  }\r\n\r\n  name\r\n  get Name(){\r\n    if(!this.name){\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    if (!this.description){\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v){\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  get DisplayContent () {\r\n    return `${this.Name}`;\r\n  }\r\n}","import PhaseVM from \"./PhaseVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  var qI = new PhaseVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;  \r\n\r\n  return qI;\r\n}","export const addversion = 'addversion'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Phase_DictVMUtil'\r\nimport * as stateType from '../state/StateType'\r\nimport { message } from 'antd';\r\n\r\nexport class Phase_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable,\r\n      state : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  state = undefined\r\n  get State(){\r\n    return this.state;\r\n  }\r\n  set State(v){\r\n    this.state = v;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n\r\n  AddVersion = () => {\r\n    this.State = stateType.addversion;\r\n  }\r\n\r\n  Cancel = () => {\r\n    this.State = undefined;\r\n  }\r\n\r\n  OK = () => {\r\n    var name = this.Input.Name;\r\n    var index = this.Items.findIndex(x => x.Name === name);\r\n    if (index !== -1){\r\n      message.warning('version name already exists!');\r\n      return;\r\n    }\r\n\r\n    this.State = undefined;\r\n    this.ModelItem.AddMassVersion();\r\n  }\r\n}","import * as textVMUtil from '../../../text/TextVMUtil'\r\n\r\nexport default class PhaseInputVM {\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên version\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM){\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n}","import * as itemVMUtil from './PhaseVMUtil'\r\nimport { Phase_DictVM } from \"./Phase_DictVM\";\r\nimport * as inputVMUtil from './PhaseInputVMUtil'\r\n\r\nexport const get = (q) => {\r\n  var qI = new Phase_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone_Funcs.push((v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  });\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (q) => {\r\n  return inputVMUtil.get(q.ModelItem.Input, q);\r\n}","import PhaseInputVM from \"./PhaseInputVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new PhaseInputVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ProjectVMUtil'\r\n\r\nexport default class ProjectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      typicalLevelSetting: observable,\r\n      typicalLevelSetting_ForEdit: observable\r\n    })\r\n  }\r\n\r\n  get _id() {\r\n    return this.ModelItem._id;\r\n  }\r\n\r\n  name\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  code\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.ModelItem.Code;\r\n    }\r\n    return this.code;\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    this.ModelItem.Code = v;\r\n  }\r\n\r\n  phase_DictVM\r\n  get Phase_DictVM() {\r\n    if (!this.phase_DictVM) {\r\n      this.phase_DictVM = util.GetPhase_DictVM(this);\r\n    }\r\n    return this.phase_DictVM;\r\n  }\r\n\r\n  rebarMass_Dict\r\n  get RebarMass_Dict() {\r\n    if (!this.rebarMass_Dict) {\r\n      this.rebarMass_Dict = this.ModelItem.RebarMass_Dict;\r\n    }\r\n    return this.rebarMass_Dict;\r\n  }\r\n\r\n  get InputExportSet() {\r\n    return this.ModelItem.InputExportSet;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return `${this.Code} - ${this.Name}`;\r\n  }\r\n\r\n  get Level_Dict() {\r\n    return this.ModelItem.Level_Dict;\r\n  }\r\n\r\n  typicalLevelSetting = undefined\r\n  get TypicalLevelSetting() {\r\n    if (!this.typicalLevelSetting) {\r\n      this.typicalLevelSetting = util.GetTypicalLevelSetting(this);\r\n    }\r\n    return this.typicalLevelSetting;\r\n  } set TypicalLevelSetting(v) {\r\n    this.typicalLevelSetting = v;\r\n  }\r\n\r\n  typicalLevelSetting_ForEdit = undefined\r\n  get TypicalLevelSetting_ForEdit() {\r\n    if (!this.typicalLevelSetting_ForEdit) {\r\n      this.typicalLevelSetting_ForEdit = util.GetTypicalLevelSetting_ForEdit(this);\r\n    }\r\n    return this.typicalLevelSetting_ForEdit;\r\n  } set TypicalLevelSetting_ForEdit(v) {\r\n    this.typicalLevelSetting_ForEdit = v;\r\n  }\r\n\r\n  get Url(){\r\n    return this.ModelItem.Url;\r\n  }\r\n}","export const text = 'text'\r\nexport const input = 'input'","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as checkboxVMUtil from './CheckboxVMUtil'\r\nimport './Checkbox.css'\r\n\r\nclass CheckboxView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = checkboxVMUtil.get(false);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onCheckedChange = (e) => {\r\n    var data = this.state;\r\n    var { checked } = e.target;\r\n\r\n    if (data.OnCheckChanging) {\r\n      data.OnCheckChanging(checked);\r\n    }\r\n\r\n    if (!data.Cancel) {\r\n      data.Ischecked = checked;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { ischecked, name, isDisable } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <label>\r\n          <input type=\"checkbox\"\r\n            checked={ischecked}\r\n            onChange={this.onCheckedChange} disabled={isDisable} />\r\n          <span className='checkbox__title'>{name}</span>\r\n        </label>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(CheckboxView)","import { Button, Popover } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport CheckboxView from '../../../../../checkbox/CheckboxView';\r\nimport * as checkBoxUtil from '../../../../../checkbox/CheckboxVMUtil';\r\nimport * as multiSelectUtil from \"../../../../../select/MultiSelectVMUtil\";\r\nimport * as textUtil from \"../../../../../text/TextVMUtil\";\r\nimport { text } from '../pageItem/TLS_PageItemStateType';\r\nimport * as util from './LevelGroupVMUtil'\r\n\r\nexport class LevelGroupVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      primary: observable,\r\n      isSelectOpen: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n\r\n  get Levels() {\r\n    return this.ModelItem.Levels;\r\n  } set Levels(v) {\r\n    this.ModelItem.Levels = v;\r\n  }\r\n\r\n  get SettingVM() {\r\n    return this.Dict.SettingVM;\r\n  }\r\n\r\n  levelSelectVM\r\n  get LevelSelectVM() {\r\n    if (!this.levelSelectVM) {\r\n      var list = this.LevelStorageList;\r\n      if (!list) {\r\n        this.SettingVM.ModelItem.OnGetLevelStorageList_Funcs.push(() => {\r\n          var obj = this.levelSelectVM;\r\n          obj.Items = this.LevelStorageList;\r\n          obj.InitialItems = this.Levels;\r\n        })\r\n      }\r\n\r\n      list = list ? list : []\r\n      var obj = this.levelSelectVM = multiSelectUtil.get(list, this.Levels);\r\n      obj.Placeholder = 'chọn level ...';\r\n\r\n      obj.TitleRender = (item) => {\r\n        const getTriggerContent = () => {\r\n          return this.IsSelectOpen || this.Primary === item ? 'click' : 'hover';\r\n        }\r\n        var triggerVM = textUtil.get(getTriggerContent())\r\n\r\n        const getButtonType = () => {\r\n          return this.Primary === item ? 'primary' : 'dashed'\r\n        }\r\n        var buttonTypeVM = textUtil.get(getButtonType())\r\n\r\n        const getAddContent = () => {\r\n          return this.Primary === item ? '' : 'Set'\r\n        }\r\n        var addContentVM = textUtil.get(getAddContent())\r\n\r\n        const getItemCss = () => {\r\n          return this.Primary === item ? 'levelgroup__primary' : '';\r\n        }\r\n\r\n        return <Popover trigger={triggerVM.Content}\r\n          content={\r\n            <span>\r\n              {this.Primary !== item ?\r\n                <span className='levelgroup__addtext'>{addContentVM.Content}</span>\r\n                : ''}\r\n              <Button size='small'\r\n                type={buttonTypeVM.Content}\r\n                onClick={() => {\r\n                  this.Primary = item;\r\n                }}>Primary</Button>\r\n            </span>\r\n          }>\r\n          <span className={getItemCss()}>{item}</span>\r\n        </Popover>\r\n      }\r\n\r\n      obj.OnSetOpen = (v) => this.IsSelectOpen = v;\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.Levels = v;\r\n        if (this.Levels.indexOf(this.Primary) === -1) {\r\n          this.Primary = util.GetDefaultPrimary(this);\r\n        }\r\n      }\r\n    }\r\n    return this.levelSelectVM;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.LevelGroups.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n    var list = this.Dict.LevelGroups;\r\n    list.splice(this.Index, 1);\r\n\r\n    this.Primary = util.GetDefaultPrimary(this);\r\n  }\r\n\r\n  primary = undefined\r\n  get Primary() {\r\n    if (!this.primary) {\r\n      this.primary = this.ModelItem.Primary;\r\n    }\r\n    return this.primary\r\n  } set Primary(v) {\r\n    this.primary = this.ModelItem.Primary = v;\r\n  }\r\n\r\n  isSelectOpen = undefined\r\n  get IsSelectOpen() {\r\n    return this.isSelectOpen\r\n  } set IsSelectOpen(v) {\r\n    this.isSelectOpen = v;\r\n  }\r\n}","import { LevelGroupVM } from \"./LevelGroupVM\"\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new LevelGroupVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefaultPrimary = (q) => {\r\n  if (q.Levels && q.Levels.length !== 0) {\r\n    return q.Levels[0];\r\n  }\r\n}","export const input = 'input'\r\nexport const select = 'select'","import * as textUtil from \"../../../../../text/TextVMUtil\";\r\nimport * as genUtil from \"../../../../../../util/generalUtil\";\r\nimport * as it from './TLS_FilterValue_InputType'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport NewInputView from \"../../../../../input/NewInputView\";\r\nimport SelectView from \"../../../../../select/SelectView\";\r\nimport * as selectUtil from \"../../../../../select/SelectVMUtil\";\r\nimport * as util from './TLS_FilterValueVMUtil'\r\n\r\nexport class TLS_FilterValueVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      inputType: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  get Values() {\r\n    return this.Dict.ModelItem.Items;\r\n  }\r\n\r\n  get Value() {\r\n    return this.Values[this.Index].Value;\r\n  }\r\n  set Value(v) {\r\n    this.Values[this.Index].Value = v;\r\n  }\r\n\r\n  valueVM\r\n  get ValueVM() {\r\n    if (!this.valueVM) {\r\n      var obj = this.valueVM = textUtil.get(this.Value);\r\n      obj.onSetContent = (v) => {\r\n        this.Value = v;\r\n      }\r\n    }\r\n    return this.valueVM;\r\n  }\r\n\r\n  selectVM\r\n  get SelectVM() {\r\n    if (!this.selectVM) {\r\n      var list = ['Cột', 'Vách', 'Dầm', 'Sàn']\r\n      var obj = this.selectVM = selectUtil.get(list, this.Value);\r\n      obj.Placeholder = '...'\r\n      obj.OnSetOpen = (v) => this.SelectOpen = v;\r\n      obj.OnSelectedItemChanged = (v) => this.Value = v;\r\n    }\r\n    return this.selectVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.ModelItem.Items.splice(this.Index, 1);\r\n    this.Dict.Items.splice(this.Index, 1);\r\n  }\r\n\r\n  inputType = undefined\r\n  get InputType(){\r\n    if (!this.inputType){\r\n      this.inputType = this.ModelItem.InputType\r\n    }\r\n    return this.inputType;\r\n  } set InputType(v){\r\n    this.inputType = this.ModelItem.InputType = v;\r\n  }\r\n\r\n  ToggleInputType = () => {\r\n    switch (this.InputType) {\r\n      case it.input:\r\n        this.SelectVM.InitialItem = this.Value;\r\n        this.Value = this.SelectVM.SelectedItem;\r\n        this.InputType = it.select\r\n        break;\r\n      case it.select:\r\n        if (this.Value) {\r\n          this.ValueVM.Content = this.Value;\r\n        } else{\r\n          if (!this.ValueVM.Content){\r\n            this.ValueVM.Content = 'value'\r\n          }\r\n          this.Value =this.ValueVM.Content;\r\n        }\r\n\r\n        this.InputType = it.input\r\n        break;\r\n    }\r\n  }\r\n\r\n  SwitchChecked_Funcs = () => this.InputType === it.select;\r\n\r\n  get InputElement() {\r\n    switch (this.InputType) {\r\n      case it.input:\r\n        return <NewInputView store={this.ValueVM} \r\n          className='tls_filter__value__input' />\r\n      case it.select:\r\n        return <SelectView store={this.SelectVM} \r\n          className='tls_filter__value__select' />\r\n    }\r\n  }\r\n\r\n  selectOpen\r\n  get SelectOpen() {\r\n    if (this.selectOpen === undefined) {\r\n      this.selectOpen = this.SelectVM.Open;\r\n    }\r\n    return this.selectOpen;\r\n  }\r\n  set SelectOpen(v) {\r\n    this.selectOpen = v;\r\n    this.PopoverState.Content = util.GetPopoverState(this);\r\n  }\r\n\r\n  popoverState\r\n  get PopoverState() {\r\n    if (!this.popoverState) {\r\n      this.popoverState = textUtil.get(util.GetPopoverState(this));\r\n    }\r\n    return this.popoverState;\r\n  }\r\n}","import { TLS_FilterValueVM } from \"./TLS_FilterValueVM\"\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TLS_FilterValueVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetPopoverState = (q) => {\r\n    return q.SelectOpen ? 'none' : 'hover';\r\n  }","import { makeObservable, observable, action } from 'mobx';\r\nimport * as selectUtil from \"../../../../../select/SelectVMUtil\";\r\nimport * as util from './TLS_FilterVMUtil'\r\nimport * as valueUtil from './TLS_FilterValueVMUtil'\r\n\r\nexport class TLS_FilterVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  get id(){\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get Field(){\r\n    return this.ModelItem.Field;\r\n  } set Field(v){\r\n    this.ModelItem.Field = v;\r\n  }\r\n\r\n  get FieldStorageList(){\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  fieldSelectVM\r\n  get FieldSelectVM(){\r\n    if (!this.fieldSelectVM){\r\n      var obj = this.fieldSelectVM = \r\n        selectUtil.get(this.FieldStorageList, this.Field);\r\n      obj.Placeholder = 'chọn bộ lọc ...';\r\n      obj.OnSelectedItemChanged = (v) => this.Field = v;\r\n    }\r\n    return this.fieldSelectVM;\r\n  }\r\n\r\n  get Index (){\r\n    return this.Dict.Filters.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n    this.Dict.Filters.splice(this.Index, 1);\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  AddItem = () => {\r\n    var item = valueUtil.get(this.ModelItem.AddItem(),this);\r\n    this.Items.push(item);\r\n    return item;\r\n  }\r\n}\r\n","import { TLS_FilterVM } from \"./TLS_FilterVM\";\r\nimport * as valueUtil from './TLS_FilterValueVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TLS_FilterVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (q) => {\r\n  return q.ModelItem.Items.map(x => valueUtil.get(x, q));\r\n}","import { Button, Popover } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport NewInputView from '../../../../../input/NewInputView';\r\nimport * as textUtil from '../../../../../text/TextVMUtil';\r\nimport * as st from './TLS_PageItemStateType'\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupVMUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterVMUtil'\r\nimport * as util from './TLS_PageItemVMUtil'\r\n\r\nexport class TLS_PageItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      name: observable,\r\n      State: observable,\r\n      levelGroups: observable,\r\n      filters: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem?.id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = this.ModelItem.Name = v;\r\n  }\r\n\r\n  State = st.text\r\n\r\n  ToggleState = () => {\r\n    switch (this.State) {\r\n      case st.text:\r\n        this.State = st.input\r\n        break;\r\n      case st.input:\r\n        this.NameVM.Content = this.Name;\r\n        this.State = st.text\r\n        break;\r\n    }\r\n  }\r\n\r\n  get DeleteMarginCss() {\r\n    return this.State === st.input ? 'tls_pageItem__deletemargin' : ''\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      this.nameVM = textUtil.get(this.Name);\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  NameOK = () => {\r\n    this.State = st.text;\r\n    this.Name = this.NameVM.Content;\r\n  }\r\n\r\n  NameCancel = () => {\r\n    this.State = st.text;\r\n  }\r\n\r\n  get InputToolElement() {\r\n    return <div >\r\n      <Button type='primary' size='small'\r\n        onClick={this.NameOK}>ok</Button>\r\n      <Button type='dashed' size='small'\r\n        onClick={this.NameCancel}>cancel</Button>\r\n    </div>\r\n  }\r\n\r\n  get InputElement() {\r\n    var obj = <NewInputView className='tls_pageItem_input' store={this.NameVM} />\r\n    return obj;\r\n  }\r\n\r\n  get TitleElement() {\r\n    var delElem = <Button type='primary' size='small' onClick={this.Delete}\r\n      className='tls_pageItem__delete'>x</Button>\r\n\r\n    switch (this.State) {\r\n      case st.text:\r\n        return <>\r\n          <span>{this.Name}</span>\r\n          <Button type='primary' size='small' className='tls_pageItem__edit'\r\n            onClick={this.ToggleState}>e</Button>\r\n          {delElem}\r\n        </>\r\n      case st.input:\r\n        return <>\r\n          <Popover content={this.InputToolElement} trigger=\"focus\">\r\n            <span>\r\n              {this.InputElement}\r\n            </span>\r\n          </Popover>\r\n          {delElem}\r\n        </>\r\n    }\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.PageItems.indexOf(this);\r\n  }\r\n\r\n  get IsLast() {\r\n    return this.Dict.PageItems.length - 1 === this.Index;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n\r\n    var index = this.Index;\r\n    var isLast = this.IsLast;\r\n\r\n    var dict = this.Dict;\r\n    var list = dict.PageItems;\r\n    list.splice(index, 1);\r\n    dict.AllTabs.splice(index, 1);\r\n\r\n    if (list.length !== 0) {\r\n      dict.IsModelChangePageKey = true;\r\n      dict.CurrentPageKey = (isLast ? list[index - 1] : list[index]).id\r\n    }\r\n  }\r\n\r\n  // Setting\r\n  get SettingVM() {\r\n    return this.Dict.SettingVM;\r\n  }\r\n\r\n  // Level Group\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n\r\n  levelGroups = undefined\r\n  get LevelGroups() {\r\n    if (!this.levelGroups) {\r\n      this.levelGroups = util.GetLevelGroups(this);\r\n    }\r\n    return this.levelGroups;\r\n  }\r\n\r\n  AddLevelGroup = () => {\r\n    var item = levelGroupUtil.get(this.ModelItem.AddLevelGroup(), this);\r\n    this.LevelGroups.push(item);\r\n    return item;\r\n  }\r\n\r\n  // Filter\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  filters = undefined\r\n  get Filters() {\r\n    if (!this.filters) {\r\n      this.filters = util.GetFilters(this);\r\n    }\r\n    return this.filters;\r\n  }\r\n\r\n  AddFilter = () => {\r\n    var item = filterUtil.get(this.ModelItem.AddFilter(), this);\r\n    this.Filters.push(item);\r\n    return item;\r\n  }\r\n}","import { TLS_PageItemVM } from \"./TLS_PageItemVM\"\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupVMUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TLS_PageItemVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetLevelGroups = (q) => {\r\n  return q.ModelItem.LevelGroups.map(x => levelGroupUtil.get(x, q));\r\n}\r\n\r\nexport const GetFilters = (q) => {\r\n  return q.ModelItem.Filters.map(x => filterUtil.get(x, q));\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './TypicalLevelSettingDataVMUtil'\r\nimport { ControlOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemVMUtil';\r\n\r\nexport class TypicalLevelSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      pageItems: observable,\r\n      currentPageKey: observable,\r\n      allTabs: observable\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  // Setting\r\n  get SettingVM (){\r\n    return this.Dict;\r\n  }\r\n\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  // Page Items\r\n  pageItems = undefined\r\n  get PageItems() {\r\n    if (!this.pageItems) {\r\n      this.pageItems = util.GetPageItems(this);\r\n    }\r\n    return this.pageItems;\r\n  }\r\n\r\n  AddPageItem = () => {\r\n    var item = pageItemUtil.get(this.ModelItem.AddPageItem(), this);\r\n    this.PageItems.push(item);\r\n\r\n    var i = this.IsHaveAddCommandTab ? 1 : 0;\r\n    this.AllTabs.splice(this.AllTabs.length - i, 0, item);\r\n\r\n    this.CurrentPageKey = item.id;\r\n\r\n    return item;\r\n  }\r\n\r\n  addCommandTab\r\n  get AddCommandTab() {\r\n    if (!this.addCommandTab) {\r\n      this.addCommandTab = {\r\n        id: 'add',\r\n        TitleElement: <Button className='tls__tabs__add'\r\n          type='text' size='small'\r\n          onClick={this.AddPageItem}>+</Button>\r\n      }\r\n    }\r\n    return this.addCommandTab;\r\n  }\r\n\r\n  IsHaveAddCommandTab = false\r\n\r\n  allTabs = undefined\r\n  get AllTabs() {\r\n    if (!this.allTabs) {\r\n      var obj = [...this.PageItems];\r\n      if (this.IsHaveAddCommandTab) {\r\n        obj.push(this.AddCommandTab);\r\n      }\r\n      this.allTabs = obj;\r\n    }\r\n    return this.allTabs;\r\n  }\r\n\r\n  currentPageKey = undefined\r\n  get CurrentPageKey() {\r\n    if (!this.currentPageKey) {\r\n      this.currentPageKey = this.PageItems[0].id;\r\n    }\r\n    return this.currentPageKey;\r\n  } set CurrentPageKey(v) {\r\n    this.currentPageKey = v;\r\n  }\r\n\r\n  IsModelChangePageKey = false\r\n\r\n  ChangePageKey = (v) => {\r\n    if (this.IsModelChangePageKey) {\r\n      this.IsModelChangePageKey = false; return;\r\n    }\r\n    this.CurrentPageKey = v;\r\n  }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { TypicalLevelSettingDataVM } from './TypicalLevelSettingDataVM';\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemVMUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TypicalLevelSettingDataVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPageItems = (q) => {\r\n  return q.ModelItem.PageItems.map(x => pageItemUtil.get(x, q));\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\nimport * as util from './TypicalLevelSettingVMUtil'\r\n\r\nexport class TypicalLevelSettingVM extends SettingVM {\r\n  get LevelStorageList() {\r\n    return this.ModelItem.LevelStorageList;\r\n  }\r\n\r\n  get FieldFilterStorageList(){\r\n    return this.ModelItem.FieldFilterStorageList;\r\n  }\r\n\r\n  Save = () => {\r\n    this.ModelItem.Save();\r\n  }\r\n}","import * as dataVMUtil from './TypicalLevelSettingDataVMUtil'\r\nimport { TypicalLevelSettingVM } from './TypicalLevelSettingVM'\r\nimport * as fieldUtil from '../../mass/item/MassItemField'\r\n\r\nexport const get = (q, project) => {\r\n  if (!q) return undefined;\r\n  \r\n  var qI = new TypicalLevelSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Project = project;\r\n\r\n  // var level_Dict = project.Level_Dict;\r\n  // const getLevelsFunc = () => { \r\n  //   qI.LevelStorageList = level_Dict.Items.map(x => x.Name);\r\n  //   qI.GetLevelStorageList = true;\r\n  // }\r\n  // if (level_Dict.Items){\r\n  //   getLevelsFunc();\r\n  // } else{\r\n  //   level_Dict.OnGetItemsDone_Funcs.push(getLevelsFunc);\r\n  // }\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data, qI);\r\n  }    \r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetFieldFilterStorageList = () => {\r\n  return fieldUtil.GetListForTypicalLevelFilter();\r\n}","import * as phaseDictVMUtil from '../phase/Phase_DictVMUtil'\r\nimport ProjectVM from \"./ProjectVM\";\r\nimport * as typicalLevelUtil from '../setting/typicallevel/TypicalLevelSettingVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  var qI = new ProjectVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPhase_DictVM = (q) => {\r\n  var phaseDict = q.ModelItem.Phase_Dict;\r\n  return phaseDictVMUtil.get(phaseDict);\r\n}\r\n\r\nexport const GetTypicalLevelSetting_Func = (model, project) => {\r\n  return typicalLevelUtil.get(model, project);\r\n}\r\n\r\nexport const GetTypicalLevelSetting = (q) => {\r\n  var project = q.ModelItem;\r\n  var tls = project.TypicalLevelSetting;\r\n  if (tls) {\r\n    return GetTypicalLevelSetting_Func(tls, q)\r\n  } else {\r\n    project.OnGetTypicalLevelSetting_Funcs.push(() =>\r\n      q.TypicalLevelSetting = GetTypicalLevelSetting_Func(project.TypicalLevelSetting, q));\r\n  }\r\n}\r\n\r\nexport const GetTypicalLevelSetting_ForEdit = (q) => {\r\n  var project = q.ModelItem;\r\n  var tls = project.TypicalLevelSetting_ForEdit;\r\n  if (tls) {\r\n    return GetTypicalLevelSetting_Func(tls, q)\r\n  } else {\r\n    project.OnGetTypicalLevelSetting_Funcs.push(() => {\r\n      q.TypicalLevelSetting_ForEdit = GetTypicalLevelSetting_Func(project.TypicalLevelSetting_ForEdit, q)\r\n    });\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Project_DictVMUtil'\r\n\r\nexport class Project_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n    this.ModelItem.Items = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n}","import * as itemVMUtil from './ProjectVMUtil'\r\nimport { Project_DictVM } from \"./Project_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new Project_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassResultCompVMUtil'\r\nimport * as multiSelectVMUtil from '../../../../select/MultiSelectVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as textUtil from '../../../../text/TextVMUtil'\r\nimport { Link } from 'react-router-dom';\r\nimport { Popover } from 'antd';\r\n\r\nexport default class MassResultCompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsShowProjectSelect: observable,\r\n      CanHavePhase: observable,\r\n      isHavePhase: observable,\r\n      IsDataPending: observable\r\n    })\r\n  }\r\n\r\n  projects\r\n  get Projects() {\r\n    if (!this.projects) {\r\n      this.projects = this.ModelItem.Projects;\r\n    }\r\n    return this.projects;\r\n  }\r\n  set Projects(v) {\r\n    this.projects = v;\r\n    this.ModelItem.Projects = v;\r\n  }\r\n\r\n  projectVMs\r\n  get ProjectVMs() {\r\n    if (!this.projectVMs) {\r\n      this.projectVMs = util.GetProjectVMs(this);\r\n    }\r\n    return this.projectVMs;\r\n  }\r\n  set ProjectVMs(v) {\r\n    this.projectVMs = v;\r\n    this.Projects = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  projectVMStorageList\r\n  get ProjectVMStorageList() {\r\n    if (!this.projectVMStorageList) {\r\n      this.projectVMStorageList = util.GetProjectVMStorageList(this);\r\n    }\r\n    return this.projectVMStorageList;\r\n  }\r\n  set ProjectVMStorageList(v) {\r\n    this.projectVMStorageList = v;\r\n\r\n    this.projectVMs = util.GetProjectVMs(this);\r\n\r\n    var selectVM = this.ProjectSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.projectVMs;\r\n  }\r\n\r\n  projectSelectOpen\r\n  get ProjectSelectOpen(){\r\n    if (this.projectSelectOpen === undefined){\r\n      this.projectSelectOpen = this.ProjectSelectVM.Open;\r\n    }\r\n    return this.projectSelectOpen;\r\n  }\r\n  set ProjectSelectOpen(v){\r\n    this.projectSelectOpen = v;\r\n    this.ProjectPopoverState.Content = util.GetProjectPopoverStateValue(this);\r\n  }\r\n\r\n  projectPopoverState\r\n  get ProjectPopoverState(){\r\n    if (!this.projectPopoverState){\r\n      this.projectPopoverState = textUtil.get(util.GetProjectPopoverStateValue(this));\r\n    }\r\n    return this.projectPopoverState;\r\n  }\r\n\r\n  projectSelectVM\r\n  get ProjectSelectVM() {\r\n    if (!this.projectSelectVM) {\r\n      var list = this.ProjectVMStorageList ? this.ProjectVMStorageList : [];\r\n      var obj = this.projectSelectVM = multiSelectVMUtil.get(list, this.ProjectVMs);\r\n      obj.Placeholder = 'chọn dự án'\r\n      obj.TitleRender = (item) => <Popover trigger={this.ProjectPopoverState.Content}\r\n        placement=\"topLeft\"\r\n        content={\r\n          <a target='_blank' rel=\"noreferrer\"\r\n            // href={`/#/project/${item._id}`} \r\n            href={item.Url}\r\n            >View project</a>\r\n        }\r\n      >\r\n        {item.DisplayContent}\r\n      </Popover>\r\n\r\n      obj.OnSelectedItemChanged = (v) => this.ProjectVMs = v;\r\n      obj.OnSetOpen = (v) => this.ProjectSelectOpen = v;\r\n    }\r\n    return this.projectSelectVM;\r\n  }\r\n\r\n  IsShowProjectSelect = true\r\n\r\n  phases\r\n  get Phases() {\r\n    if (!this.phases) {\r\n      this.phases = this.ModelItem.Phases;\r\n    }\r\n    return this.phases;\r\n  }\r\n  set Phases(v) {\r\n    this.phases = v;\r\n    this.ModelItem.Phases = v;\r\n  }\r\n\r\n  phaseVMs\r\n  get PhaseVMs() {\r\n    if (!this.phaseVMs) {\r\n      this.phaseVMs = util.GetPhaseVMs(this);\r\n    }\r\n    return this.phaseVMs;\r\n  }\r\n  set PhaseVMs(v) {\r\n    this.phaseVMs = v;\r\n    this.Phases = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  massItem_Dict\r\n  get MassItem_Dict() {\r\n    if (!this.massItem_Dict) {\r\n      this.massItem_Dict = this.ModelItem.MassItem_Dict;\r\n    }\r\n    return this.massItem_Dict;\r\n  }\r\n\r\n  phaseVMStorageList\r\n  get PhaseVMStorageList() {\r\n    return this.phaseVMStorageList;\r\n  }\r\n  set PhaseVMStorageList(v) {\r\n    this.phaseVMStorageList = v;\r\n\r\n    this.phaseVMs = util.GetPhaseVMs(this);\r\n\r\n    var selectVM = this.PhaseSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.phaseVMs;\r\n  }\r\n\r\n  phaseSelectVM\r\n  get PhaseSelectVM() {\r\n    if (!this.phaseSelectVM) {\r\n      var list = this.PhaseVMStorageList ? this.PhaseVMStorageList : [];\r\n      var obj = this.phaseSelectVM = multiSelectVMUtil.get(list, this.PhaseVMs);\r\n      obj.Placeholder = 'chọn version'\r\n      obj.OnSelectedItemChanged = (v) => this.PhaseVMs = v;\r\n    }\r\n    return this.phaseSelectVM;\r\n  }\r\n\r\n  CanHavePhase = false\r\n\r\n  isHavePhase = undefined\r\n  get IsHavePhase() {\r\n    if (!this.isHavePhase) {\r\n      this.isHavePhase = this.ModelItem.IsHavePhase;\r\n    }\r\n    return this.isHavePhase;\r\n  }\r\n  set IsHavePhase(v) {\r\n    this.isHavePhase = v;\r\n    this.ModelItem.IsHavePhase = v;\r\n  }\r\n\r\n  isShowPhaseSelectVM\r\n  get IsShowPhaseSelectVM() {\r\n    if (!this.isShowPhaseSelectVM) {\r\n      var obj = this.isShowPhaseSelectVM\r\n        = checkboxVMUtil.get(\"So sánh các version\", this.IsHavePhase);\r\n\r\n      obj.onCheckChange = (v) => {\r\n        this.IsHavePhase = v;\r\n      };\r\n    }\r\n    return this.isShowPhaseSelectVM;\r\n  }\r\n\r\n  get MassGroupSetting() {\r\n    return this.ModelItem.MassGroupSetting;\r\n  }\r\n  set MassGroupSetting(v) {\r\n    this.ModelItem.MassGroupSetting = v;\r\n  }\r\n\r\n  massGroupSettingStorageList = undefined\r\n  get MassGroupSettingStorageList() {\r\n    if (!this.massGroupSettingStorageList) {\r\n      this.massGroupSettingStorageList =\r\n        util.GetMassGroupSettingStorageList(this);\r\n    }\r\n  }\r\n  set MassGroupSettingStorageList(v) {\r\n    this.massGroupSettingStorageList = v;\r\n\r\n    var selectVM = this.MassGroupSettingSelectVM;\r\n    selectVM.Items = v;\r\n  }\r\n\r\n  massGroupSettingSelectVM\r\n  get MassGroupSettingSelectVM() {\r\n    if (!this.massGroupSettingSelectVM) {\r\n      var list = this.MassGroupSettingStorageList ?\r\n        this.MassGroupSettingStorageList : [];\r\n      var obj = this.massGroupSettingSelectVM =\r\n        selectVMUtil.get(list);\r\n\r\n      obj.TitleRender = (item) => item.DisplayContent\r\n\r\n      obj.CanClear = true;\r\n      obj.Placeholder = 'chọn bộ set khối lượng'\r\n      obj.OnSelectedItemChanged = (v) => this.MassGroupSetting = v;\r\n    }\r\n    return this.massGroupSettingSelectVM;\r\n  }\r\n\r\n  IsDataPending = false;\r\n\r\n  get LoadingSpinTip() {\r\n    return `loading data ... (${(this.HandledRatio * 100).toFixed(1)}%)`;\r\n  }\r\n\r\n  loadingSpinTipVM\r\n  get LoadingSpinTipVM() {\r\n    if (!this.loadingSpinTipVM) {\r\n      this.loadingSpinTipVM = textUtil.get(this.LoadingSpinTip);\r\n    }\r\n    return this.loadingSpinTipVM;\r\n  }\r\n\r\n  handledRatio = 0\r\n  get HandledRatio() {\r\n    return this.handledRatio;\r\n  }\r\n  set HandledRatio(v) {\r\n    this.handledRatio = v;\r\n    this.LoadingSpinTipVM.Content = this.LoadingSpinTip;\r\n  }\r\n\r\n  // function\r\n  GetMassData = () => {\r\n    this.IsDataPending = true;\r\n    this.HandledRatio = 0;\r\n    this.ModelItem.GetMassData();\r\n  }\r\n}","import { message } from \"antd\";\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport MassResultCompVM from \"./MassResultCompVM\"\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, isfetchProjects = true) => {\r\n  var qI = new MassResultCompVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.ViewItem = qI;\r\n\r\n  if (isfetchProjects) {\r\n    pmDataVM().Project_DictVM.OnGetItemsDone = (v) => {\r\n      qI.ProjectVMStorageList = GetProjectVMStorageList(qI);\r\n    }\r\n  }\r\n\r\n  q.OnGetItemsDone_Funcs.push(() => {\r\n    message.success('get mass data successfully');\r\n  })\r\n\r\n  var massTable = q.MassItem_Dict.MassTable;\r\n  massTable.OnIsUpdateDataDone_Funcs.push(() => {\r\n    qI.IsDataPending = false;\r\n  })\r\n  massTable.OnSetHandledRatio_Funcs.push((v) => {\r\n    qI.HandledRatio = v;\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetProjectVMStorageList = (q) => {\r\n  return pmDataVM().Project_DictVM.Items;\r\n}\r\n\r\nexport const GetProjectVMs = (q) => {\r\n  var storageList = q.ProjectVMStorageList;\r\n  if (!storageList) return [];\r\n\r\n  var list = [];\r\n\r\n  var projects = q.Projects;\r\n  projects.forEach(x => {\r\n    var index = storageList.findIndex(y => y.ModelItem === x);\r\n    if (index !== -1) {\r\n      list.push(storageList[index]);\r\n    }\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetPhaseVMs = (q) => {\r\n  var storageList = q.PhaseVMStorageList;\r\n  if (!storageList) return [];\r\n\r\n  var list = [];\r\n\r\n  var phases = q.Phases;\r\n  phases.forEach(x => {\r\n    var index = storageList.findIndex(y => y.ModelItem === x);\r\n    if (index !== -1) {\r\n      list.push(storageList[index]);\r\n    }\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetMassGroupSettingStorageList = (q) => {\r\n  var dict = pmData().MassGroupSetting_Dict;\r\n  var items = dict.Items;\r\n  if (!items){\r\n    dict.OnGetItemsDone_Funcs.push(() => {\r\n      q.MassGroupSettingStorageList = dict.Items;\r\n    })\r\n  }\r\n  return items;\r\n}\r\n\r\n\r\nexport const GetProjectPopoverStateValue = (q) => {\r\n  return q.ProjectSelectOpen ? 'none' : 'hover';\r\n}","export const _default = \"default\";\r\nexport const edit = \"edit\";","import * as util from './RenderItemUtil'\r\n\r\nexport default class RenderItem {\r\n  render\r\n  get Render(){\r\n    if (!this.render){\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v){\r\n    this.render = v;\r\n  }\r\n}","import InputView from \"../input/InputView\";\r\nimport RenderItem from \"./RenderItem\"\r\nimport * as rs from './RenderState'\r\nimport * as textUtil from '../text/TextVMUtil'\r\nimport TextView from \"../text/TextView\";\r\n\r\nexport const get = (state, render) => {\r\n  var qI = new RenderItem();\r\n  qI.State = state;\r\n  qI.Render = render;\r\n  return qI;\r\n}\r\n\r\nexport const GetRender = (q) => {\r\n  switch (q.State) {\r\n    case rs._default:\r\n      return (val, item, dataIndex, cell, row) => {\r\n        return <TextView store={cell.ValueVM} />\r\n      };\r\n    case rs.edit:\r\n      return (value, item, dataIndex, cell, row) => {\r\n        if (!dataIndex) return value;\r\n\r\n        var inputVM = cell.ValueVM;\r\n\r\n        var length = dataIndex.length;\r\n        var obj = item;\r\n        dataIndex.filter((x, i) => i < length - 1)\r\n          .forEach((x) => obj = obj[x]);\r\n\r\n        inputVM.onSetContent = (v) => {\r\n          obj[dataIndex[length - 1]] = v;\r\n        }\r\n        return <InputView store={inputVM} />\r\n      };\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import * as renderUtil from './RenderItemUtil'\r\n\r\nexport default class Render_Dict {\r\n  Items = []\r\n\r\n  GetRender = (state) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x.State === state);\r\n    if (index === -1){\r\n      var item = renderUtil.get(state);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import * as util from './TitleRenderItemUtil'\r\n\r\nexport default class TitleRenderItem {\r\n  render\r\n  get Render(){\r\n    if (!this.render){\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v){\r\n    this.render = v;\r\n  }\r\n}","import InputView from \"../input/InputView\";\r\nimport * as rs from './RenderState'\r\nimport * as textUtil from '../text/TextVMUtil'\r\nimport TitleRenderItem from \"./TitleRenderItem\";\r\nimport { Button } from \"antd\";\r\n\r\nexport const get = (state, render) => {\r\n  var qI = new TitleRenderItem();\r\n  qI.State = state;\r\n  qI.Render = render;\r\n  return qI;\r\n}\r\n\r\nexport const GetRender = (q) => {\r\n  switch (q.State) {\r\n    case rs._default:\r\n      return (title, column, table) => {\r\n        return <>\r\n          <div style={{ display: 'flex' }}>\r\n            {title}\r\n            {table.CanEditColumn ?\r\n             <Button type='primary' size='small'\r\n              style={{ backgroundColor: '#faad14', border: 'none' }}\r\n              onClick={column.Edit}>edit</Button> : ''}\r\n            {table.CanDeleteColumn ? <Button type='primary' danger size='small'\r\n              onClick={column.Delete}>x</Button> : '' }\r\n          </div>\r\n        </>\r\n      };\r\n    case rs.edit:\r\n      return (title, column, table) => {\r\n        var inputVM = textUtil.get(title, 'input');\r\n        inputVM.onSetContent = (v) => {\r\n          column.Title = v;\r\n        }\r\n        return <>\r\n          <div style={{ display: 'flex' }}>\r\n            <InputView store={inputVM} />\r\n            <Button type='primary' size='small'\r\n              onClick={column.OK}>ok</Button>\r\n          </div>\r\n        </>\r\n      };\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import * as renderUtil from './TitleRenderItemUtil'\r\n\r\nexport default class TitleRender_Dict {\r\n  Items = []\r\n\r\n  GetRender = (state) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x.State === state);\r\n    if (index === -1){\r\n      var item = renderUtil.get(state);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from './RenderState'\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport Render_Dict from './Render_Dict';\r\nimport TitleRender_Dict from './TitleRender_Dict';\r\n\r\nexport default class TableColumn {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Title : observable,\r\n      TitleRenderState : observable\r\n    })\r\n  }\r\n\r\n  get Index(){\r\n    return this.Table.Columns.indexOf(this);\r\n  }\r\n\r\n  TitleRenderState = rs._default\r\n  RenderState = rs._default;\r\n\r\n  Title = undefined\r\n\r\n  OnSetTitleOK_Funcs = []\r\n\r\n  titleRender_Dict\r\n  get TitleRender_Dict(){\r\n    if (!this.titleRender_Dict){\r\n      this.titleRender_Dict = new TitleRender_Dict();\r\n    }\r\n    return this.titleRender_Dict;\r\n  }\r\n\r\n  render_Dict\r\n  get Render_Dict(){\r\n    if (!this.render_Dict){\r\n      this.render_Dict = new Render_Dict();\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n  set Render_Dict(v){\r\n    this.render_Dict = v;\r\n  }\r\n\r\n  Edit = () => {\r\n    this.TitleRenderState = rs.edit;\r\n  }\r\n\r\n  OK = () => {\r\n    this.TitleRenderState = rs._default;\r\n    this.OnSetTitleOK_Funcs.forEach(x => x(this));\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Table.Columns.splice(this.Index, 1);\r\n    this.Table.Update();\r\n  }\r\n\r\n  TitleRender = () => {\r\n    var title = this.Title;\r\n    var table = this.Table;\r\n\r\n    var render = this.TitleRender_Dict.GetRender(this.TitleRenderState);\r\n    return render.Render(title, this, table);\r\n  }\r\n}","import TableColumn from \"./TableColumn\"\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport { Button } from \"antd\";\r\nimport * as rs from './RenderState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport const get = (title, dataIndex, renders, table) => {\r\n  var qI = new TableColumn();\r\n  qI.Title = title;\r\n\r\n  if (Array.isArray(dataIndex)) {\r\n    qI.DataIndex = dataIndex;\r\n  } else {\r\n    qI.DataIndex = [dataIndex];\r\n  }\r\n\r\n  qI.Key = genUtil.randomId();\r\n  qI.Table = table;\r\n\r\n  var dict = qI.Render_Dict;\r\n  if (renders) {\r\n    renders.forEach(x => {\r\n      dict.GetRender(x.State).Render = x.Render\r\n    });\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetByTitle = (title, table) => {\r\n  var qI = new TableColumn();\r\n  qI.Title = title;\r\n  qI.DataIndex = [title];\r\n  qI.Key = genUtil.randomId();\r\n  qI.Table = table;\r\n\r\n\r\n  qI.OnSetTitleOK_Funcs.push(() => {\r\n    qI.DataIndex = [qI.Title];\r\n    table.Update();\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetActionColumn = (table) => {\r\n  var title = undefined;\r\n\r\n  var renders = [\r\n    renderUtil.get(rs._default, (val, item, dataIndex, cell, row) => {\r\n      var editElem = '';\r\n      if (table.CanEdit) {\r\n        var edit = () => row.Edit();\r\n        editElem = <Button type='primary' size='small'\r\n          style={{ backgroundColor: '#faad14', border: 'none' }}\r\n          onClick={edit}>edit</Button>\r\n      }\r\n\r\n      var delElem = '';\r\n      if (table.CanDelete) {\r\n        var del = () => table.DeleteItem(item, row);\r\n\r\n        delElem = <Button type='primary' danger size='small'\r\n          onClick={del}>x</Button>\r\n      }\r\n      return <>\r\n        {editElem}{delElem}\r\n      </>\r\n    }),\r\n    renderUtil.get(rs.edit, (val, item, dataIndex, cell, row) => {\r\n      var ok = () => row.OK();\r\n      return <Button type='primary' size='small'\r\n        onClick={ok}>ok</Button>\r\n    })\r\n  ]\r\n\r\n  var col = get(title, null, renders, table);\r\n\r\n  if (table.CanAdd) {\r\n    col.TitleRender_Dict.GetRender(rs._default).Render = () =>\r\n      <div style={{ display: 'flex' }}>\r\n        <Button type='primary' size='small'\r\n          onClick={table.AddColumn}>\r\n          (+) c\r\n        </Button>\r\n        <Button type='primary' size='small'\r\n          onClick={table.AddItem}>\r\n          (+) r\r\n      </Button>\r\n      </div>\r\n  }\r\n\r\n  return col;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './TableRowUtil'\r\nimport * as rs from './RenderState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport default class TableRow {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Item : observable\r\n    })\r\n  }\r\n\r\n  key\r\n  get Key() {\r\n    if (!this.key) {\r\n      this.key = this.Item._id ? this.Item._id : this.Item.id;\r\n      if (!this.key){\r\n        this.key = genUtil.randomId();\r\n      }\r\n    }\r\n    return this.key;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Table.Rows.indexOf(this);\r\n  }\r\n\r\n  Item = undefined;\r\n\r\n  cells\r\n  get Cells() {\r\n    if (!this.cells) {\r\n      this.cells = util.GetCells(this);\r\n    }\r\n    return this.cells;\r\n  }\r\n\r\n  Edit = () => {\r\n    this.Cells.forEach(x => x.RenderState = rs.edit);\r\n  }\r\n\r\n  OK = () => {\r\n    this.Cells.forEach(x => x.RenderState = rs._default);\r\n    this.Table.EditItem(this.Item);\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from './RenderState'\r\nimport * as textUtil from '../text/TextVMUtil'\r\nimport * as util from './TableCellUtil'\r\n\r\nexport default class TableCell {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      renderState: observable\r\n    })\r\n  }\r\n\r\n  get Key() {\r\n    return `${this.Column.Key}_${this.Row.Key}`;\r\n  }\r\n\r\n  get Item() {\r\n    return this.Row.Item;\r\n  }\r\n\r\n  get ColumnIndex() {\r\n    return this.Row.Cells.indexOf(this);\r\n  }\r\n\r\n  get RowIndex() {\r\n    return this.Row.Index;\r\n  }\r\n\r\n  renderState = undefined\r\n  get RenderState() {\r\n    if (!this.renderState) {\r\n      this.renderState = this.Column.RenderState;\r\n    }\r\n    return this.renderState;\r\n  }\r\n  set RenderState(v) {\r\n    this.renderState = v;\r\n  }\r\n\r\n  valueVM\r\n  get ValueVM(){\r\n    if (!this.valueVM){\r\n      this.valueVM = textUtil.get(util.GetValue(this));\r\n    }\r\n    return this.valueVM;\r\n  }\r\n\r\n  render_Dict\r\n  get Render_Dict() {\r\n    if (!this.render_Dict) {\r\n      this.render_Dict = this.Column.Render_Dict;\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n\r\n  get DataIndex() {\r\n    return this.Column.DataIndex;\r\n  }\r\n\r\n  Render = () => {\r\n    var dataIndex = this.DataIndex;\r\n    var item = this.Item;\r\n    var value  = util.GetValue(this);\r\n\r\n    var render = this.Render_Dict.GetRender(this.RenderState);\r\n    return render.Render(value, item, dataIndex, this, this.Row);\r\n  }\r\n}","import TableCell from \"./TableCell\"\r\n\r\nexport const get = (row, col) => {\r\n  var qI = new TableCell();\r\n  qI.Row = row;\r\n  qI.Column = col;\r\n  return qI;\r\n}\r\n\r\nexport const GetValue = (q) => {\r\n  var dataIndex = q.DataIndex;\r\n  var item = q.Item;\r\n\r\n  var value = undefined;\r\n\r\n  if (dataIndex) {\r\n    value = item;\r\n    dataIndex.forEach(x => {\r\n      value = value[x]\r\n    })\r\n  }\r\n\r\n  return value;\r\n}","import TableRow from \"./TableRow\"\r\nimport * as cellUtil from './TableCellUtil'\r\n\r\nexport const get = (item, table) => {\r\n  var qI = new TableRow();\r\n  qI.Item = item;\r\n  qI.Table = table;\r\n  return qI;\r\n}\r\n\r\nexport const GetCells = (q) => {\r\n  var columns = q.Table.Columns;\r\n  return columns.map(x => cellUtil.get(q, x));\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport TableColumn from './TableColumn';\r\nimport * as colUtil from './TableColumnUtil'\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport * as rs from './RenderState'\r\nimport * as util from './TableVMUtil'\r\nimport * as textUtil from '../text/TextVMUtil'\r\nimport InputView from '../input/InputView'\r\nimport { Button } from 'antd';\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport * as rowUtil from './TableRowUtil'\r\n\r\nexport default class TableVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      columns: observable,\r\n      dataSource: observable,\r\n      rows: observable,\r\n      CanAdd: observable,\r\n      CanDelete: observable,\r\n      CanEdit: observable,\r\n      IsShowActionColumn: observable\r\n    })\r\n  }\r\n\r\n  CanAdd = true\r\n  CanDelete = true\r\n  CanEdit = true\r\n  CanAddColumn = true\r\n  CanEditColumn = true\r\n  CanDeleteColumn = true\r\n  IsShowActionColumn = true\r\n\r\n  columns = undefined\r\n  get Columns() {\r\n    if (!this.columns) {\r\n      this.columns = [\r\n        colUtil.get('Tên cấu kiện', 'ElementName', null, this),\r\n        colUtil.get('Đường kính', 'Diameter', null, this),\r\n      ];\r\n\r\n      if (this.IsShowActionColumn) {\r\n        this.columns.push(colUtil.GetActionColumn(this));\r\n      }\r\n    }\r\n    return this.columns;\r\n  }\r\n  set Columns(v) {\r\n    this.columns = v;\r\n    this.Rows = undefined;\r\n  }\r\n\r\n  dataSource = undefined\r\n  get DataSource() {\r\n    if (!this.dataSource) {\r\n      this.dataSource = [\r\n        {\r\n          id: 1,\r\n          ElementName: 'W1',\r\n          Diameter: '18',\r\n          Weight: '30'\r\n        },\r\n        {\r\n          id: 2,\r\n          ElementName: 'W2',\r\n          Diameter: '20',\r\n          Weight: '3.7'\r\n        },\r\n      ]\r\n    }\r\n    return this.dataSource;\r\n  }\r\n  set DataSource(v) {\r\n    this.dataSource = v;\r\n    this.Rows = undefined;\r\n  }\r\n\r\n  rows = undefined\r\n  get Rows() {\r\n    if (!this.rows) {\r\n      this.rows = util.GetRows(this);\r\n    }\r\n    return this.rows;\r\n  }\r\n  set Rows(v) {\r\n    this.rows = v;\r\n  }\r\n\r\n  AddItem = () => {\r\n    var item = undefined\r\n    if (this.OnGetItemForAdd) {\r\n      item = this.OnGetItemForAdd();\r\n    } else {\r\n      item = {\r\n        Key: genUtil.randomId(),\r\n        IsTypeNotDefined : true\r\n      };\r\n    }\r\n    this.DataSource.push(item);\r\n\r\n    var row = rowUtil.get(item, this);\r\n    this.Rows.push(row);\r\n    row.Edit();\r\n  }\r\n\r\n  DeleteItem = (item, row) => {\r\n    var list = this.DataSource;\r\n    var index = list.indexOf(item);\r\n    list.splice(index, 1);\r\n    this.Rows.splice(index, 1);\r\n\r\n    if (this.OnDeleteItem){\r\n      this.OnDeleteItem(item);\r\n    }\r\n  }\r\n\r\n  EditItem = (item) => {\r\n    if (item.IsTypeNotDefined){\r\n      var index = this.DataSource.findIndex(x => x.Key === item.Key);\r\n      item = this.DataSource[index] = {...item};\r\n    }\r\n\r\n    if (this.OnEditItem){\r\n      this.OnEditItem(item);\r\n    }\r\n  }\r\n\r\n  AddColumn = () => {\r\n    var col = colUtil.GetByTitle(null, this);\r\n    this.Columns.splice(this.Columns.length -1, 0, col);\r\n    col.Edit();\r\n  }\r\n\r\n  Update = () => {\r\n    console.log(this.DataSource[2]);\r\n    this.Rows = undefined;\r\n  }\r\n}","import * as rowUtil from './TableRowUtil'\r\nimport * as colUtil from './TableColumnUtil'\r\nimport TableVM from './TableVM';\r\n\r\nexport const get = (data) => {\r\n  var qI = new TableVM();\r\n  qI.Columns = data.columns.map(x => colUtil.GetByTitle(x, qI));\r\n  qI.DataSource = data.dataSource;\r\n  return qI;\r\n}\r\n\r\nexport const GetRows = (q) => {\r\n  return q.DataSource.map(x => rowUtil.get(x, q));\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './WorkItemExportDataVMUtil'\r\n\r\nexport class WorkItemExportDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\nimport * as checkboxUtil from '../../../../checkbox/CheckboxVMUtil'\r\n\r\nexport class WorkItemExportSettingVM extends SettingVM {\r\n  IsCategoryChecked = true\r\n\r\n  categoryCheckboxVM\r\n  get CategoryCheckboxVM(){\r\n    if (!this.categoryCheckboxVM){\r\n      debugger\r\n      var obj =this.categoryCheckboxVM = \r\n        checkboxUtil.get(undefined, this.IsCategoryChecked)\r\n    }\r\n    return this.categoryCheckboxVM;\r\n  }\r\n}","import * as dataVMUtil from './WorkItemExportDataVMUtil'\r\nimport { WorkItemExportSettingVM } from './WorkItemExportSettingVM';\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new WorkItemExportSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { WorkItemExportDataVM } from './WorkItemExportDataVM';\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new WorkItemExportDataVM();\r\n  qI.ModelItem = q;\r\n\r\n  return qI;\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport class WorkItemExportSetting extends Setting {\r\n  \r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './WorkItemExportSetting_DictVMUtil'\r\nimport * as itemUtil from './WorkItemExportSettingVMUtil';\r\nimport { WorkItemExportSetting } from './WorkItemExportSetting';\r\n\r\nexport class WorkItemExportSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = [\r\n        itemUtil.get(new WorkItemExportSetting())\r\n      ]\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  tableVM\r\n  get TableVM() {\r\n    if (!this.tableVM) {\r\n      this.tableVM = util.GetTableVM(this);\r\n    }\r\n    return this.tableVM;\r\n  }\r\n}","import TableVM from \"../../../../table/TableVM\";\r\nimport { WorkItemExportSetting_DictVM } from \"./WorkItemExportSetting_DictVM\";\r\nimport * as colUtil from '../../../../table/TableColumnUtil'\r\nimport * as renderUtil from '../../../../table/RenderItemUtil'\r\nimport * as rs from '../../../../table/RenderState'\r\nimport CheckboxView from '../../../../checkbox/CheckboxView'\r\nimport { WorkItemExportSettingVM } from \"./WorkItemExportSettingVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new WorkItemExportSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone_Funcs.push((v) => {\r\n    var obj = qI.Items;\r\n  });\r\n\r\n  return qI;\r\n}\r\n\r\n\r\nexport const GetTableVM = (q) => {\r\n  var qI = new TableVM();\r\n\r\n  qI.DataSource = q.Items;\r\n\r\n  var nameCol = colUtil.get('Tên thiết lập', ['Name'], null, qI);\r\n  var isCateCol = colUtil.get('Category', null, [\r\n    renderUtil.get(rs._default, (val, item) => {\r\n      debugger\r\n      var checkBoxVM = item.CategoryCheckboxVM;\r\n      return <CheckboxView store={item.CategoryCheckboxVM}/>\r\n    })\r\n  ], qI);\r\n  var isSubWorkItemCol = colUtil.get('Hạng mục phụ', null, [\r\n    renderUtil.get(rs._default, (val, item) => {\r\n      return <CheckboxView />\r\n    })\r\n  ], qI);\r\n\r\n  qI.Columns = [\r\n    nameCol, isCateCol, isSubWorkItemCol,\r\n    colUtil.GetActionColumn(qI)\r\n  ]\r\n\r\n  qI.OnGetItemForAdd = () => {\r\n    return new WorkItemExportSettingVM();\r\n  }\r\n  \r\n  return qI;\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport { PMData } from '../model/PMData';\r\n\r\nimport * as workpackage_DictVMUtil from '../../entity/workpackage/Workpackage_DictVMUtil'\r\nimport * as elementFilterSetting_DictVMUtil from \r\n  '../../entity/setting/elementFilter/ElementFilterSetting_DictVMUtil'\r\nimport * as massExportSetting_DictVMUtil from \r\n  '../../entity/setting/massExport/MassExportSetting_DictVMUtil'\r\nimport * as massGroupSetting_DictVMUtil from \r\n  '../../entity/setting/massGroup/MassGroupSetting_DictVMUtil'\r\nimport * as project_DictVMUtil from '../../entity/project/Project_DictVMUtil'\r\n\r\nimport * as massResultCompVMUtil from '../../entity/mass/result/MassResultCompVMUtil'\r\n\r\nimport * as fvt from '../../entity/filter/FilterValueType'\r\nimport * as sft from '../../entity/filter/StringFilterType'\r\n\r\nimport * as wieDictVMUtil from \r\n  '../../entity/setting/workitemexport/WorkItemExportSetting_DictVMUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport const GetWorkpackage_DictVM = (data) => {\r\n  return workpackage_DictVMUtil.get(pmData().Workpackage_Dict);\r\n}\r\n\r\nexport const GetElementFilterSetting_DictVM = (data) => {\r\n  return elementFilterSetting_DictVMUtil.get\r\n    (pmData().ElementFilterSetting_Dict);\r\n}\r\n\r\nexport const GetMassExportSetting_DictVM = (data) => {\r\n  return massExportSetting_DictVMUtil.get\r\n    (pmData().MassExportSetting_Dict);\r\n}\r\n\r\nexport const GetMassGroupSetting_DictVM = (data) => {\r\n  return massGroupSetting_DictVMUtil.get\r\n    (pmData().MassGroupSetting_Dict);\r\n}\r\n\r\nexport const GetProject_DictVM = (data) => {\r\n  return project_DictVMUtil.get\r\n    (pmData().Project_Dict);\r\n}\r\n\r\nexport const GetMassResultCompVM= (data) => {\r\n  return massResultCompVMUtil.get\r\n  (pmData().MassResultComp);\r\n}\r\n\r\nexport const GetWorkItemExportSetting_Dict = (data) => {\r\n  return wieDictVMUtil.get(pmData().WorkItemExportSetting_Dict);\r\n}","export const mass = 'mass'\r\nexport const typicallevel = 'typicallevel'\r\nexport const phase = 'phase'\r\nexport const inputdata = 'inputdata'\r\nexport const mepsetting = 'mepsetting'\r\nexport const document = 'document'","import { makeObservable, observable, action } from 'mobx';\r\nimport { pmData } from '../../entity/filter/EntFilterUtil';\r\nimport { PMData } from '../model/PMData';\r\nimport * as util from './PMDataVMUtil'\r\nimport * as pvt from '../../entity/project/ProjectViewType'\r\n\r\nexport class PMDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isDebug: observable,\r\n      projectViewType : observable,\r\n      currentProject : observable\r\n    })\r\n  }\r\n\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new PMDataVM();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  get pmData(){\r\n    return PMData.Instance;\r\n  }\r\n\r\n  workpackage_DictVM\r\n  get Workpackage_DictVM() {\r\n    if (!this.workpackage_DictVM){\r\n      this.workpackage_DictVM = util.GetWorkpackage_DictVM();\r\n    }\r\n    return this.workpackage_DictVM;\r\n  }\r\n\r\n  elementFilterSetting_DictVM\r\n  get ElementFilterSetting_DictVM() {\r\n    if (!this.elementFilterSetting_DictVM){\r\n      this.elementFilterSetting_DictVM = util.GetElementFilterSetting_DictVM();\r\n    }\r\n    return this.elementFilterSetting_DictVM;\r\n  }\r\n\r\n  massExportSetting_DictVM\r\n  get MassExportSetting_DictVM() {\r\n    if (!this.massExportSetting_DictVM){\r\n      this.massExportSetting_DictVM = util.GetMassExportSetting_DictVM();\r\n    }\r\n    return this.massExportSetting_DictVM;\r\n  }\r\n\r\n  massGroupSetting_DictVM\r\n  get MassGroupSetting_DictVM() {\r\n    if (!this.massGroupSetting_DictVM){\r\n      this.massGroupSetting_DictVM = util.GetMassGroupSetting_DictVM();\r\n    }\r\n    return this.massGroupSetting_DictVM;\r\n  }\r\n\r\n  project_DictVM\r\n  get Project_DictVM() {\r\n    if (!this.project_DictVM){\r\n      this.project_DictVM = util.GetProject_DictVM();\r\n    }\r\n    return this.project_DictVM;\r\n  }\r\n\r\n  massResultCompVM\r\n  get MassResultCompVM(){\r\n    if (!this.massResultCompVM){\r\n      this.massResultCompVM = util.GetMassResultCompVM();\r\n    }\r\n    return this.massResultCompVM;\r\n  }\r\n  set MassResultCompVM(v) {\r\n    this.massResultCompVM = v;\r\n    if (!v)\r\n    {\r\n      this.pmData.MassResultComp = v;\r\n    }\r\n    else{\r\n      this.pmData.MassResultComp = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  filterValueTypes;\r\n  get FilterValueTypes() {\r\n    if (!this.filterValueTypes){\r\n      this.filterValueTypes = this.pmData.FilterValueTypes;\r\n    }\r\n    return this.filterValueTypes;\r\n  }\r\n\r\n  stringFilterTypes;\r\n  get StringFilterTypes() {\r\n    if (!this.stringFilterTypes){\r\n      this.stringFilterTypes = this.pmData.StringFilterTypes;\r\n    }\r\n    return this.stringFilterTypes;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = this.pmData.CategoryNames;\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n\r\n  valueRetrieveTypes\r\n  get ValueRetrieveTypes() {\r\n    if (!this.valueRetrieveTypes){\r\n      this.valueRetrieveTypes = this.pmData.ValueRetrieveTypes\r\n    }\r\n    return this.valueRetrieveTypes;\r\n  }\r\n\r\n  parameterNames;\r\n  get ParameterNames(){\r\n    if (!this.parameterNames){\r\n      this.parameterNames = this.pmData.ParameterNames;\r\n    }\r\n    return this.parameterNames;\r\n  }\r\n\r\n  massPropertyNames;\r\n  get MassPropertyNames(){\r\n    if (!this.massPropertyNames){\r\n      this.massPropertyNames = this.pmData.MassPropertyNames;\r\n    }\r\n    return this.massPropertyNames;\r\n  }\r\n\r\n  massTypes;\r\n  get MassTypes(){\r\n    if (!this.massTypes){\r\n      this.massTypes = this.pmData.MassTypes;\r\n    }\r\n    return this.massTypes;\r\n  }\r\n\r\n  workItemExportSetting_Dict\r\n  get WorkItemExportSetting_Dict(){\r\n    if (!this.workItemExportSetting_Dict){\r\n      this.workItemExportSetting_Dict = \r\n        util.GetWorkItemExportSetting_Dict(this);\r\n    }\r\n    return this.workItemExportSetting_Dict;\r\n  }\r\n\r\n  isDebug = undefined\r\n  get IsDebug(){\r\n    if (this.isDebug === undefined){\r\n      this.isDebug = this.pmData.IsDebug;\r\n    }\r\n    return this.isDebug;\r\n  } set IsDebug(v){\r\n    this.isDebug = this.pmData.IsDebug = v;\r\n  }\r\n\r\n  OnSet_ProjectViewType_Func_Dict = []\r\n\r\n  projectViewType = pvt.mass\r\n  //projectViewType = pvt.document\r\n  get ProjectViewType(){\r\n    return this.projectViewType;\r\n  } set ProjectViewType(v){\r\n    this.projectViewType = v;\r\n    this.OnSet_ProjectViewType_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  OnSet_CurrentProject_Func_Dict = []\r\n\r\n  currentProject = undefined\r\n  get CurrentProject(){\r\n    return this.currentProject;\r\n  } set CurrentProject(v){\r\n    this.currentProject = v;\r\n    this.OnSet_CurrentProject_Func_Dict.forEach(x => x.Value());\r\n\r\n    this.pmData.CurrentProject = v?.ModelItem\r\n  }\r\n\r\n  get UpdatedDate(){\r\n    return this.pmData.UpdatedDate;\r\n  }\r\n}","import * as util from './MGS_FieldVMUtil'\r\nimport * as selectVMUtil from '../../../../../select/SelectVMUtil'\r\n\r\nexport default class MGS_FieldVM {\r\n  get Index() {\r\n    return this.Dict.FieldVMs.indexOf(this);\r\n  }\r\n\r\n  get Fields(){\r\n    return this.Dict.ModelItem.Fields;\r\n  }\r\n\r\n  get Field(){\r\n    return this.Fields[this.Index];\r\n  }\r\n  set Field(v){\r\n    this.Fields[this.Index] = v;\r\n  }\r\n\r\n  get FieldStorageList(){\r\n    return util.GetFieldStorageList();\r\n  }\r\n\r\n  fieldSelectVM\r\n  get FieldSelectVM(){\r\n    if (!this.fieldSelectVM){\r\n      var obj = this.fieldSelectVM = selectVMUtil.get(this.FieldStorageList, this.Field);\r\n      obj.OnSelectedItemChanged = (v) => this.Field = v;\r\n    }\r\n    return this.fieldSelectVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    var index = this.Index;\r\n    this.Fields.splice(index, 1);\r\n    \r\n    var list = this.Dict.FieldVMs;\r\n    list.splice(index, 1);\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.FieldSelectVM.InitialItem = v.Field;\r\n  }\r\n}","import { PMDataVM } from \"../../../../single/form/PMDataVM\";\r\nimport MGS_FieldVM from \"./MGS_FieldVM\"\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MGS_FieldVM();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetFieldStorageList = () => {\r\n  return pmDataVM().MassPropertyNames;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as util from './MassGroupSettingDataVMUtil'\r\nimport * as fieldVMUtil from './field/MGS_FieldVMUtil'\r\n\r\nexport default class MassGroupSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      fieldVMs : observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  fieldVMs = undefined\r\n  get FieldVMs(){\r\n    if (!this.fieldVMs){\r\n      this.fieldVMs = util.GetFieldVMs(this);\r\n    }\r\n    return this.fieldVMs;\r\n  }\r\n  set FieldVMs(v){\r\n    var list = this.fieldVMs;\r\n    var modelList = this.ModelItem.Fields;\r\n\r\n    var oldCount = list.length;\r\n    var newCount = v.length;\r\n\r\n    list.forEach((x, i) => {\r\n      if (i >= newCount) return;\r\n      x.SetData(v[i]);\r\n    });\r\n\r\n    var delta = Math.abs(oldCount - newCount);\r\n    if (oldCount > newCount){\r\n      list.splice(newCount, delta);\r\n      modelList.splice(newCount, delta);\r\n    }\r\n    else if (oldCount < newCount){\r\n      for (var i = 0; i < delta; i++) {\r\n        var originItemVM = v[oldCount + i];\r\n\r\n        var item = originItemVM.Field;\r\n        modelList.push(item);\r\n\r\n        var itemVM = fieldVMUtil.get(item,this);\r\n        list.push(itemVM);\r\n      }\r\n    }\r\n  }\r\n\r\n  AddNewFieldVM = () => {\r\n    var item = this.ModelItem.AddNewField();\r\n    var itemView = fieldVMUtil.get(item, this);\r\n    this.FieldVMs.push(itemView);\r\n    return itemView;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.FieldVMs = v.FieldVMs;\r\n  }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport MassGroupSettingDataVM from './MassGroupSettingDataVM';\r\nimport * as fieldVMUtil from './field/MGS_FieldVMUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSettingDataVM();\r\n  qI.ModelItem = q;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetFieldVMs = (q) => {\r\n  var fields = q.ModelItem.Fields;\r\n  return fields.map(x => fieldVMUtil.get(x, q));\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\n\r\nexport default class MassGroupSettingVM extends SettingVM {\r\n  OnInitialSetDataVM = (v) => {\r\n    \r\n  }\r\n}","import * as dataVMUtil from './MassGroupSettingDataVMUtil'\r\nimport MassGroupSettingVM from './MassGroupSettingVM';\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassGroupSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport class CSVExport {\r\n  data = []\r\n  get Data() {\r\n    if (this.Override_Get_Data) {\r\n      return this.Override_Get_Data()\r\n    }\r\n    return this.data;\r\n  } set Data(v) {\r\n    this.data = v;\r\n  }\r\n\r\n  fileName\r\n  get FileName() {\r\n    if (this.Override_Get_FileName) {\r\n      return this.Override_Get_FileName();\r\n    }\r\n    return this.fileName;\r\n  } set FileName(v) {\r\n    this.fileName = v;\r\n  }\r\n\r\n  Export = () => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    const ws = XLSX.utils.json_to_sheet(this.Data, this.Headers);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, this.FileName + fileExtension);\r\n  }\r\n  \r\n  ExportTest = () => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    var ws1 = {}\r\n    ws1.Name = 'Title';\r\n    ws1['!ref'] = \"A1:E5\";\r\n    ws1['A1'] = {\r\n      t: 'n', \r\n      v: 100\r\n    }\r\n\r\n    var ws2 = {}\r\n    ws2.Name = 'Raw Data'\r\n    ws2['!ref'] = \"A1:E5\";\r\n    ws2['B2'] = {\r\n      t: 'n', \r\n      v: 200\r\n    }\r\n    ws2['B3'] = {\r\n      v: 200, f : 'B2'\r\n    }\r\n    ws2['C1'] = {\r\n      v: 300, \r\n      f : 'Title!A1'\r\n    }\r\n\r\n    ws2['C2'] = {\r\n      v: 300, \r\n      f : 'sum(Title!A1, B2)'\r\n    }\r\n\r\n    // const ws = XLSX.utils.json_to_sheet(this.Data, this.Headers);\r\n    // ws['!ref'] = \"A1:E5\";\r\n    // ws['E5'] = {\r\n    //   t : 's',\r\n    //   v : '100'\r\n    // };\r\n    // debugger\r\n\r\n    //const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    \r\n    const wb = { \r\n      Sheets: { \r\n        \r\n       }, \r\n      SheetNames: [ws1.Name, ws2.Name] \r\n    };\r\n    wb.Sheets[ws1.Name] = ws1;\r\n    wb.Sheets[ws2.Name] = ws2;\r\n\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, this.FileName + fileExtension);\r\n  }\r\n}","import * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport class ExcelExport {\r\n  workbook\r\n  get Workbook(){\r\n    if (this.Override_Get_Workbook){\r\n      return this.Override_Get_Workbook()\r\n    }\r\n    return this.workbook;\r\n  } set Workbook(v){\r\n    this.workbook = v;\r\n  }\r\n\r\n  fileName\r\n  get FileName() {\r\n    if (this.Override_Get_FileName) {\r\n      return this.Override_Get_FileName();\r\n    }\r\n    return this.fileName;\r\n  } set FileName(v) {\r\n    this.fileName = v;\r\n  }\r\n\r\n  Export = () => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    \r\n    const excelBuffer = XLSX.write(this.Workbook, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, this.FileName + fileExtension);\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './MT_CellUtil'\r\n\r\nexport class MT_Cell {\r\n  // Lấy thứ tự trong lập trình\r\n  row = 0\r\n  get Row(){\r\n    if (this.Override_Get_Row){\r\n      return this.Override_Get_Row();\r\n    }\r\n    return this.row;\r\n  } set Row(v){\r\n    this.row = v;\r\n    this.Override_Get_Row = undefined;\r\n  }\r\n\r\n  // Lấy thứ tự trong lập trình\r\n  column = 0\r\n  get Column(){\r\n    if (this.Override_Get_Column){\r\n      return this.Override_Get_Column();\r\n    }\r\n    return this.column\r\n  } set Column(v){\r\n    this.column = v;\r\n    this.Override_Get_Column = undefined;\r\n  }\r\n\r\n  Type \r\n  Value\r\n\r\n  formula\r\n  get Formula(){\r\n    if (this.Override_Get_Formula){\r\n      return this.Override_Get_Formula();\r\n    }\r\n    return this.formula;\r\n  } set Formula(v){\r\n    this.formula = v;\r\n    this.Override_Get_Formula = undefined;\r\n  }\r\n\r\n  get Address(){\r\n    var obj = genUtil.ExcelCellName(this.Row, this.Column);\r\n    return obj;\r\n  }\r\n\r\n  subItems\r\n  get SubItems(){\r\n    if (!this.subItems){\r\n      this.subItems = util.GetSubItems(this);\r\n    }\r\n    return this.subItems;\r\n  }\r\n\r\n  isContinueSubRows\r\n  get IsContinueSubRows(){\r\n    if (this.isContinueSubRows === undefined){\r\n      this.isContinueSubRows = util.GetIsContinueSubRows(this);\r\n    }\r\n    return this.isContinueSubRows;\r\n  }\r\n\r\n  get ResultData(){\r\n    var obj = {\r\n      t : this.Type,\r\n      v : this.Value,\r\n      f : this.Formula,\r\n      z : this.Format,\r\n      s : this.Style\r\n    }\r\n    return obj;\r\n  }\r\n}","// Property\r\nexport const GetSubItems = (q) => {\r\n  var column = q.Column;\r\n  return q.Dict.SubItems.map(x => {\r\n    var list = x.Cells;\r\n    var index = list.findIndex(y => y.Column === column);\r\n    return index !== -1 ? list[index] : undefined;\r\n  }).filter(x => x !== undefined);\r\n}\r\n\r\nexport const GetIsContinueSubRows = (q) => {\r\n  var isValid = true;\r\n\r\n  q.SubItems.forEach(x => {\r\n    if (isValid && x.SubItems.length !== 0){\r\n      isValid = false;\r\n    }\r\n  })\r\n\r\n  return isValid;\r\n}","import * as util from './MT_Data_RowUtil'\r\n\r\nexport class MT_Data_Row {\r\n  Worksheet\r\n\r\n  Row\r\n\r\n  get Rank(){\r\n    return this.Row.Rank;\r\n  }\r\n\r\n  subItems\r\n  get SubItems(){\r\n    if (!this.subItems){\r\n      this.subItems = util.GetSubItems(this);\r\n    }\r\n    return this.subItems;\r\n  }\r\n\r\n  get FullItems(){\r\n    return util.GetFullItems(this);\r\n  }\r\n\r\n  cells\r\n  get Cells(){\r\n    if (!this.cells){\r\n      this.cells = util.GetCells(this);\r\n    }\r\n    return this.cells;\r\n  }\r\n\r\n  get FullIndex() {\r\n    return this.Worksheet.FullRows.indexOf(this);\r\n  }\r\n\r\n  title\r\n  get Title(){\r\n    if (!this.title){\r\n      this.title = util.GetTitle(this);\r\n    }\r\n    return this.title;\r\n  }\r\n}","export const string = 's'\r\nexport const number = 'n'","import { MT_Cell } from \"./MT_Cell\";\r\nimport { MT_Data_Row } from \"./MT_Data_Row\";\r\nimport * as c_vt from './MT_Cell_ValueType'\r\n\r\n// Instance\r\nexport const get = (row, ws, supItem) => {\r\n  var qI = new MT_Data_Row();\r\n\r\n  qI.Row = row;\r\n  qI.Worksheet = ws;\r\n  qI.SupItem = supItem;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetSubItems = (q) => {\r\n  return q.Row.SubItems.map(x => get(x, q.Worksheet, q));\r\n}\r\n\r\nexport const GetTitle = (q) => {\r\n  var row = q.Row;\r\n  var title = '';\r\n\r\n  for (var i = 0; i < row.Rank; i++) {\r\n    title += '  ';\r\n  }\r\n\r\n  title += row.Title;\r\n\r\n  return title;\r\n}\r\n\r\nexport const GetCells = (q) => {\r\n  var vc_dict = q.ValueCell_Dict = [];\r\n\r\n  var firstCol = q.Worksheet.First_ValueColumn;\r\n  var firstRow = q.Worksheet.First_ValueRow;\r\n\r\n  var row = q.Row;\r\n  var list = []\r\n  var getRowFunc = () => q.FullIndex + firstRow;\r\n\r\n  var titleCell = new MT_Cell();\r\n  titleCell.Dict = q;\r\n  titleCell.Type = c_vt.string;\r\n\r\n  titleCell.Value = q.Title;\r\n  titleCell.Column = 0 + firstCol;\r\n  titleCell.Override_Get_Row = getRowFunc\r\n  list.push(titleCell);\r\n\r\n  var columns = row.Table.Columns\r\n  row.Cells.forEach(x => {\r\n    var valueCell = new MT_Cell()\r\n    valueCell.Dict = q;\r\n    valueCell.Type = c_vt.number;\r\n    valueCell.Value = x.TotalValue\r\n    valueCell.Format = '0.00'\r\n    valueCell.Column = \r\n      columns.indexOf(x.Column) + 1 + firstCol\r\n    valueCell.Override_Get_Row = getRowFunc\r\n\r\n    valueCell.Override_Get_Formula = () => {\r\n      var subItems = valueCell.SubItems;\r\n      var length = subItems.length;\r\n      if (length === 0) return undefined;\r\n\r\n      var formula\r\n      if (!valueCell.IsContinueSubRows) {\r\n        formula = subItems.reduce((a, x, i) => {\r\n          if (i !== 0) {\r\n            a += ','\r\n          };\r\n          a += x.Address\r\n          return a\r\n        }, 'SUM(');\r\n\r\n        formula += ')';\r\n      } else {\r\n        formula = `SUM(${subItems[0].Address}:${subItems[length-1].Address})`\r\n      }\r\n\r\n      return formula;\r\n    }\r\n\r\n    var key = x.Column.Name\r\n    list.push(valueCell);\r\n    vc_dict.push({\r\n      Key: key,\r\n      Value: valueCell\r\n    })\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetFullItems = (q) => {\r\n  var list = [q];\r\n\r\n  q.SubItems.forEach(x => {\r\n    list.push.apply(list, x.FullItems);\r\n  });\r\n\r\n  return list;\r\n}","import * as util from './MT_Data_WorksheetUtil'\r\n\r\nexport class MT_Data_Worksheet {\r\n  get Table(){\r\n    return this.Workbook.Table;\r\n  }\r\n\r\n  Title\r\n\r\n  mainRows\r\n  get MainRows(){\r\n    if (!this.mainRows){\r\n      this.mainRows = util.GetMainRows(this)\r\n    }\r\n    return this.mainRows;\r\n  }\r\n\r\n  fullRows\r\n  get FullRows(){\r\n    if (!this.fullRows){\r\n      this.fullRows = util.GetFullRows(this);\r\n    }\r\n    return this.fullRows;\r\n  }\r\n\r\n  valueCells\r\n  get ValueCells(){\r\n    if (!this.valueCells){\r\n      this.valueCells = util.GetValueCells(this);\r\n    }\r\n    return this.valueCells;\r\n  }\r\n\r\n  titleCells\r\n  get TitleCells(){\r\n    if (!this.titleCells){\r\n      this.titleCells = util.GetTitleCells(this);\r\n    }\r\n    return this.titleCells;\r\n  }\r\n\r\n  allCells\r\n  get AllCells(){\r\n    if (!this.allCells){\r\n      this.allCells = this.TitleCells.concat(this.ValueCells);\r\n    }\r\n    return this.allCells;\r\n  }\r\n\r\n  get RangeName(){\r\n    return util.GetRangeName(this); \r\n  }\r\n\r\n  First_TitleColumn = 0\r\n  First_TitleRow = 0\r\n\r\n  First_ValueColumn = 0;\r\n  First_ValueRow = 1;\r\n\r\n  get ResultData(){\r\n    var obj = {\r\n      '!ref' : this.RangeName\r\n    };\r\n\r\n    this.AllCells.forEach(x => {\r\n      obj[x.Address] = x.ResultData;\r\n    })\r\n\r\n    return obj;\r\n  }\r\n}","import * as rowUtil from './MT_Data_RowUtil'\r\nimport * as c_vt from './MT_Cell_ValueType'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { MT_Cell } from './MT_Cell';\r\n\r\n// Property\r\nexport const GetMainRows = (q) => {\r\n  return q.Table.MainRows.map(x => rowUtil.get(x, q));\r\n}\r\n\r\nexport const GetFullRows = (q) => {\r\n  var list = [];\r\n\r\n  q.MainRows.forEach(x => {\r\n    list.push.apply(list, x.FullItems);\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetValueCells = (q) => {\r\n  var list = [];\r\n\r\n  q.FullRows.forEach(x => {\r\n    list.push.apply(list, x.Cells);\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetTitleCells = (q) => {\r\n  var fc = q.First_TitleColumn;\r\n  var fr = q.First_TitleRow;\r\n\r\n  var list = [];\r\n  q.Table.Columns.forEach((x, i) => {\r\n    var cell = new MT_Cell();\r\n    cell.Type = c_vt.string;\r\n    cell.Value = x.Name;\r\n    cell.Column = i + fc + 1;\r\n    cell.Row = fr\r\n    cell.Style = {\r\n      font : {\r\n        bold : true\r\n      }\r\n    }\r\n\r\n    list.push(cell);\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetRangeName = (q) => {\r\n  var listCells = q.AllCells;\r\n\r\n  var range = listCells.reduce(\r\n    ({ minRow, minCol, maxRow, maxCol }, x) => ({\r\n      minRow: minRow < x.Row ? minRow : x.Row,\r\n      minCol: minCol < x.Column ? minCol : x.Column,\r\n      maxRow: maxRow > x.Row ? maxRow : x.Row,\r\n      maxCol: maxCol > x.Column ? maxCol : x.Column,\r\n    }), {\r\n    minRow: listCells[0].Row, minCol: listCells[0].Column,\r\n    maxRow: listCells[0].Row, maxRow: listCells[0].Column\r\n  });\r\n\r\n  return genUtil.ExcelRangeName\r\n    (range.minRow, range.minCol, range.maxRow, range.maxCol);\r\n}","import * as util from './MT_RawData_WorksheetUtil'\r\n\r\nexport class MT_RawData_Worksheet {\r\n  Workbook\r\n\r\n  get Table() {\r\n    return this.Workbook.Table;\r\n  }\r\n\r\n  Title\r\n\r\n  dataRows\r\n  get DataRows(){\r\n    if (!this.dataRows){\r\n      this.dataRows = util.GetDataRows(this);\r\n    }\r\n    return this.dataRows;\r\n  }\r\n\r\n  tableRows\r\n  get TableRows() {\r\n    if (!this.tableRows) {\r\n      this.tableRows = util.GetTableRows(this);\r\n    }\r\n    return this.tableRows;\r\n  }\r\n\r\n  records\r\n  get Records() {\r\n    if (!this.records) {\r\n      this.records = util.GetRecords(this);\r\n    }\r\n    return this.records\r\n  }\r\n\r\n  InfoFields = []\r\n\r\n  valueFields\r\n  get ValueFields() {\r\n    if (!this.valueFields) {\r\n      this.valueFields = util.GetValueFields(this);\r\n    }\r\n    return this.valueFields;\r\n  }\r\n\r\n  valueCells\r\n  get ValueCells() {\r\n    if (!this.valueCells) {\r\n      this.valueCells = util.GetValueCells(this);\r\n    }\r\n    return this.valueCells\r\n  }\r\n\r\n  titleCells\r\n  get TitleCells(){\r\n    if (!this.titleCells){\r\n      this.titleCells = util.GetTitleCells(this);\r\n    }\r\n    return this.titleCells;\r\n  }\r\n\r\n  allCells\r\n  get AllCells(){\r\n    if (!this.allCells){\r\n      this.allCells = this.TitleCells.concat(this.ValueCells);\r\n    }\r\n    return this.allCells;\r\n  }\r\n\r\n  get RangeName() {\r\n    return util.GetRangeName(this);\r\n  }\r\n\r\n  First_TitleColumn = 0\r\n  First_TitleRow = 0\r\n\r\n  First_ValueColumn = 0;\r\n  First_ValueRow = 1;\r\n\r\n  get ResultData() {\r\n    var obj = {\r\n      '!ref': this.RangeName\r\n    };\r\n\r\n    this.AllCells.forEach(x => {\r\n      obj[x.Address] = x.ResultData;\r\n    })\r\n\r\n    return obj;\r\n  }\r\n}","import { MT_Cell } from \"./MT_Cell\";\r\nimport * as c_vt from './MT_Cell_ValueType'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Property\r\nexport const GetDataRows = (q) => {\r\n  return q.Workbook.Data_WS.FullRows\r\n    .filter(x => x.SubItems.length === 0)\r\n}\r\n\r\nexport const GetTableRows = (q) => {\r\n  return q.DataRows.map(x => x.Row)\r\n}\r\n\r\nexport const GetValueFields = (q) => {\r\n  return q.Table.Columns.map(x => x.Name);\r\n}\r\n\r\nexport const GetRecords = (q) => {\r\n  return q.DataRows.map(x => {\r\n    // Init Cells\r\n    var cells = x.Cells;\r\n\r\n    var obj = x.Row.ExportData;\r\n\r\n    // Xử lý phần sắp xếp  Info Fields\r\n    var infoFields = q.InfoFields;\r\n    obj.Infos.map(x => x.Key).forEach(y => {\r\n      if (!infoFields.includes(y)) {\r\n        infoFields.push(y);\r\n      }\r\n    });\r\n\r\n    return {\r\n      Binding_DataRow: x,\r\n      Value: obj\r\n    }\r\n  })\r\n}\r\n\r\nexport const GetValueCells = (q) => {\r\n  var fc = q.First_ValueColumn;\r\n  var fr = q.First_ValueRow;\r\n\r\n  // Init InfoFiels\r\n  var records = q.Records;\r\n\r\n  var list = [];\r\n  var ifs = q.InfoFields;\r\n  var ifl = ifs.length\r\n  var vfs = q.ValueFields;\r\n\r\n  records.forEach((x, i) => {\r\n    // Truy xuất phần binding\r\n    var vc_dict = x.Binding_DataRow.ValueCell_Dict\r\n\r\n    // Xử lý phần Value Object\r\n    var value = x.Value;\r\n    var cell\r\n    var row = i + fr;\r\n\r\n    // Xử lý Info\r\n    value.Infos.forEach(y => {\r\n      cell = new MT_Cell();\r\n      cell.Type = c_vt.string;\r\n      cell.Value = y.Value;\r\n      cell.Column = ifs.indexOf(y.Key) + fc;\r\n      cell.Row = row\r\n\r\n      list.push(cell);\r\n    })\r\n\r\n    // Xử lý Value\r\n    value.Values.forEach(y => {\r\n      var key = y.Key;\r\n      var cell_val = y.Value;\r\n\r\n      cell = new MT_Cell();\r\n      cell.Type = c_vt.number;\r\n      cell.Value = cell_val;\r\n      cell.Format = '0.00'\r\n      cell.Column = vfs.indexOf(key) + fc + ifl;\r\n      cell.Row = row\r\n\r\n      list.push(cell);\r\n\r\n      // Xử lý phần Binding\r\n      //debugger\r\n      var index = vc_dict.findIndex(z => z.Key === key);\r\n      var data_cell = vc_dict[index].Value;\r\n\r\n      if (cell_val) {\r\n        data_cell.Formula = `raw_data!${cell.Address}`;\r\n      }\r\n    })\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetTitleCells = (q) => {\r\n  // Init InfoFiels\r\n  var records = q.Records;\r\n\r\n  var fc = q.First_TitleColumn;\r\n  var fr = q.First_TitleRow;\r\n\r\n  var fields = q.InfoFields.concat(q.ValueFields)\r\n\r\n  var list = [];\r\n  fields.forEach((x, i) => {\r\n    var cell = new MT_Cell();\r\n    cell.Type = c_vt.string;\r\n    cell.Value = x;\r\n    cell.Column = i + fc;\r\n    cell.Row = fr\r\n    list.push(cell);\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetRangeName = (q) => {\r\n  var listCells = q.AllCells;\r\n\r\n  var range = listCells.reduce(\r\n    ({ minRow, minCol, maxRow, maxCol }, x) => ({\r\n      minRow: minRow < x.Row ? minRow : x.Row,\r\n      minCol: minCol < x.Column ? minCol : x.Column,\r\n      maxRow: maxRow > x.Row ? maxRow : x.Row,\r\n      maxCol: maxCol > x.Column ? maxCol : x.Column,\r\n    }), {\r\n    minRow: listCells[0].Row, minCol: listCells[0].Column,\r\n    maxRow: listCells[0].Row, maxRow: listCells[0].Column\r\n  });\r\n\r\n  return genUtil.ExcelRangeName\r\n    (range.minRow, range.minCol, range.maxRow, range.maxCol);\r\n}","import * as util from './MT_WorkbookUtil'\r\n\r\nexport class MT_Workbook {\r\n  Table\r\n\r\n  get All_WS(){\r\n    return [ this.RawData_WS, this.Data_WS]\r\n    //return [ this.Data_WS, this.RawData_WS]\r\n    //return [ this.Data_WS ]\r\n  }\r\n\r\n  data_WS\r\n  get Data_WS(){\r\n    if (!this.data_WS){\r\n      this.data_WS = util.GetData_WS(this);\r\n    }\r\n    return this.data_WS;\r\n  }\r\n\r\n  rawData_WS\r\n  get RawData_WS(){\r\n    if (!this.rawData_WS){\r\n      this.rawData_WS = util.GetRawData_WS(this);\r\n    }\r\n    return this.rawData_WS;\r\n  }\r\n\r\n  get ResultData (){\r\n    var obj = {\r\n      Sheets : { },\r\n      SheetNames : []\r\n    }\r\n\r\n    this.All_WS.forEach(x => {\r\n      obj.Sheets[x.Title] = x.ResultData\r\n      obj.SheetNames.push(x.Title);\r\n    })\r\n\r\n    return obj;\r\n  }\r\n}","import { MT_Data_Worksheet } from \"./MT_Data_Worksheet\";\r\nimport { MT_RawData_Worksheet } from \"./MT_RawData_Worksheet\";\r\nimport { MT_Workbook } from \"./MT_Workbook\"\r\n\r\n// Instance\r\nexport const get = (table) => {\r\n  var qI = new MT_Workbook();\r\n\r\n  qI.Table = table;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetData_WS = (q) =>{\r\n  var qI = new MT_Data_Worksheet();\r\n\r\n  qI.Workbook = q;\r\n  qI.Title = 'data'\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetRawData_WS = (q) => {\r\n  var qI = new MT_RawData_Worksheet();\r\n\r\n  qI.Workbook = q;\r\n  qI.Title = 'raw_data'\r\n\r\n  return qI;\r\n}","export const input = 'input'\r\nexport const select = 'select'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as mif from '../item/MassItemField'\r\nimport MassColumn from './MassColumn';\r\nimport * as colUtil from './MassColumnUtil'\r\nimport * as rowUtil from './MassRowUtil'\r\nimport * as cellUtil from './MassCellUtil'\r\nimport * as util from './MassTableUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as filterUtil from '../../filter/EntFilterUtil'\r\nimport * as textUtil from '../../../../text/TextVMUtil'\r\nimport * as api from '../../../../../util/apiUtil'\r\nimport * as st from '../../setting/base/SettingType'\r\nimport { message } from 'antd';\r\nimport * as mgsUtil from '../../setting/massGroup/MassGroupSettingUtil'\r\nimport * as mgsVMUtil from '../../setting/massGroup/MassGroupSettingVMUtil'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as compUtil from './rowgroup/MassGroupComponentUtil'\r\nimport * as exportUtil from '../../../../export/csv/CSVExportUtil';\r\nimport dayjs from 'dayjs';\r\nimport * as eeUtil from '../../../../export/excel/ExcelExportUtil';\r\nimport * as wbUtil from './export/MT_WorkbookUtil';\r\nimport * as mgi_st from './MassGroupInput_StateType'\r\nimport InputView from '../../../../input/InputView';\r\nimport * as selectUtil from '../../../../select/SelectVMUtil';\r\nimport SelectView from '../../../../select/SelectView';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport default class MassTable {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsValidTable: observable,\r\n      Columns: observable,\r\n      MainRows: observable,\r\n      Cells: observable,\r\n      columnField: observable,\r\n      IsOnSaveMassGroup: observable,\r\n      MassGroupInput_State: observable,\r\n      Is_Override_MassGroup_Modal_Open: observable\r\n    })\r\n  }\r\n\r\n\r\n  items\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    if (v && v.length !== 0) {\r\n      this.Build();\r\n      this.IsValidTable = true;\r\n    }\r\n    else {\r\n      this.IsValidTable = false;\r\n    }\r\n  }\r\n\r\n  IsValidTable = false\r\n\r\n  columnField = mif.Project\r\n  get ColumnField() {\r\n    return this.columnField;\r\n  }\r\n  set ColumnField(v) {\r\n    this.columnField = v;\r\n  }\r\n\r\n  massGroupSetting\r\n  get MassGroupSetting() {\r\n    return this.massGroupSetting;\r\n  }\r\n  set MassGroupSetting(v) {\r\n    this.massGroupSetting = v;\r\n    if (!v) {\r\n      this.MainMGC = v;\r\n    } else {\r\n      this.MainMGC = compUtil.Clone(v.Data.MassGroupComponent);\r\n    }\r\n  }\r\n\r\n  mainMGC\r\n  get MainMGC() {\r\n    if (!this.mainMGC) {\r\n      this.mainMGC = util.GetMainMGC(this);\r\n    }\r\n    return this.mainMGC;\r\n  }\r\n  set MainMGC(v) {\r\n    this.mainMGC = v;\r\n    this.Init();\r\n    if (!v) {\r\n      this.MainMGI = undefined;\r\n    } else {\r\n      this.MainMGI = util.GetMainMGI(this);\r\n    }\r\n  }\r\n\r\n  mainMGI\r\n  get MainMGI() {\r\n    if (!this.mainMGI) {\r\n      this.mainMGI = util.GetMainMGI(this);\r\n    }\r\n    return this.mainMGI;\r\n  }\r\n  set MainMGI(v) {\r\n    this.mainMGI = v;\r\n  }\r\n\r\n  Columns = undefined\r\n  FullRows = undefined\r\n  MainRows = undefined\r\n  Cells = undefined\r\n\r\n  Init = () => {\r\n    this.Columns = [];\r\n    this.MainRows = [];\r\n    this.FullRows = [];\r\n    this.Cells = [];\r\n\r\n    // Reset các dòng tạo bởi người dùng\r\n    this.CreatedByUser_Rows = []\r\n    this.Handled_CreatedByUser_Rows = []\r\n  }\r\n\r\n  get AllRows() {\r\n    return util.GetAllRows(this);\r\n  }\r\n\r\n  GetColumn = (v) => {\r\n    var list = this.Columns;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Name === v);\r\n    if (index === -1) {\r\n      item = colUtil.get(v, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  GetRow = (v, supItem) => {\r\n    var list = undefined;\r\n    if (supItem) {\r\n      list = supItem.SubItems;\r\n    } else {\r\n      list = this.MainRows;\r\n    }\r\n\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Name === v);\r\n    if (index === -1) {\r\n      item = rowUtil.get(v, this);\r\n      item.SupItem = supItem;\r\n\r\n      list.push(item);\r\n      this.FullRows.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  GetCell = (col, row, canAdd = true) => {\r\n    var list = this.Cells;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Column === col && x.Row === row);\r\n    if (index === -1) {\r\n      if (!canAdd) return undefined;\r\n\r\n      item = cellUtil.get(col, row, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n\r\n  Build = () => {\r\n    var colField = this.ColumnField;\r\n\r\n    if (colField === mif.Phase) {\r\n      pmData().MassResultComp.Phases.forEach(x => {\r\n        var col = this.GetColumn(mif.GetValueString(x, colField));\r\n      })\r\n    }\r\n\r\n    this.Items.forEach(x => {\r\n      switch (colField) {\r\n        case mif.Phase:\r\n          x.ValidPhasesByInput.forEach(y => {\r\n            this.HandleItem(x, y);\r\n          })\r\n          break;\r\n        default:\r\n          this.HandleItem(x, x.GetValue(colField));\r\n          break;\r\n      }\r\n    })\r\n\r\n    if (!this.IsHaveAsyncData) {\r\n      this.UpdateData();\r\n    }\r\n  }\r\n\r\n  IsHaveAsyncData = false;\r\n  IsOnSaveMassGroup = false;\r\n\r\n  HandledItems = []\r\n  HandledItemPhases = []\r\n\r\n  OnSetHandledRatio_Funcs = []\r\n\r\n  handledRatio\r\n  get HandledRatio() {\r\n    return this.handledRatio;\r\n  } set HandledRatio(v) {\r\n    this.handledRatio = v;\r\n    this.OnSetHandledRatio_Funcs.forEach(x => x(v));\r\n  }\r\n\r\n  AddHandledItems = (item) => {\r\n    if (this.ColumnField !== mif.Phase) {\r\n      this.HandledItems.push(item);\r\n    } else {\r\n      var list = this.HandledItemPhases;\r\n      var index = list.findIndex(x => x.Item === item);\r\n      var obj = undefined;\r\n      if (index === -1) {\r\n        obj = {\r\n          Item: item,\r\n          Count: 0\r\n        };\r\n        list.push(obj);\r\n      } else {\r\n        obj = list[index];\r\n      }\r\n      obj.Count++;\r\n\r\n      if (obj.Count === item.ValidPhasesByInput.length) {\r\n        this.HandledItems.push(item);\r\n      }\r\n    }\r\n\r\n    this.HandledRatio = this.HandledItems.length / this.Items.length;\r\n\r\n    if (this.HandledItems.length === this.Items.length) {\r\n      this.UpdateData();\r\n      this.HandledItems = [];\r\n    }\r\n  }\r\n\r\n  UpdateData = () => {\r\n    this.MainRows.forEach(x => x.UpdateData());\r\n    this.MainRows = rowUtil.Order(this.MainRows);\r\n\r\n    this.Cells.forEach(x => x.UpdateData());\r\n\r\n    this.IsUpdateDataDone = true;\r\n  }\r\n\r\n  OnIsUpdateDataDone_Funcs = []\r\n\r\n  set IsUpdateDataDone(v) {\r\n    this.OnIsUpdateDataDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  HandleItem = (item, colFieldValue, mgc, initialRow) => {\r\n    var col =\r\n      this.GetColumn(mif.GetValueString(colFieldValue, this.ColumnField));\r\n    var rows = initialRow ? [initialRow] : [];\r\n    var mgc = mgc ? mgc : this.MainMGC;\r\n\r\n    this.HandleRowFieldIndex(item, col, rows, mgc, 0);\r\n  }\r\n\r\n  // Xử lý tạo Row với giá trị tương ứng và Cell bên trong\r\n  GetRow_Value_FieldIndex = (item, col, rows, val, mgc, rowFieldIndex) => {\r\n    var mgis = mgc.Items;\r\n    var itemCount = mgis.length;\r\n    var mgi = mgis[rowFieldIndex];\r\n\r\n    // Sup Row của dòng khối lượng đang xét\r\n    var lastRow = rows.length !== 0 ? rows[rows.length - 1] : undefined\r\n    // mgi.SupRow = lastRow;\r\n    mgi.AddSupRow(lastRow);\r\n\r\n    var rowField = mgi.Field;\r\n    if (!rowField) {\r\n      this.AddHandledItems(item);\r\n      return;\r\n    }\r\n\r\n    var valueString = mif.GetValueString(val, rowField);\r\n    var fullValue = lastRow ? `${lastRow.FullValue}__${valueString}` : valueString;\r\n\r\n    if (mgi.NotIncludeValues.includes(fullValue)) {\r\n      this.AddHandledItems(item);\r\n      return;\r\n    }\r\n\r\n    var row = undefined;\r\n    const addRow = (supRow) => {\r\n      return this.Handle_AddRow(fullValue, supRow);\r\n    }\r\n\r\n    const handleRow = (row) => {\r\n      // Gắn thông tin gốc vào Row\r\n      row.RawValue = valueString;\r\n      row.MassGroupItem = mgi;\r\n      rows.push(row);\r\n\r\n      var subMgcs = mgi.SubComponents;\r\n      var subIndex = subMgcs.findIndex(x =>\r\n        filterUtil.IsValid(x.Filter, fullValue));\r\n      if (subIndex !== -1) {\r\n        mgc = subMgcs[subIndex];\r\n        mgc.IsHaveMassItem = true;\r\n\r\n        rowFieldIndex = -1;\r\n        itemCount = mgc.Items.length;\r\n\r\n        row.SubMassGroupComponent = mgc;\r\n      }\r\n\r\n      var cell = this.GetCell(col, row);\r\n      cell.Items.push(item);\r\n\r\n      if (rowFieldIndex === itemCount - 1) {\r\n        this.AddHandledItems(item);\r\n      } else {\r\n        this.HandleRowFieldIndex(item, col, rows, mgc, rowFieldIndex + 1);\r\n      }\r\n    }\r\n\r\n    var mgiItem = mgi.GetItem(fullValue, valueString);\r\n    var replaceMgi = mgiItem.NewMGI;\r\n    if (replaceMgi) {\r\n      // Lấy thông tin SupName\r\n      var supName = mgiItem.SupValue;\r\n\r\n      // Thêm Value-Title cho MassGroupItem\r\n      replaceMgi.GetItem(fullValue, valueString);\r\n\r\n      // Đính thông tin OriginSupRow cũ\r\n      if (lastRow) {\r\n        lastRow.Is_Original_SupRow = true;\r\n      }\r\n\r\n      this.Handle_ReplaceMGI(replaceMgi, supName, addRow, handleRow, lastRow);\r\n    } else {\r\n      row = addRow(lastRow);\r\n      handleRow(row);\r\n    }\r\n  }\r\n\r\n  Handle_AddRow = (fullValue, supRow) => {\r\n    var r1 = this.GetRow(fullValue, supRow);\r\n    r1.FullValue = fullValue;\r\n    return r1;\r\n  }\r\n\r\n  Handle_ReplaceMGI = (replaceMgi, supName, addRow, handleRow, originalSupRow) => {\r\n    var isGet_SupRow_Done\r\n\r\n    // Lấy SupRow phù hợp có trong ReplaceMGI\r\n    const getSupRow = () => {\r\n      var list = replaceMgi.SupRows;\r\n      var index = list.findIndex(x => x.Name === supName);\r\n      if (index !== -1) {\r\n        isGet_SupRow_Done = true;\r\n        return list[index]\r\n      }\r\n      return undefined;\r\n    }\r\n\r\n    // Thêm Row vào SupRow\r\n    const awaitGetSupRowForAdd = (supRow) => {\r\n      var r2 = addRow(supRow);\r\n      r2.ReplaceMGI = replaceMgi;\r\n\r\n      return r2;\r\n    }\r\n\r\n    // Đính thông tin OriginSupRow\r\n    const setOriginal_SupRow = (row) => {\r\n      row.Original_SupRow = originalSupRow;\r\n      row.IsReplaced = true;\r\n    }\r\n\r\n    // Tổn hợp các Phương thức ở trên\r\n    const fullFunc = () => {\r\n      var sr = getSupRow();\r\n      if (sr) {\r\n        var r = awaitGetSupRowForAdd(sr);\r\n        setOriginal_SupRow(r);\r\n        handleRow(r);\r\n      }\r\n    }\r\n\r\n    fullFunc();\r\n    genUtil.Add(\r\n      replaceMgi.On_AddSupRow_Func_Dict,\r\n      () => {\r\n        if (!isGet_SupRow_Done && replaceMgi.NewRow?.Name === supName) {\r\n          fullFunc();\r\n        }\r\n      },\r\n      false);\r\n\r\n    // var row = undefined\r\n    // if (replaceMgi.IsFirstSetSupRow) {\r\n    //   row = awaitGetSupRowForAdd();\r\n    //   setOriginal_SupRow(row);\r\n    //   handleRow(row);\r\n    // } else {\r\n    //   replaceMgi.OnIsFirstSetSupRow_Funcs.push(() => {\r\n    //     row = awaitGetSupRowForAdd();\r\n    //     setOriginal_SupRow(row);\r\n    //     handleRow(row);\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  HandleRowFieldIndex = (item, col, rows, mgc, rowFieldIndex) => {\r\n    var rowField = mgc.Items[rowFieldIndex].Field;\r\n\r\n    var val = item.GetValue(rowField, (val) =>\r\n      this.GetRow_Value_FieldIndex(item, col, rows, val, mgc, rowFieldIndex));\r\n    if (!Array.isArray(val)) {\r\n      this.GetRow_Value_FieldIndex(item, col, rows, val, mgc, rowFieldIndex);\r\n    } else {\r\n      this.IsHaveAsyncData = true;\r\n    }\r\n  }\r\n\r\n  // MassGroupInput\r\n  get Reference_MassGroupSetting_SelectVM() {\r\n    return this.Dict.Dict.ViewItem.MassGroupSettingSelectVM;\r\n  }\r\n\r\n  SaveMassGroup = () => {\r\n    // Init MassGroup StorageList\r\n    var refSelectVM = this.Reference_MassGroupSetting_SelectVM;\r\n    var obj = this.MassGroupSelectVM;\r\n    obj.Items = [...refSelectVM.Items];\r\n    obj.InitialItem = refSelectVM.SelectedItem;\r\n\r\n    this.MassGroupInput_State = mgi_st.select\r\n    this.IsOnSaveMassGroup = true;\r\n  }\r\n\r\n  MassGroupInput_State = undefined\r\n\r\n  Toggle_MassGroupInput_State = () => {\r\n    switch (this.MassGroupInput_State) {\r\n      case mgi_st.select:\r\n        this.MassGroupInput_State = mgi_st.input\r\n        break;\r\n      case mgi_st.input:\r\n        this.MassGroupInput_State = mgi_st.select\r\n        break;\r\n    }\r\n  }\r\n\r\n  get MassGroupInput_Toggle_Classname() {\r\n    switch (this.MassGroupInput_State) {\r\n      case mgi_st.select:\r\n        return 'btn-warning';\r\n      case mgi_st.input:\r\n        return 'btn-success';\r\n    }\r\n  }\r\n\r\n  get MassGroupInput_Toggle_Content() {\r\n    switch (this.MassGroupInput_State) {\r\n      case mgi_st.select:\r\n        return 'sel';\r\n      case mgi_st.input:\r\n        return 'inp';\r\n    }\r\n  }\r\n\r\n  massGroupName = undefined\r\n  get MassGroupName() {\r\n    if (!this.massGroupName) {\r\n      this.massGroupName = util.GetMassGroupName(this);\r\n    }\r\n    return this.massGroupName;\r\n  }\r\n  set MassGroupName(v) {\r\n    this.massGroupName = v;\r\n  }\r\n\r\n  massGroupNameVM\r\n  get MassGroupNameVM() {\r\n    if (!this.massGroupNameVM) {\r\n      var obj = this.massGroupNameVM =\r\n        textUtil.get(this.MassGroupName, 'Tên set khối lượng');\r\n      obj.onSetContent = (v) => this.MassGroupName = v;\r\n    }\r\n    return this.massGroupNameVM;\r\n  }\r\n\r\n  massGroupSelectVM\r\n  get MassGroupSelectVM() {\r\n    if (!this.massGroupSelectVM) {\r\n      var obj = this.massGroupSelectVM = selectUtil.get([], undefined);\r\n      obj.Placeholder = 'Bộ set khối lượng';\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.MassGroupName = v?.Name\r\n      };\r\n    }\r\n    return this.massGroupSelectVM;\r\n  }\r\n\r\n  get MassGroupInput_Element() {\r\n    switch (this.MassGroupInput_State) {\r\n      case mgi_st.select:\r\n        var obj = this.MassGroupSelectVM;\r\n        var list = obj.Items;\r\n        var index = list.findIndex(x => x.Name === this.MassGroupName);\r\n        obj.InitialItem = index !== -1 ?\r\n          list[index] : undefined\r\n        return <SelectView store={obj} />\r\n      case mgi_st.input:\r\n        var obj = this.MassGroupNameVM;\r\n        obj.Content = this.MassGroupName;\r\n        return <InputView store={obj} />\r\n    }\r\n  }\r\n\r\n  MassGroupInputOK = () => {\r\n    if (!this.MassGroupName || this.MassGroupName.length === 0) {\r\n      switch (this.MassGroupInput_State) {\r\n        case mgi_st.select:\r\n          message.warning('Vui lòng chọn bộ thiết lập!')\r\n          return;\r\n        case mgi_st.input:\r\n          message.warning('Vui lòng nhập tên thiết lập!')\r\n          return;\r\n      }\r\n    }\r\n\r\n    var needValidateForOveride = true;\r\n    var items = pmData().MassGroupSetting_Dict.Items;\r\n    var index = items.findIndex(x => x.Name === this.MassGroupName);\r\n    var _id = undefined;\r\n    if (index !== -1) {\r\n      _id = items[index]._id;\r\n\r\n      if (this.MassGroupInput_State === mgi_st.input) {\r\n        needValidateForOveride = false;\r\n      }\r\n    }\r\n\r\n    const handle_UpdateMassGroup = () => {\r\n      var apiData = {\r\n        _id,\r\n        name: this.MassGroupName,\r\n        settingType: st.massgroup,\r\n        data: {\r\n          massGroupComponent: this.MainMGC.ApiData\r\n        }\r\n      };\r\n\r\n      var url = `https://api.bimdev.vn/api/hbs/mg`;\r\n\r\n      var isNew = _id ? false : true;\r\n      var command = isNew ? 'add' : 'edit';\r\n      const apiFunc = () => !isNew ? api.put(`${url}/${command}`, apiData) :\r\n        api.post(`${url}/${command}`, apiData);\r\n\r\n      apiFunc().then(response => response.data)\r\n        .then(data => {\r\n          var refVM = this.Reference_MassGroupSetting_SelectVM\r\n\r\n          var dict = pmData().MassGroupSetting_Dict;\r\n          var item = mgsUtil.get(data, dict);\r\n          var dictVM = pmDataVM().MassGroupSetting_DictVM;\r\n          var itemVM = mgsVMUtil.get(item, dictVM);\r\n\r\n          if (isNew) {\r\n            dict.Items.push(item);\r\n            dictVM.Items.push(itemVM);\r\n\r\n            refVM.Items.push(itemVM);\r\n          } else {\r\n            dict.Items[index] = item;\r\n            dictVM.Items[index] = item;\r\n\r\n            refVM.Items[index] = itemVM;\r\n            // Refresh lại selected item nếu trùng với đối tượng update\r\n            if (refVM.SelectedIndex === index) {\r\n              refVM.InitialItem = itemVM;\r\n            }\r\n          }\r\n\r\n          message.success(`${command} massgroup successfully`);\r\n        })\r\n\r\n      this.IsOnSaveMassGroup = false;\r\n      this.MassGroupNameVM.Content = util.GetMassGroupName(this);\r\n    }\r\n\r\n    if (needValidateForOveride) {\r\n      handle_UpdateMassGroup();\r\n    } else {\r\n      this.Override_MassGroup_Modal_OKFunc =\r\n        () => handle_UpdateMassGroup();\r\n\r\n      this.Is_Override_MassGroup_Modal_Open = true;\r\n    }\r\n  }\r\n\r\n  Is_Override_MassGroup_Modal_Open = false\r\n\r\n  get Override_MassGroup_ModalElement() {\r\n    var title = 'Cảnh báo'\r\n    var content = 'Thiết lập đã có sẵn, bạn có muốn ghi đè không?'\r\n\r\n    const modalCancel = () =>\r\n      this.Is_Override_MassGroup_Modal_Open = false\r\n\r\n    const modalOK = () => {\r\n      this.Is_Override_MassGroup_Modal_Open = false\r\n      this.Override_MassGroup_Modal_OKFunc();\r\n    }\r\n\r\n    return <Modal title={title}\r\n      visible={this.Is_Override_MassGroup_Modal_Open}\r\n      onOk={modalOK} onCancel={modalCancel}>\r\n      {content}\r\n    </Modal>\r\n  }\r\n\r\n  MassGroupInputCancel = () => {\r\n    this.IsOnSaveMassGroup = false;\r\n    this.MassGroupNameVM.Content = util.GetMassGroupName(this);\r\n  }\r\n\r\n  AddMainRow = () => {\r\n    return rowUtil.Add(undefined, this);\r\n  }\r\n\r\n  // Excel Export\r\n  get ExportTitle() {\r\n    var text = pmData().CurrentProject?.Name;\r\n    text = text ? text + '_' : '';\r\n\r\n    if (this.ColumnField === mif.Phase) {\r\n      text += 'phase_'\r\n    }\r\n\r\n    const formatedDate = dayjs(Date.now()).format(\"YYMMDD\");\r\n    text += `masstable_${formatedDate}`\r\n    return text;\r\n  }\r\n\r\n  get ExcelWorkbook() {\r\n    return wbUtil.get(this).ResultData;\r\n  }\r\n\r\n  excelExport\r\n  get ExcelExport() {\r\n    if (!this.excelExport) {\r\n      this.excelExport = eeUtil.get(\r\n        undefined, undefined,\r\n        () => this.ExportTitle,\r\n        () => this.ExcelWorkbook);\r\n    }\r\n    return this.excelExport;\r\n  }\r\n\r\n  Export = () => {\r\n    this.ExcelExport.Export();\r\n  }\r\n\r\n  // Lưu trữ các Row tạo bởi người dùng\r\n  // Trước mặt dùng để xử lý lỗi không update TotalValue\r\n  // trong lần đầu tiên truy xuất bảng khối lượng\r\n  CreatedByUser_Rows\r\n  Handled_CreatedByUser_Rows\r\n\r\n  Add_Handled_CreatedByUser_Row = (row) => {\r\n    this.Handled_CreatedByUser_Rows.push(row);\r\n\r\n    if (this.CreatedByUser_Rows.length === this.Handled_CreatedByUser_Rows.length){\r\n      // Xử lý TotalValue thành công với tất cả các CreatedByUser_Row\r\n    }\r\n  }\r\n}","import MassColumn from \"./MassColumn\"\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassColumn();\r\n  qI.Name = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}","import {ExcelExport} from './ExcelExport'\r\n\r\nexport const get = (fileName, wb, ovrgFileName, ovrgWb) => {\r\n  var qI = new ExcelExport();\r\n\r\n  qI.FileName = fileName;\r\n  qI.Override_Get_FileName = ovrgFileName;\r\n  qI.Workbook = wb;\r\n  qI.Override_Get_Workbook = ovrgWb;\r\n\r\n  return qI;\r\n}","import MassTable from \"../table/MassTable\";\r\nimport * as util from './MassItem_DictUtil'\r\n\r\nexport default class MassItem_Dict {\r\n  items\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n    this.MassTable.Items = v;\r\n  }\r\n\r\n  massTable\r\n  get MassTable() {\r\n    if (!this.massTable) {\r\n      this.massTable = util.GetMassTable(this);\r\n    }\r\n    return this.massTable;\r\n  }\r\n\r\n  set MassGroupSetting(v)  {\r\n    this.MassTable.MassGroupSetting = v;\r\n  }\r\n}","import MassTable from \"../table/MassTable\";\r\n\r\n// Property\r\nexport const GetMassTable = (q) => {\r\n  var qI = new MassTable();\r\n  qI.Dict = q;\r\n\r\n  return qI;\r\n}","import MassItem_Dict from '../item/MassItem_Dict';\r\nimport * as util from './MassResultCompUtil'\r\nimport * as massItemUtil from '../item/MassItemUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as mif from '../item/MassItemField'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassResultComp {\r\n  Projects = []\r\n\r\n  Phases = []\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n\r\n  massItem_Dict\r\n  get MassItem_Dict(){\r\n    if (!this.massItem_Dict){\r\n      this.massItem_Dict = util.GetMassItem_Dict(this);\r\n    }\r\n    return this.massItem_Dict;\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  isHavePhase = false\r\n  get IsHavePhase(){\r\n    return this.isHavePhase;\r\n  }\r\n  set IsHavePhase(v){\r\n    this.isHavePhase = v;\r\n    if (v){\r\n    this.MassItem_Dict.MassTable.ColumnField = mif.Phase\r\n    }else{\r\n      this.MassItem_Dict.MassTable.ColumnField = mif.Project\r\n    }\r\n  }\r\n\r\n  GetMassData = () => {\r\n     // Gắn thông tin truy xuất lần đầu hay không\r\n     if (pmData().Is_First_Get_MassTable === undefined){\r\n      // undefined => truy xuất lần đầu\r\n      pmData().Is_First_Get_MassTable = true;\r\n    } else {\r\n      // có giá trị => không phải lần đầu\r\n      pmData().Is_First_Get_MassTable = false;\r\n    }\r\n    \r\n    var wp_Dict = pmData().Workpackage_Dict;\r\n    if (wp_Dict.IsDataChanged){\r\n      wp_Dict.RefreshData();\r\n    }\r\n\r\n    massItemUtil.getAll(this.ApiData, (items) => {\r\n      var dict = this.MassItem_Dict;\r\n\r\n      dict.MassGroupSetting = this.MassGroupSetting ? \r\n        this.MassGroupSetting : undefined;\r\n      dict.Items = items;\r\n      \r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n}","import MassItem_Dict from \"../item/MassItem_Dict\"\r\n\r\n\r\n//\r\nexport const GetMassItem_Dict = (q) => {\r\n  var qI = new MassItem_Dict();\r\n  qI.Dict = q;\r\n  return qI;\r\n}\r\n\r\n// Method\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    projectIds : q.Projects.map(x => x._id),\r\n    phaseIds : q.IsHavePhase ? q.Phases.map(x => x._id) : undefined\r\n  }\r\n}","import { Button, message, Space, Tag } from \"antd\";\r\nimport * as colUtil from '../../../../table/TableColumnUtil'\r\nimport TableVM from \"../../../../table/TableVM\";\r\nimport * as renderUtil from '../../../../table/RenderItemUtil'\r\nimport * as rs from '../../../../table/RenderState'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport RebarMass_Dict from \"./RebarMass_Dict\";\r\nimport * as massItemUtil from '../item/MassItemUtil'\r\n\r\nexport const get = (project) => {\r\n  var qI = new RebarMass_Dict();\r\n  qI.Project = project;\r\n\r\n  var projectId = qI.projectId;\r\n  massItemUtil.getRebars(projectId, (items) => {\r\n    qI.Items = items;\r\n  });\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTableVM = (q) => {\r\n  var qI = new TableVM();\r\n\r\n  qI.DataSource = q.Items;\r\n  qI.Columns = [\r\n    colUtil.get('Tên cấu kiện', ['Info', 'elementName'],\r\n      [\r\n        renderUtil.get(rs._default, (val, item) => item.Info.elementName)\r\n      ], qI),\r\n\r\n    colUtil.get('Hạng mục', ['Info', 'workItem'],\r\n      [\r\n        renderUtil.get(rs._default, (val, item) => item.Info.workItem)\r\n      ], qI),\r\n\r\n    colUtil.get('Đường kính', ['Info', 'diameter'],\r\n      [\r\n        renderUtil.get(rs._default, (val, item) => item.Info.diameter)\r\n      ], qI),\r\n\r\n    colUtil.get('Khối lượng', ['Value'], null, qI),\r\n\r\n    colUtil.GetActionColumn(qI)\r\n  ]\r\n\r\n  qI.OnGetItemForAdd = () => {\r\n    return massItemUtil.GetDefaultRebarMass(q.Project);\r\n  }\r\n\r\n  qI.OnEditItem = (item) => {\r\n    item.AddDatabase();\r\n  }\r\n\r\n  qI.OnDeleteItem = (item) => {\r\n    item.DeleteDatabase();\r\n  }\r\n\r\n  return qI;\r\n}","export const m = \"m\";\r\nexport const m2 = \"m2\";\r\nexport const m3 = \"m3\";\r\nexport const kg = \"kg\";","import * as util from './RebarMass_DictUtil'\r\n\r\nexport default class RebarMass_Dict {\r\n  project\r\n  get Project(){\r\n    return this.project;\r\n  }\r\n  set Project(v){\r\n    this.project = v;\r\n    this.projectId = v._id;\r\n  }\r\n\r\n  projectId\r\n\r\n  items = []\r\n  get Items(){\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n    this.TableVM.DataSource = v;\r\n  }\r\n\r\n  tableVM\r\n  get TableVM() {\r\n    if (!this.tableVM){\r\n      this.tableVM = util.GetTableVM(this);\r\n    }\r\n    return this.tableVM;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './LevelGroupUtil'\r\n\r\nexport class LevelGroup {\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.LevelGroups.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.LevelGroups.splice(this.Index, 1);\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      levels : this.Levels ? this.Levels : [],\r\n      primary: this.Primary\r\n    }\r\n  }\r\n\r\n  get Count(){\r\n    return this.Levels.length\r\n  }\r\n\r\n\r\n  OnGetLevelStorageList_Func_Dict = []\r\n  get GetLevelStorageList(){\r\n    return this.getLevelStorageList;\r\n  }\r\n  set GetLevelStorageList(v){\r\n    this.getLevelStorageList = v;\r\n    this.OnGetLevelStorageList_Func_Dict.forEach(x => x.Value())\r\n  }\r\n\r\n  IsGet_LevelStorageList\r\n\r\n  get LevelStorageList (){\r\n    var obj = this.Dict.LevelStorageList;\r\n    if (!obj && !this.IsGet_LevelStorageList){\r\n      this.IsGet_LevelStorageList = true;\r\n      this.Setting.OnGetLevelStorageList_Funcs.push(() => {\r\n        this.GetLevelStorageList = true\r\n      });\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  get Setting (){\r\n    return this.Dict.Setting;\r\n  }\r\n\r\n  get LevelIndexs(){\r\n    return this.Levels.map(x => this.LevelStorageList.indexOf(x));\r\n  }\r\n\r\n  get MinLevel(){\r\n    var list = this.LevelStorageList;\r\n    return list[Math.min.apply(Math, this.LevelIndexs)]\r\n  }\r\n\r\n  get MaxLevel(){\r\n    var list = this.LevelStorageList;\r\n    return list[Math.max.apply(Math, this.LevelIndexs)]\r\n  }\r\n\r\n  get Description(){\r\n    if (!this.LevelStorageList) return undefined;\r\n    return `Typ: ${this.MinLevel} - ${this.MaxLevel} (${this.Count})`;\r\n  }\r\n\r\n  get FullDescription() {\r\n    if (!this.Description) return undefined;\r\n    return `${this.Dict.FilterDescription} (${this.Description})`;\r\n  }\r\n\r\n  primary\r\n  get Primary(){\r\n    if (!this.primary){\r\n      this.primary = util.GetDefaultPrimary(this);\r\n    }\r\n    return this.primary\r\n  } set Primary(v){\r\n    this.primary = v;\r\n  }\r\n}","import { LevelGroup } from \"./LevelGroup\"\r\n\r\n// Instance\r\nexport const get = (data, dict) => {\r\n  var qI = new LevelGroup();\r\n\r\n  if (Array.isArray(data)) {\r\n    qI.Levels = data;\r\n  } else {\r\n    qI.Levels = data.levels;\r\n    qI.Primary = data.primary\r\n  }\r\n\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new LevelGroup();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefaultPrimary = (q) => {\r\n  if (q.Levels && q.Levels.length !== 0) {\r\n    return q.Levels[0];\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as it from './TLS_FilterValue_InputType'\r\n\r\nexport class TLS_FilterValue {\r\n  Value = undefined\r\n  InputType = it.select\r\n\r\n  get ApiData(){\r\n    return {\r\n      value: this.Value,\r\n      inputType : this.InputType\r\n    }\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { TLS_FilterValue } from './TLS_FilterValue';\r\n\r\nexport class TLS_Filter {\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index (){\r\n    return this.Dict.Filters.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.Filters.splice(this.Index, 1);\r\n  }\r\n\r\n  //Values = [ 'Cột' ]\r\n  get Values(){\r\n    return this.Items.filter(x => x.Value).map(x => x.Value);\r\n  }\r\n\r\n  Items = []\r\n\r\n  AddItem = () => {\r\n    var item = new TLS_FilterValue();\r\n    this.Items.push(item);\r\n    return item;\r\n  }\r\n\r\n  field\r\n  get Field(){\r\n    if (!this.field){\r\n      this.field = this.FieldStorageList[0]\r\n    }\r\n    return this.field;\r\n  } set Field(v){\r\n    this.field = v;\r\n  }\r\n\r\n  get FieldStorageList(){\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      field : this.Field,\r\n      items : this.Items.filter(x => x.Value).map(x => x.ApiData)\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  get Description() {\r\n    var obj =  this.Values.reduce((a,b,i,arr) => {\r\n      if (arr.indexOf(b) !== 0){\r\n        a += ', ';\r\n      }\r\n      a += b;\r\n      return a;\r\n    }, '')\r\n\r\n    return `${this.Field}: ${obj}`;\r\n  }\r\n}","import { TLS_Filter } from \"./TLS_Filter\";\r\nimport { TLS_FilterValue } from \"./TLS_FilterValue\";\r\n\r\nexport const get = (data, dict) => {\r\n  var qI = new TLS_Filter();\r\n  qI.Field = data.field;\r\n\r\n  if (data.items){\r\n    qI.Items = data.items.map(x => {\r\n      var obj = new TLS_FilterValue();\r\n      obj.Value = x.value;\r\n      obj.InputType = x.inputType\r\n      return obj;\r\n    })\r\n  } else {\r\n    qI.Items = data.values.map(x => {\r\n      var obj = new TLS_FilterValue();\r\n      obj.Value = x;\r\n      return obj;\r\n    })\r\n  }\r\n\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new TLS_Filter();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterUtil'\r\nimport * as util from './TLS_PageItemUtil'\r\n\r\nexport class TLS_PageItem {\r\n  _id\r\n  get id(){\r\n    if (!this._id){\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  Name = 'tên setting'\r\n\r\n  get Index (){\r\n    return this.Dict.PageItems.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.PageItems.splice(this.Index, 1);\r\n  }\r\n\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  // Setting\r\n  get Setting() {\r\n    return this.Dict.Setting;\r\n  }\r\n\r\n  // Level Groups\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n\r\n  levelGroups\r\n  get LevelGroups(){\r\n    if (!this.levelGroups){\r\n      this.levelGroups = util.GetLevelGroups(this);\r\n    }\r\n    return this.levelGroups;\r\n  } set LevelGroups(v){\r\n    this.levelGroups = v;\r\n  }\r\n\r\n  AddLevelGroup = () => {\r\n    var item = levelGroupUtil.GetDefault(this);\r\n    this.LevelGroups.push(item);\r\n    return item;\r\n  }\r\n\r\n  // Filter\r\n  filters\r\n  get Filters(){\r\n    if (!this.filters){\r\n      this.filters = util.GetFilters(this);\r\n    }\r\n    return this.filters;\r\n  } set Filters(v){\r\n    this.filters = v;\r\n  }\r\n\r\n  AddFilter = () => {\r\n    var item = filterUtil.GetDefault(this);\r\n    this.Filters.push(item);\r\n    return item;\r\n  }\r\n\r\n  get FilterDescription() {\r\n    var obj = this.Filters.reduce((a,b,i,arr) => {\r\n      if (arr.indexOf(b) !== 0){\r\n        a += '; ';\r\n      }\r\n      a += b.Description;\r\n      return a;\r\n    }, '')\r\n    return obj;\r\n  }\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      name: this.Name,\r\n      levelGroups : this.LevelGroups.map(x => x.ApiData).filter(x => x.levels.length !== 0),\r\n      filters : this.Filters.map(x => x.ApiData)\r\n    }\r\n    return obj;\r\n  }\r\n}","import { TLS_PageItem } from \"./TLS_PageItem\"\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterUtil'\r\n\r\n// Instance\r\nexport const get = (data, dict) => {\r\n  var qI = new TLS_PageItem();\r\n  qI.Name = data.name;\r\n  qI.Filters = data.filters.map(x => filterUtil.get(x, qI));\r\n  qI.LevelGroups = data.levelGroups ? data.levelGroups.map(x => levelGroupUtil.get(x, qI))\r\n     : data.levels.map(x => levelGroupUtil.get(x, qI))\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new TLS_PageItem();\r\n  qI.Name = 'setting 1';\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetLevelGroups = (q) => {\r\n  return [ levelGroupUtil.GetDefault(q) ]\r\n}\r\n\r\nexport const GetFilters = (q) => {\r\n  return [ filterUtil.GetDefault(q) ]\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './TypicalLevelSettingDataUtil'\r\nimport { reaction } from \"mobx\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport class TypicalLevelSettingData {\r\n  // Setting\r\n  get Setting() {\r\n    return this.Dict;\r\n  }\r\n\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n  \r\n  // Page Item\r\n  pageItems\r\n  get PageItems(){\r\n    if (!this.pageItems){\r\n      this.pageItems = util.GetPageItems(this);\r\n    }\r\n    return this.pageItems;\r\n  } set PageItems(v){\r\n    this.pageItems = v;\r\n  }\r\n\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  AddPageItem = () => {\r\n    var item = pageItemUtil.GetDefault(this);\r\n    this.PageItems.push(item);\r\n    item.Name = `setting ${item.Index +1}`\r\n    return item;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      pageItems : this.PageItems.map(x => x.ApiData)\r\n    }\r\n  }\r\n}","import { PMData } from '../../../single/model/PMData';\r\nimport { TypicalLevelSettingData } from './TypicalLevelSettingData';\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemUtil'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (data, dict) => {\r\n  var qI = new TypicalLevelSettingData();\r\n  qI.PageItems = data.pageItems.map(x => pageItemUtil.get(x, qI));\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (dict) => {\r\n  var qI = new TypicalLevelSettingData();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetPageItems = (q) => {\r\n  return [ pageItemUtil.GetDefault(q) ]\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './TypicalLevelSettingUtil'\r\n\r\nexport class TypicalLevelSetting extends Setting {\r\n  fieldFilterStorageList\r\n  get FieldFilterStorageList(){\r\n    if (!this.fieldFilterStorageList){\r\n      this.fieldFilterStorageList = util.GetFieldFilterStorageList();\r\n    }\r\n    return this.fieldFilterStorageList;\r\n  }\r\n\r\n  Save = () => {\r\n    util.SaveDatabase(this)\r\n  }\r\n\r\n  levelStorageList\r\n  get LevelStorageList(){\r\n    if (!this.levelStorageList){\r\n      this.levelStorageList = util.GetLevelStorageList(this);\r\n    }\r\n    return this.levelStorageList;\r\n  } set LevelStorageList(v){\r\n    this.levelStorageList = v;\r\n    this.GetLevelStorageList = true;\r\n  }\r\n\r\n  OnGetLevelStorageList_Funcs = []\r\n\r\n  set GetLevelStorageList(v){\r\n    this.OnGetLevelStorageList_Funcs.forEach(x => x());\r\n  }\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as dataUtil from './TypicalLevelSettingDataUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport { TypicalLevelSetting } from './TypicalLevelSetting';\r\nimport * as st from '../base/SettingType'\r\nimport * as fieldUtil from '../../mass/item/MassItemField'\r\nimport { message } from 'antd';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const get = (data, project, phase) => {\r\n  var qI = new TypicalLevelSetting();\r\n\r\n  qI._id = data._id;\r\n  qI.Name = data.name;\r\n  qI.Description = data.description;\r\n  qI.SettingType = data.settingType;\r\n  qI.Data = dataUtil.get(data.data, qI);\r\n  qI.Project = project;\r\n  qI.Phase = phase;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (project) => {\r\n  var qI = new TypicalLevelSetting();\r\n\r\n  qI.Name = 'thiết lập ...';\r\n  qI.Description = 'Mô tả thiết lập ...';\r\n  qI.SettingType = st.typicallevel\r\n  qI.Data = dataUtil.GetTest(qI);\r\n  qI.Project = project;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetFromDb_Async = (project, phase, handle) => {\r\n  var apiData = {\r\n    projectId: project._id,\r\n    phaseId: phase?._id\r\n  }\r\n\r\n  var prefix = 'tl';\r\n  var url = `https://api.bimdev.vn/api/hbs/${prefix}`;\r\n\r\n  const apiFunc = () => api.post(`${url}/get`, apiData)\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      var resData = data ? get(data, project, phase) : undefined;\r\n      var editData = resData ? resData : GetTest(project);\r\n      handle(resData, editData);\r\n    })\r\n}\r\n\r\n// Property\r\nexport const GetFieldFilterStorageList = () => {\r\n  return fieldUtil.GetListForTypicalLevelFilter();\r\n}\r\n\r\n// Method\r\nexport const SaveDatabase = (q) => {\r\n  var _id = q._id;\r\n  var apiData = q.ApiData;\r\n\r\n  var prefix = 'tl';\r\n  var url = `https://api.bimdev.vn/api/hbs/${prefix}`;\r\n\r\n  var isNew = _id ? true : false\r\n  const apiFunc = () => isNew ?\r\n    api.put(`${url}/edit`, apiData) : api.post(`${url}/add`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (isNew) q._id = data._id\r\n      message.success('add setting successfully!');\r\n    })\r\n}\r\n\r\nexport const GetLevelStorageList = (q) => {\r\n  var level_Dict = q.Project.Level_Dict;\r\n\r\n  const getLevelsFunc = (items) => {\r\n    return items.map(x => x.Name);\r\n  }\r\n\r\n  if (level_Dict.Items) {\r\n    return getLevelsFunc(level_Dict.Items);\r\n  } else {\r\n    level_Dict.OnGetItemsDone_Funcs.push(() => {\r\n      q.LevelStorageList = getLevelsFunc(level_Dict.Items);\r\n    });\r\n  }\r\n}\r\n","import * as typicalLevelUtil from '../setting/typicallevel/TypicalLevelSettingUtil'\r\n\r\nexport default class Phase {\r\n  exportSetVersions\r\n  get ExportSetVersions(){\r\n    return this.exportSetVersions;\r\n  }\r\n  set ExportSetVersions(v){\r\n    this.exportSetVersions = v;\r\n    this.exportSetVersionIds = v.map(x => x._id);\r\n  }\r\n\r\n  OnGetExportSetVersions_Func = [];\r\n\r\n  set GetExportSetVersions(v){\r\n    this.OnGetExportSetVersions_Func.forEach(x => x());\r\n  }\r\n\r\n  exportSetVersionIds\r\n\r\n  get Project(){\r\n    return this.Dict.Dict;\r\n  }\r\n\r\n  OnGetTypicalLevelSetting_Funcs = []\r\n\r\n  set GetTypicalLevelSetting(v) {\r\n    this.OnGetTypicalLevelSetting_Funcs.forEach(x => x());\r\n  }\r\n\r\n  typicalLevelSetting\r\n  get TypicalLevelSetting() {\r\n    if (!this.typicalLevelSetting) {\r\n      if (!this.IsOnGetDb_Async) {\r\n        this.IsOnGetDb_Async = true;\r\n        typicalLevelUtil.GetFromDb_Async(this.Project, this, \r\n          (resData, editData) => {\r\n          this.TypicalLevelSetting = resData;\r\n          this.GetTypicalLevelSetting = true\r\n        })\r\n      }\r\n    }\r\n    return this.typicalLevelSetting;\r\n  }\r\n  set TypicalLevelSetting(v) {\r\n    this.typicalLevelSetting = v;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport Phase from './Phase';\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n\r\n  var qI = new Phase();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.Dict = dict;\r\n\r\n  GetExportSetVersionData(q._id, (data) => {\r\n    qI.ExportSetVersions = data;\r\n    qI.GetExportSetVersions = true;\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getByProject = (projectId, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbphase/list?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data);\r\n      }\r\n    });\r\n}\r\n\r\nexport const GetExportSetVersionData = (phaseId, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbesv/byphase?phaseId=${phaseId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data);\r\n      }\r\n    });\r\n}","import { message } from 'antd';\r\nimport * as util from './Phase_DictUtil'\r\nimport * as api from '../../../../util/apiUtil'\r\nimport * as itemUtil from './PhaseUtil'\r\nimport * as settingUtil from '../setting/base/SettingUtil'\r\n\r\nexport class Phase_Dict {\r\n  get Project() {\r\n    return this.Dict;\r\n  }\r\n\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n  \r\n  AddMassVersion = () => {\r\n    var apiData = this.Input.ApiData;\r\n    var url = `https://api.bimdev.vn/api/hbphase`;\r\n\r\n    const apiFunc = () => api.put(`${url}/mass/add`, apiData);\r\n    var project = this.Project;\r\n    \r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        var item = itemUtil.get(data, this);\r\n        this.Add(item);\r\n        message.success(\"create version successfully!\");\r\n\r\n        settingUtil.AddPhase(project._id, data._id);\r\n      })\r\n\r\n    // Thêm version mới cho InputExportSet sau khi lưu version\r\n    var addVersionFunc = (exportSet) => exportSet.AddVersion();\r\n\r\n    var inputExportSet = project.InputExportSet;\r\n    if (!inputExportSet){\r\n      project.OnGetInputExportSetDone_Funcs.push(() => {\r\n        inputExportSet = project.InputExportSet;\r\n        addVersionFunc(inputExportSet);\r\n      })\r\n    }else{\r\n      addVersionFunc(inputExportSet);\r\n    }\r\n  }\r\n}","import { message } from 'antd';\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\nexport const AddPhase = (projectId, phaseId) => {\r\n  var apiData = {\r\n    projectId, phaseId\r\n  }\r\n  var url = `https://api.bimdev.vn/api/hbs`;\r\n\r\n  const apiFunc = () => api.post(`${url}/addphase`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      message.success(\"attach phase to settings successfully!\");\r\n    })\r\n}","export default class PhaseInput {\r\n  get ApiData(){\r\n    var projectId = this.Dict.Dict._id;\r\n    var name = this.Name;\r\n    var description = this.Description;\r\n\r\n    return {\r\n      projectId, name, description\r\n    }\r\n  }\r\n}","import { Phase_Dict } from \"./Phase_Dict\";\r\nimport * as phaseUtil from './PhaseUtil'\r\nimport * as inputUtil from './PhaseInputUtil'\r\n\r\nexport const get = (project) => {\r\n  var qI = new Phase_Dict();\r\n  qI.Dict = project;\r\n\r\n  phaseUtil.getByProject(project._id, (data) => {\r\n    qI.Items = data.map(x => phaseUtil.get(x, qI));\r\n    qI.GetItemsDone = true;\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetInput = (q) => {\r\n  return inputUtil.get(q);\r\n}","import PhaseInput from './PhaseInput';\r\n\r\nexport const get = (dict) => {\r\n  var qI = new PhaseInput();\r\n  qI.Dict = dict;\r\n  qI.Name = 'Version 1';\r\n  qI.Description = 'mô tả phiên bản';\r\n\r\n  return qI;\r\n}","import RebarMass_Dict from '../mass/rebar/RebarMass_Dict';\r\nimport * as phaseDictUtil from '../phase/Phase_DictUtil'\r\nimport * as util from './ProjectUtil'\r\nimport * as typicalLevelUtil from '../setting/typicallevel/TypicalLevelSettingUtil'\r\n\r\nexport default class Project {\r\n  phase_Dict\r\n  get Phase_Dict() {\r\n    if (!this.phase_Dict) {\r\n      this.phase_Dict = phaseDictUtil.get(this);\r\n    }\r\n    return this.phase_Dict;\r\n  }\r\n\r\n  rebarMass_Dict\r\n  get RebarMass_Dict() {\r\n    if (!this.rebarMass_Dict) {\r\n      this.rebarMass_Dict = util.GetRebarMass_Dict(this);\r\n    }\r\n    return this.rebarMass_Dict;\r\n  }\r\n\r\n  inputExportSet\r\n  get InputExportSet() {\r\n    if (!this.inputExportSet) {\r\n      util.GetInputExportSet_Async(this);\r\n    }\r\n    return this.inputExportSet;\r\n  }\r\n  set InputExportSet(v) {\r\n    this.inputExportSet = v;\r\n    this.GetInputExportSetDone = true;\r\n  }\r\n\r\n  OnGetInputExportSetDone_Funcs = []\r\n\r\n  getInputExportSetDone\r\n  get GetInputExportSetDone() {\r\n    return this.getInputExportSetDone;\r\n  }\r\n  set GetInputExportSetDone(v) {\r\n    this.getInputExportSetDone = v;\r\n    this.OnGetInputExportSetDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  level_Dict\r\n  get Level_Dict() {\r\n    if (!this.level_Dict) {\r\n      this.level_Dict = util.GetLevel_Dict(this);\r\n    }\r\n    return this.level_Dict;\r\n  }\r\n\r\n  OnGetTypicalLevelSetting_Funcs = []\r\n\r\n  set GetTypicalLevelSetting(v) {\r\n    this.OnGetTypicalLevelSetting_Funcs.forEach(x => x());\r\n  }\r\n\r\n  IsOnGetDb_Async\r\n\r\n  typicalLevelSetting\r\n  get TypicalLevelSetting() {\r\n    if (!this.typicalLevelSetting) {\r\n      if (!this.IsOnGetDb_Async) {\r\n        this.IsOnGetDb_Async = true;\r\n        typicalLevelUtil.GetFromDb_Async(this, null, \r\n          (resData, editData) => {\r\n          this.TypicalLevelSetting = resData;\r\n          this.TypicalLevelSetting_ForEdit = editData;\r\n          this.GetTypicalLevelSetting = true\r\n        })\r\n      }\r\n    }\r\n    return this.typicalLevelSetting;\r\n  }\r\n  set TypicalLevelSetting(v) {\r\n    this.typicalLevelSetting = v;\r\n  }\r\n\r\n  typicalLevelSetting_ForEdit\r\n  get TypicalLevelSetting_ForEdit() {\r\n    if (!this.typicalLevelSetting_ForEdit) {\r\n      this.typicalLevelSetting_ForEdit = this.TypicalLevelSetting;\r\n    }\r\n    return this.typicalLevelSetting_ForEdit;\r\n  } set TypicalLevelSetting_ForEdit(v) {\r\n    this.typicalLevelSetting_ForEdit = v;\r\n  }\r\n\r\n  url\r\n  get Url() {\r\n    if (!this.url) {\r\n      var isHash = true;\r\n      var obj = `${process.env.PUBLIC_URL}${isHash ? '/#' : ''}/project`;\r\n      obj = `${obj}/${this._id}`;\r\n\r\n      this.url = obj;\r\n    }\r\n    return this.url;\r\n  }\r\n}","import * as util from './ExportSetUtil'\r\n\r\nexport class ExportSet {\r\n  currentVersion\r\n  get CurrentVersion(){\r\n    if (!this.currentVersion){\r\n      util.GetCurrentVersion_Async(this);\r\n    }\r\n    return this.currentVersion;\r\n  }\r\n  set CurrentVersion(v){\r\n    this.currentVersion = v;\r\n    this.GetCurrentVersionDone = v;\r\n  }\r\n\r\n  OnGetCurrentVersionDone_Func =[]\r\n\r\n  set GetCurrentVersionDone(v){\r\n    this.OnGetCurrentVersionDone_Func.forEach(x => x());\r\n  }\r\n\r\n  AddVersion = () => {\r\n    util.AddVersion_Async(this);\r\n  }\r\n}","export class ExportSetVersion {\r\n  \r\n}","import * as api from  '../../../../util/apiUtil'\r\nimport { ExportSetVersion } from \"./ExportSetVersion\";\r\n\r\nexport const get = (data) => {\r\n  var qI = new ExportSetVersion();\r\n  qI._id = data._id;\r\n  return qI;\r\n}\r\n\r\nexport const getLastestByExportSet = (exportSetId, handle) => {\r\n  if (!exportSetId) return;\r\n  var url = `https://api.bimdev.vn/api/hbesv/last?exportSetId=${exportSetId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var item = data ? get(data) : data;\r\n      handle(item);\r\n    });\r\n}\r\n\r\nexport const add = (apiData, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbesv/add`;\r\n  api.post(url, apiData).then(response => response.data)\r\n    .then(data => {\r\n      var item = get(data);\r\n      handle(item);\r\n    });\r\n}","import { ExportSet } from \"./ExportSet\"\r\nimport * as api from  '../../../../util/apiUtil'\r\nimport * as versionUtil from './ExportSetVersionUtil'\r\n\r\nexport const get = (data) => {\r\n  var qI = new ExportSet();\r\n  qI._id = data._id;\r\n  qI.Name = data.name;\r\n  qI.Description = data.description;\r\n  qI.RetrieveFrom = data.retrieveFrom;\r\n  return qI;\r\n}\r\n\r\nexport const GetCurrentVersion_Async = (q) => {\r\n  var exportSetId = q._id;\r\n\r\n  versionUtil.getLastestByExportSet(exportSetId, (item) => {\r\n    if (!item) {\r\n      AddVersion_Async(q);\r\n    } else {\r\n      q.CurrentVersion = item;\r\n    }\r\n  })\r\n}\r\n\r\nexport const AddVersion_Async = (q) => {\r\n  var exportSetId = q._id;\r\n\r\n  var apiData = {\r\n    exportSetId\r\n  }\r\n\r\n  versionUtil.add(apiData, (addItem) => {\r\n    q.CurrentVersion = addItem;\r\n  })\r\n}\r\n\r\nexport const getByProject = (projectId, handle) => {\r\n  if (!projectId) return;\r\n  var url = `https://api.bimdev.vn/api/hbes/input?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var item = data ? get(data) : data;\r\n      handle(item);\r\n    });\r\n}\r\n\r\nexport const add = (apiData, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbes/add`;\r\n  api.post(url, apiData).then(response => response.data)\r\n    .then(data => {\r\n      var item = get(data);\r\n      handle(item);\r\n    });\r\n}","export class Level_Dict {\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n}","export class Level\r\n{\r\n  Name\r\n  Elevation\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport { Level } from \"./Level\"\r\n\r\nexport const get = (data, dict) => {\r\n  var qI = new Level();\r\n  qI.Name = data.name;\r\n  qI.Elevation = data.elevation;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (apiData, dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbl/list\";\r\n  api.post(url, apiData).then(response => response.data)\r\n    .then(data => {\r\n      if (!data) data = []\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport Project from './Project';\r\nimport * as rebarMassDictUtil from '../mass/rebar/RebarMass_DictUtil'\r\nimport * as exportSetUtil from '../exportset/ExportSetUtil'\r\nimport * as vrf from '../value/ValueRetrieveFrom'\r\nimport * as levelDictUtil from '../level/Level_DictUtil'\r\nimport * as levelTypicalUtil from '../setting/typicallevel/TypicalLevelSettingUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n\r\n  var qI = new Project();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Code = q.code;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbp/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getById = (_id, handle) => {\r\n  if (!_id) return undefined;\r\n  var url = `https://api.bimdev.vn/api/hbp/get?id=${_id}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var item = get(data);\r\n      if (handle) {\r\n        handle(item);\r\n      }\r\n    });\r\n}\r\n\r\n// Property\r\nexport const GetRebarMass_Dict = (q) => {\r\n  return rebarMassDictUtil.get(q);\r\n}\r\n\r\nexport const GetInputExportSet_Async = (q) => {\r\n  var projectId = q._id;\r\n\r\n  exportSetUtil.getByProject(projectId, (item) => {\r\n    if (!item) {\r\n      var apiData = {\r\n        projectId,\r\n        name: 'Dữ liệu khối lượng input',\r\n        description: 'mô tả dữ liệu',\r\n        retrieveFrom: vrf.input\r\n      }\r\n      exportSetUtil.add(apiData, (addItem) => {\r\n        q.InputExportSet = addItem;\r\n      })\r\n    } else {\r\n      q.InputExportSet = item;\r\n    }\r\n  })\r\n}\r\n\r\nexport const GetLevel_Dict = (q) => {\r\n  return levelDictUtil.get(q)\r\n}\r\n\r\nexport const GetTypicalLevelSetting = (q) => {\r\n  return levelTypicalUtil.GetTest(q);\r\n}","export const model = \"model\";\r\nexport const input = \"input\";","import { Level_Dict } from \"./Level_Dict\"\r\nimport * as itemUtil from './LevelUtil'\r\n\r\nexport const get = (project) => {\r\n  var qI = new Level_Dict();\r\n  qI.Project = project;\r\n\r\n  itemUtil.getAll({ projectId : project._id }, qI, (items) => {\r\n    qI.Items = items.sort((a,b) => a.Elevation - b.Elevation);\r\n    qI.GetItemsDone = true;\r\n  })\r\n\r\n  return qI;\r\n}","import * as itemUtil from './ProjectUtil'\r\n\r\nexport class Project_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport default class ElementFilterSetting extends Setting {\r\n  \r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './ElementFilterSettingDataUtil'\r\n\r\nexport default class ElementFilterSettingData {\r\n  CategoryFilter\r\n\r\n  IsHaveFamilyFilter\r\n\r\n  FamilyFilter\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","import { EntFilter } from '../../filter/EntFilter';\r\nimport * as filterUtil from '../../filter/EntFilterUtil'\r\nimport ElementFilterSettingData from './ElementFilterSettingData';\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as fct from '../../filter/FilterCategoryType'\r\n\r\nexport const get = (q) => {\r\n  var qI = new ElementFilterSettingData();\r\n  qI.CategoryFilter = filterUtil.get(q.categoryFilter);\r\n  return qI;\r\n}\r\n\r\nexport const getDefault = () => {\r\n  var qI = new ElementFilterSettingData();\r\n\r\n  var cateFilter = new EntFilter();\r\n  cateFilter.CategoryType = fct.category;\r\n  cateFilter.ValueType = fvt.bystring;\r\n  cateFilter.StringFilterType = sft.byequal;\r\n  cateFilter.Values = ['Floors'];\r\n  qI.CategoryFilter = cateFilter;\r\n\r\n  qI.IsHaveFamilyFilter = false;\r\n\r\n  var familyFilter = new EntFilter();\r\n  familyFilter.CategoryType = fct.family;\r\n  familyFilter.ValueType = fvt.bystring;\r\n  familyFilter.StringFilterType = sft.byequal;\r\n  familyFilter.Values = [];\r\n  qI.FamilyFilter = familyFilter;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    categoryFilter : q.CategoryFilter.ApiData,\r\n    familyFilter : q.IsHaveFamilyFilter ? \r\n      q.FamilyFilter.ApiData : undefined\r\n  }\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport ElementFilterSetting from \"./ElementFilterSetting\"\r\nimport * as dataUtil from './ElementFilterSettingDataUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new ElementFilterSetting();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.SettingType = q.settingType;\r\n  qI.Data = dataUtil.get(q.data);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbs/ef/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as util from './SettingInputUtil'\r\n\r\nexport default class SettingInput {\r\n  Name\r\n  Description\r\n  SettingType\r\n\r\n  data\r\n  get Data() {\r\n    if (!this.data) {\r\n      this.data = this.GetData();\r\n    }\r\n    return this.data;\r\n  }\r\n  set Data(v) {\r\n    this.data = v;\r\n  }\r\n\r\n  GetData = () => {\r\n    if (this.OnGetData) {\r\n      return this.OnGetData();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  editItem\r\n  get EditItem(){\r\n    return this.editItem;\r\n  }\r\n  set EditItem(v){\r\n    this.editItem = v;\r\n    if (!v){\r\n      this.EditItemId = undefined;\r\n    }\r\n    else{\r\n      this.EditItemId = v._id;\r\n    }\r\n  }\r\n\r\n\r\n  EditItemId\r\n\r\n  isNew = true;\r\n  get IsNew(){\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v){\r\n    this.isNew = v;\r\n    if (v){\r\n      this.EditItem = undefined;\r\n    }\r\n  }\r\n\r\n  urlPrefix\r\n  get UrlPrefix() {\r\n    if (!this.urlPrefix){\r\n      this.urlPrefix = util.GetUrlPrefix(this);\r\n    }\r\n    return this.urlPrefix;\r\n  }\r\n\r\n  AddDatabase = () => {\r\n    var _id = this.EditItemId;\r\n    var name = this.Name;\r\n    var description = this.Description;\r\n    var settingType = this.SettingType;\r\n    var data = this.Data.ApiData;\r\n    var prefix = this.UrlPrefix;\r\n\r\n    var apiData = {\r\n      _id, name, description, settingType, data\r\n    }\r\n    var url = `https://api.bimdev.vn/api/hbs/${prefix}`;\r\n\r\n    const apiFunc = () => _id ?\r\n      api.put(`${url}/edit`, apiData) : api.post(`${url}/add`, apiData);\r\n    \r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        this.AddDatabaseDone = true;\r\n        this.NewItem = this.GetEditItem(data, this.Dict);\r\n        this.Dict.Update();\r\n      })\r\n  }\r\n\r\n  set AddDatabaseDone(v) {\r\n    if (this.OnAddDatabaseDone){\r\n      this.OnAddDatabaseDone(v);\r\n    }\r\n  }\r\n}","import * as st from './SettingType'\r\n\r\nexport const GetUrlPrefix = (q) => {\r\n  var prefix = undefined\r\n  switch (q.SettingType) {\r\n    case st.elementfilter:\r\n      prefix = 'ef';\r\n      break;\r\n    case st.massexport:\r\n      prefix = 'me';\r\n      break;\r\n    case st.massgroup:\r\n      prefix = 'mg';\r\n      break;\r\n  }\r\n  return prefix;\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInput from \"../base/SettingInput\";\r\nimport * as elementFilterSettingUtil from './ElementFilterSettingUtil'\r\n\r\nexport default class ElementFilterSettingInput extends SettingInput {\r\n  GetEditItem = (data, dict) => {\r\n    return elementFilterSettingUtil.get(data, dict);\r\n  }\r\n}","import ElementFilterSettingInput from \"./ElementFilterSettingInput\";\r\nimport * as dataUtil from './ElementFilterSettingDataUtil'\r\nimport * as st from '../base/SettingType'\r\n\r\nexport const get = (dict) => {\r\n  var qI = new ElementFilterSettingInput();\r\n  qI.Dict = dict;\r\n  qI.Name = 'Bộ lọc cột';\r\n  qI.Description = 'mô tả bộ lọc';\r\n  qI.SettingType = st.elementfilter;\r\n\r\n  qI.OnGetData = () => {\r\n    return dataUtil.getDefault();\r\n  }\r\n\r\n  return qI;\r\n}","import * as itemUtil from './ElementFilterSettingUtil'\r\nimport * as inputUtil from './ElementFilterSettingInputUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class ElementFilterSetting_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  CurrentItem\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = this.GetInput();\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  GetInput(){\r\n    return inputUtil.get(this);\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n\r\n  Update = () => {\r\n    var input = this.Input;\r\n\r\n    if (!input.IsNew){\r\n      var item = input.EditItem;\r\n      var action = () => {\r\n        item.Name = input.Name;\r\n        item.Description = input.Description;\r\n        item.Data = input.Data;\r\n      }\r\n      genUtil.UpdateFromModel(item, action);\r\n    }\r\n    else{\r\n      this.Add(input.NewItem);\r\n    }\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './MassExportSettingDataUtil'\r\nimport * as valueSettingUtil from './exportSetting/MES_ValueSettingUtil'\r\nimport { reaction } from \"mobx\";\r\n\r\nexport default class MassExportSettingData {\r\n  elementFilterId\r\n\r\n  elementFilter\r\n  get ElementFilter(){\r\n    if (!this.elementFilter){\r\n      this.elementFilter = util.GetElementFilter(this);\r\n    }\r\n    return this.elementFilter;\r\n  }\r\n  set ElementFilter(v) {\r\n    this.elementFilter = v;\r\n    if (!v){\r\n      this.elementFilterId = undefined;\r\n    }\r\n    else{\r\n      this.elementFilterId = v._id;\r\n    }\r\n  }\r\n\r\n  valueSettings\r\n  get ValueSettings(){\r\n    if (!this.valueSettings){\r\n      this.valueSettings = util.GetDefaultValueSettings(this);\r\n    }\r\n    return this.valueSettings;\r\n  }\r\n  set ValueSettings(v){\r\n    this.valueSettings = v;\r\n  }\r\n\r\n  AddNewValueSetting = () => {\r\n    var modelList = this.ValueSettings;\r\n    var item = valueSettingUtil.GetDefault(this);\r\n    modelList.push(item);\r\n\r\n    return item;\r\n  }\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","import { PMData } from '../../../single/model/PMData';\r\nimport MassExportSettingData from './MassExportSettingData';\r\nimport * as valueSettingUtil from './exportSetting/MES_ValueSettingUtil'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassExportSettingData();\r\n  qI.elementFilterId = q.elementFilterId;\r\n  qI.ValueSettings = q.exportSettings.map(x => valueSettingUtil.get(x, qI));\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = () => {\r\n  var qI = new MassExportSettingData();\r\n  return qI;\r\n}\r\n\r\nexport const GetElementFilter = (q) => {\r\n  var elemFilterId = q.elementFilterId;\r\n  if (!elemFilterId) return undefined;\r\n\r\n  var list = pmData().ElementFilterSetting_Dict.Items;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x._id === elemFilterId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetDefaultValueSettings = (q) => {\r\n  return [ valueSettingUtil.GetDefault(q) ]\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    elementFilterId : q.elementFilterId,\r\n    exportSettings : q.ValueSettings.map(x => x.ApiData)\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport default class MassExportSetting extends Setting {\r\n  \r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as dataUtil from './MassExportSettingDataUtil'\r\nimport MassExportSetting from './MassExportSetting';\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassExportSetting();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.SettingType = q.settingType;\r\n  qI.Data = dataUtil.get(q.data);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbs/me/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInput from \"../base/SettingInput\";\r\nimport * as massExportSettingUtil from './MassExportSettingUtil'\r\n\r\nexport default class MassExportSettingInput extends SettingInput {\r\n  GetEditItem = (data, dict) => {\r\n    return massExportSettingUtil.get(data, dict);\r\n  }\r\n}","import * as dataUtil from './MassExportSettingDataUtil'\r\nimport MassExportSettingInput from \"./MassExportSettingInput\";\r\nimport * as st from '../base/SettingType'\r\n\r\nexport const get = (dict) => {\r\n  var qI = new MassExportSettingInput();\r\n  qI.Dict = dict;\r\n  qI.Name = 'Bêtông sàn';\r\n  qI.Description = 'mô tả thiết lập';\r\n  qI.SettingType = st.massexport;\r\n\r\n  qI.OnGetData = () => {\r\n    return dataUtil.GetDefault();\r\n  }\r\n\r\n  return qI;\r\n}","import * as itemUtil from './MassExportSettingUtil'\r\nimport * as inputUtil from './MassExportSettingInputUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class MassExportSetting_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  CurrentItem\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = this.GetInput();\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  GetInput(){\r\n    return inputUtil.get(this);\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n\r\n  Update = () => {\r\n    var input = this.Input;\r\n\r\n    if (!input.IsNew){\r\n      var item = input.EditItem;\r\n      var action = () => {\r\n        item.Name = input.Name;\r\n        item.Description = input.Description;\r\n        item.Data = input.Data;\r\n      }\r\n      genUtil.UpdateFromModel(item, action);\r\n    }\r\n    else{\r\n      this.Add(input.NewItem);\r\n    }\r\n  }\r\n}","import * as itemUtil from './MassGroupSettingUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class MassGroupSetting_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  CurrentItem\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n}","\r\nexport default class VCS_Item{\r\n  Color\r\n  Filter\r\n}","import * as util from './VersionCompareSettingUtil'\r\n\r\nexport default class VersionCompareSetting{\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems();\r\n    }\r\n    return this.items;\r\n  }\r\n}","import { EntFilter } from '../../filter/EntFilter'\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as nft from '../../filter/NumberFilterType'\r\nimport VCS_Item from \"./VCS_Item\";\r\n\r\nexport const GetItems = (q) => {\r\n  var list = [];\r\n\r\n  // < 80\r\n  var item = new VCS_Item();\r\n  item.Color = '#1956c9';\r\n\r\n  var filter = new EntFilter();\r\n  filter.ValueType = fvt.bynumber;\r\n  filter.NumberFilterType = nft.bysmaller;\r\n  filter.Values = [ 0.80 ];\r\n  item.Filter = filter;\r\n\r\n  list.push(item);\r\n\r\n  // 80 -85\r\n  item = new VCS_Item();\r\n  item.Color = '#3f79d6';\r\n\r\n  filter = new EntFilter();\r\n  filter.ValueType = fvt.bynumber;\r\n  filter.NumberFilterType = nft.bybetween;\r\n  filter.IsEqualLeft = true;\r\n  filter.Values = [ 0.80, 0.85 ];\r\n  item.Filter = filter;\r\n\r\n  list.push(item);\r\n\r\n   // 85 -90\r\n   item = new VCS_Item();\r\n   item.Color = '#6f9fe9';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.85, 0.90 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 90 -95\r\n   item = new VCS_Item();\r\n   item.Color = '#a5c2f2';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.9, 0.95 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 95 -100\r\n   item = new VCS_Item();\r\n   item.Color = '#c9d9f6';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.95, 1 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 100 -105\r\n   item = new VCS_Item();\r\n   item.Color = '#f3cccc';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualRight = true;\r\n   filter.Values = [ 1, 1.05 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 105 -110\r\n   item = new VCS_Item();\r\n   item.Color = '#e9999a';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualRight = true;\r\n   filter.Values = [ 1.05, 1.10 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n    // 110 -115\r\n    item = new VCS_Item();\r\n    item.Color = '#de6568';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybetween;\r\n    filter.IsEqualRight = true;\r\n    filter.Values = [ 1.10, 1.15 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    // 110 -115\r\n    item = new VCS_Item();\r\n    item.Color = '#c90010';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybetween;\r\n    filter.IsEqualRight = true;\r\n    filter.Values = [ 1.15, 1.20 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    // 115 -120\r\n    item = new VCS_Item();\r\n    item.Color = '#980009';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybigger;\r\n    filter.Values = [ 1.20 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    return list;\r\n}","\r\nexport class WorkItemExportSetting_Dict {\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n}","export class TrackingItem{\r\n  Values = []\r\n\r\n  Count = 0\r\n}","import * as genUtil from '../../../../util/generalUtil'\r\nimport { TrackingItem } from './TrackingItem';\r\n\r\nexport class Tracking{\r\n  Items = []\r\n\r\n  AddItem = (values) => {\r\n    var list = this.Items;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => genUtil.IsSameValues(x.Values, values));\r\n    if (index === -1){\r\n      item = new TrackingItem();\r\n      item.Values = values;\r\n      list.push(item);\r\n    } else {\r\n      item = list[index];\r\n    }\r\n\r\n    item.Count ++;\r\n    return item;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport * as workpackageUtil from './WorkpackageUtil'\r\n\r\nexport class WorkpackageInput {\r\n  Code\r\n  // = \"300\"\r\n  Name\r\n  // = \"Lắp đặt cốp thép\"\r\n  Description = 'mô tả công tác'\r\n  // = \"Mô tả quá trình lắp cốp thép\"\r\n\r\n  isNew = true;\r\n  get IsNew(){\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v){\r\n    this.isNew = v;\r\n    if (v){\r\n      this.Workpackage = undefined;\r\n    }\r\n  }\r\n\r\n  workpackage\r\n  get Workpackage() {\r\n    return this.workpackage;\r\n  }\r\n  set Workpackage(v){\r\n    this.workpackage = v;\r\n    if (!v){\r\n      this.WorkpackageId = undefined;\r\n    }\r\n    else{\r\n      this.WorkpackageId = v._id;\r\n    }\r\n  }\r\n\r\n  WorkpackageId\r\n\r\n  supItem\r\n  get SupItem(){\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v){\r\n    this.supItem = v;\r\n    if (!v){\r\n      this.SupId = undefined;\r\n    }\r\n    else{\r\n      this.SupId = v._id;\r\n    }\r\n  }\r\n\r\n  SupId\r\n\r\n  set AddDatabaseDone(v) {\r\n    if (this.OnAddDatabaseDone){\r\n      this.OnAddDatabaseDone(v);\r\n    }\r\n  }\r\n\r\n  AddDatabase = () => {\r\n    var _id = this.WorkpackageId;\r\n    var code = this.Code;\r\n    var name = this.Name;\r\n    var description = this.Description;\r\n    var supId = this.SupId;\r\n\r\n    var apiData = {\r\n      _id, name, code, description, supId\r\n    };\r\n\r\n    var url = \"https://api.bimdev.vn/api/hbwp\";\r\n\r\n    const apiFunc =  () =>  _id ? \r\n      api.put(`${url}/edit`, apiData) : api.post(`${url}/add`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        this.AddDatabaseDone = true;\r\n        this.NewWorkpackage = workpackageUtil.get(data, this.Dict);\r\n        this.Dict.Update();\r\n      })\r\n  }\r\n\r\n  UpdateWorkpackage\r\n}","import { WorkpackageInput } from './WorkpackageInput';\r\nimport * as workpackageUtil from './WorkpackageUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport class Workpackage_Dict {\r\n  constructor() {\r\n    workpackageUtil.getAll(this, (wps) => {\r\n      this.Workpackages = wps;\r\n      this.GetWorkpackagesDone = true;\r\n    });\r\n  }\r\n\r\n  Workpackages\r\n\r\n  set GetWorkpackagesDone(v) {\r\n    if (this.OnGetWorkpackagesDone) {\r\n      this.OnGetWorkpackagesDone(v);\r\n    }\r\n  }\r\n\r\n  CurrentWorkpackage\r\n\r\n  workpackageInput\r\n  get WorkpackageInput() {\r\n    if (!this.workpackageInput){\r\n      var obj = this.workpackageInput = new WorkpackageInput();\r\n      obj.Dict = this;\r\n    }\r\n    return this.workpackageInput;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Workpackages.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n\r\n  Update = () => {\r\n    var input = this.WorkpackageInput;\r\n    var wp = input.Workpackage;\r\n\r\n    if (!input.IsNew){\r\n      var action = () => { \r\n        wp.Code = input.Code;\r\n        wp.Name = input.Name;\r\n        wp.Description = input.Description;\r\n        wp.FullName = wp.GetFullName();\r\n      };\r\n      genUtil.UpdateFromModel(wp, action);\r\n    }\r\n    else{\r\n      this.Add(input.NewWorkpackage);\r\n    }\r\n\r\n    this.IsDataChanged = true;\r\n  }\r\n\r\n  IsDataChanged\r\n\r\n  RefreshData = () => {\r\n    this.Workpackages.forEach(x => {\r\n      x.SubItems = undefined;\r\n      x.UpperList = undefined;\r\n      x.LowerList = undefined;\r\n      x.Rank = undefined\r\n    })\r\n\r\n    this.IsDataChanged = false;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport * as workPackageUtil from '../../entity/workpackage/WorkpackageUtil'\r\nimport * as fvt from '../../entity/filter/FilterValueType'\r\nimport * as sft from '../../entity/filter/StringFilterType'\r\nimport * as vrt from '../../entity/setting/massExport/exportSetting/MES_ValueRetrieveType'\r\nimport * as mpn from '../../entity/mass/MassPropertyName'\r\nimport * as mt from '../../entity/mass/MassType'\r\nimport * as mif from '../../entity/mass/item/MassItemField'\r\n\r\nexport const GetFilterValueTypes = (data) => {\r\n  return fvt.GetAll();\r\n}\r\n\r\nexport const GetStringFilterTypes = (data) => {\r\n  return sft.GetAll();\r\n}\r\n\r\nexport const GetValueRetrieveTypes = (data) => {\r\n  return vrt.GetAll();\r\n}\r\n\r\nexport const GetCategoryNames = (data) => {\r\n  return ['Floors', 'Structural Framing', 'Walls', 'Structural Column']\r\n}\r\n\r\nexport const GetParameterNames = (data) => {\r\n  return ['Volume', 'HB_Formwork_Total']\r\n}\r\n\r\nexport const GetMassPropertyNames = (data) => {\r\n  return mpn.GetAll();\r\n}\r\n\r\nexport const GetMassItemFields = (data) => {\r\n  return mif.GetAll();\r\n}\r\n\r\nexport const GetMIFs_ForMassGroup = () => {\r\n  return mif.GetForMassGroup();\r\n}\r\n\r\nexport const GetMassTypes = (data) => {\r\n  return mt.GetAll();\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport MassResultComp from '../../entity/mass/result/MassResultComp';\r\nimport { Project_Dict } from '../../entity/project/Project_Dict';\r\nimport { ElementFilterSetting_Dict } from '../../entity/setting/elementFilter/ElementFilterSetting_Dict';\r\nimport { MassExportSetting_Dict } from '../../entity/setting/massExport/MassExportSetting_Dict';\r\nimport { MassGroupSetting_Dict } from '../../entity/setting/massGroup/MassGroupSetting_Dict';\r\nimport VersionCompareSetting from '../../entity/setting/versionCompare/VersionCompareSetting';\r\nimport { WorkItemExportSetting_Dict } from '../../entity/setting/workitemexport/WorkItemExportSetting_Dict';\r\nimport { Tracking } from '../../entity/tracking/Tracking';\r\nimport { Workpackage_Dict } from '../../entity/workpackage/Workpackage_Dict';\r\nimport { CategoryData } from './CategoryData';\r\nimport * as util from './PMDataUtil'\r\n\r\nexport class PMData {\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new PMData();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  get categoryData(){\r\n    return CategoryData.Instance;\r\n  }\r\n\r\n  workpackage_Dict\r\n  get Workpackage_Dict() {\r\n    if (!this.workpackage_Dict){\r\n      this.workpackage_Dict = new Workpackage_Dict();\r\n    }\r\n    return this.workpackage_Dict;\r\n  }\r\n\r\n  elementFilterSetting_Dict\r\n  get ElementFilterSetting_Dict() {\r\n    if (!this.elementFilterSetting_Dict){\r\n      this.elementFilterSetting_Dict = new ElementFilterSetting_Dict();\r\n    }\r\n    return this.elementFilterSetting_Dict;\r\n  }\r\n\r\n  massExportSetting_Dict\r\n  get MassExportSetting_Dict() {\r\n    if (!this.massExportSetting_Dict){\r\n      this.massExportSetting_Dict = new MassExportSetting_Dict();\r\n    }\r\n    return this.massExportSetting_Dict;\r\n  }\r\n\r\n  massGroupSetting_Dict\r\n  get MassGroupSetting_Dict() {\r\n    if (!this.massGroupSetting_Dict){\r\n      this.massGroupSetting_Dict = new MassGroupSetting_Dict();\r\n    }\r\n    return this.massGroupSetting_Dict;\r\n  }\r\n\r\n  project_Dict\r\n  get Project_Dict() {\r\n    if (!this.project_Dict){\r\n      this.project_Dict = new Project_Dict();\r\n    }\r\n    return this.project_Dict;\r\n  }\r\n\r\n  massResultComp\r\n  get MassResultComp(){\r\n    if (!this.massResultComp){\r\n      this.massResultComp = new MassResultComp();\r\n    }\r\n    return this.massResultComp;\r\n  }\r\n  set MassResultComp(v){\r\n    this.massResultComp = v;\r\n  }\r\n\r\n  filterValueTypes;\r\n  get FilterValueTypes() {\r\n    if (!this.filterValueTypes){\r\n      this.filterValueTypes = util.GetFilterValueTypes();\r\n    }\r\n    return this.filterValueTypes;\r\n  }\r\n\r\n  stringFilterTypes;\r\n  get StringFilterTypes() {\r\n    if (!this.stringFilterTypes){\r\n      this.stringFilterTypes = util.GetStringFilterTypes();\r\n    }\r\n    return this.stringFilterTypes;\r\n  }\r\n\r\n  valueRetrieveTypes\r\n  get ValueRetrieveTypes() {\r\n    if (!this.valueRetrieveTypes){\r\n      this.valueRetrieveTypes = util.GetValueRetrieveTypes();\r\n    }\r\n    return this.valueRetrieveTypes;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = this.categoryData.CategoryNames;\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n\r\n  parameterNames;\r\n  get ParameterNames(){\r\n    if (!this.parameterNames){\r\n      this.parameterNames = util.GetParameterNames();\r\n    }\r\n    return this.parameterNames;\r\n  }\r\n\r\n  massPropertyNames;\r\n  get MassPropertyNames(){\r\n    if (!this.massPropertyNames){\r\n      this.massPropertyNames = util.GetMassPropertyNames();\r\n    }\r\n    return this.massPropertyNames;\r\n  }\r\n\r\n  massItemFields\r\n  get MassItemFields(){\r\n    if (!this.massItemFields){\r\n      this.massItemFields = util.GetMassItemFields();\r\n    }\r\n    return this.massItemFields;\r\n  }\r\n\r\n  mifs_ForMassGroup\r\n  get MIFs_ForMassGroup(){\r\n    if (!this.mifs_ForMassGroup){\r\n      this.mifs_ForMassGroup = util.GetMIFs_ForMassGroup();\r\n    }\r\n    return this.mifs_ForMassGroup;\r\n  }\r\n\r\n  massTypes;\r\n  get MassTypes(){\r\n    if (!this.massTypes){\r\n      this.massTypes = util.GetMassTypes();\r\n    }\r\n    return this.massTypes;\r\n  }\r\n\r\n  versionCompareSetting\r\n  get VersionCompareSetting(){\r\n    if (!this.versionCompareSetting){\r\n      this.versionCompareSetting = new VersionCompareSetting();\r\n    }\r\n    return this.versionCompareSetting;\r\n  }\r\n\r\n  workItemExportSetting_Dict\r\n  get WorkItemExportSetting_Dict(){\r\n    if (!this.workItemExportSetting_Dict){\r\n      this.workItemExportSetting_Dict = new WorkItemExportSetting_Dict();\r\n    }\r\n    return this.workItemExportSetting_Dict;\r\n  }\r\n\r\n  DebugPoints = []\r\n\r\n  tracking\r\n  get Tracking(){\r\n    if (!this.tracking){\r\n      this.tracking = new Tracking();\r\n    }\r\n    return this.tracking;\r\n  }\r\n\r\n  IsDebug = false\r\n\r\n  OnSet_CurrentProject_Func_Dict = []\r\n\r\n  UpdatedDate = '29/03/2021'\r\n\r\n  // Kiểm tra có phải lần đầu truy xuất bảng khối lượng\r\n  // sau khi mở trang web hay ko?\r\n  Is_First_Get_MassTable\r\n}","import { message } from 'antd';\r\nimport * as api from '../../../../util/apiUtil'\r\nimport * as util from './WorkpackageUtil'\r\n\r\nexport class Workpackage {\r\n  get Index() {\r\n    return this.Dict.Workpackages.indexOf(this);\r\n  }\r\n\r\n  _id\r\n\r\n  SupId\r\n\r\n  supItem\r\n  get SupItem(){\r\n    if (!this.supItem){\r\n      this.supItem = util.GetSupItem(this);\r\n    }\r\n    return this.supItem;\r\n  }\r\n\r\n  code\r\n  get Code() {\r\n    return this.code;\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    if (this.OnCodeChanged) {\r\n      this.OnCodeChanged(v);\r\n    }\r\n  }\r\n\r\n  name\r\n  get Name() {\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (this.OnNameChanged) {\r\n      this.OnNameChanged(v);\r\n    }\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (this.OnDescriptionChanged) {\r\n      this.OnDescriptionChanged(v);\r\n    }\r\n  }\r\n\r\n  fullName\r\n  get FullName() {\r\n    if (!this.fullName) {\r\n      this.fullName = this.GetFullName();\r\n    }\r\n    return this.fullName;\r\n  }\r\n  set FullName(v) {\r\n    this.fullName = v;\r\n    if (this.OnFullNameChanged) {\r\n      this.OnFullNameChanged(v);\r\n    }\r\n  }\r\n\r\n  subItems\r\n  get SubItems(){\r\n    if (!this.subItems){\r\n      this.subItems = util.GetSubItems(this);\r\n    }\r\n    return this.subItems;\r\n  }\r\n  set SubItems(v){\r\n    this.subItems = v;\r\n  }\r\n\r\n  upperList\r\n  get UpperList(){\r\n    if (!this.upperList){\r\n      this.upperList = util.GetUpperList(this);\r\n    }\r\n    return this.upperList;\r\n  }\r\n  set UpperList(v){\r\n    this.upperList = v;\r\n  }\r\n\r\n  lowerList\r\n  get LowerList(){\r\n    if (!this.lowerList){\r\n      this.lowerList = util.GetLowerList(this);\r\n    }\r\n    return this.lowerList;\r\n  }\r\n  set LowerList(v){\r\n    this.lowerList = v;\r\n  }\r\n\r\n  rank\r\n  get Rank() {\r\n    if (!this.rank){\r\n      this.rank = util.GetRank(this);\r\n    }\r\n    return this.rank;\r\n  }\r\n  set Rank(v){\r\n    this.rank = v;\r\n  }\r\n\r\n  get LowerIds() {\r\n    return this.LowerList.map(x => x._id);\r\n  }\r\n\r\n  GetFullName = () => {\r\n    return `${this.Code} - ${this.Name}`;\r\n  }\r\n\r\n  Delete = () => {\r\n    var { _id } = this;\r\n    var apiData = { _id };\r\n\r\n    var url = \"https://api.bimdev.vn/api/hbwp/delete\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => message.success('Delete workpackage successfully'));\r\n\r\n    var dict = this.Dict;\r\n    dict.Workpackages.splice(this.Index, 1);\r\n    if (this.OnDelete) {\r\n      this.OnDelete();\r\n    }\r\n\r\n    dict.IsDataChanged = true;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport { PMData } from '../../single/model/PMData';\r\nimport { Workpackage } from \"./Workpackage\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (dbItem, dict) => {\r\n  var { _id, name, code, description, supId } = dbItem;\r\n\r\n  var qI = new Workpackage();\r\n  qI._id = _id;\r\n  qI.Name = name;\r\n  qI.Code = code;\r\n  qI.Description = description;\r\n  qI.SupId = supId;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSupItem = (q) => {\r\n  var supId = q.SupId;\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  var index = list.findIndex(x => x._id === supId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetSubItems = (q) => {\r\n  var id = q._id;\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  return list.filter(x => x !== q && x.SupId === id);\r\n}\r\n\r\nexport const GetUpperList = (q) => {\r\n  var supItem = q.SupItem;\r\n  if (!supItem){\r\n    return [q];\r\n  }else{\r\n    var list = [...supItem.UpperList];\r\n    list.push(q);\r\n    return list;\r\n  }\r\n}\r\n\r\nexport const GetLowerList = (q) => {\r\n  var list = [q];\r\n  q.SubItems.forEach((x, i) => {\r\n    list.push.apply(list, x.LowerList);\r\n  })\r\n  return list;\r\n}\r\n\r\nexport const GetRank = (q) => {\r\n  var supItem = q.SupItem;\r\n  return supItem ? supItem.Rank +1 : 0;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbwp/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var wps = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(wps);\r\n      }\r\n    });\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as workpackageUtil from './WorkpackageUtil'\r\nimport * as util from './Workpackage_DictVMUtil'\r\n\r\nexport class Workpackage_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      workpackageVMs: observable,\r\n    })\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  Workpackage_Dict\r\n\r\n  get M2VM() {\r\n    return this.Workpackage_Dict.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.Workpackage_Dict.M2VM = v;\r\n  }\r\n\r\n  workpackageVMs = undefined\r\n  get WorkpackageVMs() {\r\n    if (!this.workpackageVMs){\r\n      this.workpackageVMs = util.GetWorkpackageVMs(this);\r\n    }\r\n    return this.workpackageVMs;\r\n  }\r\n\r\n  currentWorkpackageVM\r\n  set CurrentWorkpackageVM(v) {\r\n    this.Workpackage_Dict = v;\r\n    this.Workpackage_Dict.CurrentWorkpackage = v.Workpackage;\r\n\r\n    this.WorkpackageInputVM.WorkpackageVM = v;\r\n  }\r\n\r\n  workpackageInputMV\r\n  get WorkpackageInputVM() {\r\n    if (!this.workpackageInputVM){\r\n      this.workpackageInputVM = util.GetWorkpackageInputVM(this);\r\n    }\r\n    return this.workpackageInputVM;\r\n  }\r\n\r\n  Add = (itemView) => {\r\n    this.WorkpackageVMs.push(itemView);\r\n    if (this.OnAdd){\r\n      this.OnAdd(itemView);\r\n    }\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../input/InputView\";\r\nimport { Workpackage_DictVM } from \"./Workpackage_DictVM\";\r\nimport CheckboxView from \"../../../checkbox/CheckboxView\";\r\nimport SelectView from \"../../../select/SelectView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Workpackage_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Workpackage_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var wps = data.WorkpackageVMs;\r\n    var wp = data.CurrentWorkpackageVM = wps[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var wps = data.WorkpackageVMs;\r\n\r\n    var elems = wps ? wps.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var inputVM = data.WorkpackageInputVM;\r\n    var commandVM = inputVM.CommandVM;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Công tác</b>\r\n        </Divider>\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search công tác\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <InputView store={inputVM.CodeVM} />\r\n          <InputView store={inputVM.NameVM} />\r\n          <InputView store={inputVM.DescriptionVM} />\r\n          <SelectView store={inputVM.SupItemSelectVM} />\r\n          <div>\r\n            <CheckboxView store={inputVM.IsNewVM} />\r\n            <Button style={{ margin: 10 }}\r\n              onClick={inputVM.AddDatabase}>{commandVM.Content}</Button>\r\n            {inputVM.DeleteView}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(Workpackage_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { EntFilterVM } from \"./EntFilterVM\";\r\nimport SelectView from \"../../../select/SelectView\";\r\nimport { MultiSelectVM } from \"../../../select/MultiSelectVM\";\r\nimport MultiSelectView from \"../../../select/MultiSelectView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass EntFilterView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntFilterVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  test = () => {\r\n    console.log(\"test button\");\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.ItemVMs;\r\n    var wp = data.CurrentItemVM = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <SelectView store={data.ValueTypeSelectVM} />\r\n        </div>\r\n        <div>\r\n          <SelectView store={data.StringFilterTypeSelectVM} />\r\n        </div>\r\n        <div>\r\n          <MultiSelectView store={data.ValuesSelectVM} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EntFilterView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport ElementFilterSettingDataVM from \"./ElementFilterSettingDataVM\";\r\nimport EntFilterView from \"../../filter/EntFilterView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass ElementFilterSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ElementFilterSettingDataVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var { IsHaveFamilyFilter } = data;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          Thiết lập lọc Category\r\n        </Divider>\r\n        <EntFilterView store={data.CategoryFilterVM} />\r\n\r\n        <Divider orientation=\"left\" plain>\r\n          {/* Thiết lập lọc Family */}\r\n          <CheckboxView store={data.IsHaveFamilyFilterVM}/>\r\n        </Divider>\r\n        {IsHaveFamilyFilter? <EntFilterView store={data.FamilyFilterVM} /> : \"\"}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ElementFilterSettingDataView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { ElementFilterSetting_DictVM } from \"./ElementFilterSetting_DictVM\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport ElementFilterSettingDataView from \"./ElementFilterSettingDataView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass ElementFilterSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ElementFilterSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  test = () => {\r\n    console.log(\"test button\");\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.Items;\r\n    var wp = data.CurrentItem = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    \r\n    var items = data.Items;\r\n    var elems = items ? items.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var input = data.Input;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Bộ lọc đối tượng</b>\r\n        </Divider>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search bộ lọc\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{marginTop:20}}>\r\n          <InputView store={input.NameVM} />\r\n          <InputView store={input.DescriptionVM} />\r\n\r\n          <ElementFilterSettingDataView store={input.DataVM}/>\r\n\r\n          <CheckboxView store={input.IsNewVM} />\r\n          <Button style={{margin:10}}\r\n            onClick={input.AddDatabase}>{input.CommandVM.Content}</Button>\r\n          {input.DeleteView}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ElementFilterSetting_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../../input/InputView\";\r\nimport EntFilterView from \"../../../filter/EntFilterView\";\r\nimport CheckboxView from \"../../../../../checkbox/CheckboxView\";\r\nimport MES_ValueSettingVM from \"./MES_ValueSettingVM\";\r\nimport SelectView from \"../../../../../select/SelectView\";\r\nimport * as floatItemVMUtil from \"../../../../../float/FloatItemVMUtil\";\r\nimport FloatItemView from \"../../../../../float/FloatItemView\";\r\nimport { CloseCircleFilled } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MES_ValueSettingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MES_ValueSettingVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var floatItemStore = floatItemVMUtil.get('top right')\r\n    floatItemStore.wrapper = <Button size='small' type='primary' \r\n      onClick={data.Delete}>x</Button>\r\n\r\n    return (\r\n      <>\r\n        <div style={{ padding: '10px 35px 10px 10px', margin: '8px auto', border: 'solid 0.5px', borderRadius: '10px', position:'relative' }}>\r\n          <FloatItemView store={floatItemStore} />\r\n          <SelectView store={data.RetrieveTypeSelectVM} />\r\n          <SelectView store={data.MassTypeSelectVM} />\r\n          <EntFilterView store={data.ValueFilterVM} />\r\n          <SelectView store={data.WorkpackageSelectVM} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MES_ValueSettingView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { PlusCircleFilled } from \"@ant-design/icons\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport EntFilterView from \"../../filter/EntFilterView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport MassExportSettingDataVM from \"./MassExportSettingDataVM\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport MES_ValueSettingView from \"./exportSetting/MES_ValueSettingView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassExportSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassExportSettingDataVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var valueSettingElems = data.ValueSettingVMs.map((x, i) => {\r\n      return <MES_ValueSettingView key={i} store={x} />\r\n    })\r\n\r\n    return (\r\n      <>\r\n        <SelectView store={data.ElementFilterSelectVM} />\r\n        <Divider orientation=\"left\" plain>\r\n          Thiết lập giá trị\r\n          <Button type='primary' size='small' onClick={data.AddNewValueSettingVM}\r\n            style={{marginLeft:15}}>+</Button>\r\n        </Divider>\r\n        {valueSettingElems}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassExportSettingDataView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport { MassExportSetting_DictVM } from \"./MassExportSetting_DictVM\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport MassExportSettingDataView from \"./MassExportSettingDataView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassExportSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassExportSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.Items;\r\n    var wp = data.CurrentItem = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var items = data.Items;\r\n    var elems = items ? items.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var input = data.Input;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thiết lập xuất khối lượng</b>\r\n        </Divider>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search thiết lập\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <InputView store={input.NameVM} />\r\n          <InputView store={input.DescriptionVM} />\r\n\r\n          <MassExportSettingDataView store={input.DataVM} />\r\n\r\n          <div>\r\n            <CheckboxView store={input.IsNewVM} />\r\n            <Button style={{ margin: 10 }}\r\n              onClick={input.AddDatabase}>{input.CommandVM.Content}</Button>\r\n            {input.DeleteView}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassExportSetting_DictView)","import { Component } from \"react\";\r\nimport { observer } from 'mobx-react';\r\nimport MassCell_Value from \"./MassCell_Value\";\r\n\r\nclass MassCell_ValueView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassCell_Value();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    if (data.Dict.Row.Title === 'DẦM 6, 7'){\r\n      debugger\r\n      var value = data.Value;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {data.Value}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassCell_ValueView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Popover, Row, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassCell from \"./MassCell\";\r\nimport './MassTable.css'\r\nimport Icon, { InfoCircleOutlined } from '@ant-design/icons';\r\nimport MassCell_ValueView from \"./value/MassCell_ValueView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassCellView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassCell();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {/* Đối tượng ẩn để cập nhập màu sắc Cell */}\r\n        <span className='d-none'>\r\n          {data.ContentVM.Content}\r\n        </span>\r\n\r\n        <td style={data.TDStyle}>\r\n          <div className='masscell__div'>\r\n            <div className='masscell__value'>\r\n              {data.IsHaveWarning ?\r\n                <Popover trigger='hover'\r\n                  content={<div>\r\n                    {data.TLS_LevelGroup_Descriptions ?\r\n                      data.TLS_LevelGroup_Descriptions.map(x => {\r\n                        return <span key={x}>{x}</span>\r\n                      })\r\n                      : ''}\r\n                  </div>}>\r\n                  <InfoCircleOutlined className='masscell__warningicon' />\r\n                </Popover>\r\n                : ''}\r\n              <a style={data.AStyle}\r\n                onClick={data.ShowDetail}>\r\n                {data.ContentVM.Content}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassCellView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from \"antd\";\r\nimport { EditableTextVM } from \"./EditableTextVM\";\r\nimport './Text.css'\r\n\r\nclass EditableTextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EditableTextVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.Render()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EditableTextView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select, Space } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport MultiSelectView from \"../../../../select/MultiSelectView\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassRow from \"./MassRow\";\r\nimport MassCellView from \"./MassCellView\";\r\nimport { DownCircleOutlined, EnterOutlined, InfoCircleOutlined, UpCircleOutlined } from '@ant-design/icons';\r\nimport EditableTextView from \"../../../../text/EditableTextView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassRowView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassRow();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var table = data.Dict;\r\n    var columns = table.Columns;\r\n\r\n    var subElems = data.IsShowSub ? data.SubItems.map((x, i) => {\r\n      return <MassRowView store={x} key={x.id} />\r\n    }) : ''\r\n\r\n    var toggleButton = data.IsHaveSub ?\r\n      <Button size='small' style={{ marginRight: 5, minWidth: 25 }} type='primary'\r\n        onClick={data.ToggleSub}>\r\n        <TextView store={data.ToggleButtonContentVM} />\r\n      </Button>\r\n      : <div style={{ padding: '0 15.5px' }} />;\r\n\r\n    return (\r\n      <>\r\n        <tr>\r\n          <th scope=\"row\" >\r\n            <div className='massrow__title__wrapper'\r\n              style={data.Style}>\r\n              {toggleButton}\r\n              <span>\r\n                <EditableTextView store={data.Editable_TitleVM} />\r\n              </span>\r\n\r\n              {data.IsHave_Addition_Wrapper ?\r\n                <div className='massrow__addition__wrapper'>\r\n                  {data.AdditionInfomation_Element}\r\n                  {data.RawValue_Element}\r\n                </div>\r\n                : ''}\r\n\r\n              {data.HoverToolElement}\r\n              {data.ModalElement}\r\n            </div>\r\n          </th>\r\n          {columns.map((y, j) => {\r\n            var cell = table.GetCell(y, data, false);\r\n            return cell ? <MassCellView key={cell.id} store={cell} /> : ''\r\n          })}\r\n        </tr>\r\n        {subElems}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassRowView)","import { Component } from \"react\";\r\nimport { observer } from 'mobx-react';\r\nimport { CSVLink } from \"react-csv\";\r\nimport { CSVExport } from \"./CSVExport\";\r\n\r\nclass CSVExportView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new CSVExport();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  Test = (e) => {\r\n    debugger\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CSVLink data={data.Data} filename={data.FileName}\r\n          headers={data.Headers}\r\n          onClick={this.Test}>\r\n          {data.Title}\r\n        </CSVLink>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(CSVExportView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport MassTable from \"./MassTable\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassRowView from \"./MassRowView\";\r\nimport './MassTable.css'\r\nimport CSVExportView from \"../../../../export/csv/CSVExportView\";\r\nimport { DownloadOutlined, SaveFilled } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassTable();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var columns = data.Columns;\r\n    var rows = data.MainRows;\r\n\r\n    var thElems = columns ? columns.map((x, i) => {\r\n      return <th scope=\"col\" key={x.id} className='text-center masscell_th'>{x.Name}</th>\r\n    }) : '';\r\n\r\n    var tbodyElems = rows ? rows.map((x, i) => {\r\n      return <MassRowView key={x.id} store={x} />\r\n    }) : '';\r\n\r\n\r\n    return (\r\n      <>\r\n        {data.IsValidTable ?\r\n          <>\r\n            <div className=\"masstable__title__wrapper\">\r\n              <h4 className=\"masstable__title\">\r\n                BẢNG TỔNG HỢP KHỐI LƯỢNG\r\n              </h4>\r\n              <div>\r\n                <Button type='primary' size='small' style={{ marginLeft: 15 }}\r\n                  disabled={data.IsOnSaveMassGroup}\r\n                  onClick={data.SaveMassGroup}>\r\n                  <SaveFilled />\r\n                </Button>\r\n                <Button type='primary' size='small' onClick={data.Export}\r\n                  className='masstable__export'>\r\n                  <DownloadOutlined />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            {data.IsOnSaveMassGroup ?\r\n              <div className='mass__groupname__wrapper'>\r\n                <div className='mass__groupname__wrapper_dec'>\r\n                  <div className='mass__groupname__input'>\r\n                    {data.MassGroupInput_Element}\r\n                  </div>\r\n\r\n                  <div className='mass__groupname__button_wrapper'>\r\n                    <Button type='primary' size='small'\r\n                      className={data.MassGroupInput_Toggle_Classname}\r\n                      onClick={data.Toggle_MassGroupInput_State}>\r\n                        {data.MassGroupInput_Toggle_Content}\r\n                      </Button>\r\n                    <Button type='primary' size='small'\r\n                      onClick={data.MassGroupInputOK}>ok</Button>\r\n                    <Button type='default' size='small'\r\n                      onClick={data.MassGroupInputCancel}>cancel</Button>\r\n\r\n                    {data.Override_MassGroup_ModalElement}\r\n                  </div>\r\n                </div>\r\n              </div> : ''}\r\n\r\n            < table className=\"table table-bordered table-sm masstable\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\" className='masstitle__th'>\r\n                    <Button onClick={data.AddMainRow} type='primary' size='small'\r\n                      style={{ backgroundColor: '#52c41a', border: 'none' }}>+</Button>\r\n                  </th>\r\n                  {thElems}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tbodyElems}\r\n              </tbody>\r\n            </table>\r\n          </> : ''\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassTableView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select, Spin } from \"antd\";\r\nimport MassResultCompVM from \"./MassResultCompVM\";\r\nimport MultiSelectView from '../../../../select/MultiSelectView'\r\nimport MassTableView from \"../table/MassTableView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance;\r\n\r\nclass MassResultCompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = pmDataVM().MassResultCompVM\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.IsShowProjectSelect ?\r\n          <MultiSelectView store={data.ProjectSelectVM} /> : ''}\r\n\r\n        {data.CanHavePhase ?\r\n          <>\r\n            <CheckboxView store={data.IsShowPhaseSelectVM} />\r\n            {data.IsHavePhase ?\r\n              <MultiSelectView store={data.PhaseSelectVM} /> : ''}\r\n          </>\r\n          : ''\r\n        }\r\n\r\n        <div style={{ marginTop: 8 }} >\r\n          <SelectView store={data.MassGroupSettingSelectVM} />\r\n        </div>\r\n\r\n        <Button style={{ marginTop: 8 }} onClick={data.GetMassData}\r\n          size='middle' type='primary'>GET DATA</Button>\r\n        <div style={{ marginTop: 15 }}>\r\n          {data.IsDataPending ?\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <div>\r\n                <Spin />\r\n                <TextView store={data.LoadingSpinTipVM} />\r\n              </div>\r\n            </div> : <MassTableView store={data.MassItem_Dict.MassTable} />}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassResultCompView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport TableVM from \"./TableVM\";\r\nimport * as rs from './RenderState'\r\n\r\nconst { Option } = Select;\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TableVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var columns = data.Columns;\r\n\r\n    var rows = data.Rows;\r\n    var tableElem = '';\r\n    if (columns && rows) {\r\n      var theadElem = <thead className=\"thead-light\">\r\n        <tr>\r\n          {columns.map(x => {\r\n            return <th scope=\"col\" key={x.Key}>{x.TitleRender()}</th>\r\n          })}\r\n        </tr>\r\n      </thead>\r\n\r\n      var tbodyElem = <tbody>\r\n        {rows.map(x => {\r\n          return <tr key={x.Key}>\r\n            {x.Cells.map(y => {\r\n              return <td key={y.Key}>{y.Render()}</td>\r\n            })}\r\n          </tr>\r\n        })}\r\n      </tbody>\r\n\r\n      tableElem = <table className=\"table table-sm\">\r\n        {theadElem}{tbodyElem}\r\n      </table>\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {tableElem}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TableView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport TableView from \"../../../../table/TableView\";\r\nimport { WorkItemExportSetting_DictVM } from \"./WorkItemExportSetting_DictVM\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass WorkItemExportSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new WorkItemExportSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thiết lập xuất hạng mục</b>\r\n        </Divider>\r\n        \r\n        <TableView store={data.TableVM}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(WorkItemExportSetting_DictView)","import * as util from './LeftNavUtil'\r\n\r\nexport class LeftNav {\r\n  Title\r\n\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  } set Items(v){\r\n    this.items = v;\r\n  }\r\n\r\n  currentProject\r\n  get CurrentProject(){\r\n    return this.currentProject;\r\n  } set CurrentProject(v){\r\n    this.currentProject = v;\r\n    \r\n    this.Items = util.GetItems(this);\r\n  }\r\n}","export class LeftNavItem {\r\n  Title\r\n  Value\r\n}","import { LeftNavItem } from \"./LeftNavItem\"\r\n\r\nexport const get = (title, value) => {\r\n  var qI = new LeftNavItem();\r\n  qI.Title = title;\r\n  qI.Value = value;\r\n  return qI;\r\n}","import { LeftNav } from \"./LeftNav\"\r\nimport * as pvt from '../../project/ProjectViewType'\r\nimport * as itemUtil from './LeftNavItemUtil'\r\n\r\nexport const GetTest = () => {\r\n  var qI = new LeftNav();\r\n\r\n  qI.Title = 'HikariComplex'\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return q.CurrentProject ?\r\n    [\r\n      itemUtil.get('MASS', pvt.mass),\r\n      itemUtil.get('TYPICAL LEVEL', pvt.typicallevel),\r\n      itemUtil.get('PHASE', pvt.phase),\r\n      itemUtil.get('INPUT DATA', pvt.inputdata)\r\n    ]                                    \r\n      : \r\n    [\r\n      itemUtil.get('MASS', pvt.mass),\r\n      itemUtil.get('MEP SETTING', pvt.mepsetting),\r\n      itemUtil.get('DOCUMENT', pvt.document),\r\n    ]\r\n}","import { LeftNavVM } from \"./LeftNavVM\"\r\nimport * as modelUtil from './LeftNavUtil'\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance;\r\n\r\nexport const get = (q) => {\r\n  var qI = new LeftNavVM();\r\n\r\n  qI.ModelItem = q;\r\n  genUtil.Add(\r\n    pmDataVM().OnSet_CurrentProject_Func_Dict,\r\n    () => qI.CurrentProject = pmDataVM().CurrentProject,\r\n    false);\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return get(modelUtil.GetTest());\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return q.ModelItem.Items;\r\n}\r\n\r\nexport const GetPreTitle = (q) => {\r\n  return q.CurrentProject ? 'DỰ ÁN'\r\n    : 'CÁC DỰ ÁN';\r\n}\r\n\r\nexport const GetTitle = (q) => {\r\n  return q.CurrentProject ? q.CurrentProject.Name \r\n    : '';\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { pmData } from '../../mass/item/MassItemUtil';\r\nimport * as pvt from '../../project/ProjectViewType'\r\nimport * as util from './LeftNavVMUtil'\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class LeftNavVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      projectViewType : observable,\r\n      items : observable,\r\n      title : observable,\r\n      preTitle : observable\r\n    })\r\n  }\r\n\r\n  preTitle = undefined\r\n  get PreTitle (){\r\n    if (!this.preTitle){\r\n      this.preTitle = util.GetPreTitle(this);\r\n    }\r\n    return this.preTitle;\r\n  } set PreTitle(v){\r\n    this.preTitle = v;\r\n  }\r\n\r\n  title = undefined\r\n  get Title (){\r\n    if (!this.title){\r\n      this.title = util.GetTitle(this);\r\n    }\r\n    return this.title;\r\n  } set Title(v){\r\n    this.title = v;\r\n  }\r\n\r\n  items = undefined\r\n  get Items (){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  } set Items(v){\r\n    this.items = v;\r\n  }\r\n\r\n  currentProject\r\n  get CurrentProject(){\r\n    return this.currentProject;\r\n  } set CurrentProject(v){\r\n    this.currentProject = v;\r\n\r\n    this.ModelItem.CurrentProject = v?.ModelItem;\r\n    this.Items = util.GetItems(this);\r\n    this.PreTitle = util.GetPreTitle(this);\r\n    this.Title = util.GetTitle(this);\r\n  }\r\n\r\n  projectViewType = undefined\r\n  get ProjectViewType(){\r\n    if (!this.projectViewType){\r\n      this.projectViewType = pmDataVM().ProjectViewType;\r\n    }\r\n    return this.projectViewType\r\n  } set ProjectViewType(v){\r\n    this.projectViewType = pmDataVM().ProjectViewType = v;\r\n  }\r\n\r\n  GetItemClass = (item) => {\r\n    return `leftnav__item ${item.Value === this.ProjectViewType ? 'active' : ''}`;\r\n  }\r\n\r\n  SetView = (item) => {\r\n    this.ProjectViewType = item.Value;\r\n  }\r\n\r\n  get UpdatedDate(){\r\n    return pmData().UpdatedDate;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { } from '@ant-design/icons';\r\nimport './LeftNav.css'\r\nimport { LeftNavVM } from './LeftNavVM';\r\nimport * as navUtil from './LeftNavVMUtil'\r\n\r\nclass LeftNavView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = navUtil.GetTest();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <nav className='leftnav'>\r\n          {/* Wrapper */}\r\n          <div className='leftnav__wrapper'>\r\n            {/* Body */}\r\n            <div className='leftnav__body'>\r\n\r\n              {/* Title */}\r\n              <span className='leftnav__title'>\r\n                <span className='leftnav__title__prefix'>\r\n                  {data.PreTitle}\r\n                </span>\r\n                <span className='leftnav__title__name'>\r\n                  {data.Title}\r\n                </span>\r\n              </span>\r\n\r\n              {/* Items */}\r\n              <div className='leftnav__items'>\r\n                {data.Items.map(x => {\r\n                  return <a key={x.Value} onClick={() => data.SetView(x)}\r\n                    className={data.GetItemClass(x)}>\r\n                    {x.Title}\r\n                  </a>\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Footer */}\r\n            <div className='leftnav__footer'>\r\n              <span>© Copyright</span>\r\n              <span>{`Updated Date: ${data.UpdatedDate}`}</span>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(LeftNavView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class CellVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueString : observable\r\n    })\r\n  }\r\n\r\n  value\r\n  get Value(){\r\n    return this.value\r\n  }\r\n  set Value(v){\r\n    this.value = v;\r\n    this.ValueString = this.GetValueString();\r\n  }\r\n\r\n  valueString = undefined\r\n  get ValueString (){\r\n    if (!this.valueString){\r\n      this.valueString = this.GetValueString();\r\n    }\r\n    return this.valueString;\r\n  }\r\n  set ValueString(v){\r\n    this.valueString = v;\r\n  }\r\n\r\n  GetValueString = () => {\r\n    return this.OnGetValueString();\r\n  }\r\n}","export default class ColumnVM {\r\n  Cells = []\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class RowVM {\r\n  Cells = []\r\n}","import * as mt from '../MassType'\r\nimport * as mif from '../item/MassItemField'\r\nimport ColumnVM from '../../../../table/ColumnVM';\r\n\r\nexport const GetFields = (q) => {\r\n  var list = q.Items;\r\n  if (!list || list.length === 0) return [];\r\n\r\n  var massType = list[0].MassType;\r\n  switch (massType) {\r\n    case mt.rebar:\r\n      return [mif.partition, mif.rebarType, mif.Value, mif.Unit];\r\n    case mt.concrete:\r\n    case mt.formwork:\r\n      return [mif.level, mif.elementName, mif.Value, mif.Unit];\r\n    default:\r\n      return [mif.Value, mif.Unit]\r\n  }\r\n  return [];\r\n}\r\n\r\nexport const GetValueTitle = (q) => {\r\n  var list = q.Items;\r\n  if (!list || list.length === 0) return [];\r\n\r\n  var massType = list[0].MassType;\r\n  switch (massType) {\r\n    default:\r\n      return massType;\r\n  }\r\n}\r\n\r\nexport const GetColumns = (q) => {\r\n  return q.Fields.map(x => {\r\n    var col = new ColumnVM();\r\n    col.Name = x;\r\n    col.Title = x === mif.Value ? GetValueTitle(q) \r\n      : x;\r\n\r\n    return col;\r\n  })\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport CellVM from '../../../../table/CellVM';\r\nimport ColumnVM from '../../../../table/ColumnVM';\r\nimport RowVM from '../../../../table/RowVM';\r\nimport * as mif from '../item/MassItemField'\r\nimport * as util from './MassDetailTableUtil'\r\n\r\nexport default class MassDetailTable {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      rows: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    if (v && v.length !== 0) {\r\n      this.IsValidTable = true;\r\n    }\r\n    else {\r\n      this.IsValidTable = false;\r\n    }\r\n    this.Fields = util.GetFields(this);\r\n    this.Rows = this.GetRows();\r\n  }\r\n\r\n  IsValidTable = false\r\n\r\n  fields = undefined\r\n  get Fields() {\r\n    if (!this.fields) {\r\n      this.fields = util.GetFields(this);\r\n    }\r\n    return this.fields;\r\n  }\r\n  set Fields(v){\r\n    this.fields = v;\r\n    this.Columns = util.GetColumns(this);\r\n  }\r\n\r\n  columns = undefined\r\n  get Columns(){\r\n    if (!this.columns){\r\n      this.columns = util.GetColumns(this);\r\n    }\r\n    return this.columns;\r\n  }\r\n  set Columns(v){\r\n    this.columns = v;\r\n  }\r\n\r\n  rows = undefined\r\n  get Rows(){\r\n    if (!this.rows){\r\n      this.rows = this.GetRows();\r\n    }\r\n    return this.rows;\r\n  }\r\n  set Rows(v){\r\n    this.rows = v;\r\n  }\r\n\r\n  GetRows = () => {\r\n    var items = this.Items;\r\n    if (!items) return [];\r\n    var fields = this.Fields;\r\n\r\n    return items.map(x => {\r\n      var row = new RowVM();\r\n      row.Cells = fields.map(y => {\r\n        var cell = new CellVM();\r\n        cell.OnGetValueString = () => {\r\n          var value = cell.Value;\r\n          if(!isNaN(value)){\r\n           return parseFloat(value).toFixed(2);\r\n          }\r\n          return value;\r\n        }\r\n\r\n        const setValueFunc = () => cell.Value = mif.GetValueString(x.GetValue(y), y);\r\n        if (mif.GetIdentifyFields().includes(y) && !x.Element){\r\n          x.OnGetElementDone_Funcs.push(() => {\r\n            setValueFunc();\r\n          });\r\n        }else{\r\n          setValueFunc();\r\n        }\r\n\r\n        var className = 'text-center';\r\n        switch(y){\r\n          case mif.Value:\r\n            className='text-right';\r\n            break;\r\n        }\r\n        cell.className = className;\r\n\r\n        return cell;\r\n      })\r\n      return row;\r\n    })\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as massItemUtil from '../item/MassItemUtil'\r\nimport MassDetailTable from './MassDetailTable';\r\n\r\nexport class MassDetailVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id(){\r\n    return this._id;\r\n  }\r\n  set id(v){\r\n    this._id = v;\r\n    massItemUtil.getByViewDetail(v, (items) => {\r\n      this.Items = items;\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    return this.items;\r\n  } \r\n  set Items(v){\r\n    this.items = v;\r\n    this.DetailTable.Items = v;\r\n  }\r\n\r\n  detailTable\r\n  get DetailTable() {\r\n    if (!this.detailTable){\r\n      this.detailTable = new MassDetailTable();\r\n    }\r\n    return this.detailTable;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport MassDetailTable from './MassDetailTable';\r\n\r\nclass MassDetailTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassDetailTable();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var colElems = data.Columns.map((x,i) => {\r\n      return <th scope=\"col\" key={i} className='text-center'>{x.Title}</th>\r\n    })\r\n\r\n    var rowElems = data.Rows.map((x, i) => {\r\n      var cellElems = x.Cells.map((y, j) => {\r\n        return <td key={j} className={y.className}>{y.ValueString}</td>\r\n      })\r\n      return <tr key={i}>\r\n        {cellElems}\r\n      </tr>\r\n    })\r\n\r\n    return (\r\n      <>\r\n        <table className=\"table table-bordered table-sm\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n             {colElems}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rowElems}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(MassDetailTableView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MassDetailVM } from './MassDetailVM';\r\nimport MassDetailTableView from './MassDetailTableView';\r\n\r\nclass MassDetailView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassDetailVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const id = this.props.match.params.id;\r\n    data.id = id;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h4 className='text-center'>BẢNG CHI TIẾT KHỐI LƯỢNG</h4>\r\n        <div>\r\n          <MassDetailTableView store={data.DetailTable} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(MassDetailView));\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row } from 'antd';\r\nimport { LevelGroupVM } from './LevelGroupVM';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport './LevelGroup.css'\r\n\r\nclass LevelGroupView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new LevelGroupVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='levelgroup__container'>\r\n          <MultiSelectView store={data.LevelSelectVM} />\r\n          <Button size='small' type='text' \r\n            className='levelgroup__deletebutton'\r\n            onClick={data.Delete}>\r\n            <DeleteFilled className='levelgroup__deleteicon' />\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(LevelGroupView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover, Switch } from 'antd';\r\nimport { TLS_FilterValueVM } from './TLS_FilterValueVM';\r\nimport NewInputView from '../../../../../input/NewInputView';\r\nimport './TLS_FilterValue.css'\r\n\r\nclass TLS_FilterValueView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TLS_FilterValueVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n\r\n        <div className='tls_filter__value'>\r\n          {/* Input */}\r\n          <Popover\r\n            trigger={data.PopoverState.Content}\r\n            content={\r\n              <Switch unCheckedChildren='inp' checkedChildren='sel'\r\n                checked={data.SwitchChecked_Funcs()} onChange={data.ToggleInputType} />\r\n            }>\r\n            <span>\r\n              {data.InputElement}\r\n            </span>\r\n          </Popover>\r\n          \r\n          {/* Delete */}\r\n          <Button type='primary' size='small' onClick={data.Delete}\r\n            className='tls_filter__value__delete'>x</Button>\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TLS_FilterValueView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport { TLS_FilterVM } from './TLS_FilterVM';\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport './TLS_Filter.css'\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport TLS_FilterValueView from './TLS_FilterValueView';\r\n\r\nclass TLS_FilterView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TLS_FilterVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='tls_filter__div'>\r\n          {/* Field Select */}\r\n          <SelectView store={data.FieldSelectVM} \r\n            className='tls_filter_fieldselect'/>\r\n\r\n          <div className='tls_filter__valuediv__wrapper'>\r\n            {/* Add Value */}\r\n            <Button type='primary' size='small' onClick={data.AddItem}\r\n              className='tls_filter__valuediv__addbutton'>+</Button>\r\n\r\n            {/* Value List */}\r\n            <div className='tls_filter__valuediv'>\r\n              {data.Items.map(x => {\r\n                return <TLS_FilterValueView key={x.id} store={x} />\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <Button size='small' type='text'\r\n            className='tls_filter__deletebutton'\r\n            onClick={data.Delete}>\r\n            <DeleteFilled className='tls_filter__deleteicon' />\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TLS_FilterView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row, Tabs } from 'antd';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport './TLS_PageItem.css'\r\nimport { TLS_PageItemVM } from './TLS_PageItemVM';\r\nimport TLS_FilterView from '../filter/TLS_FilterView';\r\nimport LevelGroupView from '../levelGroup/LevelGroupView';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass TLS_PageItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TLS_PageItemVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='tls__pageitem__wrapper'>\r\n          {/* Filters */}\r\n          <div className='typicallevel__list'>\r\n            <div className='typicallevel__list__1'>\r\n              {/* Add Filter */}\r\n              <Button type='primary' size='small' onClick={data.AddFilter}\r\n                className='typicallevel__addbutton'>+</Button>\r\n              <span><b>Thiết lập bộ lọc</b></span>\r\n            </div>\r\n\r\n            {/* Filter List */}\r\n            {data.Filters.map(x => {\r\n              return <TLS_FilterView key={x.id} store={x} />\r\n            })}\r\n          </div>\r\n\r\n          {/* LevelGroup */}\r\n          <div className='typicallevel__list'>\r\n            <div className='typicallevel__list__1'>\r\n              {/* Add Level */}\r\n              <Button type='primary' size='small' onClick={data.AddLevelGroup}\r\n                className='typicallevel__addbutton'>+</Button>\r\n              <span><b>Thiết lập level</b></span>\r\n            </div>\r\n\r\n            {/* Level List */}\r\n            {data.LevelGroups.map(x => {\r\n              return <LevelGroupView key={x.id} store={x} />\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TLS_PageItemView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row, Tabs } from 'antd';\r\nimport { TypicalLevelSettingDataVM } from './TypicalLevelSettingDataVM';\r\nimport LevelGroupView from './levelGroup/LevelGroupView';\r\nimport './TypicalLevelSettingData.css'\r\nimport './pageItem/TLS_PageItem.css'\r\nimport TLS_FilterView from './filter/TLS_FilterView';\r\nimport TLS_PageItemView from './pageItem/TLS_PageItemView';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass TypicalLevelSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TypicalLevelSettingDataVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onKeyDown = (v) => {\r\n    //console.log(v);\r\n    v.stopPropagation();\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='tls__tabs__wrapper'>\r\n          <div className='tls__tabs__div'>\r\n            {/* Add Tab */}\r\n            {!data.IsHaveAddCommandTab ?\r\n            <Button type='primary' size='small' onClick={data.AddPageItem}\r\n              className='tls__tabs__add__outside'>+</Button>\r\n              : ''}\r\n\r\n            {/* Tabs */}\r\n            <Tabs type='card' className='tls__tabs'\r\n              onChange={data.ChangePageKey}\r\n              activeKey={data.CurrentPageKey}\r\n              onKeyDown={this.onKeyDown}>\r\n              {data.AllTabs.map(x => {\r\n                return <TabPane tab={x.TitleElement} key={x.id}>\r\n                  <TLS_PageItemView store={x} />\r\n                </TabPane>\r\n              })}\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TypicalLevelSettingDataView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row } from 'antd';\r\nimport { TypicalLevelSettingVM } from './TypicalLevelSettingVM';\r\nimport TypicalLevelSettingDataView from './TypicalLevelSettingDataView';\r\nimport NewInputView from '../../../../input/NewInputView';\r\nimport './TypicalLevelSetting.css'\r\nimport { SaveFilled } from '@ant-design/icons';\r\n\r\nclass TypicalLevelSettingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TypicalLevelSettingVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {/* Data */}\r\n        <div className='tls'>\r\n          {/* Save Button */}\r\n          <Button type='primary' size='small' className='tls__save__button'\r\n            onClick={data.Save}>\r\n            <SaveFilled className='tls__save' />\r\n          </Button>\r\n          {/* Main Data */}\r\n          <TypicalLevelSettingDataView store={data.DataVM} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TypicalLevelSettingView);\r\n","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Phase_DictVM } from \"./Phase_DictVM\";\r\nimport InputView from \"../../../input/InputView\";\r\nimport * as stateType from '../state/StateType'\r\n\r\nconst { Option } = Select;\r\n\r\nclass Phase_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Phase_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var input = data.Input;\r\n    var state = data.State;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <Button type='primary' size='middle' onClick={data.AddVersion}\r\n            disabled={state === stateType.addversion}>\r\n            <PlusCircleOutlined /> LƯU KẾT QUẢ HIỆN TẠI\r\n          </Button>\r\n\r\n          {state === stateType.addversion ? <div className=\"mt-3\">\r\n            <InputView store={input.NameVM} />\r\n            <InputView store={input.DescriptionVM} />\r\n            <div className=\"mt-2\">\r\n              <Button type='primary' size='small' onClick={data.OK}>OK</Button>\r\n              <Button type='default' size='small' onClick={data.Cancel}>Cancel</Button>\r\n            </div>\r\n          </div> : ''}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(Phase_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport RebarMass_Dict from \"./RebarMass_Dict\";\r\nimport TableView from \"../../../../table/TableView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass RebarMass_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new RebarMass_Dict();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <TableView store={data.TableVM}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(RebarMass_DictView)","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as projectUtil from '../ProjectUtil'\r\nimport * as projectVMUtil from '../ProjectVMUtil'\r\nimport * as util from './ProjectCompVMUtil'\r\nimport * as pvt from '../ProjectViewType'\r\nimport MassResultCompView from '../../mass/result/MassResultCompView';\r\nimport TypicalLevelSettingView from '../../setting/typicallevel/TypicalLevelSettingView';\r\nimport Phase_DictView from '../../phase/Phase_DictView';\r\nimport RebarMass_DictView from '../../mass/rebar/RebarMass_DictView';\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n\r\nexport default class ProjectCompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      projectVM: observable,\r\n      projectViewType: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    return this._id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n    projectUtil.getById(v, (item) => {\r\n      this.ProjectVM = projectVMUtil.get(item);\r\n    })\r\n  }\r\n\r\n  projectVM = undefined\r\n  get ProjectVM() {\r\n    return this.projectVM;\r\n  }\r\n  set ProjectVM(v) {\r\n    this.projectVM = v;\r\n\r\n    pmDataVM().CurrentProject = v;\r\n\r\n    var list = [v];\r\n    pmDataVM().Project_DictVM.Items = list;\r\n    pmData().Phase_Dict = v.ModelItem.Phase_Dict;\r\n\r\n    var massResComp = this.MassResultCompVM;\r\n    massResComp.ProjectVMStorageList = list;\r\n    massResComp.ProjectSelectVM.InitialItems = list;\r\n\r\n    var setItemsFuncs = () => massResComp.PhaseVMStorageList = phase_DictVM.Items;\r\n\r\n    var phase_DictVM = v.Phase_DictVM;\r\n    if (phase_DictVM.Items) {\r\n      setItemsFuncs();\r\n    } else {\r\n      phase_DictVM.OnGetItemsDone_Funcs.push(() => {\r\n        setItemsFuncs();\r\n      })\r\n    }\r\n  }\r\n\r\n  massResultCompVM\r\n  get MassResultCompVM() {\r\n    if (!this.massResultCompVM) {\r\n      var obj = this.massResultCompVM = util.GetMassResultCompVM(this);\r\n      pmDataVM().MassResultCompVM = obj;\r\n    }\r\n    return this.massResultCompVM;\r\n  }\r\n\r\n  projectViewType = undefined\r\n  get ProjectViewType() {\r\n    if (!this.projectViewType) {\r\n      this.projectViewType = pmDataVM().ProjectViewType;\r\n    }\r\n    return this.projectViewType;\r\n  } set ProjectViewType(v) {\r\n    this.projectViewType = v;\r\n  }\r\n\r\n  get ViewElement() {\r\n    if (!this.ProjectVM) return undefined;\r\n    \r\n    switch (this.ProjectViewType) {\r\n      case pvt.mass:\r\n        return <MassResultCompView store={this.MassResultCompVM} />\r\n      case pvt.typicallevel:\r\n        return <>\r\n          {this.ProjectVM.TypicalLevelSetting_ForEdit ?\r\n            <TypicalLevelSettingView store={this.ProjectVM.TypicalLevelSetting_ForEdit} />\r\n            : ''}\r\n        </>\r\n      case pvt.phase:\r\n        return <Phase_DictView store={this.ProjectVM.Phase_DictVM} />\r\n      case pvt.inputdata:\r\n        return <RebarMass_DictView store={this.ProjectVM.RebarMass_Dict} />\r\n    }\r\n  }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM'\r\nimport MassResultComp from '../../mass/result/MassResultComp'\r\nimport * as massResutlCompVMUtil from '../../mass/result/MassResultCompVMUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport ProjectCompVM from './ProjectCompVM';\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance;\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new ProjectCompVM();\r\n\r\n  genUtil.Add(\r\n    pmDataVM().OnSet_ProjectViewType_Func_Dict,\r\n    () => qI.ProjectViewType = pmDataVM().ProjectViewType,\r\n    false);\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetMassResultCompVM = (q) => {\r\n  var obj = massResutlCompVMUtil.get(new MassResultComp(), false);\r\n  obj.IsShowProjectSelect = false;\r\n  obj.CanHavePhase = true;\r\n  return obj;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport './ProjectComp.css'\r\nimport * as util from './ProjectCompVMUtil'\r\nimport TwoCol_SelectView from '../../../../select/twocol/TwoCol_SelectView';\r\n\r\nclass ProjectCompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = util.get()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const id = this.props.match.params.id;\r\n    data.id = id;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var projectVM = data.ProjectVM;\r\n\r\n    return (\r\n      <>\r\n        {projectVM ? data.ViewElement : ''}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(ProjectCompView));\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport './PMData.css'\r\nimport Workpackage_DictView from '../../entity/workpackage/Workpackage_DictView';\r\nimport ElementFilterSetting_DictView from '../../entity/setting/elementFilter/ElementFilterSetting_DictView';\r\nimport MassExportSetting_DictView from '../../entity/setting/massExport/MassExportSetting_DictView';\r\n\r\nimport { PMDataVM } from './PMDataVM';\r\nimport MassResultCompView from '../../entity/mass/result/MassResultCompView';\r\nimport WorkItemExportSetting_DictView from '../../entity/setting/workitemexport/WorkItemExportSetting_DictView';\r\nimport { withRouter } from \"react-router-dom\";\r\n//import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport LeftNavView from '../../entity/nav/left/LeftNavView';\r\nimport TestView from '../../../view/TestView';\r\nimport MassDetailView from '../../entity/mass/detail/MassDetailView';\r\nimport ProjectCompView from '../../entity/project/comp/ProjectCompView';\r\n\r\nclass PMDataView extends Component {\r\n  get pmDataVM() { return PMDataVM.Instance };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className='projectcomp'>\r\n          <LeftNavView />\r\n          <div className='projectcomp__main__wrapper'>\r\n            <div className='projectcomp__main'>\r\n\r\n              <Router basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={TestView} />\r\n                  <Route exact path=\"/massdetail/:id\" component={MassDetailView} />\r\n                  <Route exact path=\"/project/:id\" component={ProjectCompView} />\r\n                </Switch>\r\n              </Router>\r\n\r\n            </div>\r\n            <div className='projectcomp__main__bottom' />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(PMDataView);\r\n","export class DO_Comp {\r\n  \r\n}","export class DO_Element {\r\n  SubItems = []\r\n}","export const project = 'project'\r\nexport const element = 'element'\r\nexport const elementinfo = 'element-info'\r\nexport const elementinfo_identify = 'element-info-identify'\r\nexport const elementinfo_locate = 'element-info-locate'\r\nexport const elementinfo_geometry = 'element-info-geometry'\r\nexport const elementinfo_specification = 'element-info-specification'\r\nexport const elementinfo_material = 'element-info-material'","import { DO_Element } from './DO_Element';\r\nimport * as et from './DO_ElementType'\r\n\r\nexport const get = (type, title) => {\r\n  var qI = new DO_Element();\r\n  qI.Title = title ? title : type;\r\n\r\n  switch (type) {\r\n    case et.element:\r\n      qI.SubItems = [\r\n        get('guid'),\r\n        get('projectId'),\r\n        get('exportSetId'),\r\n        get(et.elementinfo, 'info')\r\n      ]\r\n      break;\r\n    case et.project:\r\n      qI.SubItems = []\r\n      break;\r\n    case et.elementinfo:\r\n      qI.SubItems = [\r\n        get(et.elementinfo_identify, 'identify'),\r\n        get(et.elementinfo_locate, 'locate'),\r\n        get(et.elementinfo_geometry, 'geometry'),\r\n        get(et.elementinfo_specification, 'specification'),\r\n        get(et.elementinfo_material, 'material'),\r\n      ]\r\n      break;\r\n    case et.elementinfo_identify:\r\n      qI.SubItems = [\r\n        get('category'),\r\n        get('typename'),\r\n        get('elementName'),\r\n        get('typemark'),\r\n        get('typecomment'),\r\n        get('description'),\r\n        get('model'),\r\n        get('manufacturer'),\r\n        get('keynote'),\r\n        get('assemblycode'),\r\n        get('systemtype'),\r\n        get('systemclassification'),\r\n        get('workItem'),\r\n      ];\r\n      break;\r\n    case et.elementinfo_locate:\r\n      qI.SubItems = [\r\n        get('level'),\r\n        get('baseLevel'),\r\n        get('topLevel'),\r\n        get('block'),\r\n        get('zone'),\r\n      ];\r\n      break;\r\n    default:\r\n      qI.SubItems = [];\r\n      break;\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textUtil from '../../../text/TextVMUtil';\r\nimport * as util from './DO_ElementVMUtil'\r\n\r\nexport class DO_ElementVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      subItems: observable,\r\n      isOpenSub : observable\r\n    })\r\n  }\r\n\r\n  get Title(){\r\n    return this.ModelItem.Title\r\n  }\r\n\r\n  get IsHaveButton(){\r\n    return this.SubItems.length !== 0;\r\n  }\r\n\r\n  subItems = undefined\r\n  get SubItems(){\r\n    if (!this.subItems){\r\n      this.subItems = util.GetSubItems(this);\r\n    }\r\n    return this.subItems\r\n  }\r\n\r\n  isOpenSub = false\r\n  get IsOpenSub(){\r\n    return this.isOpenSub\r\n  } set IsOpenSub(v){\r\n    this.isOpenSub = v;\r\n  }\r\n\r\n  ToggleSub = () => {\r\n    this.IsOpenSub = !this.IsOpenSub;\r\n    this.ToggleSubContentVM.Content = util.GetToggleSubContent(this)\r\n  }\r\n\r\n  toggleSubContentVM\r\n  get ToggleSubContentVM(){\r\n    if (!this.toggleSubContentVM){\r\n      this.toggleSubContentVM = \r\n        textUtil.get(util.GetToggleSubContent(this))\r\n    }\r\n    return this.toggleSubContentVM;\r\n  }\r\n}","import { DO_ElementVM } from \"./DO_ElementVM\"\r\n\r\n// Instance\r\nexport const get = (q) => {\r\n  var qI = new DO_ElementVM();\r\n\r\n  qI.ModelItem = q;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetSubItems = (q) => {\r\n  return q.ModelItem.SubItems.map(x => get(x));\r\n}\r\n\r\nexport const GetToggleSubContent = (q) => {\r\n  return q.IsOpenSub ? '-' : '+';\r\n}","import { DO_CompVM } from \"./DO_CompVM\"\r\nimport * as modelUtil from './DO_CompUtil'\r\nimport * as itemUtil from '../DO_ElementVMUtil'\r\n\r\n// Instance\r\nexport const get = (q) => {\r\n  var qI =new DO_CompVM();\r\n  qI.ModelItem = q;\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return get(modelUtil.GetTest());\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  var obj = q.ModelItem.Items.map(x => itemUtil.get(x));\r\n  return obj;\r\n} ","import { DO_Comp } from \"./DO_Comp\"\r\nimport * as itemUtil from '../DO_ElementUtil'\r\nimport * as et from '../DO_ElementType'\r\n\r\nexport const GetTest = () => {\r\n  var qI = new DO_Comp();\r\n  \r\n  qI.Items = [\r\n    itemUtil.get(et.project),\r\n    itemUtil.get(et.element),\r\n  ]\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DO_CompVMUtil'\r\n\r\nexport class DO_CompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n  \r\n  items = undefined;\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select, Spin } from \"antd\";\r\nimport { DO_ElementVM } from \"./DO_ElementVM\";\r\nimport './comp/DO_Comp.css'\r\n\r\nclass DO_ElementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DO_ElementVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <span className='doelement'>\r\n          {data.Title}\r\n\r\n          {/* Toggle Sub Button */}\r\n          {data.IsHaveButton ?\r\n            <Button className='doelement__button'\r\n              type='primary' size='small'\r\n              onClick={data.ToggleSub}>\r\n                {data.ToggleSubContentVM.Content}\r\n              </Button>\r\n            : ''}\r\n\r\n          {/* Sub Items */}\r\n          {data.IsOpenSub ?\r\n            <div className='doelement__dict'>\r\n              {data.SubItems.map(x => {\r\n                return <DO_ElementView key={x.Title}\r\n                  store={x} />\r\n              })}\r\n            </div>\r\n            : ''}\r\n        </span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(DO_ElementView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select, Spin } from \"antd\";\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\nimport { DO_CompVM } from \"./DO_CompVM\";\r\nimport * as util from './DO_CompVMUtil'\r\nimport './DO_Comp.css'\r\nimport DO_ElementView from \"../DO_ElementView\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance;\r\n\r\nclass DO_CompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = util.GetTest();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='doelement__dict'>\r\n          {data.Items ?\r\n            data.Items.map(x => {\r\n              return <DO_ElementView key={x.Title}\r\n                store={x} />\r\n            })\r\n            : ''}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(DO_CompView)","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport PMDataView from '../main/single/form/PMDataView';\r\nimport { Col, Row } from 'antd';\r\nimport MassResultCompView from '../main/entity/mass/result/MassResultCompView';\r\nimport { PMDataVM } from '../main/single/form/PMDataVM';\r\nimport * as pvt from '../main/entity/project/ProjectViewType'\r\nimport DO_CompView from '../main/entity/doc/comp/DO_CompView';\r\n\r\nclass TestView extends Component {\r\n  render() {\r\n    var data = PMDataVM.Instance;\r\n\r\n    var elem = ''\r\n    switch (data.ProjectViewType) {\r\n      case pvt.mass:\r\n        elem = <MassResultCompView store={data.MassResultCompVM} />\r\n        break;\r\n      case pvt.mepsetting:\r\n        elem = 'MEP Setting'\r\n        break;\r\n      case pvt.document:\r\n        elem = <DO_CompView />\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {elem}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TestView);\r\n","import './App.css';\r\nimport \"antd/dist/antd.css\";\r\nimport { Component } from 'react';\r\n\r\nimport TestView from './model/view/TestView';\r\nimport PMDataView from './model/main/single/form/PMDataView';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <PMDataView />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
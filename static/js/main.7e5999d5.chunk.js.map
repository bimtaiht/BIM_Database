{"version":3,"sources":["model/text/TextVM.js","model/text/TextVMUtil.js","model/input/InputView.js","util/apiUtil.js","model/main/entity/mass/MassType.js","model/main/entity/mass/item/MassItemField.js","util/generalUtil.js","model/main/entity/mass/table/MassColumn.js","model/text/TextView.js","model/main/single/model/CategoryData.js","model/main/single/model/CategoryDataUtil.js","model/main/entity/filter/FilterCategoryType.js","model/main/entity/filter/FilterValueType.js","model/main/entity/filter/StringFilterType.js","model/main/entity/filter/NumberFilterType.js","model/main/entity/filter/EntFilterUtil.js","model/main/entity/filter/EntFilter.js","model/main/entity/mass/table/rowgroup/MGI_I_CreateType.js","model/main/entity/mass/table/rowgroup/MGI_ItemUtil.js","model/main/entity/mass/table/rowgroup/MGI_Item.js","model/main/entity/mass/table/rowgroup/MassGroupItem.js","model/main/entity/mass/table/rowgroup/MassGroupComponent.js","model/main/entity/mass/table/rowgroup/MassGroupComponentUtil.js","model/main/entity/mass/table/rowgroup/MassGroupItemUtil.js","model/select/MultiSelectVMUtil.js","model/select/MultiSelectVM.js","model/select/MultiSelectView.js","model/hover/EntHoverVM.js","model/hover/EntHoverView.js","model/select/SelectVMUtil.js","model/select/SelectVM.js","model/float/FloatItemVM.js","model/float/FloatItemVMUtil.js","model/float/FloatItemView.js","model/select/SelectView.js","model/main/entity/mass/table/location/RRLF_LocationType.js","model/main/entity/mass/table/location/ReplaceRowLocationFactory.js","model/main/entity/mass/table/location/ReplaceRowLocationFactoryUtil.js","model/main/entity/mass/table/MassRow.js","model/main/entity/mass/table/MassRowUtil.js","model/main/entity/mass/table/MassCell.js","model/main/entity/mass/table/MassCellUtil.js","model/main/entity/mass/table/MassTableUtil.js","model/main/entity/setting/base/SettingType.js","model/main/entity/setting/base/Setting.js","model/main/entity/setting/massGroup/MassGroupSettingData.js","model/main/entity/mass/MassPropertyName.js","model/main/entity/setting/massGroup/MassGroupSettingDataUtil.js","model/main/entity/setting/massGroup/MassGroupSetting.js","model/main/entity/setting/massGroup/MassGroupSettingUtil.js","model/main/entity/workpackage/WorkpackageVM.js","model/main/entity/workpackage/WorkpackageVMUtil.js","model/checkbox/CheckboxVM.js","model/checkbox/CheckboxVMUtil.js","model/main/entity/workpackage/WorkpackageInputVM.js","model/main/entity/workpackage/WorkpackageInputVMUtil.js","model/main/entity/workpackage/Workpackage_DictVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSetting_DictVM.js","model/main/entity/setting/base/SettingVM.js","model/main/entity/setting/elementFilter/ElementFilterSettingVM.js","model/main/entity/filter/EntFilterVM.js","model/main/entity/filter/EntFilterVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataVM.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingVMUtil.js","model/main/entity/setting/base/SettingVMUtil.js","model/main/entity/setting/base/SettingInputVM.js","model/main/entity/setting/elementFilter/ElementFilterSettingInputVM.js","model/main/entity/setting/elementFilter/ElementFilterSetting_DictVMUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingInputVMUtil.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingVM.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingVMUtil.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSetting.js","model/main/entity/setting/massExport/exportSetting/MES_ValueRetrieveType.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingUtil.js","model/main/entity/setting/massExport/MassExportSettingDataVM.js","model/main/entity/setting/massExport/MassExportSettingDataVMUtil.js","model/main/entity/setting/massExport/MassExportSettingVM.js","model/main/entity/setting/massExport/MassExportSettingVMUtil.js","model/main/entity/setting/massExport/MassExportSettingInputVM.js","model/main/entity/setting/massExport/MassExportSetting_DictVM.js","model/main/entity/setting/massExport/MassExportSetting_DictVMUtil.js","model/main/entity/setting/massExport/MassExportSettingInputVMUtil.js","model/main/entity/setting/massGroup/MassGroupSetting_DictVM.js","model/main/entity/setting/massGroup/MassGroupSetting_DictVMUtil.js","model/main/entity/phase/PhaseVM.js","model/main/entity/phase/PhaseVMUtil.js","model/main/entity/state/StateType.js","model/main/entity/phase/Phase_DictVM.js","model/main/entity/phase/PhaseInputVM.js","model/main/entity/phase/Phase_DictVMUtil.js","model/main/entity/phase/PhaseInputVMUtil.js","model/main/entity/project/ProjectVM.js","model/main/entity/project/ProjectVMUtil.js","model/main/entity/project/Project_DictVM.js","model/main/entity/project/Project_DictVMUtil.js","model/main/entity/mass/result/MassResultCompVM.js","model/main/entity/mass/result/MassResultCompVMUtil.js","model/table/RenderState.js","model/table/RenderItem.js","model/table/RenderItemUtil.js","model/table/Render_Dict.js","model/table/TableColumn.js","model/table/TableColumnUtil.js","model/table/TableRow.js","model/table/TableCell.js","model/table/TableRowUtil.js","model/table/TableCellUtil.js","model/table/TableVM.js","model/table/TableVMUtil.js","model/main/entity/setting/workitemexport/WorkItemExportDataVM.js","model/main/entity/setting/workitemexport/WorkItemExportSettingVM.js","model/main/entity/setting/workitemexport/WorkItemExportSettingVMUtil.js","model/main/entity/setting/workitemexport/WorkItemExportDataVMUtil.js","model/main/entity/setting/workitemexport/WorkItemExportSetting.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_DictVM.js","model/checkbox/CheckboxView.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_DictVMUtil.js","model/main/single/form/PMDataVMUtil.js","model/main/single/form/PMDataVM.js","model/main/entity/setting/massGroup/field/MGS_FieldVM.js","model/main/entity/setting/massGroup/field/MGS_FieldVMUtil.js","model/main/entity/setting/massGroup/MassGroupSettingDataVM.js","model/main/entity/setting/massGroup/MassGroupSettingDataVMUtil.js","model/main/entity/setting/massGroup/MassGroupSettingVM.js","model/main/entity/setting/massGroup/MassGroupSettingVMUtil.js","model/main/entity/mass/table/MassTable.js","model/main/entity/mass/table/MassColumnUtil.js","model/main/entity/mass/item/MassItem_Dict.js","model/main/entity/mass/item/MassItem.js","model/main/entity/mass/item/MassItemUtil.js","model/main/entity/mass/result/MassResultComp.js","model/main/entity/mass/result/MassResultCompUtil.js","model/main/entity/mass/rebar/RebarMass_DictUtil.js","model/main/entity/value/ValueUnit.js","model/main/entity/mass/rebar/RebarMass_Dict.js","model/main/entity/phase/Phase.js","model/main/entity/phase/PhaseUtil.js","model/main/entity/phase/Phase_Dict.js","model/main/entity/phase/PhaseInput.js","model/main/entity/phase/Phase_DictUtil.js","model/main/entity/phase/PhaseInputUtil.js","model/main/entity/project/Project.js","model/main/entity/exportset/ExportSet.js","model/main/entity/exportset/ExportSetVersion.js","model/main/entity/exportset/ExportSetVersionUtil.js","model/main/entity/exportset/ExportSetUtil.js","model/main/entity/project/ProjectUtil.js","model/main/entity/value/ValueRetrieveFrom.js","model/main/entity/project/Project_Dict.js","model/main/entity/setting/elementFilter/ElementFilterSetting.js","model/main/entity/setting/elementFilter/ElementFilterSettingData.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingUtil.js","model/main/entity/setting/base/SettingInput.js","model/main/entity/setting/base/SettingInputUtil.js","model/main/entity/setting/elementFilter/ElementFilterSettingInput.js","model/main/entity/setting/elementFilter/ElementFilterSettingInputUtil.js","model/main/entity/setting/elementFilter/ElementFilterSetting_Dict.js","model/main/entity/setting/massExport/MassExportSettingData.js","model/main/entity/setting/massExport/MassExportSettingDataUtil.js","model/main/entity/setting/massExport/MassExportSetting.js","model/main/entity/setting/massExport/MassExportSettingUtil.js","model/main/entity/setting/massExport/MassExportSettingInput.js","model/main/entity/setting/massExport/MassExportSettingInputUtil.js","model/main/entity/setting/massExport/MassExportSetting_Dict.js","model/main/entity/setting/massGroup/MassGroupSetting_Dict.js","model/main/entity/setting/versionCompare/VCS_Item.js","model/main/entity/setting/versionCompare/VersionCompareSetting.js","model/main/entity/setting/versionCompare/VersionCompareSettingUtil.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_Dict.js","model/main/entity/workpackage/WorkpackageInput.js","model/main/entity/workpackage/Workpackage_Dict.js","model/main/single/model/PMDataUtil.js","model/main/single/model/PMData.js","model/main/entity/workpackage/Workpackage.js","model/main/entity/workpackage/WorkpackageUtil.js","model/main/entity/workpackage/Workpackage_DictVM.js","model/main/entity/workpackage/Workpackage_DictView.js","model/main/entity/filter/EntFilterView.js","model/main/entity/setting/elementFilter/ElementFilterSettingDataView.js","model/main/entity/setting/elementFilter/ElementFilterSetting_DictView.js","model/main/entity/setting/massExport/exportSetting/MES_ValueSettingView.js","model/main/entity/setting/massExport/MassExportSettingDataView.js","model/main/entity/setting/massExport/MassExportSetting_DictView.js","model/main/entity/mass/table/MassCellView.js","model/main/entity/mass/table/MassRowView.js","model/main/entity/mass/table/MassTableView.js","model/main/entity/mass/result/MassResultCompView.js","model/table/TableView.js","model/main/entity/setting/workitemexport/WorkItemExportSetting_DictView.js","model/main/single/form/PMDataView.js","model/view/TestView.js","model/table/CellVM.js","model/table/ColumnVM.js","model/table/RowVM.js","model/main/entity/mass/detail/MassDetailTableUtil.js","model/main/entity/mass/detail/MassDetailTable.js","model/main/entity/mass/detail/MassDetailVM.js","model/main/entity/mass/detail/MassDetailTableView.js","model/main/entity/mass/detail/MassDetailView.js","model/main/entity/project/comp/ProjectCompVM.js","model/main/entity/project/comp/ProjectCompVMUtil.js","model/main/entity/phase/Phase_DictView.js","model/main/entity/mass/rebar/RebarMass_DictView.js","model/main/entity/project/comp/ProjectCompView.js","App.js","reportWebVitals.js","index.js"],"names":["TextVM","content","undefined","placeholder","makeObservable","this","observable","v","onSetContent","style","inputStyle","wrapper","position","get","q","qI","InputView","props","onChange","e","value","target","state","Content","store","textVMUtil","Component","observer","http","timeout","axios","create","baseURL","Accept","handleResponse","response","success","status","data","message","statusText","callApi","action","a","err","error","timeout_default","url","config","put","payload","result","post","concrete","formwork","rebar","Project","Phase","Workpackage","Value","Unit","partition","rebarType","elementName","MassType","workItem","level","diameter","GetValueString","massFieldValue","field","Name","FullName","randomId","Intl","DateTimeFormat","Math","random","toString","substr","newGUID","replace","c","crypto","getRandomValues","Uint8Array","UpdateFromModel","obj","M2VM","MoveItem","list","oldIndex","newIndex","temp","MassColumn","Cells","_id","genUtil","Dict","Columns","indexOf","TextView","getWrapperContent","CategoryData","categoryNames","instance","category","family","parameter","bystring","bynumber","byequal","bycontain","bynotcontain","bysmaller","bybigger","bybetween","categoryType","EntFilter","ValueType","valueType","NumberFilterType","numberFilterType","StringFilterType","stringFilterType","Values","values","CategoryType","GetValueStorageList","fct","Instance","CategoryNames","PMData","ParameterNames","IsValid","filter","isValid","filterValues","fvt","sft","forEach","x","lowerVal","toLowerCase","includes","isNaN","nft","leftVal","rightVal","IsEqualLeft","IsEqualRight","valueStorageList","util","byuser","byauto","mgi","createType","MGI_Item","MassGroupItem","CreateType","ct","Title","Delete","Items","splice","Index","title","newMGI","newMGI_id","SupComponent","AllItems","index","findIndex","id","SubComponents","NotIncludeValues","AddNotIncludeValue","push","GetItem","item","itemUtil","OnIsFirstSetSupRow_Funcs","HandleCreatedByUserRows","mgii_ct","addRow","supRow","row","Table","GetRow","FullValue","IsCreatedByUser","handleRow","handleNonField","subMgcIndex","y","Filter","SupRow","replaceMgi","NewMGI","Handle_ReplaceMGI","map","items","ApiData","Field","subComponents","valueOrders","ValueOrders","notIncludeValues","IsFirstSetSupRow","isFirstSetSupRow","IsHaveMassItem","table","MassGroupComponent","originComponent","OriginComponent","AllSubItems","apply","supItem","filterUtil","SupItem","Clone","GetOriginComponent","subComps","supCom","getFromDb","compUtil","IsHaveValueOrder","GetTable","initialItems","MultiSelectVM","InitialItems","GetInitialIndexs","selectedIndexs","GetSelectedItems","SelectedIndexs","InitialIndexs","initialIndexs","SelectedItems","selectedItems","OnSelectedItemChanged","titleRender","DisplayContent","Option","Select","MultiSelectView","onValueChange","width","Placeholder","length","elems","displayContent","TitleRender","mode","optionFilterProp","filterOption","input","option","children","EntHoverVM","IsElementVisible","ShowElement","HideElement","EntHoverView","minWidth","onMouseEnter","onMouseLeave","Element","initialItem","SelectVM","InitialItem","GetInitialIndex","selectedIndex","GetSelectedItem","SelectedIndex","CanClear","Clear","InitialIndex","initialIndex","SelectedItem","selectedItem","padding","FloatItemVM","getClassName","className","location","loc","FloatItemView","floatItemVMUtil","SelectView","floatElem","floatItemStore","size","type","onClick","DivStyle","showSearch","inside","lower","ReplaceRowLocationFactory","Location","lt","ToggleLocation","backgroundColor","Color","border","MassRow","SubItems","isShowSub","rank","isHaveSub","IsToolVisible","GetCellByColumn","col","Column","UpdateData","Rank","IsHaveSub","ToggleSub","IsShowSub","SetSubFields","tempSubFields","TempSubFields","isSame","SubFields","i","supMgi","mgc","SubItem","subMgis","mgiUtil","SubMassGroupComponent","SubMassGroupItem","HandleItem","GetValue","ColumnField","MoveUp","CurrentList","orderItems","OrderMGI","OrderItems","orderValues","OrderValues","mgiIndex1","mgiIndex2","MoveDown","AddSub","SubCells","GetSubCells","totalValues","TotalValue","reduce","b","ContentVM","ValueString","ReplaceOK","factory","ReplaceFactory","refRow","ReferenceRow","rrlf_lt","Replace","oldMgi","newMgi","MainMGI","ReplaceMGI","IsShowSubFieldSelect","IsModalVisible","OpenModal","TitleVM","SubFieldSelectVM","locSelectVM","LocationSelectVM","LocationStorageList","ModalOK","ModalCancel","currentList","MainRows","concat","massGroupItem","subMassGroupItem","subFields","ToggleButtonContentVM","toggleButtonContent","toggleButtonContentVM","ToggleButtonContent","OnSetContent","subFieldSelectVM","AllRows","locationSelectVM","titleVM","replaceFactory","visible","onOk","onCancel","gutter","marginTop","flex","ButtonStyle","ToolElement","display","marginLeft","UpCircleOutlined","DownCircleOutlined","danger","dict","GetRank","GetStyle","GetIsHaveSub","GetToggleButtonContent","GetSubFieldSelectVM","storageList","MassItemFields","multiSelectUtil","Order","sort","GetTitle","GetLocationSelectVM","selectUtil","GetSubMassGroupItem","subItems","GetSubFields","subMGI","mgis","lastValidIndex","isValidHandle","HaveMassItemSubComponents","currentIndex","CreateSubMassGroupItem","mgcIndex","list1","list2","isValidCheck","Add","mgi_I","mgi_iUtil","MassCell","GetUnit","unit","totalValue","GetTotalValue","subRows","Row","AsString","console","log","IsHaveVCS_Item","VCS_Item","ValueColor","TDBgColor","ShowDetail","process","openTabFunc","window","open","getUrl","viewDetailId","GetViewDetailId","valueColor","tdBgColor","massIds","massType","handle","apiData","api","then","unitVM","contentVM","toFixed","subCells","isHaveVCS_Item","vcs_Item","color","fontWeight","pmData","GetIsHaveVCS_Item","mif","MassResultComp","Phases","ColumnIndex","GetValueColor","GetTDBgColor","GetVCS_Item","VersionCompareSetting","cells","compareIndex","compareItem","ratio","GetMassType","isPending","GetMassGroupName","MassGroupSetting","GetMainMGI","MainMGC","elementfilter","massexport","massgroup","Setting","OnDelete","Input","EditItemId","name","OnNameChanged","description","OnDescriptionChanged","OnDataChanged","MassGroupSettingData","AddNewField","MassPropertyNames","Fields","fields","Category","GetDefaultFields","mpn","Description","SettingType","settingType","Data","massGroupCompUtil","massGroupComponent","dataUtil","WorkpackageVM","code","fullName","WorkpackageVMs","Code","codeVM","nameVM","descriptionVM","OnCodeChanged","OnFullNameChanged","GetSupItem","supWp","PMDataVM","Workpackage_DictVM","CheckboxVM","ischecked","isDisable","onCheckChange","WorkpackageInputVM","workpackageVMStorageList","isNew","commandName","IsNew","AddDatabase","WorkpackageInput","DeleteFunc","CodeVM","NameVM","DescriptionVM","IsNewVM","Ischecked","selectVM","SupItemSelectVM","supItemSelectVM","selectVMUtil","WorkpackageVMStorageList","CommandVM","workpackageVM","isNewVM","checkboxVMUtil","commandVM","CommandName","pmDataVM","GetCommandName","GetWorkpackageVMStorageList","GetWorkpackageInputVM","dictVM","OnGetItemsDone_Funcs","OnAddDatabaseDone","command","OnAdd","workpackageInputVMUtil","Workpackage_Dict","ElementFilterSetting_DictVM","ModelItem","OnGetItemsDone","currentItem","CurrentItem","EditItem","SettingVM","GetDataVM","OnGetDataVM","dataVM","OnInitialSetDataVM","ElementFilterSettingVM","cateFilterVM","CategoryFilterVM","OnInitialData","famFilterVM","FamilyFilterVM","EntFilterVM","SetData","ValueTypeSelectVM","StringFilterTypeSelectVM","ValuesSelectVM","ValueStorageList","valueTypeSelectVM","FilterValueTypes","stringFilterTypeSelectVM","StringFilterTypes","valuesSelectVM","multiSelectVMUtil","ValueSelectPlaceholder","ElementFilterSettingDataVM","GetCategoryFilterVM","CategoryFilter","filterVMUtil","isHaveFamilyFilter","GetFamilyFilterVM","FamilyFilter","IsHaveFamilyFilter","IsHaveFamilyFilterVM","categoryFilterVM","familyFilterVM","isHaveFamilyFilterVM","DataVM","dataVMUtil","SettingInputVM","settingTypeVM","editItem","SettingTypeVM","ElementFilterSettingInputVM","GetItems","itemVMUtil","GetInput","inputVMUtil","MES_ValueSettingVM","ValueSettingVMs","RetrieveTypeSelectVM","RetrieveType","ValueFilterVM","WorkpackageSelectVM","MassTypeSelectVM","retrieveType","retrieveTypeSelectVM","RetrieveTypeStorageList","valueFilterVM","ValueFilter","modelItem","workpackageSelectVM","massTypeSelectVM","MassTypeStorageList","GetRetrieveTypeStorageList","ValueRetrieveTypes","GetWorkpackageVM","workpackage","GetMassTypeStorageList","MassTypes","MES_ValueSetting","ValueSettings","workpackageId","byparameter","GetDefault","vrt","valueFilter","GetWorkpackage","Workpackages","GetApiData","MassExportSettingDataVM","elementFilterVMStorageList","valueSettingVMs","AddNewValueSettingVM","AddNewValueSetting","itemView","valueSettingVMUtil","ElementFilterSelectVM","ElementFilterVM","elementFilterVM","ElementFilter","elementFilterSelectVM","ElementFilterVMStorageList","modelList","oldCount","newCount","delta","abs","originItemVM","valueSettingUtil","itemVM","GetElementFilterVMStorageList","GetElementFilterVM","elemFilter","GetValueSettingVMs","MassExportSettingVM","MassExportSettingInputVM","MassExportSetting_DictVM","MassGroupSetting_DictVM","PhaseVM","addversion","Phase_DictVM","AddVersion","State","stateType","Cancel","OK","AddMassVersion","warning","PhaseInputVM","ProjectVM","phase_DictVM","rebarMass_Dict","RebarMass_Dict","InputExportSet","GetPhase_DictVM","GetItemsDone","phaseDictVMUtil","Phase_Dict","Project_DictVM","MassResultCompVM","IsShowProjectSelect","CanHavePhase","isHavePhase","IsDataPending","handledRatio","GetMassData","HandledRatio","projects","Projects","projectVMs","projectVMStorageList","ProjectSelectVM","projectSelectVM","ProjectVMStorageList","ProjectVMs","phases","phaseVMs","massItem_Dict","MassItem_Dict","phaseVMStorageList","PhaseSelectVM","phaseSelectVM","PhaseVMStorageList","PhaseVMs","IsHavePhase","isShowPhaseSelectVM","massGroupSettingStorageList","MassGroupSettingSelectVM","massGroupSettingSelectVM","MassGroupSettingStorageList","loadingSpinTipVM","textUtil","LoadingSpinTip","LoadingSpinTipVM","isfetchProjects","GetProjectVMStorageList","massTable","MassTable","OnIsUpdateDataDone_Funcs","OnSetHandledRatio_Funcs","GetProjectVMs","GetPhaseVMs","GetMassGroupSettingStorageList","MassGroupSetting_Dict","_default","edit","RenderItem","render","Render","GetRender","rs","val","dataIndex","inputVM","Render_Dict","renderUtil","TableColumn","RenderState","render_Dict","renders","DataIndex","Key","GetActionColumn","CanAdd","add","AddItem","cell","editElem","CanEdit","Edit","delElem","CanDelete","DeleteItem","TableRow","Item","key","TableCell","renderState","GetCells","cellUtil","TableVM","IsShowActionColumn","columns","dataSource","rows","OnGetItemForAdd","DataSource","rowUtil","Rows","OnDeleteItem","OnEditItem","colUtil","ElementName","Diameter","Weight","WorkItemExportDataVM","WorkItemExportSettingVM","IsCategoryChecked","categoryCheckboxVM","checkboxUtil","WorkItemExportSetting","WorkItemExportSetting_DictVM","tableVM","CheckboxView","onCheckedChange","checked","disabled","GetTableVM","nameCol","isCateCol","CategoryCheckboxVM","isSubWorkItemCol","GetWorkpackage_DictVM","OnGetWorkpackagesDone","workpackageVMUtil","workpackage_DictVMUtil","GetElementFilterSetting_DictVM","elementFilterSetting_DictVMUtil","ElementFilterSetting_Dict","GetMassExportSetting_DictVM","massExportSetting_DictVMUtil","MassExportSetting_Dict","GetMassGroupSetting_DictVM","massGroupSetting_DictVMUtil","GetProject_DictVM","project_DictVMUtil","Project_Dict","GetWorkItemExportSetting_Dict","wieDictVMUtil","WorkItemExportSetting_Dict","workpackage_DictVM","elementFilterSetting_DictVM","massExportSetting_DictVM","massGroupSetting_DictVM","project_DictVM","massResultCompVM","massResultCompVMUtil","filterValueTypes","stringFilterTypes","valueRetrieveTypes","parameterNames","massPropertyNames","massTypes","workItemExportSetting_Dict","MGS_FieldVM","FieldVMs","FieldSelectVM","fieldSelectVM","FieldStorageList","GetFieldStorageList","MassGroupSettingDataVM","fieldVMs","AddNewFieldVM","fieldVMUtil","GetFieldVMs","MassGroupSettingVM","IsValidTable","columnField","FullRows","Init","GetColumn","GetCell","Build","colField","ValidPhasesByInput","IsHaveAsyncData","IsOnSaveMassGroup","HandledItems","AddHandledItems","IsUpdateDataDone","colFieldValue","initialRow","HandleRowFieldIndex","GetRow_Value_FieldIndex","rowFieldIndex","itemCount","lastRow","rowField","valueString","fullValue","Handle_AddRow","subMgcs","subIndex","r1","awaitGetSupRowForAdd","r2","Array","isArray","SaveMassGroup","massGroupName","MassGroupInputOK","MassGroupName","st","mgsUtil","mgsVMUtil","MassGroupNameVM","MassGroupInputCancel","AddMainRow","massGroupSetting","mainMGC","mgi1","mainMGI","massGroupNameVM","MassItem","IsGetElement","OnGetElementDone_Funcs","massItem","isFromElement","mt","groupName","getValFunc","DeleteDatabase","project","projectId","elementId","exportSetId","exportSetVersionId","info","Info","Elements","GetProject","GetPhases","exportSetVersionIds","GetValidPhasesByInput","inputPhases","getByViewDetail","viewDetail","masses","isGetElement","wp_Dict","IsDataChanged","RefreshData","start","performance","now","end","massItemUtil","projectIds","phaseIds","setExportSetData","exportSet","currentVersion","CurrentVersion","OnGetCurrentVersionDone_Func","inputExportSet","OnGetInputExportSetDone_Funcs","OnGetExportSetVersions_Func","exportSetVersions","GetExportSetVersionData","ExportSetVersions","GetExportSetVersions","phaseId","addVersionFunc","PhaseInput","phaseUtil","inputUtil","phase_Dict","phaseDictUtil","GetInputExportSetDone","getInputExportSetDone","ExportSet","GetCurrentVersionDone","ExportSetVersion","RetrieveFrom","retrieveFrom","GetCurrentVersion_Async","versionUtil","AddVersion_Async","addItem","GetRebarMass_Dict","rebarMassDictUtil","GetInputExportSet_Async","exportSetUtil","ElementFilterSetting","ElementFilterSettingData","categoryFilter","familyFilter","SettingInput","GetData","OnGetData","prefix","UrlPrefix","AddDatabaseDone","NewItem","GetEditItem","Update","urlPrefix","ElementFilterSettingInput","elementFilterSettingUtil","cateFilter","MassExportSettingData","elementFilter","elementFilterId","valueSettings","exportSettings","GetElementFilter","elemFilterId","GetDefaultValueSettings","MassExportSetting","MassExportSettingInput","massExportSettingUtil","WorkpackageId","supId","SupId","NewWorkpackage","workpackageUtil","wp","GetFullName","UpperList","LowerList","wps","GetWorkpackagesDone","workpackageInput","GetFilterValueTypes","GetStringFilterTypes","GetValueRetrieveTypes","GetMassPropertyNames","GetMassItemFields","GetMassTypes","DebugPoints","workpackage_Dict","elementFilterSetting_Dict","massExportSetting_Dict","massGroupSetting_Dict","project_Dict","massResultComp","categoryData","massItemFields","versionCompareSetting","upperList","lowerList","dbItem","GetSubItems","GetUpperList","GetLowerList","getAll","workpackageVMs","CurrentWorkpackage","workpackageInputVM","Workpackage_DictView","CurrentWorkpackageVM","searchName","SearchName","orientation","plain","margin","DeleteView","EntFilterView","test","ItemVMs","CurrentItemVM","ElementFilterSettingDataView","ElementFilterSetting_DictView","MES_ValueSettingView","borderRadius","MassExportSettingDataView","valueSettingElems","MassExportSetting_DictView","MassCellView","TDStyle","AStyle","MassRowView","subElems","toggleButton","marginRight","scope","Style","HoverToolElement","ModalElement","j","MassTableView","thElems","tbodyElems","span","MassResultCompView","IsShowPhaseSelectVM","justifyContent","TableView","tableElem","theadElem","tbodyElem","WorkItemExportSetting_DictView","PMDataView","TestView","CellVM","OnGetValueString","ColumnVM","RowVM","GetFields","GetColumns","MassDetailTable","GetRows","parseFloat","setValueFunc","MassDetailVM","DetailTable","detailTable","MassDetailTableView","colElems","rowElems","cellElems","MassDetailView","match","params","withRouter","ProjectCompVM","projectVM","projectUtil","projectVMUtil","massResComp","setItemsFuncs","massResutlCompVMUtil","Phase_DictView","PlusCircleOutlined","RebarMass_DictView","ProjectCompView","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e5999d5.chunk.js","sourcesContent":["import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class TextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder : observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  get Content(){\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  inputStyle\r\n\r\n  style\r\n  get Style() {\r\n    if (!this.style) {\r\n      this.style = this.inputStyle ? this.inputStyle : {};\r\n\r\n      if (this.wrapper) {\r\n        this.style.position = 'relative';\r\n      }\r\n    }\r\n    return this.style;\r\n  }\r\n}","import { TextVM } from \"./TextVM\"\r\n\r\nexport const get = (q, placeholder) => {\r\n  var qI = new TextVM();\r\n  qI.content = q;\r\n  qI.placeholder = placeholder;\r\n  return qI;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\n\r\nclass InputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    var { value } = e.target;\r\n    this.state.Content = value;\r\n  }\r\n\r\n  render() {\r\n    var { content, placeholder } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Input value={content} onChange={this.onChange}\r\n          placeholder={placeholder} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(InputView)","import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nexport const API_URL = 'https://api.bimdev.vn/api';\r\n\r\n// const http = axios.create({\r\n//   baseURL: API_URL,\r\n//   Accept: 'application/json',\r\n//   'Content-Type': 'application/json',\r\n//   //timeout: 20000\r\n//   timeout: 20000000\r\n// });\r\n\r\nconst http = (timeout) => axios.create({\r\n    baseURL: API_URL,\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n    timeout\r\n  });\r\n\r\nconst handleNetworkError = (err) => {\r\n  message.error(`Error sending request: ${err}`);\r\n  return {\r\n    success: false\r\n  };\r\n}\r\n\r\nconst handleResponse = (response) => {\r\n  // Parse the axios response\r\n  const success = response.status >= 200 && response.status < 300;\r\n  const data = response.data;\r\n  let message = response.statusText;\r\n  return {\r\n    success,\r\n    data,\r\n    message\r\n  };\r\n}\r\n\r\nexport const callApi = async (action) => {\r\n  try {\r\n    const response = await action;\r\n    return handleResponse(response);\r\n  } catch (err) {\r\n    return handleNetworkError(err);\r\n  } finally { }\r\n}\r\n\r\nexport const timeout_default = 20000\r\n\r\nexport const get = async (url, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  return callApi(http(timeout).get(url, config));\r\n}\r\n\r\nexport const put = async (url, payload, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).put(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const post = async (url, payload, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).post(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const del = async (url, payload,timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).delete(url, payload));\r\n  return result;\r\n}","export const concrete = \"concrete\";\r\nexport const formwork = \"formwork\";\r\nexport const rebar = \"rebar\";\r\n\r\nexport const GetAll = () => {\r\n  return [ concrete, formwork, rebar ];\r\n}\r\n\r\nexport const IsGetElement = (massType) => {\r\n  return massType === concrete || massType === formwork;\r\n}","import * as mt from '../MassType'\r\n\r\nexport const Project = 'Project'\r\nexport const Phase = 'Phase'\r\nexport const Workpackage = 'Workpackage'\r\nexport const Value = 'Value'\r\nexport const Unit = 'Unit'\r\nexport const partition = 'partition'\r\nexport const rebarType = 'rebarType'\r\nexport const elementName = 'elementName'\r\nexport const MassType = 'MassType'\r\nexport const workItem = 'workItem'\r\nexport const level = 'level'\r\nexport const diameter = 'diameter'\r\n\r\nexport const GetAll = () => {\r\n  return [MassType, workItem, level, diameter]\r\n}\r\n\r\nexport const GetDirectiveFields = () => {\r\n  return [Project, Workpackage, Value, Unit];\r\n}\r\n\r\nexport const GetIdentifyFields = () => {\r\n  return [elementName];\r\n}\r\n\r\nexport const GetFullFields = (massItem, field) => {\r\n  switch (field) {\r\n    case Project:\r\n    case Value:\r\n    case Unit:\r\n    case MassType:\r\n      return {\r\n        fields: [field],\r\n        isFromElement: false\r\n      };\r\n    case workItem:\r\n    case elementName:\r\n    case rebarType:\r\n    case partition:\r\n    case level:\r\n    case diameter:\r\n      var massType = massItem[MassType];\r\n      if (massType === mt.rebar) {\r\n        return {\r\n          fields: ['Info', field],\r\n          isFromElement: false\r\n        };\r\n      } else {\r\n        var groupName = undefined;\r\n        // kiểm tra các phân nhóm trong Element: identify, locate ...\r\n        switch (field) {\r\n          case workItem:\r\n          case elementName:\r\n            groupName = 'identify';\r\n            break;\r\n          case level:\r\n            groupName = 'locate';\r\n            break;\r\n        }\r\n        return {\r\n          fields: ['Element', 'info', groupName, field],\r\n          isFromElement: true\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\nexport const GetValueString = (massFieldValue, field) => {\r\n  var value = undefined;\r\n\r\n  switch (field) {\r\n    case Project:\r\n    case Phase:\r\n      value = massFieldValue.Name;\r\n      break;\r\n    case Workpackage:\r\n      value = massFieldValue.FullName;\r\n      break;\r\n    default:\r\n      value = massFieldValue;\r\n      break;\r\n  }\r\n\r\n  return value ? value : 'undefined';\r\n}","\r\nexport let dtFormat = new Intl.DateTimeFormat('en-GB');\r\n\r\nexport const deepClone = (q) => {\r\n  return JSON.parse(JSON.stringify(q));\r\n}\r\n\r\nexport const randomId = () => {\r\n  // Math.random should be unique because of its seeding algorithm.\r\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n  // after the decimal.\r\n  return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nexport const newGUID = () => {\r\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n  );\r\n}\r\n\r\nexport const UpdateFromModel = (obj, action) => {\r\n  obj.M2VM = true;\r\n  action();\r\n  obj.M2VM = false;\r\n}\r\n\r\nexport const MoveItem = (list, oldIndex, newIndex) => {\r\n  if (oldIndex === -1 || newIndex === -1 || \r\n    oldIndex === newIndex) return;\r\n  var temp = list[oldIndex];\r\n  list[oldIndex] = list[newIndex];\r\n  list[newIndex] = temp;\r\n}\r\n\r\nexport const IsEqual = (list1, list2) => {\r\n  if (list1.length !== list2.length) return false;\r\n  var isValidCheck = true;\r\n  var isEqual = true;\r\n\r\n  list1.forEach((x,i) => {\r\n    if (isValidCheck && x !== list2[i]){\r\n      isValidCheck = false; isEqual = false;\r\n    }\r\n  })\r\n\r\n  return isEqual;\r\n}\r\n\r\nexport const IsSameValues = (list1, list2) => {\r\n  var isValidCheck = true;\r\n  var isSame = true;\r\n\r\n  list1.forEach((x,i) => {\r\n    if (isValidCheck && !list2.includes(x)){\r\n      isValidCheck = false; isSame = false;\r\n    }\r\n  })\r\n\r\n  return isSame;\r\n}","import * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport default class MassColumn {\r\n  _id\r\n  get id() {\r\n    if (!this._id){\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index(){\r\n    return this.Dict.Columns.indexOf(this);\r\n  }\r\n\r\n  Cells = []\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from \"antd\";\r\n\r\nclass TextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = {\r\n        content: `Nội dung`\r\n      }\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var { content } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {content}\r\n        {this.getWrapperContent()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TextView)","import * as util from './CategoryDataUtil'\r\n\r\nexport class CategoryData {\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new CategoryData();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = util.GetCategoryNames();\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n}","export const GetCategoryNames = (data) => {\r\n  return ['Floors', 'Structural Framing', 'Walls', 'Structural Columns']\r\n}","export const category = \"category\";\r\nexport const family = \"family\";\r\nexport const parameter = 'parameter'\r\n\r\nexport const GetAll = () => {\r\n  return [ category, family, parameter ];\r\n}","export const bystring = \"bystring\";\r\nexport const bynumber = \"bynumber\";\r\n\r\nexport const GetAll = () => {\r\n  return [ bystring, bynumber ];\r\n}","export const byequal = \"byequal\";\r\nexport const bycontain = \"bycontain\";\r\nexport const bynotcontain = \"bynotcontain\";\r\n\r\nexport const GetAll = () => {\r\n  return [ byequal, bycontain, bynotcontain ];\r\n}","export const byequal = \"byequal\";\r\nexport const bysmaller = \"bysmaller\";\r\nexport const bysmallerorequal = \"bysmallerorequal\";\r\nexport const bybigger = \"bybigger\";\r\nexport const bybiggerorequal = \"bybiggerorequal\";\r\nexport const bybetween = \"bybetween\";\r\n\r\nexport const GetAll = () => {\r\n  return [ byequal, bysmaller, bybigger, bybetween ];\r\n}","import { CategoryData } from \"../../single/model/CategoryData\"\r\nimport { PMData } from \"../../single/model/PMData\";\r\nimport { EntFilter } from \"./EntFilter\"\r\nimport * as fct from './FilterCategoryType'\r\nimport * as fvt from './FilterValueType'\r\nimport * as sft from './StringFilterType'\r\nimport * as nft from './NumberFilterType'\r\n\r\nexport const categoryData = () => {\r\n  return CategoryData.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, categoryType) => {\r\n  var qI = new EntFilter();\r\n  qI.ValueType = q.valueType;\r\n  qI.NumberFilterType = q.numberFilterType;\r\n  qI.StringFilterType = q.stringFilterType;\r\n  qI.Values = q.values;\r\n  qI.CategoryType = categoryType;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q) => {\r\n  if (!q) return q;\r\n  var qI = new EntFilter();\r\n  qI.ValueType = q.ValueType;\r\n  qI.NumberFilterType = q.NumberFilterType;\r\n  qI.StringFilterType = q.StringFilterType;\r\n  qI.Values = [...q.Values];\r\n  qI.CategoryType = q.CategoryType;\r\n  return qI;\r\n}\r\n\r\nexport const GetValueStorageList = (q) => {\r\n  var list = [];\r\n\r\n  switch (q.CategoryType) {\r\n    case fct.category:\r\n      list = categoryData().CategoryNames;\r\n      break;\r\n    case fct.parameter:\r\n      list = pmData().ParameterNames;\r\n      break;\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    valueType: q.ValueType,\r\n    numberFilterType: q.NumberFilterType,\r\n    stringFilterType: q.StringFilterType,\r\n    values: q.Values\r\n  }\r\n}\r\n\r\nexport const IsValid = (filter, value) => {\r\n  if (value === undefined || value === null) return false;\r\n\r\n  var isValid = false;\r\n  var filterValues = filter.Values;\r\n  switch (filter.ValueType) {\r\n    case fvt.bystring:\r\n      if (typeof value === 'string') {\r\n        var filterType = filter.StringFilterType;\r\n        switch (filterType) {\r\n          case sft.byequal:\r\n            filterValues.forEach(x => {\r\n              if (!isValid && x === value) {\r\n                isValid = true;\r\n              }\r\n            })\r\n            break;\r\n          case sft.bycontain:\r\n            var lowerVal = value.toLowerCase();\r\n            filterValues.forEach(x => {\r\n              if (!isValid && lowerVal.includes(x.toLowerCase())) {\r\n                isValid = true;\r\n              }\r\n            })\r\n            break;\r\n          case sft.bynotcontain:\r\n            var lowerVal = value.toLowerCase();\r\n            isValid = true;\r\n            filterValues.forEach(x => {\r\n              if (isValid && lowerVal.includes(x.toLowerCase())) {\r\n                isValid = false;\r\n              }\r\n            })\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    case fvt.bynumber:\r\n      if (!isNaN(value)) {\r\n        var filterType = filter.NumberFilterType;\r\n        switch (filterType) {\r\n          case nft.byequal:\r\n            return value === filterValues[0];\r\n          case nft.bysmaller:\r\n            return value < filterValues[0];\r\n          case nft.bysmallerorequal:\r\n            return value <= filterValues[0];\r\n          case nft.bybigger:\r\n            return value > filterValues[0];\r\n          case nft.bybiggerorequal:\r\n            return value >= filterValues[0];\r\n          case nft.bybetween:\r\n            var leftVal = filterValues[0];\r\n            var rightVal = filterValues[1];\r\n            return (filter.IsEqualLeft && leftVal === value) ||\r\n              leftVal < value && value < rightVal\r\n              || (filter.IsEqualRight && value === rightVal);\r\n        }\r\n      }\r\n      break;\r\n  }\r\n\r\n  L1:\r\n  return isValid;\r\n}","import * as util from './EntFilterUtil'\r\n\r\nexport class EntFilter\r\n{\r\n  ValueType\r\n  NumberFilterType\r\n  StringFilterType\r\n  IsEqualLeft\r\n  IsEqualRight\r\n\r\n  values\r\n  get Values(){\r\n    return this.values;\r\n  }\r\n  set Values(v){\r\n    this.values = v;\r\n  }\r\n\r\n  CategoryType\r\n\r\n  valueStorageList\r\n  get ValueStorageList(){\r\n    if (!this.valueStorageList){\r\n      this.valueStorageList = util.GetValueStorageList(this);\r\n    }\r\n    return this.valueStorageList;\r\n  }\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","export const byuser = 'byuser'\r\nexport const byauto = 'byauto'","import MGI_Item from \"./MGI_Item\";\r\nimport * as ct from './MGI_I_CreateType'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport const create = (mgi, createType) => {\r\n  var qI = new MGI_Item();\r\n  qI.MassGroupItem = mgi;\r\n\r\n  if (!createType) {\r\n    qI.CreateType = ct.byauto;\r\n  }else{\r\n    qI.CreateType = ct.byuser;\r\n    qI.Value = genUtil.newGUID();\r\n    qI.Title = 'Tên đầu mục';\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getFromDb = (data, mgi) => {\r\n  var qI = new MGI_Item();\r\n  qI.Value = data.value;\r\n  qI.Title = data.title;\r\n  qI.newMGI_id = data.newMGI_id;\r\n  qI.MassGroupItem = mgi;\r\n  qI.CreateType = data.createType ? data.createType : ct.byauto\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, mgi) => {\r\n  var qI = new MGI_Item();\r\n  qI.Value = q.Value;\r\n  qI.Title = q.Title;\r\n  qI.newMGI_id = q.newMGI_id;\r\n  qI.MassGroupItem = mgi;\r\n  qI.CreateType = q.CreateType;\r\n  return qI;\r\n}\r\n\r\nexport const GetNewMGI = (q) => {\r\n  var _id = q.newMGI_id;\r\n  if (!_id) return undefined;\r\n  var list = q.MassGroupItem.SupComponent.AllItems;\r\n  \r\n  var index = list.findIndex(x => x._id === _id);\r\n  return index !== -1 ? list[index] : undefined;\r\n}","import * as util from './MGI_ItemUtil'\r\n\r\nexport default class MGI_Item {\r\n  Value\r\n\r\n  get Index() {\r\n    return this.MassGroupItem.Items.indexOf(this);\r\n  }\r\n\r\n  title\r\n  get Title(){\r\n    if (!this.title){\r\n      this.title = this.Value;\r\n    }\r\n    return this.title;\r\n  }\r\n  set Title(v){\r\n    this.title = v;\r\n  }\r\n\r\n  newMGI\r\n  get NewMGI(){\r\n    if (!this.newMGI){\r\n      this.newMGI = util.GetNewMGI(this);\r\n\r\n      if (!this.newMGI && this.newMGI_id){\r\n        this.newMGI_id = undefined;\r\n      }\r\n    }\r\n    return this.newMGI;\r\n  }\r\n  set NewMGI(v){\r\n    this.newMGI = v;\r\n    if (!v || v === this.MassGroupItem){\r\n      this.newMGI_id = undefined;\r\n    }\r\n    else{\r\n      this.newMGI_id = v.id;\r\n    }\r\n  }\r\n\r\n  newMGI_id\r\n\r\n  get ApiData(){\r\n    return {\r\n      value : this.Value,\r\n      title : this.Title,\r\n      newMGI_id : this.newMGI_id,\r\n      createType : this.CreateType\r\n    }\r\n  }\r\n\r\n  Delete = () => {\r\n    this.MassGroupItem.Items.splice(this.Index, 1);\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport MGI_Item from './MGI_Item'\r\nimport * as itemUtil from './MGI_ItemUtil'\r\nimport * as mgii_ct from './MGI_I_CreateType'\r\nimport * as rowUtil from '../MassRowUtil'\r\nimport * as util from './MassGroupItemUtil'\r\n\r\nexport default class MassGroupItem {\r\n  Field\r\n  SubComponents = []\r\n  NotIncludeValues = []\r\n  IsHaveValueOrder\r\n  BindingRows\r\n  SupComponent\r\n\r\n  Items = []\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  get Index() {\r\n    return this.SupComponent.Items.indexOf(this);\r\n  }\r\n\r\n  get OrderItems() {\r\n    return this.Items;\r\n  }\r\n\r\n  get OrderValues() {\r\n    return this.Items.map(x => x.Value);\r\n  }\r\n\r\n  get ApiData() {\r\n    var items = this.Items.map(x => x.ApiData);\r\n\r\n    return {\r\n      _id: this.id,\r\n      field: this.Field,\r\n      subComponents: this.SubComponents.map(x => x.ApiData),\r\n      valueOrders: this.ValueOrders,\r\n      notIncludeValues: this.NotIncludeValues,\r\n      items\r\n    }\r\n  }\r\n\r\n  AddNotIncludeValue = (v) => {\r\n    var index = this.NotIncludeValues.indexOf(v);\r\n    if (index === -1) {\r\n      this.NotIncludeValues.push(v);\r\n    }\r\n  }\r\n\r\n  GetItem = (v, title) => {\r\n    var index = this.Items.findIndex(x => x.Value === v);\r\n    if (index === -1) {\r\n      var item = itemUtil.create(this)\r\n      item.Value = v;\r\n      item.Title = title;\r\n      this.Items.push(item);\r\n      return item;\r\n    }\r\n    return this.Items[index];\r\n  }\r\n\r\n  supRow\r\n  get SupRow() {\r\n    return this.supRow;\r\n  }\r\n  set SupRow(v) {\r\n    this.supRow = v;\r\n    if (!this.IsFirstSetSupRow) {\r\n      this.IsFirstSetSupRow = true;\r\n      this.HandleCreatedByUserRows();\r\n    }\r\n  }\r\n\r\n  OnIsFirstSetSupRow_Funcs = []\r\n\r\n  isFirstSetSupRow\r\n  get IsFirstSetSupRow() {\r\n    return this.isFirstSetSupRow;\r\n  }\r\n  set IsFirstSetSupRow(v) {\r\n    this.isFirstSetSupRow = v;\r\n    this.OnIsFirstSetSupRow_Funcs.forEach(x => x());\r\n  }\r\n\r\n  get HaveMassItemSubComponents() {\r\n    return this.SubComponents.filter(x => x.IsHaveMassItem);\r\n  }\r\n\r\n  table\r\n  get Table() {\r\n    if (!this.table) {\r\n      this.table = util.GetTable(this);\r\n    }\r\n    return this.table;\r\n  }\r\n  set Table(v) {\r\n    this.table = v;\r\n  }\r\n\r\n  HandleCreatedByUserRows = () => {\r\n    var userItems = this.Items\r\n      .filter(x => x.CreateType === mgii_ct.byuser);\r\n\r\n    userItems.forEach(x => {\r\n      var value = x.Value;\r\n\r\n      const addRow = (supRow) => {\r\n        var row = this.Table.GetRow(value, supRow);\r\n        row.FullValue = value;\r\n        row.IsCreatedByUser = true;\r\n        return row;\r\n      }\r\n\r\n      const handleRow = (row) => {\r\n        row.MassGroupItem = this;\r\n        handleNonField(row);\r\n      }\r\n\r\n      const handleNonField = (row) => {\r\n        var subMgcIndex = this.SubComponents.findIndex(y => \r\n          y.Filter.Values.includes(x.Value))\r\n        if (subMgcIndex !== -1){\r\n          var subMgi = this.SubComponents[subMgcIndex].Items[0];\r\n          subMgi.SupRow = row;\r\n        }\r\n      }\r\n\r\n      var replaceMgi = x.NewMGI;\r\n      if (replaceMgi) {\r\n        replaceMgi.GetItem(value);\r\n        this.Table.Handle_ReplaceMGI(replaceMgi, addRow, handleRow);\r\n      } else{\r\n        handleRow(addRow(this.SupRow));\r\n      }\r\n    })\r\n  }\r\n}","import * as util from './MassGroupComponentUtil'\r\n\r\nexport default class MassGroupComponent {\r\n  Filter\r\n  Items\r\n  SupItem\r\n\r\n  originComponent\r\n  get OriginComponent(){\r\n    if (!this.originComponent){\r\n      this.originComponent = util.GetOriginComponent(this);\r\n    }\r\n    return this.originComponent;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      filter : this.Filter ? this.Filter.ApiData : undefined,\r\n      items: this.Items.map(x => x.ApiData)\r\n    }\r\n  }\r\n\r\n  get AllItems(){\r\n    return this.OriginComponent.AllSubItems;\r\n  }\r\n\r\n  get AllSubItems(){\r\n    var list = [...this.Items];\r\n    this.Items.forEach(x => \r\n      x.SubComponents.forEach(y => list.push.apply(list, y.AllSubItems)));\r\n    return list;\r\n  }\r\n}","import MassGroupComponent from \"./MassGroupComponent\"\r\nimport * as filterUtil from '../../../filter/EntFilterUtil'\r\nimport * as itemUtil from './MassGroupItemUtil'\r\nimport { PMData } from \"../../../../single/model/PMData\"\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (data, supItem) => {\r\n  var qI = new MassGroupComponent();\r\n\r\n  qI.Filter = data.filter ? filterUtil.get(data.filter) : undefined;\r\n\r\n  qI.Items = data.items.map(x => itemUtil.getFromDb(x, qI));\r\n  qI.SupItem = supItem;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, supItem) => {\r\n  if (!q) return q;\r\n  var qI = new MassGroupComponent();\r\n  qI.Filter = filterUtil.Clone(q.Filter);\r\n\r\n  qI.Items = q.Items.map(x => itemUtil.Clone(x, qI));\r\n  qI.SupItem = supItem;\r\n  return qI;\r\n}\r\n\r\nexport const GetOriginComponent = (q) => {\r\n  return q.SupItem ? q.SupItem.SupComponent.OriginComponent : q;\r\n}","import MassGroupItem from \"./MassGroupItem\"\r\nimport * as compUtil from './MassGroupComponentUtil'\r\nimport * as itemUtil from './MGI_ItemUtil'\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (field, subComps, supCom) => {\r\n  var qI = new MassGroupItem();\r\n  qI.Field = field;\r\n  qI.SupComponent = supCom;\r\n  if (subComps) {\r\n    qI.SubComponents = subComps;\r\n  }\r\n  return qI;\r\n}\r\n\r\nexport const getFromDb = (data, supCom) => {\r\n  var qI = new MassGroupItem();\r\n  qI._id = data._id;\r\n  qI.Field = data.field;\r\n  qI.SupComponent = supCom;\r\n  qI.SubComponents = data.subComponents ? data.subComponents.map(x => compUtil.get(x, qI))\r\n    : [];\r\n\r\n  if (data.items) {\r\n    qI.Items = data.items.map(x => itemUtil.getFromDb(x, qI))\r\n      .filter(x => x.Value);\r\n    qI.IsHaveValueOrder = true;\r\n  } else {\r\n    qI.Items = []\r\n    qI.IsHaveValueOrder = false;\r\n  }\r\n\r\n  qI.NotIncludeValues = data.notIncludeValues ? data.notIncludeValues : [];\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, supCom) => {\r\n  if (!q) return q;\r\n  var qI = new MassGroupItem();\r\n  qI.id = q.id;\r\n  qI.Field = q.Field;\r\n  qI.Items = q.Items.map(x => itemUtil.Clone(x, qI));\r\n  qI.NotIncludeValues = [...q.NotIncludeValues];\r\n  qI.IsHaveValueOrder = q.IsHaveValueOrder;\r\n  qI.SupComponent = supCom;\r\n  qI.SubComponents = q.SubComponents.map(x => compUtil.Clone(x, qI));\r\n  return qI;\r\n}\r\n\r\nexport const GetTable = (q) => {\r\n  return q.SupComponent.SupItem.Table;\r\n}","import { MultiSelectVM } from \"./MultiSelectVM\";\r\n\r\nexport const get = (items, initialItems) => {\r\n  var qI = new MultiSelectVM();\r\n  qI.Items = items;\r\n  qI.InitialItems = initialItems;\r\n  return qI;\r\n}\r\n\r\nexport const GetTitleRender = (q) => {\r\n  return (item) => item.DisplayContent ? item.DisplayContent : `${item}`;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MultiSelectVMUtil'\r\n\r\nexport class MultiSelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      selectedIndexs: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  initialItems;\r\n  get InitialItems() {\r\n    return this.initialItems;\r\n  }\r\n  set InitialItems(v){\r\n    this.initialItems = v;\r\n    this.InitialIndexs = this.GetInitialIndexs();\r\n    this.SelectedIndexs = this.InitialIndexs;\r\n  }\r\n\r\n  initialIndexs;\r\n  get InitialIndexs() {\r\n    if (!this.initialIndexs) {\r\n      this.initialIndexs = this.GetInitialIndexs();\r\n    }\r\n    return this.initialIndexs;\r\n  }\r\n  set InitialIndexs(v){\r\n    this.initialIndexs = v;\r\n  }\r\n\r\n  GetInitialIndexs =() => {\r\n    var initialItems = this.InitialItems;\r\n    if (!initialItems) return [];\r\n    return initialItems.map(x => this.Items.indexOf(x)).filter(x => x !== -1);\r\n  }\r\n\r\n  selectedIndexs = []\r\n  get SelectedIndexs() {\r\n    return this.selectedIndexs;\r\n  }\r\n  set SelectedIndexs(v) {\r\n    this.selectedIndexs = v;\r\n    this.SelectedItems = this.GetSelectedItems();\r\n  }\r\n\r\n  selectedItems\r\n  get SelectedItems() {\r\n    if (!this.selectedItems) {\r\n      this.selectedItems = this.GetSelectedItems();\r\n    }\r\n    return this.selectedItems;\r\n  }\r\n  set SelectedItems(v) {\r\n    this.selectedItems = v;\r\n    if (this.OnSelectedItemChanged) {\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  GetSelectedItems = () => {\r\n    return this.SelectedIndexs.map(x => this.Items[x]);\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder() {\r\n    if (!this.placeholder) {\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender){\r\n      this.titleRender = util.GetTitleRender(this);\r\n    }\r\n    return this.titleRender;\r\n  }\r\n  set TitleRender (v){\r\n    this.titleRender = v;\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { MultiSelectVM } from \"./MultiSelectVM\";\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nconst { Option } = Select;\r\n\r\nclass MultiSelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MultiSelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndexs = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var style = this.props.style ? this.props.style : { width: '100%' }; \r\n    var { Placeholder, Items, SelectedIndexs, InitialIndexs } = data;\r\n\r\n    if (SelectedIndexs.length === 0) {\r\n      SelectedIndexs = InitialIndexs;\r\n      data.InitialIndexs = [];\r\n    }\r\n\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = data.TitleRender(item);\r\n\r\n      var id = undefined;\r\n      if (item === undefined){\r\n        id = genUtil.randomId();\r\n      }else if (typeof item === 'string' || !isNaN(item)) {\r\n        id = item;\r\n      } else {\r\n        id = item._id ? item._id : item.id;\r\n      }\r\n      return <Option key={id} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    return (\r\n      <>\r\n        <Select style={style}\r\n          mode=\"multiple\"\r\n          placeholder={Placeholder}\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={SelectedIndexs}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MultiSelectView)","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class EntHoverVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsElementVisible: observable,\r\n    })\r\n  }\r\n\r\n  IsElementVisible = false;\r\n\r\n  ShowElement = () => {\r\n    this.IsElementVisible =  true;\r\n  }\r\n\r\n  HideElement = () => {\r\n    this.IsElementVisible =  false;\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport EntHoverVM from \"./EntHoverVM\";\r\n\r\nclass EntHoverView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntHoverVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    if (!data.style) {\r\n      var style = this.props.style ? this.props.style : {};\r\n      if (!style.minWidth) {\r\n        style.minWidth = 150;\r\n      }\r\n      data.style = style;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div onMouseEnter={data.ShowElement} style={data.style}\r\n          onMouseLeave={data.HideElement}>\r\n          {data.IsElementVisible ? data.Element : ''}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EntHoverView)","import { SelectVM } from \"./SelectVM\";\r\n\r\nexport const get = (items, initialItem) => {\r\n  var qI = new SelectVM();\r\n  qI.Items = items;\r\n  qI.InitialItem = initialItem;\r\n  return qI;\r\n}\r\n\r\nexport const GetTitleRender = (q) => {\r\n  return (item) => item.DisplayContent ? item.DisplayContent : `${item}`;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './SelectVMUtil'\r\n\r\nexport class SelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable,\r\n      selectedIndex : observable,\r\n      CanClear :observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = [];\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n  }\r\n\r\n  initialItem = undefined\r\n  get InitialItem() {\r\n    return this.initialItem;\r\n  }\r\n  set InitialItem(v){\r\n    this.initialItem = v;\r\n    this.InitialIndex = this.GetInitialIndex();\r\n    this.SelectedIndex = this.InitialIndex;\r\n  }\r\n\r\n  initialIndex\r\n  get InitialIndex(){\r\n    if (!this.initialIndex){\r\n      this.initialIndex = this.GetInitialIndex();\r\n    }\r\n    return this.initialIndex;\r\n  }\r\n  set InitialIndex(v){\r\n    this.initialIndex = v;\r\n  }\r\n\r\n  GetInitialIndex = () => {\r\n    var index = this.Items.indexOf(this.InitialItem);\r\n    return index !== -1 ? index : null;\r\n  }\r\n\r\n  selectedIndex = undefined\r\n  get SelectedIndex(){\r\n    return this.selectedIndex;\r\n  }\r\n  set SelectedIndex(v){\r\n    this.selectedIndex = v;\r\n    this.SelectedItem = this.GetSelectedItem();\r\n  }\r\n\r\n  selectedItem\r\n  get SelectedItem (){\r\n    if (!this.selectedItem){\r\n      this.selectedItem = this.GetSelectedItem();\r\n    }\r\n    return this.selectedItem;\r\n  }\r\n  set SelectedItem (v) {\r\n    this.selectedItem = v;\r\n    if (this.OnSelectedItemChanged){\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  GetSelectedItem = () => {\r\n    var index = this.SelectedIndex;\r\n    if (index === -1) return undefined;\r\n    return this.Items[index];\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder(){\r\n    if (!this.placeholder){\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v){\r\n    this.placeholder = v;\r\n  }\r\n\r\n  CanClear = false\r\n\r\n  Clear = () => {\r\n    this.SelectedIndex = null\r\n  }\r\n  \r\n  get DivStyle() {\r\n    return this.CanClear ? { \r\n      position: 'relative', \r\n      padding: '0 22px 0 0' \r\n    } : {};\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender){\r\n      this.titleRender = util.GetTitleRender(this);\r\n    }\r\n    return this.titleRender;\r\n  }\r\n  set TitleRender (v){\r\n    this.titleRender = v;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class FloatItemVM {\r\n  location\r\n\r\n  className\r\n  getClassName = () => {\r\n    if (!this.className){\r\n      this.className = `float ${this.location}`;\r\n    }\r\n    return this.className\r\n  }\r\n}","import FloatItemVM from \"./FloatItemVM\";\r\n\r\nexport const get = (loc) => {\r\n  var qI = new FloatItemVM();\r\n  qI.location = loc;\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport * as floatItemVMUtil from './FloatItemVMUtil'\r\n\r\nclass FloatItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = floatItemVMUtil.get('top right', 'Test')\r\n    }else{\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <span className={data.getClassName()}>{this.getWrapperContent()}</span>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FloatItemView);\r\n","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { SelectVM } from \"./SelectVM\";\r\nimport * as floatItemVMUtil from '../float/FloatItemVMUtil'\r\nimport FloatItemView from \"../float/FloatItemView\";\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new SelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var style = this.props.style ? this.props.style : { width: '100%' }; \r\n    var { Placeholder, Items, SelectedIndex, InitialIndex } = data;\r\n\r\n    if (SelectedIndex === -1) {\r\n      SelectedIndex = InitialIndex;\r\n      data.InitialIndex = -1;\r\n    }\r\n\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = data.TitleRender(item);\r\n\r\n      var id = undefined;\r\n      if (item === undefined){\r\n        id = genUtil.randomId();\r\n      }else if (typeof item === 'string' || !isNaN(item)) {\r\n        id = item;\r\n      } else {\r\n        id = item._id ? item._id : item.id;\r\n      }\r\n      return <Option key={id} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    var floatElem = ''\r\n    if (data.CanClear) {\r\n      var floatItemStore = floatItemVMUtil.get('right')\r\n      floatItemStore.wrapper = <Button size='small' type='primary'\r\n        onClick={data.Clear}>x</Button>\r\n\r\n      floatElem = <FloatItemView store={floatItemStore} />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div style={data.DivStyle}>\r\n          {floatElem}\r\n          <Select style={style}\r\n            showSearch\r\n            placeholder={Placeholder}\r\n            optionFilterProp=\"children\"\r\n            onChange={this.onValueChange}\r\n            value={SelectedIndex}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {elems}\r\n          </Select>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(SelectView)","export const inside = 'inside'\r\nexport const lower = 'lower'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ReplaceRowLocationFactoryUtil'\r\nimport { PMData } from '../../../../single/model/PMData';\r\nimport * as lt from './RRLF_LocationType'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance\r\n}\r\n\r\nexport default class ReplaceRowLocationFactory {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Location: observable,\r\n    })\r\n  }\r\n\r\n  ReferenceRow\r\n  Location = lt.inside\r\n\r\n  get Color(){\r\n    return util.GetColor(this);\r\n  }\r\n\r\n  get ButtonStyle(){\r\n    return {\r\n      width: 50,\r\n      backgroundColor: this.Color,\r\n      border: 'none'\r\n    };\r\n  }\r\n\r\n  ToggleLocation = () =>{\r\n    switch (this.Location) {\r\n      case lt.inside:\r\n        this.Location = lt.lower;\r\n        break;\r\n      case lt.lower:\r\n        this.Location = lt.inside;\r\n        break;\r\n    }\r\n  }\r\n}","import * as lt from './RRLF_LocationType'\r\n\r\nexport const GetColor = (v) => {\r\n  switch (v.Location) {\r\n    case lt.inside:\r\n      return \"#52c41a\";\r\n    case lt.lower:\r\n      return \"#faad14\";\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport TextView from '../../../../text/TextView';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil';\r\nimport * as util from './MassRowUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { EntFilter } from '../../filter/EntFilter';\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as mgiUtil from './rowgroup/MassGroupItemUtil'\r\nimport MassGroupComponent from './rowgroup/MassGroupComponent';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport MultiSelectView from '../../../../select/MultiSelectView';\r\nimport { Col, Row, Space, Button } from 'antd';\r\nimport EntHoverVM from '../../../../hover/EntHoverVM';\r\nimport EntHoverView from '../../../../hover/EntHoverView';\r\nimport { DownCircleOutlined, EnterOutlined, UpCircleOutlined } from '@ant-design/icons';\r\nimport SelectView from '../../../../select/SelectView';\r\nimport ReplaceRowLocationFactory from './location/ReplaceRowLocationFactory';\r\nimport * as rrlf_lt from './location/RRLF_LocationType';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport InputView from '../../../../input/InputView';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n\r\nexport default class MassRow {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      rank: observable,\r\n      isShowSub: observable,\r\n      isHaveSub: observable,\r\n      IsToolVisible: observable,\r\n      SubItems: observable,\r\n      IsModalVisible: observable,\r\n      title: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this);\r\n  }\r\n\r\n  supItem\r\n  get SupItem() {\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v) {\r\n    this.supItem = v;\r\n    this.CurrentList = undefined;\r\n    this.Rank = undefined;\r\n  }\r\n\r\n  currentList\r\n  get CurrentList() {\r\n    if (!this.currentList) {\r\n      this.currentList = this.SupItem ? this.SupItem.SubItems : this.Table.MainRows;\r\n    }\r\n    return this.currentList;\r\n  }\r\n  set CurrentList(v) {\r\n    this.currentList = v;\r\n  }\r\n\r\n  get Table() {\r\n    return this.Dict;\r\n  }\r\n\r\n  SubItems = []\r\n\r\n  get AllItems() {\r\n    var list = [];\r\n    list.push(this);\r\n    this.SubItems.forEach(x => {\r\n      list.push.apply(list, x.AllItems)\r\n    });\r\n    return list;\r\n  }\r\n\r\n  Cells = []\r\n\r\n  get Items() {\r\n    return this.Cells.reduce((a, b) => a.concat(b.Items), []);\r\n  }\r\n\r\n  massGroupItem\r\n  get MassGroupItem() {\r\n    return this.massGroupItem;\r\n  }\r\n  set MassGroupItem(v) {\r\n    this.massGroupItem = v;\r\n    if (v) {\r\n      this.Title = v.GetItem(this.FullValue).Title;\r\n    }\r\n  }\r\n\r\n  ReplaceMGI\r\n\r\n  get OrderMGI() {\r\n    return this.ReplaceMGI ? this.ReplaceMGI : this.MassGroupItem;\r\n  }\r\n\r\n  subMassGroupItem\r\n  get SubMassGroupItem() {\r\n    if (!this.subMassGroupItem) {\r\n      this.subMassGroupItem = util.GetSubMassGroupItem(this);\r\n    }\r\n    return this.subMassGroupItem\r\n  }\r\n  set SubMassGroupItem(v) {\r\n    this.subMassGroupItem = v;\r\n  }\r\n\r\n  subFields\r\n  get SubFields() {\r\n    if (!this.subFields) {\r\n      this.subFields = util.GetSubFields(this);\r\n    }\r\n    return this.subFields;\r\n  }\r\n  set SubFields(v) {\r\n    this.subFields = v;\r\n  }\r\n\r\n  TempSubFields\r\n\r\n  isShowSub = true\r\n  get IsShowSub() {\r\n    return this.isShowSub;\r\n  }\r\n  set IsShowSub(v) {\r\n    this.isShowSub = v;\r\n    this.ToggleButtonContentVM.Content = util.GetToggleButtonContent(this);\r\n  }\r\n\r\n  toggleButtonContent\r\n  get ToggleButtonContent() {\r\n    if (!this.toggleButtonContent) {\r\n      this.toggleButtonContent = util.GetToggleButtonContent(this);\r\n    }\r\n    return this.toggleButtonContent;\r\n  }\r\n  set ToggleButtonContent(v) {\r\n    this.toggleButtonContent = v;\r\n  }\r\n\r\n  toggleButtonContentVM\r\n  get ToggleButtonContentVM() {\r\n    if (!this.toggleButtonContentVM) {\r\n      var obj = this.toggleButtonContentVM = textVMUtil.get(this.ToggleButtonContent);\r\n      obj.OnSetContent = (v) => this.ToggleButtonContent = v;\r\n    }\r\n    return this.toggleButtonContentVM;\r\n  }\r\n\r\n  rank = undefined\r\n  get Rank() {\r\n    if (this.rank === undefined) {\r\n      this.rank = util.GetRank(this);\r\n    }\r\n    return this.rank;\r\n  }\r\n  set Rank(v) {\r\n    this.rank = v;\r\n    this.SubItems.forEach(x => x.Rank = undefined);\r\n  }\r\n\r\n  isHaveSub = undefined\r\n  get IsHaveSub() {\r\n    if (!this.isHaveSub) {\r\n      this.isHaveSub = util.GetIsHaveSub(this);\r\n    }\r\n    return this.isHaveSub;\r\n  }\r\n  set IsHaveSub(v) {\r\n    this.isHaveSub = v;\r\n  }\r\n\r\n  get Style() {\r\n    return util.GetStyle(this);\r\n  }\r\n\r\n  IsToolVisible = false\r\n\r\n  subFieldSelectVM\r\n  get SubFieldSelectVM() {\r\n    if (!this.subFieldSelectVM) {\r\n      this.subFieldSelectVM = util.GetSubFieldSelectVM(this);\r\n    }\r\n    return this.subFieldSelectVM;\r\n  }\r\n\r\n  title = undefined\r\n  get Title() {\r\n    if (!this.title) {\r\n      this.title = util.GetTitle(this);\r\n    }\r\n    return this.title;\r\n  }\r\n  set Title(v) {\r\n    this.title = v;\r\n  }\r\n\r\n  get LocationStorageList() {\r\n    return this.Table.AllRows;\r\n  }\r\n\r\n  locationSelectVM\r\n  get LocationSelectVM() {\r\n    if (!this.locationSelectVM) {\r\n      this.locationSelectVM = util.GetLocationSelectVM(this);\r\n    }\r\n    return this.locationSelectVM;\r\n  }\r\n\r\n  titleVM\r\n  get TitleVM(){\r\n    if (!this.titleVM){\r\n      this.titleVM = textVMUtil.get(undefined, 'tiêu đề');\r\n    }\r\n    return this.titleVM;\r\n  }\r\n\r\n  // get FullValue() {\r\n  //   return this.SupItem ? `${this.SupItem.FullValue}__${this.Name}` :\r\n  //     this.Name;\r\n  // }\r\n\r\n  GetCellByColumn = (col) => {\r\n    var index = this.Cells.findIndex(x => x.Column === col);\r\n    return index !== -1 ? this.Cells[index] : undefined;\r\n  }\r\n\r\n  UpdateData = () => {\r\n    this.Rank = util.GetRank(this);\r\n    this.IsHaveSub = util.GetIsHaveSub(this);\r\n\r\n    this.SubItems = util.Order(this.SubItems);\r\n    this.SubItems.forEach(x => x.UpdateData());\r\n  }\r\n\r\n  ToggleSub = () => {\r\n    this.IsShowSub = !this.IsShowSub;\r\n  }\r\n\r\n  SetSubFields = () => {\r\n    var tempSubFields = this.TempSubFields ? this.TempSubFields : [];\r\n\r\n    var isSame = true;\r\n    if (this.SubFields.length !== tempSubFields.length) {\r\n      isSame = false;\r\n    } else {\r\n      this.SubFields.forEach((x, i) => {\r\n        if (isSame && x !== tempSubFields[i]) {\r\n          isSame = false;\r\n        }\r\n      })\r\n    }\r\n    if (isSame) return;\r\n    this.SubFields = tempSubFields;\r\n\r\n    var filter = new EntFilter();\r\n    filter.ValueType = fvt.bystring;\r\n    filter.StringFilterType = sft.byequal;\r\n    filter.Values = [this.FullValue];\r\n\r\n    var supMgi = this.MassGroupItem;\r\n\r\n    var mgc = new MassGroupComponent();\r\n    mgc.SubItem = supMgi;\r\n    mgc.Filter = filter;\r\n\r\n    var subMgis = mgc.Items = tempSubFields.map(x => mgiUtil.get(x, null, mgc));\r\n\r\n    var subComps = supMgi.SubComponents;\r\n    if (this.SubMassGroupComponent) {\r\n      var index = subComps.indexOf(this.SubMassGroupComponent);\r\n      subComps[index] = mgc;\r\n    } else {\r\n      subComps.push(mgc);\r\n    }\r\n\r\n    this.SubMassGroupComponent = mgc;\r\n    this.SubItems = [];\r\n    this.SubMassGroupItem = undefined;\r\n\r\n    if (subMgis.length !== 0) {\r\n      var table = this.Table;\r\n      this.Items.forEach(x => {\r\n        table.HandleItem(x, x.GetValue(table.ColumnField), mgc, this);\r\n      })\r\n    }\r\n  }\r\n\r\n  MoveUp = () => {\r\n    var list = this.CurrentList;\r\n    var index = this.Index;\r\n    if (0 === index) return;\r\n\r\n    var orderItems = this.OrderMGI.OrderItems;\r\n    var orderValues = this.OrderMGI.OrderValues;\r\n    var mgiIndex1 = orderValues.indexOf(list[index].FullValue);\r\n    var mgiIndex2 = orderValues.indexOf(list[index - 1].FullValue);\r\n\r\n    genUtil.MoveItem(list, index, index - 1);\r\n    genUtil.MoveItem(orderItems, mgiIndex1, mgiIndex2);\r\n  }\r\n\r\n  MoveDown = () => {\r\n    var list = this.CurrentList;\r\n    var index = this.Index;\r\n    if (list.length - 1 === index) return;\r\n\r\n    var orderItems = this.OrderMGI.OrderItems;\r\n    var orderValues = this.OrderMGI.OrderValues;\r\n    var mgiIndex1 = orderValues.indexOf(list[index].FullValue);\r\n    var mgiIndex2 = orderValues.indexOf(list[index + 1].FullValue);\r\n\r\n    genUtil.MoveItem(list, index, index + 1);\r\n    genUtil.MoveItem(orderItems, mgiIndex1, mgiIndex2);\r\n  }\r\n\r\n  AddSub = () => {\r\n    util.Add(this, this.Table);\r\n  }\r\n\r\n  Delete = () => {\r\n    var supItem = this.SupItem;\r\n    var list = this.CurrentList;\r\n\r\n    if (this.IsCreatedByUser) {\r\n      this.MassGroupItem.GetItem(this.FullValue).Delete();\r\n    } else {\r\n      this.MassGroupItem.AddNotIncludeValue(this.FullValue);\r\n    }\r\n\r\n    list.splice(this.Index, 1);\r\n\r\n    if (supItem) {\r\n      supItem.Cells.forEach(x => {\r\n        x.SubCells = x.GetSubCells();\r\n\r\n        var totalValues = x.SubCells ?\r\n          x.SubCells.map(x => x.TotalValue).filter(x => x) : [];\r\n        x.TotalValue = totalValues.reduce((a, b) => a + b, 0);\r\n\r\n        x.ContentVM.Content = x.ValueString;\r\n      })\r\n    }\r\n  }\r\n\r\n  replaceFactory\r\n  get ReplaceFactory() {\r\n    if (!this.replaceFactory) {\r\n      this.replaceFactory = new ReplaceRowLocationFactory();\r\n    }\r\n    return this.replaceFactory;\r\n  }\r\n\r\n  ReplaceOK = () => {\r\n    var factory = this.ReplaceFactory;\r\n    var refRow = factory.ReferenceRow;\r\n\r\n    if (!refRow) return;\r\n\r\n    var loc = factory.Location;\r\n    if ((refRow === this && loc === rrlf_lt.lower) ||\r\n      (refRow === this.SupItem && loc === rrlf_lt.inside)) {\r\n      return\r\n    }\r\n\r\n    this.Replace(refRow, loc);\r\n\r\n    factory.Location = rrlf_lt.inside;\r\n  }\r\n\r\n  Replace = (refRow, loc) => {\r\n    // Save data\r\n    var oldMgi = this.MassGroupItem;\r\n    var supRow = undefined;\r\n    var newMgi = undefined;\r\n\r\n    switch (loc) {\r\n      case rrlf_lt.inside:\r\n        supRow = refRow;\r\n        break;\r\n      case rrlf_lt.lower:\r\n        supRow = refRow.SupItem;\r\n        break;\r\n    }\r\n\r\n    //var newMgi = supRow ? supRow.SubMassGroupItem : this.Table.MainMGI;\r\n    var newMgi = supRow ?\r\n      (supRow.SubMassGroupItem ? supRow.SubMassGroupItem :\r\n        util.CreateSubMassGroupItem(supRow))\r\n      : this.Table.MainMGI;\r\n    oldMgi.GetItem(this.FullValue).NewMGI = newMgi;\r\n\r\n    this.ReplaceMGI = newMgi;\r\n    this.CurrentList.splice(this.Index, 1);\r\n\r\n    this.SupItem = supRow;\r\n    var list = this.CurrentList;\r\n    list.push(this);\r\n\r\n    this.IsShowSubFieldSelect = false;\r\n  }\r\n\r\n  IsModalVisible = false\r\n\r\n  OpenModal = () => {\r\n    this.IsModalVisible = true\r\n\r\n    this.TitleVM.Content = this.Title;\r\n\r\n    var subFieldSelectVM = this.SubFieldSelectVM;\r\n    subFieldSelectVM.InitialItems = this.SubFields;\r\n\r\n    var locSelectVM = this.LocationSelectVM;\r\n    locSelectVM.Items = this.LocationStorageList\r\n    locSelectVM.InitialItem = undefined;\r\n  }\r\n\r\n  ModalOK = () => {\r\n    this.IsModalVisible = false;\r\n    this.SetSubFields();\r\n    this.ReplaceOK();\r\n\r\n    var title = this.TitleVM.Content;\r\n    this.Title = title;\r\n    this.MassGroupItem.GetItem(this.FullValue).Title = title;\r\n  }\r\n\r\n  ModalCancel = () => {\r\n    this.IsModalVisible = false;\r\n  }\r\n\r\n  get ModalElement() {\r\n    var factory = this.ReplaceFactory;\r\n\r\n    return <Modal title={this.Title} visible={this.IsModalVisible}\r\n      onOk={this.ModalOK} onCancel={this.ModalCancel}>\r\n        <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex=\"165px\">\r\n          <b> Tiêu đề:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <InputView store={this.TitleVM} />\r\n        </Col>\r\n      </Row>\r\n\r\n      {!this.IsCreatedByUser ? <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex=\"165px\">\r\n          <b> Thiết lập phân nhóm:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <MultiSelectView store={this.SubFieldSelectVM} />\r\n        </Col>\r\n      </Row> : ''}\r\n\r\n      <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex=\"165px\">\r\n          <b> Đổi vị trí:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <Row>\r\n            <Col flex='auto'>\r\n              <SelectView store={this.LocationSelectVM} />\r\n            </Col>\r\n            <Col>\r\n              <Button type='primary' size='small'\r\n                style={factory.ButtonStyle} onClick={factory.ToggleLocation}\r\n              >{factory.Location}</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Modal>\r\n  }\r\n\r\n  get HoverToolElement() {\r\n    var obj = new EntHoverVM();\r\n    obj.Element = this.ToolElement;\r\n    return <EntHoverView store={obj} style={{ display: 'flex', marginLeft: 20 }} />\r\n  }\r\n\r\n  get ToolElement() {\r\n    return <>\r\n      <Button size='small' type='primary'\r\n        style={{ backgroundColor: '#52c41a', border: 'none' }}\r\n        onClick={this.MoveUp}>\r\n        <UpCircleOutlined />\r\n      </Button>\r\n      <Button size='small' type='primary'\r\n        style={{ backgroundColor: '#52c41a', border: 'none' }}\r\n        onClick={this.MoveDown}>\r\n        <DownCircleOutlined />\r\n      </Button>\r\n\r\n      <Button type='primary' size='small'\r\n        style={{ backgroundColor: '#faad14', border: 'none' }}\r\n        onClick={this.OpenModal}>...</Button>\r\n\r\n      <Button size='small' type='primary'\r\n        style={{ backgroundColor: '#52c41a', border: 'none' }}\r\n        onClick={this.AddSub}>+</Button>\r\n      <Button type='primary' size='small' danger\r\n        onClick={this.Delete}>x</Button>\r\n    </>\r\n  }\r\n}","import { PMData } from \"../../../single/model/PMData\";\r\nimport MassRow from \"./MassRow\";\r\nimport * as multiSelectUtil from '../../../../select/MultiSelectVMUtil';\r\nimport * as selectUtil from '../../../../select/SelectVMUtil';\r\nimport * as rrlf_lt from './location/RRLF_LocationType';\r\nimport * as mgiUtil from './rowgroup/MassGroupItemUtil'\r\nimport * as mgi_iUtil from './rowgroup/MGI_ItemUtil'\r\nimport * as mgii_ct from './rowgroup/MGI_I_CreateType'\r\nimport * as genUtil from '../../../../../util/generalUtil';\r\nimport { EntFilter } from \"../../filter/EntFilter\";\r\nimport MassGroupComponent from \"./rowgroup/MassGroupComponent\";\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassRow();\r\n  qI.Name = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetRank = (q) => {\r\n  return q.SupItem ? q.SupItem.Rank + 1 : 0;\r\n}\r\n\r\nexport const GetStyle = (q) => {\r\n  return {\r\n    display: 'flex',\r\n    marginLeft: q.Rank * 20\r\n  }\r\n}\r\n\r\nexport const GetIsHaveSub = (q) => {\r\n  return q.SubItems.length !== 0;\r\n}\r\n\r\nexport const GetToggleButtonContent = (q) => {\r\n  return q.IsShowSub ? '-' : '+';\r\n}\r\n\r\nexport const GetSubFieldSelectVM = (q) => {\r\n  var storageList = pmData().MassItemFields;\r\n  var obj = multiSelectUtil.get(storageList, undefined);\r\n  obj.Placeholder = 'chọn phân nhóm'\r\n  obj.OnSelectedItemChanged = (v) => q.TempSubFields = v;\r\n  return obj;\r\n}\r\n\r\nexport const Order = (list) => {\r\n  if (list.length === 0) return list;\r\n\r\n  var firstRow = list[0]\r\n  var mgi = firstRow.OrderMGI;\r\n  if (!mgi.IsHaveValueOrder) return list;\r\n\r\n  var orderValues = mgi.OrderValues;\r\n  return list.sort((a, b) => {\r\n    return orderValues.indexOf(a.FullValue) - orderValues.indexOf(b.FullValue);\r\n  });\r\n}\r\n\r\nexport const GetTitle = (q) => {\r\n  return q.Name;\r\n}\r\n\r\nexport const GetLocationSelectVM = (q) => {\r\n  var obj = selectUtil.get([], undefined);\r\n  obj.Placeholder = 'chọn vị trí'\r\n  obj.TitleRender = (item) => {\r\n    var marginLeft = item.Rank * 15;\r\n    return <div\r\n      style={{ marginLeft }}>\r\n      {item.Title}\r\n    </div>\r\n  }\r\n  obj.OnSelectedItemChanged = (v) => {\r\n    var factory = q.ReplaceFactory;\r\n    factory.ReferenceRow = v;\r\n  }\r\n  return obj;\r\n}\r\n\r\nexport const GetSubMassGroupItem = (q) => {\r\n  var subItems = q.SubItems;\r\n  if (subItems.length === 0) return undefined;\r\n  return subItems[0].MassGroupItem;\r\n}\r\n\r\nexport const GetSubFields = (q) => {\r\n  var subMGI = q.SubMassGroupItem;\r\n  if (!subMGI) return [];\r\n  var mgis = subMGI.SupComponent.Items;\r\n\r\n  var lastValidIndex = -1;\r\n  var isValidHandle = true\r\n  mgis.forEach((x, i) => {\r\n    if (isValidHandle && x.HaveMassItemSubComponents.length === 0) {\r\n      lastValidIndex = i;\r\n    } else {\r\n      isValidHandle = false;\r\n    }\r\n  })\r\n\r\n  var currentIndex = mgis.indexOf(q.MassGroupItem);\r\n  if (lastValidIndex === -1) return [subMGI.Field];\r\n  var fields = mgis.filter((x, i) =>\r\n    (currentIndex === -1 || currentIndex < i) &&\r\n    i <= lastValidIndex)\r\n    .map(x => x.Field);\r\n  return fields;\r\n}\r\n\r\nexport const CreateSubMassGroupItem = (q) => {\r\n  var filter = new EntFilter();\r\n  filter.ValueType = fvt.bystring;\r\n  filter.StringFilterType = sft.byequal;\r\n  filter.Values = [q.FullValue];\r\n\r\n  var supMgi = q.MassGroupItem;\r\n\r\n  var mgc = undefined;\r\n  var mgcIndex = supMgi.SubComponents\r\n    .findIndex(x => genUtil.IsSameValues(x.Filter.Values, filter.Values));\r\n\r\n  if (mgcIndex !== -1){\r\n    mgc = supMgi.SubComponents[mgcIndex]\r\n  } else {\r\n    mgc = new MassGroupComponent();\r\n    mgc.SubItem = supMgi;\r\n    mgc.Filter = filter;\r\n    supMgi.SubComponents.push(mgc);\r\n  }\r\n\r\n  var mgi = mgiUtil.get(null, null, mgc);\r\n  mgc.Items = [mgi];\r\n\r\n  q.SubMassGroupItem = mgi;\r\n  return mgi;\r\n}\r\n\r\nexport const Add = (supRow, table) => {\r\n  var mgi = supRow ?\r\n    (supRow.SubMassGroupItem ? supRow.SubMassGroupItem :\r\n      CreateSubMassGroupItem(supRow))\r\n    : table.MainMGI;\r\n\r\n  var mgi_I = mgi_iUtil.create(mgi, mgii_ct.byuser);\r\n  mgi.Items.push(mgi_I);\r\n\r\n  var row = get(mgi_I.Value, table);\r\n  row.FullValue = mgi_I.Value;\r\n  row.IsCreatedByUser = true;\r\n  row.MassGroupItem = mgi;\r\n\r\n  row.SupItem = supRow;\r\n  row.CurrentList.push(row);\r\n  return row;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil'\r\nimport * as api from '../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as mif from '../item/MassItemField'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as util from './MassCellUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassCell {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueColor: observable,\r\n      tdBgColor: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get ColumnIndex() {\r\n    return this.Column.Index;\r\n  }\r\n\r\n  items = []\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  unit\r\n  get Unit() {\r\n    if (!this.unit) {\r\n      this.unit = this.GetUnit();\r\n    }\r\n    return this.unit;\r\n  }\r\n  set Unit(v) {\r\n    this.unit = v;\r\n  }\r\n\r\n  GetUnit = () => {\r\n    if (this.SubCells) {\r\n      var unit = undefined;\r\n      this.SubCells.forEach(x => {\r\n        if (x.Unit) {\r\n          unit = x.Unit;\r\n        }\r\n      })\r\n      return unit;\r\n    }\r\n    return this.Items && this.Items.length !== 0 ? this.Items[0].Unit : undefined;\r\n  }\r\n\r\n  unitVM\r\n  get UnitVM() {\r\n    if (!this.unitVM) {\r\n      this.unitVM = textVMUtil.get(this.Unit);\r\n      this.unitVM.OnSetContent = (v) => this.Unit = v;\r\n    }\r\n    return this.unitVM;\r\n  }\r\n\r\n  totalValue = undefined\r\n  get TotalValue() {\r\n    if (!this.totalValue) {\r\n      this.totalValue = this.GetTotalValue();\r\n    }\r\n    return this.totalValue;\r\n  }\r\n  set TotalValue(v) {\r\n    this.totalValue = v;\r\n  }\r\n\r\n  GetTotalValue = () => {\r\n    if (this.SubCells) {\r\n      return this.SubCells.reduce((a, b) => a + b.TotalValue, 0);\r\n    }\r\n    return this.Items.reduce((a, b) => a + b.Value, 0);\r\n  }\r\n\r\n  contentVM\r\n  get ContentVM() {\r\n    if (!this.contentVM) {\r\n      this.contentVM = textVMUtil.get(this.ValueString);\r\n    }\r\n    return this.contentVM;\r\n  }\r\n\r\n  get ValueString() {\r\n    if (this.Row.IsCreatedByUser) return '';\r\n    var totalValue = this.TotalValue;\r\n    if (!totalValue) return '';\r\n\r\n    var unit = this.Unit ? this.Unit : '';\r\n    return `${totalValue.toFixed(2)} ${unit}`;\r\n  }\r\n\r\n  subCells\r\n  get SubCells() {\r\n    if (!this.subCells) {\r\n      this.subCells = this.GetSubCells();\r\n    }\r\n    return this.subCells;\r\n  }\r\n  set SubCells(v) {\r\n    this.subCells = v;\r\n  }\r\n\r\n  GetSubCells = () => {\r\n    var subRows = this.Row.SubItems;\r\n    if (subRows && subRows.length !== 0) {\r\n      var col = this.Column;\r\n      return subRows.map(x => x.GetCellByColumn(col))\r\n        .filter(x => x !== undefined);\r\n    }\r\n  }\r\n\r\n  massType\r\n  get MassType() {\r\n    if (!this.massType) {\r\n      this.massType = util.GetMassType(this);\r\n    }\r\n    return this.massType;\r\n  }\r\n  set MassType(v) {\r\n    this.massType = v;\r\n  }\r\n\r\n  AsString = () => {\r\n    console.log(`${this.Column.Name} - ${this.Row.Name} - ${this.TotalValue}`)\r\n  }\r\n\r\n  UpdateData = () => {\r\n    if (this.Row.IsCreatedByUser){\r\n      return;\r\n    }\r\n\r\n    this.SubCells = this.GetSubCells();\r\n    this.TotalValue = this.GetTotalValue();\r\n    this.Unit = this.GetUnit();\r\n    this.ContentVM.Content = this.ValueString;\r\n    this.MassType = util.GetMassType(this);\r\n    this.IsHaveVCS_Item = util.GetIsHaveVCS_Item(this);\r\n\r\n    if (this.IsHaveVCS_Item) {\r\n      this.VCS_Item = util.GetVCS_Item(this);\r\n    }\r\n\r\n    this.ValueColor = util.GetValueColor(this);\r\n    this.TDBgColor = util.GetTDBgColor(this);\r\n  }\r\n\r\n  ShowDetail = () => {\r\n    var isHash = true;\r\n    var url = `${process.env.PUBLIC_URL}${isHash ? '/#' : ''}/massdetail`;\r\n    var getUrl = (v) => `${url}/${v}`;\r\n    var openTabFunc = (v) =>\r\n      window.open(getUrl(v), \"_blank\");\r\n\r\n    if (!this.viewDetailId) {\r\n      this.GetViewDetailId(data => {\r\n        var _id = this.viewDetailId = data._id;\r\n        openTabFunc(_id);\r\n      })\r\n    } else {\r\n      openTabFunc(this.viewDetailId);\r\n    }\r\n  }\r\n\r\n  viewDetailId\r\n\r\n  get AllItems() {\r\n    if (this.SubCells) {\r\n      return this.SubCells.map(x => x.Items).reduce((a, b) => a.concat(b), []);\r\n    }\r\n    return this.Items;\r\n  }\r\n\r\n  isHaveVCS_Item\r\n  get IsHaveVCS_Item() {\r\n    if (!this.isHaveVCS_Item) {\r\n      this.isHaveVCS_Item = util.GetIsHaveVCS_Item(this);\r\n    }\r\n    return this.isHaveVCS_Item;\r\n  }\r\n  set IsHaveVCS_Item(v) {\r\n    this.isHaveVCS_Item = v;\r\n  }\r\n\r\n  vcs_Item\r\n  get VCS_Item() {\r\n    if (!this.vcs_Item) {\r\n      this.vcs_Item = util.GetVCS_Item(this);\r\n    }\r\n    return this.vcs_Item;\r\n  }\r\n  set VCS_Item(v) {\r\n    this.vcs_Item = v;\r\n  }\r\n\r\n  valueColor = undefined\r\n  get ValueColor() {\r\n    if (!this.valueColor) {\r\n      this.valueColor = util.GetValueColor(this);\r\n    }\r\n    return this.valueColor;\r\n  }\r\n  set ValueColor(v) {\r\n    this.valueColor = v\r\n  }\r\n\r\n  tdBgColor = undefined\r\n  get TDBgColor() {\r\n    if (!this.tdBgColor) {\r\n      this.tdBgColor = util.GetTDBgColor(this);\r\n    }\r\n    return this.tdBgColor;\r\n  }\r\n  set TDBgColor(v) {\r\n    this.tdBgColor = v;\r\n  }\r\n\r\n  get AStyle() {\r\n    return {\r\n      color: this.ValueColor,\r\n      fontWeight: 'bold'\r\n    }\r\n  }\r\n\r\n\r\n  get TDStyle() {\r\n    return {\r\n      backgroundColor: this.TDBgColor\r\n    }\r\n  }\r\n\r\n  ApiData = () => {\r\n    var massIds = this.AllItems.map(x => x._id);\r\n    return {\r\n      massType: this.MassType,\r\n      massIds\r\n    };\r\n  }\r\n\r\n  GetViewDetailId = (handle) => {\r\n    var apiData = this.ApiData();\r\n    var url = \"https://api.bimdev.vn/api/hbdv/updatemass\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => handle(data))\r\n  }\r\n}","import Column from \"antd/lib/table/Column\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport MassCell from \"./MassCell\"\r\nimport * as mif from '../item/MassItemField'\r\nimport * as filterUtil from '../../filter/EntFilterUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (col, row, dict) => {\r\n  var qI = new MassCell();\r\n  qI.Column = col;\r\n  qI.Row = row;\r\n  qI.Dict = dict;\r\n\r\n  col.Cells.push(qI);\r\n  row.Cells.push(qI);\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetIsHaveVCS_Item = (q) => {\r\n  return q.Dict.ColumnField === mif.Phase\r\n    && pmData().MassResultComp.Phases.length === 2\r\n    && q.ColumnIndex === 1;\r\n}\r\n\r\nexport const GetValueColor = (q) => {\r\n  if (q.IsHaveVCS_Item && q.VCS_Item) {\r\n    return '#FFFFFF';\r\n  } else {\r\n    return '#1890ff';\r\n  }\r\n}\r\n\r\nexport const GetTDBgColor = (q) => {\r\n  if (q.IsHaveVCS_Item && q.VCS_Item) {\r\n    return q.VCS_Item.Color;\r\n  } else {\r\n    return '#FFFFFF';\r\n  }\r\n}\r\n\r\nexport const GetVCS_Item = (q) => {\r\n  var list = pmData().VersionCompareSetting.Items;\r\n\r\n  var cells = q.Row.Cells;\r\n  var compareIndex = cells.findIndex(x => x.ColumnIndex === 0);\r\n  var compareItem = cells[compareIndex];\r\n  var ratio = q.TotalValue / compareItem.TotalValue;\r\n\r\n  var index = list\r\n    .findIndex(x => filterUtil.IsValid(x.Filter, ratio));\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetMassType = (q) => {\r\n  var massType = undefined\r\n  if (q.SubCells) {\r\n    var isPending = true;\r\n    q.SubCells.forEach(x => {\r\n      if (isPending && x.MassType) {\r\n        massType = x.MassType;\r\n        isPending = false;\r\n      }\r\n    })\r\n  } else {\r\n    if (q.Items && q.Items.length > 0) {\r\n      massType = q.Items[0].MassType;\r\n    }\r\n  }\r\n  return massType;\r\n}","import * as mif from '../item/MassItemField'\r\nimport { EntFilter } from '../../filter/EntFilter'\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as mt from '../MassType'\r\nimport MassGroupComponent from './rowgroup/MassGroupComponent'\r\nimport MassGroupItem from './rowgroup/MassGroupItem'\r\nimport * as mgiUtil from './rowgroup/MassGroupItemUtil'\r\n\r\nexport const GetMainMGC = (q) => {\r\n  var qI = new MassGroupComponent();\r\n\r\n  var mgi1 = mgiUtil.get(mif.MassType);\r\n  qI.Items = [mgi1];\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetMassGroupName = (q) => {\r\n  return q.MassGroupSetting ? q.MassGroupSetting.Name\r\n    : '';\r\n}\r\n\r\nexport const GetAllRows = (q) => {\r\n  var list = [];\r\n  q.MainRows.forEach(x => {\r\n    list.push.apply(list, x.AllItems)\r\n  });\r\n  return list;\r\n}\r\n\r\nexport const GetMainMGI = (q) => {\r\n  var qI = q.MainMGC?.Items[0];\r\n  qI.Table = q;\r\n  qI.SupRow = undefined;\r\n  return qI;\r\n}","export const elementfilter = \"elementfilter\";\r\nexport const massexport = \"massexport\";\r\nexport const massgroup = \"massgroup\";\r\n","import { message } from 'antd'\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\nexport default class Setting{\r\n  name\r\n  get Name(){\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    if (this.OnNameChanged){\r\n      this.OnNameChanged(v);\r\n    }\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    return this.description;\r\n  }\r\n  set Description(v){\r\n    this.description = v;\r\n    if (this.OnDescriptionChanged){\r\n      this.OnDescriptionChanged(v);\r\n    }\r\n  }\r\n\r\n  SettingType\r\n\r\n  data\r\n  get Data(){\r\n    return this.data;\r\n  }\r\n  set Data(v){\r\n    this.data = v;\r\n    if (this.OnDataChanged){\r\n      this.OnDataChanged(v);\r\n    }\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.Name;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    var {_id} = this;\r\n    var apiData = {_id};\r\n\r\n    var  url = \"https://api.bimdev.vn/api/hbs/delete\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => message.success('Delete setting successfully'))\r\n\r\n    this.Dict.Items.splice(this.Index, 1);\r\n\r\n    if (this.OnDelete){\r\n      this.OnDelete();\r\n    }\r\n\r\n    this.Dict.Input.EditItemId = undefined;\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './MassGroupSettingDataUtil'\r\nimport { reaction } from \"mobx\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassGroupSettingData {\r\n  fields\r\n  get Fields(){\r\n    if (!this.fields){\r\n      this.fields = util.GetDefaultFields(this);\r\n    }\r\n    return this.fields;\r\n  }\r\n  set Fields(v){\r\n    this.fields = v;\r\n  }\r\n\r\n  AddNewField = () => {\r\n    var item = pmData().MassPropertyNames[0];\r\n    this.Fields.push(item);\r\n    return item;\r\n  }\r\n}","export const Discipline = \"Discipline\";\r\nexport const Category = \"Category\";\r\n\r\nexport const GetAll = () => {\r\n  return [ Discipline, Category ];\r\n}","import { PMData } from '../../../single/model/PMData';\r\nimport MassGroupSettingData from './MassGroupSettingData';\r\nimport * as mpn from '../../../entity/mass/MassPropertyName'\r\nimport * as massGroupCompUtil from '../../mass/table/rowgroup/MassGroupComponentUtil'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSettingData();\r\n  qI.MassGroupComponent = massGroupCompUtil.get(q.massGroupComponent);\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = () => {\r\n  var qI = new MassGroupSettingData();\r\n  return qI;\r\n}\r\n\r\nexport const GetDefaultFields = () => {\r\n  return [ mpn.Category ]\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport default class MassGroupSetting extends Setting {\r\n  \r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as dataUtil from './MassGroupSettingDataUtil'\r\nimport MassGroupSetting from './MassGroupSetting';\r\nimport { PMData } from '../../../single/model/PMData';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassGroupSetting();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.SettingType = q.settingType;\r\n  qI.Data = dataUtil.get(q.data);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbs/mg/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../text/TextVMUtil'\r\nimport * as util from './WorkpackageVMUtil'\r\n\r\nexport class WorkpackageVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      fullName : observable\r\n    })\r\n  }\r\n\r\n  get _id(){\r\n    return this.Workpackage._id;\r\n  }\r\n\r\n  get Index(){\r\n    return this.Dict.WorkpackageVMs.indexOf(this);\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.Workpackage.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.Workpackage.M2VM = v;\r\n  }\r\n\r\n  Workpackage\r\n\r\n  supItem\r\n  get SupItem(){\r\n    if (!this.supItem){\r\n      this.supItem = util.GetSupItem(this);\r\n    }\r\n    return this.supItem;\r\n  }\r\n\r\n  code = undefined\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.Workpackage.Code;\r\n    }\r\n    return this.code\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Code = v;\r\n    }\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.Workpackage.Name;\r\n    }\r\n    return this.name\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Name = v;\r\n    }\r\n  }\r\n\r\n  description = undefined\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.Workpackage.Description;\r\n    }\r\n    return this.description\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Description = v;\r\n    }\r\n  }\r\n\r\n  fullName = undefined\r\n  get FullName() {\r\n    if (!this.fullName) {\r\n      this.fullName = this.Workpackage.FullName;\r\n    }\r\n    return this.fullName;\r\n  }\r\n  set FullName(v) {\r\n    this.fullName = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.FullName;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.FullName;\r\n  }\r\n\r\n  codeVM\r\n  get CodeVM() {\r\n    if (!this.codeVM) {\r\n      var obj = this.codeVM =\r\n        textVMUtil.get(this.Code, \"mã code\");\r\n      obj.onSetContent = (v) => this.Code = v;\r\n    }\r\n    return this.codeVM;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên công tác\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.WorkpackageVMs.splice(this.Index, 1);\r\n  }\r\n\r\n  AsString = () => {\r\n    console.log(this.Name, this.Code, this.Description);\r\n  }\r\n}","import { WorkpackageVM } from \"./WorkpackageVM\";\r\nimport { PMDataVM } from '../../single/form/PMDataVM'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new WorkpackageVM();\r\n  qI.Workpackage = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnCodeChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Code = v;\r\n    }\r\n  }\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnFullNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.FullName = v;\r\n    }\r\n  }\r\n\r\n  q.OnDelete = () => {\r\n    qI.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSupItem = (q) => {\r\n  var supWp = q.Workpackage.SupItem;\r\n  var list = pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n  var index = list.findIndex(x => x.Workpackage === supWp);\r\n  return index !== -1 ? list[index] : undefined;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class CheckboxVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      ischecked: observable,\r\n      isDisable : observable\r\n    })\r\n  }\r\n\r\n  name\r\n\r\n  ischecked = undefined\r\n  set Ischecked(v) {\r\n    this.ischecked = v;\r\n    if (this.onCheckChange) {\r\n      this.onCheckChange(v);\r\n    }\r\n  }\r\n\r\n  isDisable = false\r\n}","import { CheckboxVM } from \"./CheckboxVM\"\r\n\r\nexport const get = (name, ischecked) => {\r\n  var qI = new CheckboxVM();\r\n  qI.ischecked = ischecked;\r\n  qI.name = name;\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../text/TextVMUtil'\r\nimport * as checkboxVMUtil from '../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../select/SelectVMUtil'\r\nimport * as util from './WorkpackageInputVMUtil'\r\nimport { Button } from 'antd';\r\n\r\nexport class WorkpackageInputVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isNew: observable\r\n    })\r\n  }\r\n\r\n  WorkpackageInput\r\n\r\n  code = undefined\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.WorkpackageInput.Code;\r\n    }\r\n    return this.code\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    this.WorkpackageInput.Code = v;\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.WorkpackageInput.Name;\r\n    }\r\n    return this.name\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.WorkpackageInput.Name = v;\r\n  }\r\n\r\n  description = undefined\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.WorkpackageInput.Description;\r\n    }\r\n    return this.description\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.WorkpackageInput.Description = v;\r\n  }\r\n\r\n  supItem = undefined\r\n  get SupItem(){\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v){\r\n    this.supItem = v;\r\n    var input = this.WorkpackageInput;\r\n    if (!v) {\r\n      input.SupItem = v;\r\n    }else{\r\n      input.SupItem = v.Workpackage;\r\n    }\r\n  }\r\n\r\n  workpackageVMStorageList = undefined\r\n  get WorkpackageVMStorageList(){\r\n    if (!this.workpackageVMStorageList){\r\n      this.workpackageVMStorageList = util.GetWorkpackageVMStorageList(this);\r\n    }\r\n    return this.workpackageVMStorageList;\r\n  }\r\n  set WorkpackageVMStorageList(v){\r\n    this.workpackageVMStorageList = v;\r\n\r\n    var selectVM = this.SupItemSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItem = this.SupItem;\r\n  }\r\n\r\n  supItemSelectVM\r\n  get SupItemSelectVM(){\r\n    if (!this.supItemSelectVM){\r\n      var obj = this.supItemSelectVM = selectVMUtil.get\r\n        (this.WorkpackageVMStorageList, this.SupItem);\r\n      obj.Placeholder = 'công tác cha'\r\n      obj.CanClear = true;\r\n      obj.OnSelectedItemChanged = (v) => this.SupItem = v;\r\n    }\r\n    return this.supItemSelectVM;\r\n  }\r\n\r\n  isNew = undefined\r\n  get IsNew() {\r\n    if (this.isNew === undefined) {\r\n      this.isNew = this.WorkpackageInput.IsNew;\r\n    }\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v) {\r\n    this.isNew = v;\r\n    this.CommandVM.Content = util.GetCommandName(this);\r\n    this.WorkpackageInput.IsNew = v;\r\n  }\r\n\r\n  commandName = undefined\r\n  get CommandName() {\r\n    if (!this.commandName) {\r\n      this.commandName = util.GetCommandName(this);\r\n    }\r\n    return this.commandName;\r\n  }\r\n  set CommandName(v) {\r\n    this.commandName = v;\r\n  }\r\n\r\n  workpackageVM\r\n  get WorkpackageVM() {\r\n    return this.workpackageVM;\r\n  }\r\n  set WorkpackageVM(v) {\r\n    this.workpackageVM = v;\r\n\r\n    if (!v) {\r\n      this.WorkpackageInput.Workpackage = v;\r\n      this.IsNewVM.Ischecked = true;\r\n    }\r\n    else {\r\n      this.WorkpackageInput.Workpackage = v.Workpackage;\r\n\r\n      var { Code, Name, Description, SupItem } = v;\r\n      this.CodeVM.Content = Code;\r\n      this.NameVM.Content = Name;\r\n      this.DescriptionVM.Content = Description;\r\n\r\n      this.SupItemSelectVM.InitialItem = SupItem;\r\n\r\n      this.IsNewVM.Ischecked = false;\r\n    }\r\n  }\r\n\r\n  codeVM\r\n  get CodeVM() {\r\n    if (!this.codeVM) {\r\n      var obj = this.codeVM =\r\n        textVMUtil.get(this.Code, \"mã code\");\r\n      obj.onSetContent = (v) => this.Code = v;\r\n    }\r\n    return this.codeVM;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên công tác\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  isNewVM\r\n  get IsNewVM() {\r\n    if (!this.isNewVM) {\r\n      var obj = this.isNewVM\r\n        = checkboxVMUtil.get(\"Công tác mới\", this.IsNew);\r\n\r\n      obj.isDisable = true;\r\n      obj.onCheckChange = (v) => {\r\n        this.IsNew = v;\r\n        if (v) {\r\n          obj.isDisable = true;\r\n        } else {\r\n          obj.isDisable = false;\r\n        }\r\n      };\r\n    }\r\n    return this.isNewVM;\r\n  }\r\n\r\n  commandVM\r\n  get CommandVM() {\r\n    if (!this.commandVM) {\r\n      var obj = this.commandVM = textVMUtil.get(this.CommandName);\r\n      obj.onSetContent = (v) => this.CommandName = v;\r\n    }\r\n    return this.commandVM;\r\n  }\r\n\r\n  AsString = () => `${this.Code} ${this.Name} ${this.Description} ${this.IsNew}`\r\n\r\n  AddDatabase = () => {\r\n    this.WorkpackageInput.AddDatabase();\r\n  }\r\n\r\n  deleteView\r\n  get DeleteView() {\r\n    return !this.IsNew ?\r\n      <Button onClick={this.DeleteFunc}>Delete</Button>\r\n      : \"\";\r\n  }\r\n\r\n  DeleteFunc = () => {\r\n    this.WorkpackageVM.Workpackage.Delete();\r\n    this.WorkpackageVM = undefined;\r\n  }\r\n\r\n  Clear = () => {\r\n    this.CodeVM.Content = null;\r\n    this.NameVM.Content = null;\r\n    this.DescriptionVM.Content = null;\r\n    this.IsNewVM.Ischecked = true;\r\n  }\r\n}","import { message } from \"antd\";\r\nimport { PMDataVM } from \"../../single/form/PMDataVM\";\r\nimport { WorkpackageInputVM } from \"./WorkpackageInputVM\";\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new WorkpackageInputVM();\r\n  qI.WorkpackageInput = q;\r\n  qI.Dict = dict;\r\n\r\n  pmDataVM().Workpackage_DictVM.OnGetItemsDone_Funcs.push(() => {\r\n    qI.WorkpackageVMStorageList = GetWorkpackageVMStorageList(qI);\r\n  })\r\n\r\n  q.OnAddDatabaseDone = (v) => {\r\n    var command = qI.CommandName;\r\n    message.success(`${command} workpackage successfully`);\r\n    //qI.clear();\r\n  }\r\n\r\n  dict.OnAdd = (v) => {\r\n    qI.WorkpackageVM = v;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetCommandName = (qI) => {\r\n  var isNew = qI.IsNew;\r\n  return isNew ? \"Create\" : \"Edit\";\r\n}\r\n\r\nexport const GetWorkpackageVMStorageList = (q) => {\r\n  return pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n}","import { Workpackage_DictVM } from \"./Workpackage_DictVM\";\r\nimport * as workpackageVMUtil from './WorkpackageVMUtil';\r\nimport * as workpackageInputVMUtil from './WorkpackageInputVMUtil';\r\n\r\nexport const get = (q) => {\r\n  var qI = new Workpackage_DictVM();\r\n  qI.Workpackage_Dict = q;\r\n\r\n  q.OnGetWorkpackagesDone = (v) => {\r\n    var obj = qI.WorkpackageVMs;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  q.OnAdd = (item) => {\r\n    var itemView = workpackageVMUtil.get(item, qI);\r\n    qI.Add(itemView);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetWorkpackageVMs = (dictVM) => {\r\n  var wps = dictVM.Workpackage_Dict.Workpackages;\r\n  if (!wps) return undefined;\r\n  return wps.map(x => workpackageVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetWorkpackageInputVM= (dictVM) => {\r\n  var input = dictVM.Workpackage_Dict.WorkpackageInput;\r\n  return workpackageInputVMUtil.get(input, dictVM);\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ElementFilterSetting_DictVMUtil'\r\n\r\nexport class ElementFilterSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.ModelItem.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.ModelItem.M2VM = v;\r\n  }\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  items  = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n      this.Input.EditItem = v;\r\n    }\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class SettingVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      name: observable\r\n    })\r\n  }\r\n\r\n  get _id(){\r\n    return this.ModelItem._id;\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.ModelItem.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.ModelItem.M2VM = v;\r\n  }\r\n\r\n  ModelItem\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (!this.M2VM) {\r\n      this.ModelItem.Name = v;\r\n    }\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (!this.M2VM) {\r\n      this.ModelItem.Description = v;\r\n    }\r\n  }\r\n\r\n  settingType\r\n  get SettingType() {\r\n    if (!this.settingType) {\r\n      this.settingType = this.ModelItem.SettingType;\r\n    }\r\n    return this.settingType;\r\n  }\r\n  set SettingType(v) {\r\n    this.settingType = v;\r\n    this.ModelItem.SettingType = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.Name;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.Name;\r\n  }\r\n\r\n  data\r\n  get Data(){\r\n    if (!this.data){\r\n      this.data = this.ModelItem.Data;\r\n    }\r\n    return this.data;\r\n  }\r\n  set Data(v) {\r\n    this.data = v;\r\n    if (!this.M2VM){\r\n      this.ModelItem.Data = v;\r\n    }\r\n  }\r\n\r\n  dataVM\r\n  get DataVM() {\r\n    if (!this.dataVM) {\r\n      this.dataVM = this.GetDataVM();\r\n    }\r\n    return this.dataVM;\r\n  }\r\n  set DataVM(v) {\r\n    this.dataVM = v;\r\n\r\n    // Gọi hàm để đổ dữ liệu về\r\n    if (v && this.OnInitialSetDataVM){\r\n      this.OnInitialSetDataVM(v);\r\n    }\r\n\r\n    if (!this.M2VM) {\r\n      if (!v) {\r\n        this.Data = v;\r\n      }\r\n      else {\r\n        this.Data = v.ModelItem;\r\n      }\r\n    }\r\n  }\r\n\r\n  GetDataVM = () => {\r\n    if (this.OnGetDataVM) {\r\n      return this.OnGetDataVM();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.Items.splice(this.Index, 1);\r\n  }\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\n\r\nexport default class ElementFilterSettingVM extends SettingVM {\r\n  OnInitialSetDataVM = (v) => {\r\n    var cateFilterVM = v.CategoryFilterVM;\r\n    if (cateFilterVM) {\r\n      cateFilterVM.OnInitialData();\r\n    }\r\n\r\n    var famFilterVM = v.FamilyFilterVM;\r\n    if (famFilterVM) {\r\n      famFilterVM.OnInitialData();\r\n    }\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../single/form/PMDataVM'\r\nimport * as selectVMUtil from '../../../select/SelectVMUtil'\r\nimport * as multiSelectVMUtil from '../../../select/MultiSelectVMUtil'\r\n\r\nexport class EntFilterVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  get pmDataVM () { return PMDataVM.Instance};\r\n\r\n  valueType\r\n  get ValueType() {\r\n    if (!this.valueType) {\r\n      this.valueType = this.ModelItem.ValueType;\r\n    }\r\n    return this.valueType;\r\n  }\r\n  set ValueType(v) {\r\n    this.valueType = v;\r\n    this.ModelItem.ValueType = v;\r\n  }\r\n\r\n  numberFilterType\r\n  get NumberFilterType() {\r\n    if (!this.numberFilterType) {\r\n      this.numberFilterType = this.ModelItem.NumberFilterType;\r\n    }\r\n    return this.numberFilterType;\r\n  }\r\n  set NumberFilterType(v) {\r\n    this.numberFilterType = v;\r\n    this.ModelItem.NumberFilterType = v;\r\n  }\r\n\r\n  stringFilterType\r\n  get StringFilterType() {\r\n    if (!this.stringFilterType) {\r\n      this.stringFilterType = this.ModelItem.StringFilterType;\r\n    }\r\n    return this.stringFilterType;\r\n  }\r\n  set StringFilterType(v) {\r\n    this.stringFilterType = v;\r\n    this.ModelItem.StringFilterType = v;\r\n  }\r\n\r\n  values\r\n  get Values() {\r\n    if (!this.values) {\r\n      this.values = this.ModelItem.Values;\r\n    }\r\n    return this.values;\r\n  }\r\n  set Values(v) {\r\n    this.values = v;\r\n    this.ModelItem.Values = v;\r\n  }\r\n\r\n  valueStorageList\r\n  get ValueStorageList() {\r\n    if (!this.valueStorageList){\r\n      this.valueStorageList = this.ModelItem.ValueStorageList;\r\n    }\r\n    return this.valueStorageList;\r\n  }\r\n\r\n  ValueSelectPlaceholder\r\n\r\n  valueTypeSelectVM\r\n  get ValueTypeSelectVM() {\r\n    if (!this.valueTypeSelectVM) {\r\n      var obj =this.valueTypeSelectVM = selectVMUtil.get(this.pmDataVM.FilterValueTypes, this.ValueType);\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.ValueType = v;\r\n      }\r\n    }\r\n    return this.valueTypeSelectVM;\r\n  }\r\n\r\n  stringFilterTypeSelectVM\r\n  get StringFilterTypeSelectVM() {\r\n    if (!this.stringFilterTypeSelectVM){\r\n      var obj = this.stringFilterTypeSelectVM = selectVMUtil.get(this.pmDataVM.StringFilterTypes, this.StringFilterType);\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.StringFilterType = v;\r\n      }\r\n    }\r\n    return this.stringFilterTypeSelectVM;\r\n  }\r\n\r\n  valuesSelectVM\r\n  get ValuesSelectVM() {\r\n    if (!this.valuesSelectVM){\r\n      var obj = this.valuesSelectVM = multiSelectVMUtil.get(this.ValueStorageList, this.Values);\r\n\r\n      if (this.ValueSelectPlaceholder){\r\n        obj.Placeholder = this.ValueSelectPlaceholder;\r\n      }\r\n\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.Values = v;\r\n      }\r\n    }\r\n    return this.valuesSelectVM;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    if (!v) return;\r\n\r\n    var {ValueType, NumberFilterType, StringFilterType, Values} = v;\r\n    this.ValueTypeSelectVM.InitialItem = ValueType;\r\n    this.StringFilterTypeSelectVM.InitialItem = StringFilterType;\r\n    this.ValuesSelectVM.InitialItems = Values;\r\n  }\r\n\r\n  OnInitialData = () => {\r\n    var valueType = this.ValueType;\r\n    var numberFilterType = this.NumberFilterType;\r\n    var stringFilterType = this.StringFilterType;\r\n    var values = this.Values;\r\n  }\r\n}","import { SettingVM } from \"../setting/base/SettingVM\";\r\nimport { EntFilterVM } from \"./EntFilterVM\";\r\n\r\nexport const get = (q) => {\r\n  if (!q) return undefined;\r\n  var qI = new EntFilterVM();\r\n  qI.ModelItem = q;\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\n\r\nexport default class ElementFilterSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isHaveFamilyFilter : observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  categoryFilterVM\r\n  get CategoryFilterVM(){\r\n    if (!this.categoryFilterVM && this.ModelItem){\r\n      this.categoryFilterVM = this.GetCategoryFilterVM();\r\n    }\r\n    return this.categoryFilterVM;\r\n  }\r\n\r\n  GetCategoryFilterVM = () => {\r\n    var filter = this.ModelItem.CategoryFilter;\r\n    return filterVMUtil.get(filter);\r\n  }\r\n\r\n  isHaveFamilyFilter = undefined\r\n  get IsHaveFamilyFilter(){\r\n    if (!this.isHaveFamilyFilter){\r\n      this.isHaveFamilyFilter = this.ModelItem.IsHaveFamilyFilter;\r\n    }\r\n    return this.isHaveFamilyFilter;\r\n  }\r\n  set IsHaveFamilyFilter(v){\r\n    this.isHaveFamilyFilter = v;\r\n    this.ModelItem.IsHaveFamilyFilter = v;\r\n  }\r\n\r\n  familyFilterVM\r\n  get FamilyFilterVM(){\r\n    if (!this.familyFilterVM && this.ModelItem){\r\n      this.familyFilterVM = this.GetFamilyFilterVM();\r\n    }\r\n    return this.familyFilterVM;\r\n  }\r\n\r\n  GetFamilyFilterVM = () => {\r\n    var filter = this.ModelItem.FamilyFilter;\r\n    return filterVMUtil.get(filter);\r\n  }\r\n\r\n  isHaveFamilyFilterVM\r\n  get IsHaveFamilyFilterVM() {\r\n    if (!this.isHaveFamilyFilterVM) {\r\n      var obj = this.isHaveFamilyFilterVM\r\n        = checkboxVMUtil.get(\"Thiết lập lọc Family\", this.IsHaveFamilyFilter);\r\n\r\n      obj.onCheckChange = (v) => {\r\n        this.IsHaveFamilyFilter = v;\r\n      };\r\n    }\r\n    return this.isHaveFamilyFilterVM;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.CategoryFilterVM.SetData(v.CategoryFilterVM);\r\n\r\n    var ischecked = v.IsHaveFamilyFilter === true;\r\n    this.IsHaveFamilyFilterVM.Ischecked = ischecked;\r\n    \r\n    this.FamilyFilterVM.SetData(v.FamilyFilterVM);\r\n  }\r\n}","import ElementFilterSettingDataVM from './ElementFilterSettingDataVM';\r\n\r\nexport const get = (q) => {\r\n  var qI = new ElementFilterSettingDataVM();\r\n  qI.ModelItem = q;\r\n  return qI;\r\n}","import ElementFilterSettingVM from \"./ElementFilterSettingVM\"\r\nimport * as dataVMUtil from './ElementFilterSettingDataVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new ElementFilterSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import { message } from \"antd\";\r\nimport { SettingVM } from \"./SettingVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new SettingVM();\r\n  qI.Setting = q;\r\n\r\n  q.OnDelete = () => {\r\n    qI.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetCommandName = (qI) => {\r\n  var isNew = qI.IsNew;\r\n  return isNew ? \"Create\" : \"Edit\";\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil'\r\nimport * as util from './SettingVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport { Button, message } from 'antd';\r\n\r\nexport default class SettingInputVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      dataVM : observable,\r\n      isNew: observable\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  name\r\n  get Name(){\r\n    if(!this.name){\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    if (!this.description){\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  settingType\r\n  get SettingType(){\r\n    if (!this.settingType){\r\n      this.settingType = this.ModelItem.SettingType;\r\n    }\r\n    return this.settingType;\r\n  }\r\n  set SettingType(v){\r\n    this.settingType = v;\r\n    this.ModelItem.SettingType = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.Name;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên bộ lọc\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM){\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  settingTypeVM\r\n  get SettingTypeVM() {\r\n    if (!this.settingTypeVM){\r\n      var obj = this.settingTypeVM = \r\n        textVMUtil.get(this.SettingType, \"loại thiết lập\");\r\n      obj.onSetContent = (v) => this.SettingType = v;\r\n    }\r\n    return this.settingTypeVM;\r\n  }\r\n\r\n  dataVM = undefined\r\n  get DataVM(){\r\n    if (!this.dataVM){\r\n      this.dataVM = this.GetDataVM();\r\n    }\r\n    return this.dataVM;\r\n  }\r\n  set DataVM (v){\r\n    if (this.DataVM.SetData){\r\n      this.DataVM.SetData(v);\r\n    }\r\n  }\r\n\r\n  GetDataVM = () => {\r\n    if (this.OnGetDataVM){\r\n      var dataVM = this.OnGetDataVM();\r\n      return dataVM;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  editItem\r\n  get EditItem() {\r\n    return this.editItem;\r\n  }\r\n  set EditItem(v) {\r\n    this.editItem = v;\r\n\r\n    var input = this.ModelItem;\r\n    if (!v) {\r\n      input.EditItem = v;\r\n      this.IsNewVM.Ischecked = true;\r\n    }\r\n    else {\r\n      input.EditItem = v.ModelItem;\r\n\r\n      var { Name, Description, SettingType } = v;\r\n      this.NameVM.Content = Name;\r\n      this.DescriptionVM.Content = Description;\r\n      this.SettingTypeVM.Content = SettingType;\r\n\r\n      this.DataVM = v.DataVM;\r\n      this.IsNewVM.Ischecked = false;\r\n    }\r\n  }\r\n\r\n  isNew = undefined\r\n  get IsNew() {\r\n    if (this.isNew === undefined) {\r\n      this.isNew = this.ModelItem.IsNew;\r\n    }\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v) {\r\n    this.isNew = v;\r\n    this.CommandVM.Content = util.GetCommandName(this);\r\n    this.ModelItem.IsNew = v;\r\n  }\r\n\r\n  isNewVM\r\n  get IsNewVM() {\r\n    if (!this.isNewVM) {\r\n      var obj = this.isNewVM\r\n        = checkboxVMUtil.get(\"Thiết lập mới\", this.IsNew);\r\n\r\n      obj.isDisable = true;\r\n      obj.onCheckChange = (v) => {\r\n        this.IsNew = v;\r\n        if (v) {\r\n          obj.isDisable = true;\r\n        } else {\r\n          obj.isDisable = false;\r\n        }\r\n      };\r\n    }\r\n    return this.isNewVM;\r\n  }\r\n\r\n  commandName = undefined\r\n  get CommandName() {\r\n    if (!this.commandName) {\r\n      this.commandName = util.GetCommandName(this);\r\n    }\r\n    return this.commandName;\r\n  }\r\n  set CommandName(v) {\r\n    this.commandName = v;\r\n  }\r\n\r\n  commandVM\r\n  get CommandVM() {\r\n    if (!this.commandVM) {\r\n      var obj = this.commandVM = textVMUtil.get(this.CommandName);\r\n      obj.onSetContent = (v) => this.CommandName = v;\r\n    }\r\n    return this.commandVM;\r\n  }\r\n\r\n  deleteView\r\n  get DeleteView() {\r\n    return !this.IsNew ?\r\n      <Button onClick={this.DeleteFunc}>Delete</Button>\r\n      : \"\";\r\n  }\r\n\r\n  \r\n  DeleteFunc = () => {\r\n    this.EditItem.ModelItem.Delete();\r\n    this.EditItem.Delete();\r\n    this.EditItem = undefined;\r\n  }\r\n\r\n  AddDatabase = () => {\r\n    this.ModelItem.AddDatabase();\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInputVM from \"../base/SettingInputVM\";\r\n\r\nexport default class ElementFilterSettingInputVM extends SettingInputVM {\r\n  \r\n}","import { ElementFilterSetting_DictVM } from \"./ElementFilterSetting_DictVM\";\r\nimport * as itemVMUtil from './ElementFilterSettingVMUtil'\r\nimport * as inputVMUtil from './ElementFilterSettingInputVMUtil'\r\n\r\nexport const get = (q) => {\r\n  var qI = new ElementFilterSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (dictVM) => {\r\n  var input = dictVM.ModelItem.Input;\r\n  return inputVMUtil.get(input, dictVM);\r\n}","import SettingInputVM from \"../base/SettingInputVM\";\r\nimport ElementFilterSettingInputVM from \"./ElementFilterSettingInputVM\"\r\nimport * as dataVMUtil from './ElementFilterSettingDataVMUtil'\r\nimport { message } from \"antd\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new ElementFilterSettingInputVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnAddDatabaseDone = (v) => {\r\n    var command = qI.CommandName;\r\n    message.success(`${command} element filter setting successfully`);\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../../filter/EntFilterVMUtil'\r\nimport * as util from './MES_ValueSettingVMUtil'\r\nimport * as selectVMUtil from '../../../../../select/SelectVMUtil'\r\n\r\nexport default class MES_ValueSettingVM {\r\n  // constructor() {\r\n  //   makeObservable(this, {\r\n\r\n  //   })\r\n  // }\r\n\r\n  get Index() {\r\n    return this.Dict.ValueSettingVMs.indexOf(this);\r\n  }\r\n\r\n  retrieveType\r\n  get RetrieveType() {\r\n    if (!this.retrieveType) {\r\n      this.retrieveType = this.ModelItem.RetrieveType;\r\n    }\r\n    return this.retrieveType;\r\n  }\r\n  set RetrieveType(v) {\r\n    this.retrieveType = v;\r\n    this.ModelItem.RetrieveType = v;\r\n  }\r\n\r\n  get RetrieveTypeStorageList() {\r\n    return util.GetRetrieveTypeStorageList(this);\r\n  }\r\n\r\n  retrieveTypeSelectVM\r\n  get RetrieveTypeSelectVM() {\r\n    if (!this.retrieveTypeSelectVM) {\r\n      var obj = this.retrieveTypeSelectVM = selectVMUtil.get(this.RetrieveTypeStorageList, this.RetrieveType);\r\n      obj.OnSelectedItemChanged = (v) => this.RetrieveType = v;\r\n    }\r\n    return this.retrieveTypeSelectVM;\r\n  }\r\n\r\n  valueFilterVM\r\n  get ValueFilterVM() {\r\n    if (!this.valueFilterVM) {\r\n      var obj = this.valueFilterVM = filterVMUtil.get(this.ModelItem.ValueFilter);\r\n      obj.ValueSelectPlaceholder = 'giá trị parameter';\r\n    }\r\n    return this.valueFilterVM;\r\n  }\r\n  set ValueFilterVM(v) {\r\n    this.valueFilterVM = v;\r\n    if (!v) {\r\n      this.ModelItem.ValueFilter = v;\r\n    }\r\n    else {\r\n      this.ModelItem.ValueFilter = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  workpackageVM\r\n  get WorkpackageVM() {\r\n    if (!this.workpackageVM) {\r\n      this.workpackageVM = util.GetWorkpackageVM(this);\r\n    }\r\n    return this.workpackageVM;\r\n  }\r\n  set WorkpackageVM(v) {\r\n    this.workpackageVM = v;\r\n    var modelItem = this.ModelItem;\r\n    if (!v) {\r\n      modelItem.Workpackage = v;\r\n    }\r\n    else {\r\n      this.ModelItem.Workpackage = v.Workpackage;\r\n    }\r\n  }\r\n\r\n  workpackageVMStorageList = undefined;\r\n  get WorkpackageVMStorageList() {\r\n    if (!this.workpackageVMStorageList) {\r\n      this.workpackageVMStorageList = util.GetWorkpackageVMStorageList(this);\r\n    }\r\n    return this.workpackageVMStorageList;\r\n  }\r\n  set WorkpackageVMStorageList(v) {\r\n    this.workpackageVMStorageList = v;\r\n\r\n    var selectVM = this.WorkpackageSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.SelectedIndex = -1;\r\n  }\r\n\r\n  workpackageSelectVM\r\n  get WorkpackageSelectVM() {\r\n    if (!this.workpackageSelectVM) {\r\n      var storageList = this.WorkpackageVMStorageList ?\r\n        this.WorkpackageVMStorageList : [];\r\n\r\n      var obj = this.workpackageSelectVM = selectVMUtil.get\r\n        (storageList, this.WorkpackageVM);\r\n      obj.Placeholder = 'chọn công tác';\r\n      obj.OnSelectedItemChanged = (v) => this.WorkpackageVM = v;\r\n    }\r\n\r\n    return this.workpackageSelectVM;\r\n  }\r\n\r\n  massType\r\n  get MassType() {\r\n    if (!this.massType) {\r\n      this.massType = this.ModelItem.MassType;\r\n    }\r\n    return this.massType;\r\n  }\r\n  set MassType(v) {\r\n    this.massType = v;\r\n    this.ModelItem.MassType = v;\r\n  }\r\n\r\n  get MassTypeStorageList() {\r\n    return util.GetMassTypeStorageList(this);\r\n  }\r\n\r\n  massTypeSelectVM\r\n  get MassTypeSelectVM() {\r\n    if (!this.massTypeSelectVM) {\r\n      var obj = this.massTypeSelectVM = selectVMUtil.get(this.MassTypeStorageList, \r\n        this.MassType);\r\n      obj.Placeholder = 'loại khối lượng';\r\n      obj.OnSelectedItemChanged = (v) => this.MassType = v;\r\n    }\r\n    return this.massTypeSelectVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n    var list = this.Dict.ValueSettingVMs;\r\n    list.splice(this.Index, 1);\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.RetrieveTypeSelectVM.InitialItem = v.RetrieveType;\r\n    this.ValueFilterVM.SetData(v.ValueFilterVM);\r\n    this.WorkpackageSelectVM.InitialItem = v.WorkpackageVM;\r\n    this.MassTypeSelectVM.InitialItem = v.MassType;\r\n  }\r\n}","import { PMDataVM } from \"../../../../single/form/PMDataVM\";\r\nimport MES_ValueSettingVM from \"./MES_ValueSettingVM\"\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MES_ValueSettingVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  pmDataVM().Workpackage_DictVM.OnGetItemsDone_Funcs.push((v) => {\r\n    qI.WorkpackageVMStorageList = GetWorkpackageVMStorageList(qI);\r\n  });\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetRetrieveTypeStorageList = (q) => {\r\n  return pmDataVM().ValueRetrieveTypes;\r\n}\r\n\r\nexport const GetWorkpackageVM = (q) => {\r\n  var workpackage = q.ModelItem.Workpackage;\r\n  if (!workpackage) return undefined;\r\n\r\n  var list = pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x.Workpackage === workpackage);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetWorkpackageVMStorageList = (q) => {\r\n  return pmDataVM().Workpackage_DictVM.WorkpackageVMs;\r\n}\r\n\r\nexport const GetMassTypeStorageList = (q) => {\r\n  return pmDataVM().MassTypes;\r\n}","import * as util from './MES_ValueSettingUtil'\r\n\r\nexport default class MES_ValueSetting{\r\n  get Index() {\r\n    return this.Dict.ValueSettings.indexOf(this);\r\n  }\r\n\r\n  RetrieveType\r\n\r\n  MassType\r\n  \r\n  ValueFiter\r\n\r\n  workpackageId\r\n  \r\n  workpackage\r\n  get Workpackage(){\r\n    if (!this.workpackage){\r\n      this.workpackage = util.GetWorkpackage(this);\r\n    }\r\n    return this.workpackage;\r\n  }\r\n  set Workpackage(v){\r\n    this.workpackage = v;\r\n    if (!v){\r\n      this.workpackageId = undefined;\r\n    }\r\n    else{\r\n      this.workpackageId = v._id;\r\n    }\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.ValueSettings.splice(this.Index, 1);\r\n  }\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","export const byparameter = \"byparameter\";\r\nexport const bymaterial = \"bymaterial\";\r\nexport const byrebar = \"byrebar\";\r\n\r\nexport const GetAll = () => {\r\n  return [byparameter, bymaterial, byrebar]\r\n}","import MES_ValueSetting from './MES_ValueSetting'\r\nimport * as filterUtil from '../../../filter/EntFilterUtil'\r\nimport * as vrt from './MES_ValueRetrieveType'\r\nimport * as fvt from '../../../filter/FilterValueType'\r\nimport * as sft from '../../../filter/StringFilterType'\r\nimport * as fct from '../../../filter/FilterCategoryType'\r\nimport { EntFilter } from '../../../filter/EntFilter';\r\nimport { PMData } from '../../../../single/model/PMData'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MES_ValueSetting();\r\n  qI.RetrieveType = q.retrieveType;\r\n  qI.MassType = q.massType;\r\n  qI.ValueFilter = filterUtil.get(q.valueFilter, fct.parameter);\r\n  qI.workpackageId = q.workpackageId;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, dict) => {\r\n  var qI = new MES_ValueSetting();\r\n  qI.RetrieveType = q.RetrieveType;\r\n  qI.MassType = q.MassType;\r\n  qI.ValueFilter = q.ValueFilter;\r\n  qI.Workpackage = q.Workpackage;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new MES_ValueSetting();\r\n  qI.RetrieveType = vrt.byparameter;\r\n  qI.Dict = dict;\r\n  \r\n  var valueFilter = new EntFilter();\r\n  valueFilter.CategoryType = fct.parameter;\r\n  valueFilter.ValueType = fvt.bystring;\r\n  valueFilter.StringFilterType = sft.byequal;\r\n  valueFilter.Values = [ 'Volume' ];\r\n\r\n  qI.ValueFilter = valueFilter;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetWorkpackage = (q) => {\r\n  var workpackageId = q.workpackageId;\r\n  if (!workpackageId) return undefined;\r\n\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x._id === workpackageId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    retrieveType : q.RetrieveType,\r\n    massType : q.MassType,\r\n    valueFilter: q.ValueFilter.ApiData,\r\n    workpackageId : q.workpackageId\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as util from './MassExportSettingDataVMUtil'\r\nimport * as valueSettingVMUtil from './exportSetting/MES_ValueSettingVMUtil'\r\nimport * as valueSettingUtil from './exportSetting/MES_ValueSettingUtil'\r\n\r\nexport default class MassExportSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueSettingVMs: observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  elementFilterVM\r\n  get ElementFilterVM() {\r\n    if (!this.elementFilterVM) {\r\n      this.elementFilterVM = util.GetElementFilterVM(this);\r\n    }\r\n    return this.elementFilterVM;\r\n  }\r\n  set ElementFilterVM(v) {\r\n    this.elementFilterVM = v;\r\n    var modelItem = this.ModelItem;\r\n    if (!v) {\r\n      modelItem.ElementFilter = v;\r\n    }\r\n    else {\r\n      modelItem.ElementFilter = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  elementFilterVMStorageList = undefined\r\n  get ElementFilterVMStorageList() {\r\n    if (!this.elementFilterVMStorageList) {\r\n      this.elementFilterVMStorageList = util.GetElementFilterVMStorageList(this);\r\n    }\r\n    return this.elementFilterVMStorageList;\r\n  }\r\n  set ElementFilterVMStorageList(v) {\r\n    this.elementFilterVMStorageList = v;\r\n\r\n    var selectVM = this.ElementFilterSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.SelectedIndex = 0;\r\n  }\r\n\r\n  elementFilterSelectVM\r\n  get ElementFilterSelectVM() {\r\n    if (!this.elementFilterSelectVM) {\r\n      var storageList = this.ElementFilterVMStorageList ? this.ElementFilterVMStorageList : [];\r\n\r\n      var obj = this.elementFilterSelectVM = selectVMUtil.get(storageList, this.ElementFilterVM);\r\n      obj.Placeholder = 'chọn bộ lọc'\r\n      obj.OnSelectedItemChanged = (v) => this.ElementFilterVM = v;\r\n    }\r\n    return this.elementFilterSelectVM;\r\n  }\r\n\r\n  valueSettingVMs = undefined\r\n  get ValueSettingVMs() {\r\n    if (!this.valueSettingVMs) {\r\n      this.valueSettingVMs = util.GetValueSettingVMs(this);\r\n    }\r\n    return this.valueSettingVMs;\r\n  }\r\n  set ValueSettingVMs(v) {\r\n    var list = this.valueSettingVMs;\r\n    var modelList = this.ModelItem.ValueSettings;\r\n\r\n    var oldCount = list.length;\r\n    var newCount = v.length;\r\n\r\n    list.forEach((x, i) => {\r\n      if (i >= newCount) return;\r\n      x.SetData(v[i]);\r\n    });\r\n\r\n    var delta = Math.abs(oldCount - newCount);\r\n    if (oldCount > newCount) {\r\n      list.splice(newCount, delta);\r\n      modelList.splice(newCount, delta);\r\n    }\r\n    else if (oldCount < newCount) {\r\n      for (var i = 0; i < delta; i++) {\r\n        var originItemVM = v[oldCount + i];\r\n\r\n        var item = valueSettingUtil.Clone\r\n          (originItemVM.ModelItem, this.ModelItem);\r\n        modelList.push(item);\r\n\r\n        var itemVM = valueSettingVMUtil.get(item, this);\r\n        list.push(itemVM);\r\n      }\r\n    }\r\n  }\r\n\r\n  AddNewValueSettingVM = () => {\r\n    var item = this.ModelItem.AddNewValueSetting();\r\n    var itemView = valueSettingVMUtil.get(item, this);\r\n    this.ValueSettingVMs.push(itemView);\r\n    return itemView;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.ElementFilterSelectVM.InitialItem = v.ElementFilterVM;\r\n    this.ValueSettingVMs = v.ValueSettingVMs;\r\n  }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport MassExportSettingDataVM from './MassExportSettingDataVM';\r\nimport * as valueSettingVMUtil from './exportSetting/MES_ValueSettingVMUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassExportSettingDataVM();\r\n  qI.ModelItem = q;\r\n\r\n  pmDataVM().ElementFilterSetting_DictVM.OnGetItemsDone = (v) => {\r\n    qI.ElementFilterVMStorageList = GetElementFilterVMStorageList(qI);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetElementFilterVM = (q) => {\r\n  var elemFilter = q.ModelItem.ElementFilter;\r\n  if (!elemFilter) return undefined;\r\n\r\n  var list = pmDataVM().ElementFilterSetting_DictVM.Items;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x.ModelItem === elemFilter);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetElementFilterVMStorageList = (q) => {\r\n  return pmDataVM().ElementFilterSetting_DictVM.Items;\r\n}\r\n\r\nexport const GetValueSettingVMs = (q) => {\r\n  var valueSettings = q.ModelItem.ValueSettings;\r\n  return valueSettings.map(x => valueSettingVMUtil.get(x, q));\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\n\r\nexport default class MassExportSettingVM extends SettingVM {\r\n  OnInitialSetDataVM = (v) => {\r\n    var valueSettingVMs = v.ValueSettingVMs;\r\n  }\r\n}","import * as dataVMUtil from './MassExportSettingDataVMUtil'\r\nimport MassExportSettingVM from \"./MassExportSettingVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassExportSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInputVM from \"../base/SettingInputVM\";\r\n\r\nexport default class MassExportSettingInputVM extends SettingInputVM {\r\n  \r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassExportSetting_DictVMUtil'\r\n\r\nexport class MassExportSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n      this.Input.EditItem = v;\r\n    }\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","import * as itemVMUtil from './MassExportSettingVMUtil'\r\nimport * as inputVMUtil from './MassExportSettingInputVMUtil'\r\nimport { MassExportSetting_DictVM } from \"./MassExportSetting_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassExportSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (dictVM) => {\r\n  var input = dictVM.ModelItem.Input;\r\n  return inputVMUtil.get(input, dictVM);\r\n}","import SettingInputVM from \"../base/SettingInputVM\";\r\nimport * as dataVMUtil from './MassExportSettingDataVMUtil'\r\nimport { message } from \"antd\";\r\nimport MassExportSettingInputVM from \"./MassExportSettingInputVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassExportSettingInputVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnAddDatabaseDone = (v) => {\r\n    var command = qI.CommandName;\r\n    message.success(`${command} setting successfully`);\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassGroupSetting_DictVMUtil'\r\n\r\nexport class MassGroupSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","import * as itemVMUtil from './MassGroupSettingVMUtil'\r\nimport { MassGroupSetting_DictVM } from \"./MassGroupSetting_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n","\r\nexport default class PhaseVM {\r\n  name\r\n  get Name(){\r\n    if(!this.name){\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    if (!this.description){\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v){\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  get DisplayContent () {\r\n    return `${this.Name}`;\r\n  }\r\n}","import PhaseVM from \"./PhaseVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  var qI = new PhaseVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;  \r\n\r\n  return qI;\r\n}","export const addversion = 'addversion'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Phase_DictVMUtil'\r\nimport * as stateType from '../state/StateType'\r\nimport { message } from 'antd';\r\n\r\nexport class Phase_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable,\r\n      state : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  state = undefined\r\n  get State(){\r\n    return this.state;\r\n  }\r\n  set State(v){\r\n    this.state = v;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n\r\n  AddVersion = () => {\r\n    this.State = stateType.addversion;\r\n  }\r\n\r\n  Cancel = () => {\r\n    this.State = undefined;\r\n  }\r\n\r\n  OK = () => {\r\n    var name = this.Input.Name;\r\n    var index = this.Items.findIndex(x => x.Name === name);\r\n    if (index !== -1){\r\n      message.warning('version name already exists!');\r\n      return;\r\n    }\r\n\r\n    this.State = undefined;\r\n    this.ModelItem.AddMassVersion();\r\n  }\r\n}","import * as textVMUtil from '../../../text/TextVMUtil'\r\n\r\nexport default class PhaseInputVM {\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên version\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM){\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n}","import * as itemVMUtil from './PhaseVMUtil'\r\nimport { Phase_DictVM } from \"./Phase_DictVM\";\r\nimport * as inputVMUtil from './PhaseInputVMUtil'\r\n\r\nexport const get = (q) => {\r\n  var qI = new Phase_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone_Funcs.push((v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  });\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (q) => {\r\n  return inputVMUtil.get(q.ModelItem.Input, q);\r\n}","import PhaseInputVM from \"./PhaseInputVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new PhaseInputVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}","import * as util from './ProjectVMUtil'\r\n\r\nexport default class ProjectVM {\r\n  get _id(){\r\n    return this.ModelItem._id;\r\n  }\r\n  \r\n  name\r\n  get Name(){\r\n    if(!this.name){\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  code\r\n  get Code(){\r\n    if (!this.code){\r\n      this.code = this.ModelItem.Code;\r\n    }\r\n    return this.code;\r\n  }\r\n  set Code(v){\r\n    this.code = v;\r\n    this.ModelItem.Code = v;\r\n  }\r\n\r\n  phase_DictVM\r\n  get Phase_DictVM(){\r\n    if (!this.phase_DictVM){\r\n      this.phase_DictVM = util.GetPhase_DictVM(this);\r\n    }\r\n    return this.phase_DictVM;\r\n  }\r\n\r\n  rebarMass_Dict\r\n  get RebarMass_Dict(){\r\n    if (!this.rebarMass_Dict){\r\n      this.rebarMass_Dict = this.ModelItem.RebarMass_Dict;\r\n    }\r\n    return this.rebarMass_Dict;\r\n  }\r\n\r\n  get InputExportSet(){\r\n    return this.ModelItem.InputExportSet;\r\n  }\r\n\r\n  get DisplayContent () {\r\n    return `${this.Code} - ${this.Name}`;\r\n  }\r\n}","import * as phaseDictVMUtil from '../phase/Phase_DictVMUtil'\r\nimport ProjectVM from \"./ProjectVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  var qI = new ProjectVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;  \r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPhase_DictVM = (q) => {\r\n  var phaseDict = q.ModelItem.Phase_Dict;\r\n  return phaseDictVMUtil.get(phaseDict);\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Project_DictVMUtil'\r\n\r\nexport class Project_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n    this.ModelItem.Items = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n}","import * as itemVMUtil from './ProjectVMUtil'\r\nimport { Project_DictVM } from \"./Project_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new Project_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassResultCompVMUtil'\r\nimport * as multiSelectVMUtil from '../../../../select/MultiSelectVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as textUtil from '../../../../text/TextVMUtil'\r\n\r\nexport default class MassResultCompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsShowProjectSelect : observable,\r\n      CanHavePhase : observable,\r\n      isHavePhase : observable,\r\n      IsDataPending : observable\r\n    })\r\n  }\r\n\r\n  projects\r\n  get Projects(){\r\n    if (!this.projects){\r\n      this.projects = this.ModelItem.Projects;\r\n    }\r\n    return this.projects;\r\n  }\r\n  set Projects(v){\r\n    this.projects = v;\r\n    this.ModelItem.Projects = v;\r\n  }\r\n\r\n  projectVMs\r\n  get ProjectVMs(){\r\n    if (!this.projectVMs){\r\n      this.projectVMs = util.GetProjectVMs(this);\r\n    }\r\n    return this.projectVMs;\r\n  }\r\n  set ProjectVMs(v){\r\n    this.projectVMs = v;\r\n    this.Projects = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  projectVMStorageList\r\n  get ProjectVMStorageList() {\r\n    if (!this.projectVMStorageList){\r\n      this.projectVMStorageList = util.GetProjectVMStorageList(this);\r\n    }\r\n    return this.projectVMStorageList;\r\n  }\r\n  set ProjectVMStorageList(v){\r\n    this.projectVMStorageList = v;\r\n  \r\n    this.projectVMs = util.GetProjectVMs(this);\r\n\r\n    var selectVM = this.ProjectSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.projectVMs;\r\n  }\r\n\r\n  projectSelectVM\r\n  get ProjectSelectVM(){\r\n    if (!this.projectSelectVM){\r\n      var list = this.ProjectVMStorageList ? this.ProjectVMStorageList : [];\r\n      var obj = this.projectSelectVM = multiSelectVMUtil.get(list, this.ProjectVMs);\r\n      obj.Placeholder = 'chọn dự án'\r\n      obj.OnSelectedItemChanged = (v) => this.ProjectVMs = v;\r\n    }\r\n    return this.projectSelectVM;\r\n  }\r\n\r\n  IsShowProjectSelect = true\r\n\r\n  phases\r\n  get Phases(){\r\n    if (!this.phases){\r\n      this.phases = this.ModelItem.Phases;\r\n    }\r\n    return this.phases;\r\n  }\r\n  set Phases(v){\r\n    this.phases = v;\r\n    this.ModelItem.Phases = v;\r\n  }\r\n\r\n  phaseVMs\r\n  get PhaseVMs(){\r\n    if (!this.phaseVMs){\r\n      this.phaseVMs = util.GetPhaseVMs(this);\r\n    }\r\n    return this.phaseVMs;\r\n  }\r\n  set PhaseVMs(v){\r\n    this.phaseVMs = v;\r\n    this.Phases = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  massItem_Dict\r\n  get MassItem_Dict(){\r\n    if (!this.massItem_Dict){\r\n      this.massItem_Dict = this.ModelItem.MassItem_Dict;\r\n    }\r\n    return this.massItem_Dict;\r\n  }\r\n\r\n  phaseVMStorageList\r\n  get PhaseVMStorageList() {\r\n    return this.phaseVMStorageList;\r\n  }\r\n  set PhaseVMStorageList(v){\r\n    this.phaseVMStorageList = v;\r\n  \r\n    this.phaseVMs = util.GetPhaseVMs(this);\r\n\r\n    var selectVM = this.PhaseSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.phaseVMs;\r\n  }\r\n\r\n  phaseSelectVM\r\n  get PhaseSelectVM(){\r\n    if (!this.phaseSelectVM){\r\n      var list = this.PhaseVMStorageList ? this.PhaseVMStorageList : [];\r\n      var obj = this.phaseSelectVM = multiSelectVMUtil.get(list, this.PhaseVMs);\r\n      obj.Placeholder = 'chọn version'\r\n      obj.OnSelectedItemChanged = (v) => this.PhaseVMs = v;\r\n    }\r\n    return this.phaseSelectVM;\r\n  }\r\n\r\n  CanHavePhase = false\r\n\r\n  isHavePhase = undefined\r\n  get IsHavePhase(){\r\n    if (!this.isHavePhase){\r\n      this.isHavePhase = this.ModelItem.IsHavePhase;\r\n    }\r\n    return this.isHavePhase;\r\n  }\r\n  set IsHavePhase(v){\r\n    this.isHavePhase = v;\r\n    this.ModelItem.IsHavePhase = v;\r\n  }\r\n\r\n  isShowPhaseSelectVM\r\n  get IsShowPhaseSelectVM() {\r\n    if (!this.isShowPhaseSelectVM) {\r\n      var obj = this.isShowPhaseSelectVM\r\n        = checkboxVMUtil.get(\"So sánh các version\", this.IsHavePhase);\r\n\r\n      obj.onCheckChange = (v) => {\r\n        this.IsHavePhase = v;\r\n      };\r\n    }\r\n    return this.isShowPhaseSelectVM;\r\n  }\r\n\r\n  get MassGroupSetting(){\r\n    return this.ModelItem.MassGroupSetting;\r\n  }\r\n  set MassGroupSetting(v){\r\n    this.ModelItem.MassGroupSetting = v;\r\n  }\r\n\r\n  massGroupSettingStorageList\r\n  get MassGroupSettingStorageList(){\r\n    if (!this.massGroupSettingStorageList){\r\n      this.massGroupSettingStorageList = \r\n        util.GetMassGroupSettingStorageList(this);\r\n    }\r\n  }\r\n  set MassGroupSettingStorageList(v){\r\n    this.massGroupSettingStorageList = v;\r\n\r\n    var selectVM = this.MassGroupSettingSelectVM;\r\n    selectVM.Items = v;\r\n  }\r\n\r\n  massGroupSettingSelectVM\r\n  get MassGroupSettingSelectVM(){\r\n    if (!this.massGroupSettingSelectVM){\r\n      var list = this.MassGroupSettingStorageList ? \r\n        this.MassGroupSettingStorageList : [];\r\n      var obj = this.massGroupSettingSelectVM = \r\n        selectVMUtil.get(list);\r\n      obj.CanClear = true;\r\n      obj.Placeholder = 'chọn bộ set khối lượng'\r\n      obj.OnSelectedItemChanged = (v) => this.MassGroupSetting = v;\r\n    }\r\n    return this.massGroupSettingSelectVM;\r\n  }\r\n\r\n  IsDataPending = false;\r\n\r\n  get LoadingSpinTip(){\r\n    return `loading data ... (${(this.HandledRatio * 100).toFixed(1)}%)`;\r\n  }\r\n\r\n  loadingSpinTipVM\r\n  get LoadingSpinTipVM(){\r\n    if (!this.loadingSpinTipVM){\r\n      this.loadingSpinTipVM = textUtil.get(this.LoadingSpinTip);\r\n    }\r\n    return this.loadingSpinTipVM;\r\n  }\r\n\r\n  handledRatio = 0\r\n  get HandledRatio(){\r\n    return this.handledRatio;\r\n  }\r\n  set HandledRatio(v){\r\n    this.handledRatio = v;\r\n    this.LoadingSpinTipVM.Content =  this.LoadingSpinTip;\r\n  }\r\n\r\n  // function\r\n  GetMassData = () => {\r\n    this.IsDataPending = true;\r\n    this.HandledRatio = 0;\r\n    this.ModelItem.GetMassData();\r\n  }\r\n}","import { message } from \"antd\";\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport MassResultCompVM from \"./MassResultCompVM\"\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, isfetchProjects = true) => {\r\n  var qI = new MassResultCompVM();\r\n  qI.ModelItem = q;\r\n\r\n  if (isfetchProjects) {\r\n    pmDataVM().Project_DictVM.OnGetItemsDone = (v) => {\r\n      qI.ProjectVMStorageList = GetProjectVMStorageList(qI);\r\n    }\r\n  }\r\n\r\n  q.OnGetItemsDone_Funcs.push(() => {\r\n    message.success('get mass data successfully');\r\n  })\r\n\r\n  var massTable = q.MassItem_Dict.MassTable;\r\n  massTable.OnIsUpdateDataDone_Funcs.push(() => {\r\n    qI.IsDataPending = false;\r\n  })\r\n  massTable.OnSetHandledRatio_Funcs.push((v) => {\r\n    qI.HandledRatio = v;\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetProjectVMStorageList = (q) => {\r\n  return pmDataVM().Project_DictVM.Items;\r\n}\r\n\r\nexport const GetProjectVMs = (q) => {\r\n  var storageList = q.ProjectVMStorageList;\r\n  if (!storageList) return [];\r\n\r\n  var list = [];\r\n\r\n  var projects = q.Projects;\r\n  projects.forEach(x => {\r\n    var index = storageList.findIndex(y => y.ModelItem === x);\r\n    if (index !== -1) {\r\n      list.push(storageList[index]);\r\n    }\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetPhaseVMs = (q) => {\r\n  var storageList = q.PhaseVMStorageList;\r\n  if (!storageList) return [];\r\n\r\n  var list = [];\r\n\r\n  var phases = q.Phases;\r\n  phases.forEach(x => {\r\n    var index = storageList.findIndex(y => y.ModelItem === x);\r\n    if (index !== -1) {\r\n      list.push(storageList[index]);\r\n    }\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetMassGroupSettingStorageList = (q) => {\r\n  var dict = pmData().MassGroupSetting_Dict;\r\n  var items = dict.Items;\r\n  if (!items){\r\n    dict.OnGetItemsDone_Funcs.push(() => {\r\n      q.MassGroupSettingStorageList = dict.Items;\r\n    })\r\n  }\r\n  return items;\r\n}","export const _default = \"default\";\r\nexport const edit = \"edit\";","import * as util from './RenderItemUtil'\r\n\r\nexport default class RenderItem {\r\n  render\r\n  get Render(){\r\n    if (!this.render){\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v){\r\n    this.render = v;\r\n  }\r\n}","import InputView from \"../input/InputView\";\r\nimport RenderItem from \"./RenderItem\"\r\nimport * as rs from './RenderState'\r\nimport * as textUtil from '../text/TextVMUtil'\r\n\r\nexport const get = (state, render) => {\r\n  var qI = new RenderItem();\r\n  qI.State = state;\r\n  qI.Render = render;\r\n  return qI;\r\n}\r\n\r\nexport const GetRender = (q) => {\r\n  switch (q.State) {\r\n    case rs._default:\r\n      return (val) => val;\r\n    case rs.edit:\r\n      return (value, item, dataIndex) => {\r\n        if (!dataIndex) return value;\r\n\r\n        var inputVM = textUtil.get(value, 'input');\r\n\r\n        var length = dataIndex.length;\r\n        var obj = item;\r\n        dataIndex.filter((x, i) => i < length - 1)\r\n          .forEach((x) => obj = obj[x]);\r\n\r\n        inputVM.onSetContent = (v) => obj[dataIndex[length-1]] = v;\r\n        return <InputView store={inputVM} />\r\n      };\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import * as renderUtil from './RenderItemUtil'\r\n\r\nexport default class Render_Dict {\r\n  Items = []\r\n\r\n  GetRender = (state) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x.State === state);\r\n    if (index === -1){\r\n      var item = renderUtil.get(state);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from './RenderState'\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport Render_Dict from './Render_Dict';\r\n\r\nexport default class TableColumn {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Title : observable,\r\n    })\r\n  }\r\n\r\n  RenderState = rs._default;\r\n\r\n  Title = undefined\r\n\r\n  render_Dict\r\n  get Render_Dict(){\r\n    if (!this.render_Dict){\r\n      this.render_Dict = new Render_Dict();\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n  set Render_Dict(v){\r\n    this.render_Dict = v;\r\n  }\r\n}","import TableColumn from \"./TableColumn\"\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport { Button } from \"antd\";\r\nimport * as rs from './RenderState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport const get = (title, dataIndex, renders, table) => {\r\n  var qI = new TableColumn();\r\n  qI.Title = title;\r\n  qI.DataIndex = dataIndex;\r\n  qI.Key = genUtil.randomId();\r\n  qI.Table = table;\r\n\r\n  var dict = qI.Render_Dict;\r\n  if (renders) {\r\n    renders.forEach(x => {\r\n      dict.GetRender(x.State).Render = x.Render\r\n    });\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetActionColumn = (table) => {\r\n  var title = undefined;\r\n  if (table.CanAdd) {\r\n    var add = table.AddItem;\r\n\r\n    title = <Button type='primary' size='small'\r\n      onClick={add}>Add</Button>\r\n  }\r\n\r\n  var renders = [\r\n    renderUtil.get(rs._default, (val, item, dataIndex, cell, row) => {\r\n      var editElem = '';\r\n      if (table.CanEdit) {\r\n        var edit = () => row.Edit();\r\n        editElem = <Button type='primary' size='small'\r\n          style={{ backgroundColor: '#faad14', border: 'none' }}\r\n          onClick={edit}>Edit</Button>\r\n      }\r\n\r\n      var delElem = '';\r\n      if (table.CanDelete) {\r\n        var del = () => table.DeleteItem(item, row);\r\n\r\n        delElem = <Button type='primary' danger size='small'\r\n          onClick={del}>Delete</Button>\r\n      }\r\n      return <>\r\n        {editElem}{delElem}\r\n      </>\r\n    }),\r\n    renderUtil.get(rs.edit, (val, item, dataIndex, cell, row) => {\r\n      var ok = () => row.OK();\r\n      return <Button type='primary' size='small'\r\n        onClick={ok}>OK</Button>\r\n    })\r\n  ]\r\n\r\n  return get(title, null, renders, table);\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './TableRowUtil'\r\nimport * as rs from './RenderState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport default class TableRow {\r\n  key\r\n  get Key() {\r\n    if (!this.key) {\r\n      this.key = this.Item._id ? this.Item._id : this.Item.id;\r\n      if (!this.key){\r\n        this.key = genUtil.randomId();\r\n      }\r\n    }\r\n    return this.key;\r\n  }\r\n\r\n  cells\r\n  get Cells() {\r\n    if (!this.cells) {\r\n      this.cells = util.GetCells(this);\r\n    }\r\n    return this.cells;\r\n  }\r\n\r\n  Edit = () => {\r\n    this.Cells.forEach(x => x.RenderState = rs.edit);\r\n  }\r\n\r\n  OK = () => {\r\n    this.Cells.forEach(x => x.RenderState = rs._default);\r\n    this.Table.EditItem(this.Item);\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from './RenderState'\r\n\r\nexport default class TableCell {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      renderState: observable\r\n    })\r\n  }\r\n\r\n  get Key() {\r\n    return `${this.Column.Key}_${this.Row.Key}`;\r\n  }\r\n\r\n  get Item() {\r\n    return this.Row.Item;\r\n  }\r\n\r\n  renderState = undefined\r\n  get RenderState() {\r\n    if (!this.renderState){\r\n      this.renderState = this.Column.RenderState;\r\n    }\r\n    return this.renderState;\r\n  }\r\n  set RenderState(v){\r\n    this.renderState = v;\r\n  }\r\n\r\n  render_Dict\r\n  get Render_Dict() {\r\n    if (!this.render_Dict) {\r\n      this.render_Dict = this.Column.Render_Dict;\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n\r\n  get DataIndex() {\r\n    return this.Column.DataIndex;\r\n  }\r\n\r\n  Render = () => {\r\n    var dataIndex = this.DataIndex;\r\n    var item = this.Item;\r\n\r\n    var value = undefined;\r\n\r\n    if (dataIndex) {\r\n      value = item;\r\n      dataIndex.forEach(x => {\r\n        value = value[x]\r\n      })\r\n    }\r\n\r\n    var render = this.Render_Dict.GetRender(this.RenderState);\r\n    return render.Render(value, item, dataIndex, this, this.Row);\r\n  }\r\n}","import TableRow from \"./TableRow\"\r\nimport * as cellUtil from './TableCellUtil'\r\n\r\nexport const get = (item, table) => {\r\n  var qI = new TableRow();\r\n  qI.Item = item;\r\n  qI.Table = table;\r\n  return qI;\r\n}\r\n\r\nexport const GetCells = (q) => {\r\n  var columns = q.Table.Columns;\r\n  return columns.map(x => cellUtil.get(q, x));\r\n}","import TableCell from \"./TableCell\"\r\n\r\nexport const get = (row, col) => {\r\n  var qI = new TableCell();\r\n  qI.Row = row;\r\n  qI.Column = col;\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport TableColumn from './TableColumn';\r\nimport * as colUtil from './TableColumnUtil'\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport * as rs from './RenderState'\r\nimport * as util from './TableVMUtil'\r\nimport * as textUtil from '../text/TextVMUtil'\r\nimport InputView from '../input/InputView'\r\nimport { Button } from 'antd';\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport * as rowUtil from './TableRowUtil'\r\n\r\nexport default class TableVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      columns: observable,\r\n      dataSource: observable,\r\n      rows: observable,\r\n      CanAdd: observable,\r\n      CanDelete: observable,\r\n      CanEdit: observable,\r\n      IsShowActionColumn: observable\r\n    })\r\n  }\r\n\r\n  CanAdd = true\r\n  CanDelete = true\r\n  CanEdit = true\r\n  IsShowActionColumn = true\r\n\r\n  columns = undefined\r\n  get Columns() {\r\n    if (!this.columns) {\r\n      this.columns = [\r\n        colUtil.get('Tên cấu kiện', 'ElementName', null, this),\r\n        colUtil.get('Đường kính', 'Diameter', null, this),\r\n      ];\r\n\r\n      if (this.IsShowActionColumn) {\r\n        this.columns.push(colUtil.GetActionColumn(this));\r\n      }\r\n    }\r\n    return this.columns;\r\n  }\r\n  set Columns(v) {\r\n    this.columns = v;\r\n    this.Rows = undefined;\r\n  }\r\n\r\n  dataSource = undefined\r\n  get DataSource() {\r\n    if (!this.dataSource) {\r\n      this.dataSource = [\r\n        {\r\n          id: 1,\r\n          ElementName: 'W1',\r\n          Diameter: '18',\r\n          Weight: '30'\r\n        },\r\n        {\r\n          id: 2,\r\n          ElementName: 'W2',\r\n          Diameter: '20',\r\n          Weight: '3.7'\r\n        },\r\n      ]\r\n    }\r\n    return this.dataSource;\r\n  }\r\n  set DataSource(v) {\r\n    this.dataSource = v;\r\n    this.Rows = undefined;\r\n  }\r\n\r\n  rows = undefined\r\n  get Rows() {\r\n    if (!this.rows) {\r\n      this.rows = util.GetRows(this);\r\n    }\r\n    return this.rows;\r\n  }\r\n  set Rows(v) {\r\n    this.rows = v;\r\n  }\r\n\r\n  AddItem = () => {\r\n    var item = undefined\r\n    if (this.OnGetItemForAdd) {\r\n      item = this.OnGetItemForAdd();\r\n    } else {\r\n      item = {\r\n        Key: genUtil.randomId()\r\n      };\r\n    }\r\n    this.DataSource.push(item);\r\n\r\n    var row = rowUtil.get(item, this);\r\n    this.Rows.push(row);\r\n    row.Edit();\r\n  }\r\n\r\n  DeleteItem = (item, row) => {\r\n    var list = this.DataSource;\r\n    var index = list.indexOf(item);\r\n    list.splice(index, 1);\r\n    this.Rows.splice(index, 1);\r\n\r\n    if (this.OnDeleteItem){\r\n      this.OnDeleteItem(item);\r\n    }\r\n  }\r\n\r\n  EditItem = (item) => {\r\n    if (this.OnEditItem){\r\n      this.OnEditItem(item);\r\n    }\r\n  }\r\n}","import * as rowUtil from './TableRowUtil'\r\n\r\nexport const GetRows = (q) => {\r\n  return q.DataSource.map(x => rowUtil.get(x, q));\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './WorkItemExportDataVMUtil'\r\n\r\nexport class WorkItemExportDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\nimport * as checkboxUtil from '../../../../checkbox/CheckboxVMUtil'\r\n\r\nexport class WorkItemExportSettingVM extends SettingVM {\r\n  IsCategoryChecked = true\r\n\r\n  categoryCheckboxVM\r\n  get CategoryCheckboxVM(){\r\n    if (!this.categoryCheckboxVM){\r\n      debugger\r\n      var obj =this.categoryCheckboxVM = \r\n        checkboxUtil.get(undefined, this.IsCategoryChecked)\r\n    }\r\n    return this.categoryCheckboxVM;\r\n  }\r\n}","import * as dataVMUtil from './WorkItemExportDataVMUtil'\r\nimport { WorkItemExportSettingVM } from './WorkItemExportSettingVM';\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new WorkItemExportSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { WorkItemExportDataVM } from './WorkItemExportDataVM';\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new WorkItemExportDataVM();\r\n  qI.ModelItem = q;\r\n\r\n  return qI;\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport class WorkItemExportSetting extends Setting {\r\n  \r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './WorkItemExportSetting_DictVMUtil'\r\nimport * as itemUtil from './WorkItemExportSettingVMUtil';\r\nimport { WorkItemExportSetting } from './WorkItemExportSetting';\r\n\r\nexport class WorkItemExportSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = [\r\n        itemUtil.get(new WorkItemExportSetting())\r\n      ]\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  tableVM\r\n  get TableVM() {\r\n    if (!this.tableVM) {\r\n      this.tableVM = util.GetTableVM(this);\r\n    }\r\n    return this.tableVM;\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as checkboxVMUtil from './CheckboxVMUtil'\r\n\r\nclass CheckboxView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = checkboxVMUtil.get(false);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onCheckedChange = (e) => {\r\n    var { checked } = e.target;\r\n    this.state.Ischecked = checked;\r\n  }\r\n\r\n  render() {\r\n    var { ischecked, name, isDisable } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <label>\r\n        <input type=\"checkbox\" \r\n          checked={ischecked}\r\n          onChange={this.onCheckedChange} disabled={isDisable}/>\r\n          {name} \r\n        </label>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(CheckboxView)","import TableVM from \"../../../../table/TableVM\";\r\nimport { WorkItemExportSetting_DictVM } from \"./WorkItemExportSetting_DictVM\";\r\nimport * as colUtil from '../../../../table/TableColumnUtil'\r\nimport * as renderUtil from '../../../../table/RenderItemUtil'\r\nimport * as rs from '../../../../table/RenderState'\r\nimport CheckboxView from '../../../../checkbox/CheckboxView'\r\nimport { WorkItemExportSettingVM } from \"./WorkItemExportSettingVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new WorkItemExportSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone_Funcs.push((v) => {\r\n    var obj = qI.Items;\r\n  });\r\n\r\n  return qI;\r\n}\r\n\r\n\r\nexport const GetTableVM = (q) => {\r\n  var qI = new TableVM();\r\n\r\n  qI.DataSource = q.Items;\r\n\r\n  var nameCol = colUtil.get('Tên thiết lập', ['Name'], null, qI);\r\n  var isCateCol = colUtil.get('Category', null, [\r\n    renderUtil.get(rs._default, (val, item) => {\r\n      debugger\r\n      var checkBoxVM = item.CategoryCheckboxVM;\r\n      return <CheckboxView store={item.CategoryCheckboxVM}/>\r\n    })\r\n  ], qI);\r\n  var isSubWorkItemCol = colUtil.get('Hạng mục phụ', null, [\r\n    renderUtil.get(rs._default, (val, item) => {\r\n      return <CheckboxView />\r\n    })\r\n  ], qI);\r\n\r\n  qI.Columns = [\r\n    nameCol, isCateCol, isSubWorkItemCol,\r\n    colUtil.GetActionColumn(qI)\r\n  ]\r\n\r\n  qI.OnGetItemForAdd = () => {\r\n    return new WorkItemExportSettingVM();\r\n  }\r\n  \r\n  return qI;\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport { PMData } from '../model/PMData';\r\n\r\nimport * as workpackage_DictVMUtil from '../../entity/workpackage/Workpackage_DictVMUtil'\r\nimport * as elementFilterSetting_DictVMUtil from \r\n  '../../entity/setting/elementFilter/ElementFilterSetting_DictVMUtil'\r\nimport * as massExportSetting_DictVMUtil from \r\n  '../../entity/setting/massExport/MassExportSetting_DictVMUtil'\r\nimport * as massGroupSetting_DictVMUtil from \r\n  '../../entity/setting/massGroup/MassGroupSetting_DictVMUtil'\r\nimport * as project_DictVMUtil from '../../entity/project/Project_DictVMUtil'\r\n\r\nimport * as massResultCompVMUtil from '../../entity/mass/result/MassResultCompVMUtil'\r\n\r\nimport * as fvt from '../../entity/filter/FilterValueType'\r\nimport * as sft from '../../entity/filter/StringFilterType'\r\n\r\nimport * as wieDictVMUtil from \r\n  '../../entity/setting/workitemexport/WorkItemExportSetting_DictVMUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport const GetWorkpackage_DictVM = (data) => {\r\n  return workpackage_DictVMUtil.get(pmData().Workpackage_Dict);\r\n}\r\n\r\nexport const GetElementFilterSetting_DictVM = (data) => {\r\n  return elementFilterSetting_DictVMUtil.get\r\n    (pmData().ElementFilterSetting_Dict);\r\n}\r\n\r\nexport const GetMassExportSetting_DictVM = (data) => {\r\n  return massExportSetting_DictVMUtil.get\r\n    (pmData().MassExportSetting_Dict);\r\n}\r\n\r\nexport const GetMassGroupSetting_DictVM = (data) => {\r\n  return massGroupSetting_DictVMUtil.get\r\n    (pmData().MassGroupSetting_Dict);\r\n}\r\n\r\nexport const GetProject_DictVM = (data) => {\r\n  return project_DictVMUtil.get\r\n    (pmData().Project_Dict);\r\n}\r\n\r\nexport const GetMassResultCompVM= (data) => {\r\n  return massResultCompVMUtil.get\r\n  (pmData().MassResultComp);\r\n}\r\n\r\nexport const GetWorkItemExportSetting_Dict = (data) => {\r\n  return wieDictVMUtil.get(pmData().WorkItemExportSetting_Dict);\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMData } from '../model/PMData';\r\nimport * as util from './PMDataVMUtil'\r\n\r\nexport class PMDataVM {\r\n  constructor() {\r\n    \r\n  }\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new PMDataVM();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  get pmData(){\r\n    return PMData.Instance;\r\n  }\r\n\r\n  workpackage_DictVM\r\n  get Workpackage_DictVM() {\r\n    if (!this.workpackage_DictVM){\r\n      this.workpackage_DictVM = util.GetWorkpackage_DictVM();\r\n    }\r\n    return this.workpackage_DictVM;\r\n  }\r\n\r\n  elementFilterSetting_DictVM\r\n  get ElementFilterSetting_DictVM() {\r\n    if (!this.elementFilterSetting_DictVM){\r\n      this.elementFilterSetting_DictVM = util.GetElementFilterSetting_DictVM();\r\n    }\r\n    return this.elementFilterSetting_DictVM;\r\n  }\r\n\r\n  massExportSetting_DictVM\r\n  get MassExportSetting_DictVM() {\r\n    if (!this.massExportSetting_DictVM){\r\n      this.massExportSetting_DictVM = util.GetMassExportSetting_DictVM();\r\n    }\r\n    return this.massExportSetting_DictVM;\r\n  }\r\n\r\n  massGroupSetting_DictVM\r\n  get MassGroupSetting_DictVM() {\r\n    if (!this.massGroupSetting_DictVM){\r\n      this.massGroupSetting_DictVM = util.GetMassGroupSetting_DictVM();\r\n    }\r\n    return this.massGroupSetting_DictVM;\r\n  }\r\n\r\n  project_DictVM\r\n  get Project_DictVM() {\r\n    if (!this.project_DictVM){\r\n      this.project_DictVM = util.GetProject_DictVM();\r\n    }\r\n    return this.project_DictVM;\r\n  }\r\n\r\n  massResultCompVM\r\n  get MassResultCompVM(){\r\n    if (!this.massResultCompVM){\r\n      this.massResultCompVM = util.GetMassResultCompVM();\r\n    }\r\n    return this.massResultCompVM;\r\n  }\r\n  set MassResultCompVM(v) {\r\n    this.massResultCompVM = v;\r\n    if (!v)\r\n    {\r\n      this.pmData.MassResultComp = v;\r\n    }\r\n    else{\r\n      this.pmData.MassResultComp = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  filterValueTypes;\r\n  get FilterValueTypes() {\r\n    if (!this.filterValueTypes){\r\n      this.filterValueTypes = this.pmData.FilterValueTypes;\r\n    }\r\n    return this.filterValueTypes;\r\n  }\r\n\r\n  stringFilterTypes;\r\n  get StringFilterTypes() {\r\n    if (!this.stringFilterTypes){\r\n      this.stringFilterTypes = this.pmData.StringFilterTypes;\r\n    }\r\n    return this.stringFilterTypes;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = this.pmData.CategoryNames;\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n\r\n  valueRetrieveTypes\r\n  get ValueRetrieveTypes() {\r\n    if (!this.valueRetrieveTypes){\r\n      this.valueRetrieveTypes = this.pmData.ValueRetrieveTypes\r\n    }\r\n    return this.valueRetrieveTypes;\r\n  }\r\n\r\n  parameterNames;\r\n  get ParameterNames(){\r\n    if (!this.parameterNames){\r\n      this.parameterNames = this.pmData.ParameterNames;\r\n    }\r\n    return this.parameterNames;\r\n  }\r\n\r\n  massPropertyNames;\r\n  get MassPropertyNames(){\r\n    if (!this.massPropertyNames){\r\n      this.massPropertyNames = this.pmData.MassPropertyNames;\r\n    }\r\n    return this.massPropertyNames;\r\n  }\r\n\r\n  massTypes;\r\n  get MassTypes(){\r\n    if (!this.massTypes){\r\n      this.massTypes = this.pmData.MassTypes;\r\n    }\r\n    return this.massTypes;\r\n  }\r\n\r\n  workItemExportSetting_Dict\r\n  get WorkItemExportSetting_Dict(){\r\n    if (!this.workItemExportSetting_Dict){\r\n      this.workItemExportSetting_Dict = \r\n        util.GetWorkItemExportSetting_Dict(this);\r\n    }\r\n    return this.workItemExportSetting_Dict;\r\n  }\r\n}","import * as util from './MGS_FieldVMUtil'\r\nimport * as selectVMUtil from '../../../../../select/SelectVMUtil'\r\n\r\nexport default class MGS_FieldVM {\r\n  get Index() {\r\n    return this.Dict.FieldVMs.indexOf(this);\r\n  }\r\n\r\n  get Fields(){\r\n    return this.Dict.ModelItem.Fields;\r\n  }\r\n\r\n  get Field(){\r\n    return this.Fields[this.Index];\r\n  }\r\n  set Field(v){\r\n    this.Fields[this.Index] = v;\r\n  }\r\n\r\n  get FieldStorageList(){\r\n    return util.GetFieldStorageList();\r\n  }\r\n\r\n  fieldSelectVM\r\n  get FieldSelectVM(){\r\n    if (!this.fieldSelectVM){\r\n      var obj = this.fieldSelectVM = selectVMUtil.get(this.FieldStorageList, this.Field);\r\n      obj.OnSelectedItemChanged = (v) => this.Field = v;\r\n    }\r\n    return this.fieldSelectVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    var index = this.Index;\r\n    this.Fields.splice(index, 1);\r\n    \r\n    var list = this.Dict.FieldVMs;\r\n    list.splice(index, 1);\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.FieldSelectVM.InitialItem = v.Field;\r\n  }\r\n}","import { PMDataVM } from \"../../../../single/form/PMDataVM\";\r\nimport MGS_FieldVM from \"./MGS_FieldVM\"\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MGS_FieldVM();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetFieldStorageList = () => {\r\n  return pmDataVM().MassPropertyNames;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as util from './MassGroupSettingDataVMUtil'\r\nimport * as fieldVMUtil from './field/MGS_FieldVMUtil'\r\n\r\nexport default class MassGroupSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      fieldVMs : observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  fieldVMs = undefined\r\n  get FieldVMs(){\r\n    if (!this.fieldVMs){\r\n      this.fieldVMs = util.GetFieldVMs(this);\r\n    }\r\n    return this.fieldVMs;\r\n  }\r\n  set FieldVMs(v){\r\n    var list = this.fieldVMs;\r\n    var modelList = this.ModelItem.Fields;\r\n\r\n    var oldCount = list.length;\r\n    var newCount = v.length;\r\n\r\n    list.forEach((x, i) => {\r\n      if (i >= newCount) return;\r\n      x.SetData(v[i]);\r\n    });\r\n\r\n    var delta = Math.abs(oldCount - newCount);\r\n    if (oldCount > newCount){\r\n      list.splice(newCount, delta);\r\n      modelList.splice(newCount, delta);\r\n    }\r\n    else if (oldCount < newCount){\r\n      for (var i = 0; i < delta; i++) {\r\n        var originItemVM = v[oldCount + i];\r\n\r\n        var item = originItemVM.Field;\r\n        modelList.push(item);\r\n\r\n        var itemVM = fieldVMUtil.get(item,this);\r\n        list.push(itemVM);\r\n      }\r\n    }\r\n  }\r\n\r\n  AddNewFieldVM = () => {\r\n    var item = this.ModelItem.AddNewField();\r\n    var itemView = fieldVMUtil.get(item, this);\r\n    this.FieldVMs.push(itemView);\r\n    return itemView;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.FieldVMs = v.FieldVMs;\r\n  }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport MassGroupSettingDataVM from './MassGroupSettingDataVM';\r\nimport * as fieldVMUtil from './field/MGS_FieldVMUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSettingDataVM();\r\n  qI.ModelItem = q;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetFieldVMs = (q) => {\r\n  var fields = q.ModelItem.Fields;\r\n  return fields.map(x => fieldVMUtil.get(x, q));\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\n\r\nexport default class MassGroupSettingVM extends SettingVM {\r\n  OnInitialSetDataVM = (v) => {\r\n    \r\n  }\r\n}","import * as dataVMUtil from './MassGroupSettingDataVMUtil'\r\nimport MassGroupSettingVM from './MassGroupSettingVM';\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassGroupSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data);\r\n  }    \r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as mif from '../item/MassItemField'\r\nimport MassColumn from './MassColumn';\r\nimport * as colUtil from './MassColumnUtil'\r\nimport * as rowUtil from './MassRowUtil'\r\nimport * as cellUtil from './MassCellUtil'\r\nimport * as util from './MassTableUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as filterUtil from '../../filter/EntFilterUtil'\r\nimport * as textUtil from '../../../../text/TextVMUtil'\r\nimport * as api from '../../../../../util/apiUtil'\r\nimport * as st from '../../setting/base/SettingType'\r\nimport { message } from 'antd';\r\nimport * as mgsUtil from '../../setting/massGroup/MassGroupSettingUtil'\r\nimport * as mgsVMUtil from '../../setting/massGroup/MassGroupSettingVMUtil'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as compUtil from './rowgroup/MassGroupComponentUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport default class MassTable {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsValidTable: observable,\r\n      Columns: observable,\r\n      MainRows: observable,\r\n      Cells: observable,\r\n      columnField: observable,\r\n      IsOnSaveMassGroup: observable\r\n    })\r\n  }\r\n\r\n\r\n  items\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    if (v && v.length !== 0) {\r\n      this.Build();\r\n      this.IsValidTable = true;\r\n    }\r\n    else {\r\n      this.IsValidTable = false;\r\n    }\r\n  }\r\n\r\n  IsValidTable = false\r\n\r\n  columnField = mif.Project\r\n  get ColumnField() {\r\n    return this.columnField;\r\n  }\r\n  set ColumnField(v) {\r\n    this.columnField = v;\r\n  }\r\n\r\n  massGroupSetting\r\n  get MassGroupSetting() {\r\n    return this.massGroupSetting;\r\n  }\r\n  set MassGroupSetting(v) {\r\n    this.massGroupSetting = v;\r\n    if (!v) {\r\n      this.MainMGC = v;\r\n    } else {\r\n      this.MainMGC = compUtil.Clone(v.Data.MassGroupComponent);\r\n    }\r\n  }\r\n\r\n  mainMGC\r\n  get MainMGC() {\r\n    if (!this.mainMGC) {\r\n      this.mainMGC = util.GetMainMGC(this);\r\n    }\r\n    return this.mainMGC;\r\n  }\r\n  set MainMGC(v) {\r\n    this.mainMGC = v;\r\n    this.Init();\r\n    if (!v) {\r\n      this.MainMGI = undefined;\r\n    } else {\r\n      this.MainMGI = util.GetMainMGI(this);\r\n    }\r\n  }\r\n\r\n  mainMGI\r\n  get MainMGI() {\r\n    if (!this.mainMGI) {\r\n      this.mainMGI = util.GetMainMGI(this);\r\n    }\r\n    return this.mainMGI;\r\n  }\r\n  set MainMGI(v) {\r\n    this.mainMGI = v;\r\n  }\r\n\r\n  Columns = undefined\r\n  FullRows = undefined\r\n  MainRows = undefined\r\n  Cells = undefined\r\n\r\n  Init = () => {\r\n    this.Columns = [];\r\n    this.MainRows = [];\r\n    this.FullRows = [];\r\n    this.Cells = [];\r\n  }\r\n\r\n  get AllRows() {\r\n    return util.GetAllRows(this);\r\n  }\r\n\r\n  GetColumn = (v) => {\r\n    var list = this.Columns;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Name === v);\r\n    if (index === -1) {\r\n      item = colUtil.get(v, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  GetRow = (v, supItem) => {\r\n    var list = undefined;\r\n    if (supItem) {\r\n      list = supItem.SubItems;\r\n    } else {\r\n      list = this.MainRows;\r\n    }\r\n\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Name === v);\r\n    if (index === -1) {\r\n      item = rowUtil.get(v, this);\r\n      item.SupItem = supItem;\r\n\r\n      list.push(item);\r\n      this.FullRows.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  GetCell = (col, row) => {\r\n    var list = this.Cells;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Column === col && x.Row === row);\r\n    if (index === -1) {\r\n      item = cellUtil.get(col, row, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n\r\n  Build = () => {\r\n    var colField = this.ColumnField;\r\n\r\n    if (colField === mif.Phase) {\r\n      pmData().MassResultComp.Phases.forEach(x => {\r\n        var col = this.GetColumn(mif.GetValueString(x, colField));\r\n      })\r\n    }\r\n\r\n    this.Items.forEach(x => {\r\n      switch (colField) {\r\n        case mif.Phase:\r\n          x.ValidPhasesByInput.forEach(y => {\r\n            this.HandleItem(x, y);\r\n          })\r\n          break;\r\n        default:\r\n          this.HandleItem(x, x.GetValue(colField));\r\n          break;\r\n      }\r\n    })\r\n\r\n    if (!this.IsHaveAsyncData) {\r\n      this.UpdateData();\r\n    }\r\n  }\r\n\r\n  IsHaveAsyncData = false;\r\n  IsOnSaveMassGroup = false;\r\n\r\n  HandledItems = []\r\n\r\n  OnSetHandledRatio_Funcs = []\r\n\r\n  handledRatio\r\n  get HandledRatio(){\r\n    return this.handledRatio;\r\n  }set HandledRatio(v){\r\n    this.handledRatio = v;\r\n    this.OnSetHandledRatio_Funcs.forEach(x => x(v));\r\n  }\r\n\r\n  AddHandledItems = (item) => {\r\n    this.HandledItems.push(item);\r\n    this.HandledRatio = this.HandledItems.length / this.Items.length;\r\n\r\n    if (this.HandledItems.length === this.Items.length) {\r\n      this.UpdateData();\r\n      this.HandledItems = [];\r\n    }\r\n  }\r\n\r\n  UpdateData = () => {\r\n    this.MainRows.forEach(x => x.UpdateData());\r\n    this.MainRows = rowUtil.Order(this.MainRows);\r\n\r\n    this.Cells.forEach(x => x.UpdateData());\r\n    this.IsUpdateDataDone = true;\r\n  }\r\n\r\n  OnIsUpdateDataDone_Funcs = []\r\n\r\n  set IsUpdateDataDone(v){\r\n    this.OnIsUpdateDataDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  HandleItem = (item, colFieldValue, mgc, initialRow) => {\r\n    var col =\r\n      this.GetColumn(mif.GetValueString(colFieldValue, this.ColumnField));\r\n    var rows = initialRow ? [initialRow] : [];\r\n    var mgc = mgc ? mgc : this.MainMGC;\r\n\r\n    this.HandleRowFieldIndex(item, col, rows, mgc, 0);\r\n  }\r\n\r\n  // Xử lý tạo Row với giá trị tương ứng và Cell bên trong\r\n  GetRow_Value_FieldIndex = (item, col, rows, val, mgc, rowFieldIndex) => {\r\n    var mgis = mgc.Items;\r\n    var itemCount = mgis.length;\r\n    var mgi = mgis[rowFieldIndex];\r\n\r\n    var lastRow = rows.length !== 0 ? rows[rows.length - 1] : undefined\r\n    mgi.SupRow = lastRow;\r\n\r\n    var rowField = mgi.Field;\r\n    if (!rowField) {\r\n      this.AddHandledItems(item);\r\n      return;\r\n    }\r\n\r\n    var valueString = mif.GetValueString(val, rowField);\r\n    var fullValue = lastRow ? `${lastRow.FullValue}__${valueString}` : valueString;\r\n\r\n    if (mgi.NotIncludeValues.includes(fullValue)) {\r\n      this.AddHandledItems(item);\r\n      return;\r\n    }\r\n\r\n    var row = undefined;\r\n    const addRow = (supRow) => {\r\n      return this.Handle_AddRow(fullValue, supRow);\r\n    }\r\n\r\n    const handleRow = (row) => {\r\n      row.MassGroupItem = mgi;\r\n      rows.push(row);\r\n\r\n      var subMgcs = mgi.SubComponents;\r\n      var subIndex = subMgcs.findIndex(x =>\r\n        filterUtil.IsValid(x.Filter, fullValue));\r\n      if (subIndex !== -1) {\r\n        mgc = subMgcs[subIndex];\r\n        mgc.IsHaveMassItem = true;\r\n\r\n        rowFieldIndex = -1;\r\n        itemCount = mgc.Items.length;\r\n\r\n        row.SubMassGroupComponent = mgc;\r\n      }\r\n\r\n      var cell = this.GetCell(col, row);\r\n      cell.Items.push(item);\r\n\r\n      if (rowFieldIndex === itemCount - 1) {\r\n        this.AddHandledItems(item);\r\n      } else {\r\n        this.HandleRowFieldIndex(item, col, rows, mgc, rowFieldIndex + 1);\r\n      }\r\n    }\r\n\r\n    var mgiItem = mgi.GetItem(fullValue, valueString);\r\n    var replaceMgi = mgiItem.NewMGI;\r\n    if (replaceMgi) {\r\n      // Thêm Value-Title cho MassGroupItem\r\n      replaceMgi.GetItem(fullValue, valueString);\r\n\r\n      this.Handle_ReplaceMGI(replaceMgi, addRow, handleRow);\r\n    } else {\r\n      row = addRow(lastRow);\r\n      handleRow(row);\r\n    }\r\n  }\r\n\r\n  Handle_AddRow = (fullValue, supRow) => {\r\n    var r1 = this.GetRow(fullValue, supRow);\r\n    r1.FullValue = fullValue;\r\n    return r1;\r\n  }\r\n\r\n  Handle_ReplaceMGI = (replaceMgi, addRow, handleRow) => {\r\n    const awaitGetSupRowForAdd = () => {\r\n      var supRow = replaceMgi.SupRow;\r\n      var r2 = addRow(supRow);\r\n      r2.ReplaceMGI = replaceMgi;\r\n\r\n      return r2;\r\n    }\r\n\r\n    var row = undefined\r\n    if (replaceMgi.IsFirstSetSupRow) {\r\n      row = awaitGetSupRowForAdd();\r\n      handleRow(row);\r\n    } else {\r\n      replaceMgi.OnIsFirstSetSupRow_Funcs.push(() => {\r\n        row = awaitGetSupRowForAdd();\r\n        handleRow(row);\r\n      })\r\n    }\r\n  }\r\n\r\n  HandleRowFieldIndex = (item, col, rows, mgc, rowFieldIndex) => {\r\n    var rowField = mgc.Items[rowFieldIndex].Field;\r\n\r\n    var val = item.GetValue(rowField, (val) =>\r\n      this.GetRow_Value_FieldIndex(item, col, rows, val, mgc, rowFieldIndex));\r\n    if (!Array.isArray(val)) {\r\n      this.GetRow_Value_FieldIndex(item, col, rows, val, mgc, rowFieldIndex);\r\n    } else {\r\n      this.IsHaveAsyncData = true;\r\n    }\r\n  }\r\n\r\n  SaveMassGroup = () => {\r\n    this.IsOnSaveMassGroup = true;\r\n  }\r\n\r\n  massGroupName = undefined\r\n  get MassGroupName() {\r\n    if (!this.massGroupName) {\r\n      this.massGroupName = util.GetMassGroupName(this);\r\n    }\r\n    return this.massGroupName;\r\n  }\r\n  set MassGroupName(v) {\r\n    this.massGroupName = v;\r\n  }\r\n\r\n  massGroupNameVM\r\n  get MassGroupNameVM() {\r\n    if (!this.massGroupNameVM) {\r\n      var obj = this.massGroupNameVM =\r\n        textUtil.get(this.MassGroupName, 'Tên set khối lượng');\r\n      obj.onSetContent = (v) => this.MassGroupName = v;\r\n    }\r\n    return this.massGroupNameVM;\r\n  }\r\n\r\n  MassGroupInputOK = () => {\r\n    var items = pmData().MassGroupSetting_Dict.Items;\r\n    var index = items.findIndex(x => x.Name === this.MassGroupName);\r\n    var _id = undefined;\r\n    if (index !== -1) {\r\n      _id = items[index]._id;\r\n    }\r\n\r\n    var apiData = {\r\n      _id,\r\n      name: this.MassGroupName,\r\n      settingType: st.massgroup,\r\n      data: {\r\n        massGroupComponent: this.MainMGC.ApiData\r\n      }\r\n    };\r\n\r\n    var url = `https://api.bimdev.vn/api/hbs/mg`;\r\n\r\n    var command = _id ? 'edit' : 'add';\r\n    const apiFunc = () => _id ? api.put(`${url}/${command}`, apiData) :\r\n      api.post(`${url}/${command}`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        var dict = pmData().MassGroupSetting_Dict;\r\n        var item = mgsUtil.get(data, dict);\r\n        dict.Items.push(item);\r\n\r\n        var dictVM = pmDataVM().MassGroupSetting_DictVM;\r\n        var itemVM = mgsVMUtil.get(item, dictVM);\r\n        dictVM.Items.push(itemVM);\r\n\r\n        message.success(`${command} massgroup successfully`);\r\n      })\r\n\r\n    this.IsOnSaveMassGroup = false;\r\n    this.MassGroupNameVM.Content = util.GetMassGroupName(this);\r\n  }\r\n\r\n  MassGroupInputCancel = () => {\r\n    this.IsOnSaveMassGroup = false;\r\n    this.MassGroupNameVM.Content = util.GetMassGroupName(this);\r\n  }\r\n\r\n  AddMainRow = () => {\r\n    return rowUtil.Add(undefined, this);\r\n  }\r\n}","import MassColumn from \"./MassColumn\"\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassColumn();\r\n  qI.Name = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}","import MassTable from \"../table/MassTable\";\r\n\r\nexport default class MassItem_Dict {\r\n  items\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n    this.MassTable.Items = v;\r\n  }\r\n\r\n  massTable\r\n  get MassTable() {\r\n    if (!this.massTable) {\r\n      this.massTable = new MassTable();\r\n    }\r\n    return this.massTable;\r\n  }\r\n\r\n  set MassGroupSetting(v)  {\r\n    this.MassTable.MassGroupSetting = v;\r\n  }\r\n}","import * as util from './MassItemUtil'\r\nimport * as mif from './MassItemField'\r\nimport { message } from 'antd'\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\nexport default class MassItem {\r\n  Value\r\n  Unit\r\n\r\n  projectId\r\n\r\n  project\r\n  get Project() {\r\n    if (!this.project) {\r\n      this.project = util.GetProject(this);\r\n    }\r\n    return this.project;\r\n  }\r\n\r\n  workpackageId\r\n\r\n  workpackage\r\n  get Workpackage() {\r\n    if (!this.workpackage) {\r\n      this.workpackage = util.GetWorkpackage(this);\r\n    }\r\n    return this.workpackage;\r\n  }\r\n\r\n  phases\r\n  get Phases() {\r\n    if (!this.phases) {\r\n      this.phases = util.GetPhases(this);\r\n    }\r\n    return this.phases;\r\n  }\r\n\r\n  get ValidPhasesByInput() {\r\n    return util.GetValidPhasesByInput(this);\r\n  }\r\n\r\n  IsGetElement = false\r\n\r\n  OnGetElementDone_Funcs = []\r\n\r\n  set GetElementDone(v) {\r\n    this.OnGetElementDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  GetValue = (field, handle) => {\r\n    if (!field) {\r\n      return;\r\n    }\r\n\r\n    var data = mif.GetFullFields(this, field);\r\n    var { fields, isFromElement } = data;\r\n\r\n    var getValFunc = () => {\r\n      var obj = this;\r\n      var isValid = true;\r\n\r\n      fields.forEach(x => {\r\n        if (isValid) {\r\n          var temp = obj[x];\r\n          obj = temp;\r\n          if (obj === undefined) {\r\n            isValid = false;\r\n          }\r\n        }\r\n      })\r\n\r\n      return obj;\r\n    }\r\n\r\n    if (!isFromElement || this.Element) {\r\n      return getValFunc();\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      _id: this._id,\r\n      projectId: this.projectId,\r\n      elementId: this.elementId,\r\n      workpackageId: this.workpackageId,\r\n      exportSetId: this.exportSetId,\r\n      exportSetVersionId: this.exportSetVersionId,\r\n      value: this.Value,\r\n      unit: this.Unit,\r\n      massType: this.MassType,\r\n      info: this.Info\r\n    }\r\n  }\r\n\r\n  AddDatabase = (handle) => {\r\n    var apiData = this.ApiData;\r\n    var { _id } = apiData;\r\n    var url = `https://api.bimdev.vn/api/hbm`;\r\n\r\n    var command = _id ? 'edit' : 'add';\r\n    const apiFunc = () => _id ?\r\n      api.put(`${url}/${command}`, apiData) : api.post(`${url}/${command}`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        if (command === 'add') {\r\n          this._id = data._id;\r\n        }\r\n        if (handle) {\r\n          handle(data);\r\n        }\r\n        message.success(`${command} mass successfully`);\r\n      })\r\n  }\r\n\r\n  DeleteDatabase = (handle) => {\r\n    var apiData = {\r\n      _id: this._id\r\n    };\r\n    var url = `https://api.bimdev.vn/api/hbm`;\r\n    const apiFunc = () => api.put(`${url}/delete`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        if (handle) {\r\n          handle(data);\r\n        }\r\n        message.success(`delete mass successfully`);\r\n      })\r\n  }\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport MassItem from './MassItem';\r\nimport * as elementUtil from '../../element/ElementUtil'\r\nimport * as mt from '../MassType'\r\nimport * as ut from '../../value/ValueUnit'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, isGetElement = false) => {\r\n  var qI = new MassItem();\r\n\r\n  qI._id = q._id;\r\n  qI.Value = q.value;\r\n  qI.Unit = q.unit;\r\n  qI.MassType = q.massType;\r\n  qI.Info = q.info;\r\n  qI.projectId = q.projectId;\r\n  qI.workpackageId = q.workpackageId;\r\n  qI.exportSetId = q.exportSetId;\r\n  qI.exportSetVersionId = q.exportSetVersionId;\r\n  qI.Element = q.Elements.length !== 0 ? q.Elements[0] : undefined;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefaultRebarMass = (project) => {\r\n  var qI = new MassItem();\r\n\r\n  qI.Unit = ut.kg;\r\n  qI.MassType = mt.rebar;\r\n  qI.Info = {}\r\n  qI.projectId = project._id;\r\n\r\n  const setExportSetData = (exportSet) => {\r\n    qI.exportSetId = exportSet._id;\r\n\r\n    var currentVersion = exportSet.CurrentVersion;\r\n    if (!currentVersion) {\r\n      exportSet.OnGetCurrentVersionDone_Func.push(() => {\r\n        currentVersion = exportSet.CurrentVersion;\r\n        qI.exportSetVersionId = currentVersion._id;\r\n      })\r\n    } else {\r\n      qI.exportSetVersionId = currentVersion._id;\r\n    }\r\n  }\r\n\r\n  var inputExportSet = project.InputExportSet;\r\n  if (!inputExportSet) {\r\n    project.OnGetInputExportSetDone_Funcs\r\n      .push(() => {\r\n        inputExportSet = project.InputExportSet;\r\n        setExportSetData(inputExportSet);\r\n      })\r\n  } else {\r\n    setExportSetData(inputExportSet);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetProject = (q) => {\r\n  var list = pmData().Project_Dict.Items;\r\n  var { projectId } = q;\r\n  var index = list.findIndex(x => x._id === projectId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetWorkpackage = (q) => {\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  var { workpackageId } = q;\r\n  var index = list.findIndex(x => x._id === workpackageId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetPhases = (q) => {\r\n  var list = [];\r\n  var phases = pmData().Phase_Dict.Items;\r\n  var exportSetVersionId = q.exportSetVersionId;\r\n  phases.forEach(x => {\r\n    if (x.exportSetVersionIds.includes(exportSetVersionId)) {\r\n      list.push(x);\r\n    }\r\n  })\r\n  return list;\r\n}\r\n\r\nexport const GetValidPhasesByInput = (q) => {\r\n  var inputPhases = pmData().MassResultComp.Phases;\r\n  var phases = q.Phases;\r\n  var list = [];\r\n  phases.forEach(x => {\r\n    if (inputPhases.includes(x)) {\r\n      list.push(x);\r\n    }\r\n  })\r\n  return list;\r\n}\r\n\r\nexport const GetElementAsync = (q) => {\r\n  var elemId = q.elementId\r\n  if (elemId) {\r\n    elementUtil.GetById(elemId, (data) => {\r\n      q.Element = data\r\n      q.IsGetElement = true;\r\n      q.GetElementDone = true;\r\n    });\r\n  } else {\r\n    q.IsGetElement = true;\r\n  }\r\n}\r\n\r\nexport const getAll = (apiData, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbmr/newlist\";\r\n\r\n  var start = window.performance.now();\r\n\r\n  api.post(url, apiData,undefined, 2000000)\r\n    .then(response => response.data)\r\n    .then(data => {\r\n      var end = window.performance.now();\r\n      console.log(`Execution time: ${(end - start)/1000} s`);\r\n\r\n      if (!data) {\r\n        console.log('mass result undefined');\r\n        return;\r\n      }\r\n\r\n      var items = data.map(x => { \r\n        return get(x)\r\n      })\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getRebars = (projectId, handle) => {\r\n  if (!projectId) return;\r\n  var url = `https://api.bimdev.vn/api/hbmr/rebar?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = undefined;\r\n      if (!data) {\r\n        items = [];\r\n      } else {\r\n        var items = data.map(x => get(x))\r\n      }\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getByViewDetail = (_id, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbdv/massdetail?id=${_id}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var { viewDetail, masses } = data;\r\n      var isGetElement = mt.IsGetElement(viewDetail.massType);\r\n      var items = masses.map(x => get(x, isGetElement));\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import MassItem_Dict from '../item/MassItem_Dict';\r\nimport * as util from './MassResultCompUtil'\r\nimport * as massItemUtil from '../item/MassItemUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as mif from '../item/MassItemField'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassResultComp {\r\n  Projects = []\r\n\r\n  Phases = []\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n\r\n  massItem_Dict\r\n  get MassItem_Dict(){\r\n    if (!this.massItem_Dict){\r\n      this.massItem_Dict = new MassItem_Dict();\r\n    }\r\n    return this.massItem_Dict;\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  isHavePhase = false\r\n  get IsHavePhase(){\r\n    return this.isHavePhase;\r\n  }\r\n  set IsHavePhase(v){\r\n    this.isHavePhase = v;\r\n    if (v){\r\n    this.MassItem_Dict.MassTable.ColumnField = mif.Phase\r\n    }else{\r\n      this.MassItem_Dict.MassTable.ColumnField = mif.Project\r\n    }\r\n  }\r\n\r\n  GetMassData = () => {\r\n    var wp_Dict = pmData().Workpackage_Dict;\r\n    if (wp_Dict.IsDataChanged){\r\n      wp_Dict.RefreshData();\r\n    }\r\n\r\n    massItemUtil.getAll(this.ApiData, (items) => {\r\n      var dict = this.MassItem_Dict;\r\n\r\n      dict.MassGroupSetting = this.MassGroupSetting ? \r\n        this.MassGroupSetting : undefined;\r\n      dict.Items = items;\r\n      \r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n}","export const GetApiData = (q) => {\r\n  return {\r\n    projectIds : q.Projects.map(x => x._id),\r\n    phaseIds : q.IsHavePhase ? q.Phases.map(x => x._id) : undefined\r\n  }\r\n}","import { Button, message, Space, Tag } from \"antd\";\r\nimport * as colUtil from '../../../../table/TableColumnUtil'\r\nimport TableVM from \"../../../../table/TableVM\";\r\nimport * as renderUtil from '../../../../table/RenderItemUtil'\r\nimport * as rs from '../../../../table/RenderState'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport RebarMass_Dict from \"./RebarMass_Dict\";\r\nimport * as massItemUtil from '../item/MassItemUtil'\r\n\r\nexport const get = (project) => {\r\n  var qI = new RebarMass_Dict();\r\n  qI.Project = project;\r\n\r\n  var projectId = qI.projectId;\r\n  massItemUtil.getRebars(projectId, (items) => {\r\n    qI.Items = items;\r\n  });\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTableVM = (q) => {\r\n  var qI = new TableVM();\r\n\r\n  qI.DataSource = q.Items;\r\n  qI.Columns = [\r\n    colUtil.get('Tên cấu kiện', ['Info', 'elementName'],\r\n      [\r\n        renderUtil.get(rs._default, (val, item) => item.Info.elementName)\r\n      ], qI),\r\n\r\n    colUtil.get('Hạng mục', ['Info', 'workItem'],\r\n      [\r\n        renderUtil.get(rs._default, (val, item) => item.Info.workItem)\r\n      ], qI),\r\n\r\n    colUtil.get('Đường kính', ['Info', 'diameter'],\r\n      [\r\n        renderUtil.get(rs._default, (val, item) => item.Info.diameter)\r\n      ], qI),\r\n\r\n    colUtil.get('Khối lượng', ['Value'], null, qI),\r\n\r\n    colUtil.GetActionColumn(qI)\r\n  ]\r\n\r\n  qI.OnGetItemForAdd = () => {\r\n    return massItemUtil.GetDefaultRebarMass(q.Project);\r\n  }\r\n\r\n  qI.OnEditItem = (item) => {\r\n    item.AddDatabase();\r\n  }\r\n\r\n  qI.OnDeleteItem = (item) => {\r\n    item.DeleteDatabase();\r\n  }\r\n\r\n  return qI;\r\n}","export const m = \"m\";\r\nexport const m2 = \"m2\";\r\nexport const m3 = \"m3\";\r\nexport const kg = \"kg\";","import * as util from './RebarMass_DictUtil'\r\n\r\nexport default class RebarMass_Dict {\r\n  project\r\n  get Project(){\r\n    return this.project;\r\n  }\r\n  set Project(v){\r\n    this.project = v;\r\n    this.projectId = v._id;\r\n  }\r\n\r\n  projectId\r\n\r\n  items = []\r\n  get Items(){\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n    this.TableVM.DataSource = v;\r\n  }\r\n\r\n  tableVM\r\n  get TableVM() {\r\n    if (!this.tableVM){\r\n      this.tableVM = util.GetTableVM(this);\r\n    }\r\n    return this.tableVM;\r\n  }\r\n}","\r\nexport default class Phase {\r\n  exportSetVersions\r\n  get ExportSetVersions(){\r\n    return this.exportSetVersions;\r\n  }\r\n  set ExportSetVersions(v){\r\n    this.exportSetVersions = v;\r\n    this.exportSetVersionIds = v.map(x => x._id);\r\n  }\r\n\r\n  OnGetExportSetVersions_Func = [];\r\n\r\n  set GetExportSetVersions(v){\r\n    this.OnGetExportSetVersions_Func.forEach(x => x());\r\n  }\r\n\r\n  exportSetVersionIds\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport Phase from './Phase';\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n\r\n  var qI = new Phase();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.Dict = dict;\r\n\r\n  GetExportSetVersionData(q._id, (data) => {\r\n    qI.ExportSetVersions = data;\r\n    qI.GetExportSetVersions = true;\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getByProject = (projectId, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbphase/list?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data);\r\n      }\r\n    });\r\n}\r\n\r\nexport const GetExportSetVersionData = (phaseId, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbesv/byphase?phaseId=${phaseId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data);\r\n      }\r\n    });\r\n}","import { message } from 'antd';\r\nimport * as util from './Phase_DictUtil'\r\nimport * as api from '../../../../util/apiUtil'\r\nimport * as itemUtil from './PhaseUtil'\r\n\r\nexport class Phase_Dict {\r\n  get Project() {\r\n    return this.Dict;\r\n  }\r\n\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n  \r\n  AddMassVersion = () => {\r\n    var apiData = this.Input.ApiData;\r\n    var url = `https://api.bimdev.vn/api/hbphase`;\r\n\r\n    const apiFunc = () => api.put(`${url}/mass/add`, apiData);\r\n    \r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        var item = itemUtil.get(data, this);\r\n        this.Add(item);\r\n        message.success(\"create version successfully!\");\r\n      })\r\n\r\n    // Thêm version mới cho InputExportSet sau khi lưu version\r\n    var addVersionFunc = (exportSet) => exportSet.AddVersion();\r\n\r\n    var project = this.Project;\r\n    var inputExportSet = project.InputExportSet;\r\n    if (!inputExportSet){\r\n      project.OnGetInputExportSetDone_Funcs.push(() => {\r\n        inputExportSet = project.InputExportSet;\r\n        addVersionFunc(inputExportSet);\r\n      })\r\n    }else{\r\n      addVersionFunc(inputExportSet);\r\n    }\r\n  }\r\n}","export default class PhaseInput {\r\n  get ApiData(){\r\n    var projectId = this.Dict.Dict._id;\r\n    var name = this.Name;\r\n    var description = this.Description;\r\n\r\n    return {\r\n      projectId, name, description\r\n    }\r\n  }\r\n}","import { Phase_Dict } from \"./Phase_Dict\";\r\nimport * as phaseUtil from './PhaseUtil'\r\nimport * as inputUtil from './PhaseInputUtil'\r\n\r\nexport const get = (project) => {\r\n  var qI = new Phase_Dict();\r\n  qI.Dict = project;\r\n\r\n  phaseUtil.getByProject(project._id, (data) => {\r\n    qI.Items = data.map(x => phaseUtil.get(x, qI));\r\n    qI.GetItemsDone = true;\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetInput = (q) => {\r\n  return inputUtil.get(q);\r\n}","import PhaseInput from './PhaseInput';\r\n\r\nexport const get = (dict) => {\r\n  var qI = new PhaseInput();\r\n  qI.Dict = dict;\r\n  qI.Name = 'Version 1';\r\n  qI.Description = 'mô tả phiên bản';\r\n\r\n  return qI;\r\n}","import RebarMass_Dict from '../mass/rebar/RebarMass_Dict';\r\nimport * as phaseDictUtil from '../phase/Phase_DictUtil'\r\nimport * as util from './ProjectUtil'\r\n\r\nexport default class Project {\r\n  phase_Dict\r\n  get Phase_Dict(){\r\n    if (!this.phase_Dict){\r\n      this.phase_Dict = phaseDictUtil.get(this);\r\n    }\r\n    return this.phase_Dict;\r\n  }\r\n\r\n  rebarMass_Dict\r\n  get RebarMass_Dict(){\r\n    if (!this.rebarMass_Dict){\r\n      this.rebarMass_Dict = util.GetRebarMass_Dict(this);\r\n    }\r\n    return this.rebarMass_Dict;\r\n  }\r\n\r\n  inputExportSet\r\n  get InputExportSet(){\r\n    if (!this.inputExportSet){\r\n      util.GetInputExportSet_Async(this);\r\n    }\r\n    return this.inputExportSet;\r\n  }\r\n  set InputExportSet(v){\r\n    this.inputExportSet = v;\r\n    this.GetInputExportSetDone = true;\r\n  }\r\n\r\n  OnGetInputExportSetDone_Funcs = []\r\n\r\n  getInputExportSetDone\r\n  get GetInputExportSetDone(){\r\n    return this.getInputExportSetDone;\r\n  }\r\n  set GetInputExportSetDone(v){\r\n    this.getInputExportSetDone = v;\r\n    this.OnGetInputExportSetDone_Funcs.forEach(x => x());\r\n  }\r\n}","import * as util from './ExportSetUtil'\r\n\r\nexport class ExportSet {\r\n  currentVersion\r\n  get CurrentVersion(){\r\n    if (!this.currentVersion){\r\n      util.GetCurrentVersion_Async(this);\r\n    }\r\n    return this.currentVersion;\r\n  }\r\n  set CurrentVersion(v){\r\n    this.currentVersion = v;\r\n    this.GetCurrentVersionDone = v;\r\n  }\r\n\r\n  OnGetCurrentVersionDone_Func =[]\r\n\r\n  set GetCurrentVersionDone(v){\r\n    this.OnGetCurrentVersionDone_Func.forEach(x => x());\r\n  }\r\n\r\n  AddVersion = () => {\r\n    util.AddVersion_Async(this);\r\n  }\r\n}","export class ExportSetVersion {\r\n  \r\n}","import * as api from  '../../../../util/apiUtil'\r\nimport { ExportSetVersion } from \"./ExportSetVersion\";\r\n\r\nexport const get = (data) => {\r\n  var qI = new ExportSetVersion();\r\n  qI._id = data._id;\r\n  return qI;\r\n}\r\n\r\nexport const getLastestByExportSet = (exportSetId, handle) => {\r\n  if (!exportSetId) return;\r\n  var url = `https://api.bimdev.vn/api/hbesv/last?exportSetId=${exportSetId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var item = data ? get(data) : data;\r\n      handle(item);\r\n    });\r\n}\r\n\r\nexport const add = (apiData, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbesv/add`;\r\n  api.post(url, apiData).then(response => response.data)\r\n    .then(data => {\r\n      var item = get(data);\r\n      handle(item);\r\n    });\r\n}","import { ExportSet } from \"./ExportSet\"\r\nimport * as api from  '../../../../util/apiUtil'\r\nimport * as versionUtil from './ExportSetVersionUtil'\r\n\r\nexport const get = (data) => {\r\n  var qI = new ExportSet();\r\n  qI._id = data._id;\r\n  qI.Name = data.name;\r\n  qI.Description = data.description;\r\n  qI.RetrieveFrom = data.retrieveFrom;\r\n  return qI;\r\n}\r\n\r\nexport const GetCurrentVersion_Async = (q) => {\r\n  var exportSetId = q._id;\r\n\r\n  versionUtil.getLastestByExportSet(exportSetId, (item) => {\r\n    if (!item) {\r\n      AddVersion_Async(q);\r\n    } else {\r\n      q.CurrentVersion = item;\r\n    }\r\n  })\r\n}\r\n\r\nexport const AddVersion_Async = (q) => {\r\n  var exportSetId = q._id;\r\n\r\n  var apiData = {\r\n    exportSetId\r\n  }\r\n\r\n  versionUtil.add(apiData, (addItem) => {\r\n    q.CurrentVersion = addItem;\r\n  })\r\n}\r\n\r\nexport const getByProject = (projectId, handle) => {\r\n  if (!projectId) return;\r\n  var url = `https://api.bimdev.vn/api/hbes/input?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var item = data ? get(data) : data;\r\n      handle(item);\r\n    });\r\n}\r\n\r\nexport const add = (apiData, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbes/add`;\r\n  api.post(url, apiData).then(response => response.data)\r\n    .then(data => {\r\n      var item = get(data);\r\n      handle(item);\r\n    });\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport Project from './Project';\r\nimport * as rebarMassDictUtil from '../mass/rebar/RebarMass_DictUtil'\r\nimport * as exportSetUtil from '../exportset/ExportSetUtil'\r\nimport * as vrf from '../value/ValueRetrieveFrom'\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n\r\n  var qI = new Project();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Code = q.code;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetRebarMass_Dict = (q) => {\r\n  return rebarMassDictUtil.get(q);\r\n}\r\n\r\nexport const GetInputExportSet_Async = (q) => {\r\n  var projectId = q._id;\r\n\r\n  exportSetUtil.getByProject(projectId, (item) => {\r\n    if (!item) {\r\n      var apiData = {\r\n        projectId,\r\n        name: 'Dữ liệu khối lượng input',\r\n        description: 'mô tả dữ liệu',\r\n        retrieveFrom: vrf.input\r\n      }\r\n      exportSetUtil.add(apiData, (addItem) => {\r\n        q.InputExportSet = addItem;\r\n      })\r\n    } else {\r\n      q.InputExportSet = item;\r\n    }\r\n  })\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbp/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getById = (_id, handle) => {\r\n  if (!_id) return undefined;\r\n  var url = `https://api.bimdev.vn/api/hbp/get?id=${_id}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var item = get(data);\r\n      if (handle) {\r\n        handle(item);\r\n      }\r\n    });\r\n}","export const model = \"model\";\r\nexport const input = \"input\";","import * as itemUtil from './ProjectUtil'\r\n\r\nexport class Project_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport default class ElementFilterSetting extends Setting {\r\n  \r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './ElementFilterSettingDataUtil'\r\n\r\nexport default class ElementFilterSettingData {\r\n  CategoryFilter\r\n\r\n  IsHaveFamilyFilter\r\n\r\n  FamilyFilter\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","import { EntFilter } from '../../filter/EntFilter';\r\nimport * as filterUtil from '../../filter/EntFilterUtil'\r\nimport ElementFilterSettingData from './ElementFilterSettingData';\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as sft from '../../filter/StringFilterType'\r\nimport * as fct from '../../filter/FilterCategoryType'\r\n\r\nexport const get = (q) => {\r\n  var qI = new ElementFilterSettingData();\r\n  qI.CategoryFilter = filterUtil.get(q.categoryFilter);\r\n  return qI;\r\n}\r\n\r\nexport const getDefault = () => {\r\n  var qI = new ElementFilterSettingData();\r\n\r\n  var cateFilter = new EntFilter();\r\n  cateFilter.CategoryType = fct.category;\r\n  cateFilter.ValueType = fvt.bystring;\r\n  cateFilter.StringFilterType = sft.byequal;\r\n  cateFilter.Values = ['Floors'];\r\n  qI.CategoryFilter = cateFilter;\r\n\r\n  qI.IsHaveFamilyFilter = false;\r\n\r\n  var familyFilter = new EntFilter();\r\n  familyFilter.CategoryType = fct.family;\r\n  familyFilter.ValueType = fvt.bystring;\r\n  familyFilter.StringFilterType = sft.byequal;\r\n  familyFilter.Values = [];\r\n  qI.FamilyFilter = familyFilter;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    categoryFilter : q.CategoryFilter.ApiData,\r\n    familyFilter : q.IsHaveFamilyFilter ? \r\n      q.FamilyFilter.ApiData : undefined\r\n  }\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport ElementFilterSetting from \"./ElementFilterSetting\"\r\nimport * as dataUtil from './ElementFilterSettingDataUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new ElementFilterSetting();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.SettingType = q.settingType;\r\n  qI.Data = dataUtil.get(q.data);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbs/ef/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as util from './SettingInputUtil'\r\n\r\nexport default class SettingInput {\r\n  Name\r\n  Description\r\n  SettingType\r\n\r\n  data\r\n  get Data() {\r\n    if (!this.data) {\r\n      this.data = this.GetData();\r\n    }\r\n    return this.data;\r\n  }\r\n  set Data(v) {\r\n    this.data = v;\r\n  }\r\n\r\n  GetData = () => {\r\n    if (this.OnGetData) {\r\n      return this.OnGetData();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  editItem\r\n  get EditItem(){\r\n    return this.editItem;\r\n  }\r\n  set EditItem(v){\r\n    this.editItem = v;\r\n    if (!v){\r\n      this.EditItemId = undefined;\r\n    }\r\n    else{\r\n      this.EditItemId = v._id;\r\n    }\r\n  }\r\n\r\n\r\n  EditItemId\r\n\r\n  isNew = true;\r\n  get IsNew(){\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v){\r\n    this.isNew = v;\r\n    if (v){\r\n      this.EditItem = undefined;\r\n    }\r\n  }\r\n\r\n  urlPrefix\r\n  get UrlPrefix() {\r\n    if (!this.urlPrefix){\r\n      this.urlPrefix = util.GetUrlPrefix(this);\r\n    }\r\n    return this.urlPrefix;\r\n  }\r\n\r\n  AddDatabase = () => {\r\n    var _id = this.EditItemId;\r\n    var name = this.Name;\r\n    var description = this.Description;\r\n    var settingType = this.SettingType;\r\n    var data = this.Data.ApiData;\r\n    var prefix = this.UrlPrefix;\r\n\r\n    var apiData = {\r\n      _id, name, description, settingType, data\r\n    }\r\n    var url = `https://api.bimdev.vn/api/hbs/${prefix}`;\r\n\r\n    const apiFunc = () => _id ?\r\n      api.put(`${url}/edit`, apiData) : api.post(`${url}/add`, apiData);\r\n    \r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        this.AddDatabaseDone = true;\r\n        this.NewItem = this.GetEditItem(data, this.Dict);\r\n        this.Dict.Update();\r\n      })\r\n  }\r\n\r\n  set AddDatabaseDone(v) {\r\n    if (this.OnAddDatabaseDone){\r\n      this.OnAddDatabaseDone(v);\r\n    }\r\n  }\r\n}","import * as st from './SettingType'\r\n\r\nexport const GetUrlPrefix = (q) => {\r\n  var prefix = undefined\r\n  switch (q.SettingType) {\r\n    case st.elementfilter:\r\n      prefix = 'ef';\r\n      break;\r\n    case st.massexport:\r\n      prefix = 'me';\r\n      break;\r\n    case st.massgroup:\r\n      prefix = 'mg';\r\n      break;\r\n  }\r\n  return prefix;\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInput from \"../base/SettingInput\";\r\nimport * as elementFilterSettingUtil from './ElementFilterSettingUtil'\r\n\r\nexport default class ElementFilterSettingInput extends SettingInput {\r\n  GetEditItem = (data, dict) => {\r\n    return elementFilterSettingUtil.get(data, dict);\r\n  }\r\n}","import ElementFilterSettingInput from \"./ElementFilterSettingInput\";\r\nimport * as dataUtil from './ElementFilterSettingDataUtil'\r\nimport * as st from '../base/SettingType'\r\n\r\nexport const get = (dict) => {\r\n  var qI = new ElementFilterSettingInput();\r\n  qI.Dict = dict;\r\n  qI.Name = 'Bộ lọc cột';\r\n  qI.Description = 'mô tả bộ lọc';\r\n  qI.SettingType = st.elementfilter;\r\n\r\n  qI.OnGetData = () => {\r\n    return dataUtil.getDefault();\r\n  }\r\n\r\n  return qI;\r\n}","import * as itemUtil from './ElementFilterSettingUtil'\r\nimport * as inputUtil from './ElementFilterSettingInputUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class ElementFilterSetting_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  CurrentItem\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = this.GetInput();\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  GetInput(){\r\n    return inputUtil.get(this);\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n\r\n  Update = () => {\r\n    var input = this.Input;\r\n\r\n    if (!input.IsNew){\r\n      var item = input.EditItem;\r\n      var action = () => {\r\n        item.Name = input.Name;\r\n        item.Description = input.Description;\r\n        item.Data = input.Data;\r\n      }\r\n      genUtil.UpdateFromModel(item, action);\r\n    }\r\n    else{\r\n      this.Add(input.NewItem);\r\n    }\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './MassExportSettingDataUtil'\r\nimport * as valueSettingUtil from './exportSetting/MES_ValueSettingUtil'\r\nimport { reaction } from \"mobx\";\r\n\r\nexport default class MassExportSettingData {\r\n  elementFilterId\r\n\r\n  elementFilter\r\n  get ElementFilter(){\r\n    if (!this.elementFilter){\r\n      this.elementFilter = util.GetElementFilter(this);\r\n    }\r\n    return this.elementFilter;\r\n  }\r\n  set ElementFilter(v) {\r\n    this.elementFilter = v;\r\n    if (!v){\r\n      this.elementFilterId = undefined;\r\n    }\r\n    else{\r\n      this.elementFilterId = v._id;\r\n    }\r\n  }\r\n\r\n  valueSettings\r\n  get ValueSettings(){\r\n    if (!this.valueSettings){\r\n      this.valueSettings = util.GetDefaultValueSettings(this);\r\n    }\r\n    return this.valueSettings;\r\n  }\r\n  set ValueSettings(v){\r\n    this.valueSettings = v;\r\n  }\r\n\r\n  AddNewValueSetting = () => {\r\n    var modelList = this.ValueSettings;\r\n    var item = valueSettingUtil.GetDefault(this);\r\n    modelList.push(item);\r\n\r\n    return item;\r\n  }\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","import { PMData } from '../../../single/model/PMData';\r\nimport MassExportSettingData from './MassExportSettingData';\r\nimport * as valueSettingUtil from './exportSetting/MES_ValueSettingUtil'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassExportSettingData();\r\n  qI.elementFilterId = q.elementFilterId;\r\n  qI.ValueSettings = q.exportSettings.map(x => valueSettingUtil.get(x, qI));\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = () => {\r\n  var qI = new MassExportSettingData();\r\n  return qI;\r\n}\r\n\r\nexport const GetElementFilter = (q) => {\r\n  var elemFilterId = q.elementFilterId;\r\n  if (!elemFilterId) return undefined;\r\n\r\n  var list = pmData().ElementFilterSetting_Dict.Items;\r\n  if (!list) return undefined;\r\n\r\n  var index = list.findIndex(x => x._id === elemFilterId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetDefaultValueSettings = (q) => {\r\n  return [ valueSettingUtil.GetDefault(q) ]\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    elementFilterId : q.elementFilterId,\r\n    exportSettings : q.ValueSettings.map(x => x.ApiData)\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\n\r\nexport default class MassExportSetting extends Setting {\r\n  \r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as dataUtil from './MassExportSettingDataUtil'\r\nimport MassExportSetting from './MassExportSetting';\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new MassExportSetting();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.SettingType = q.settingType;\r\n  qI.Data = dataUtil.get(q.data);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbs/me/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}","import Setting from \"../base/Setting\";\r\nimport SettingInput from \"../base/SettingInput\";\r\nimport * as massExportSettingUtil from './MassExportSettingUtil'\r\n\r\nexport default class MassExportSettingInput extends SettingInput {\r\n  GetEditItem = (data, dict) => {\r\n    return massExportSettingUtil.get(data, dict);\r\n  }\r\n}","import * as dataUtil from './MassExportSettingDataUtil'\r\nimport MassExportSettingInput from \"./MassExportSettingInput\";\r\nimport * as st from '../base/SettingType'\r\n\r\nexport const get = (dict) => {\r\n  var qI = new MassExportSettingInput();\r\n  qI.Dict = dict;\r\n  qI.Name = 'Bêtông sàn';\r\n  qI.Description = 'mô tả thiết lập';\r\n  qI.SettingType = st.massexport;\r\n\r\n  qI.OnGetData = () => {\r\n    return dataUtil.GetDefault();\r\n  }\r\n\r\n  return qI;\r\n}","import * as itemUtil from './MassExportSettingUtil'\r\nimport * as inputUtil from './MassExportSettingInputUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class MassExportSetting_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  CurrentItem\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = this.GetInput();\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  GetInput(){\r\n    return inputUtil.get(this);\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n\r\n  Update = () => {\r\n    var input = this.Input;\r\n\r\n    if (!input.IsNew){\r\n      var item = input.EditItem;\r\n      var action = () => {\r\n        item.Name = input.Name;\r\n        item.Description = input.Description;\r\n        item.Data = input.Data;\r\n      }\r\n      genUtil.UpdateFromModel(item, action);\r\n    }\r\n    else{\r\n      this.Add(input.NewItem);\r\n    }\r\n  }\r\n}","import * as itemUtil from './MassGroupSettingUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class MassGroupSetting_Dict {\r\n  constructor(){\r\n    itemUtil.getAll(this, (items) => {\r\n      this.Items = items;\r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  CurrentItem\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n}","\r\nexport default class VCS_Item{\r\n  Color\r\n  Filter\r\n}","import * as util from './VersionCompareSettingUtil'\r\n\r\nexport default class VersionCompareSetting{\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems();\r\n    }\r\n    return this.items;\r\n  }\r\n}","import { EntFilter } from '../../filter/EntFilter'\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as nft from '../../filter/NumberFilterType'\r\nimport VCS_Item from \"./VCS_Item\";\r\n\r\nexport const GetItems = (q) => {\r\n  var list = [];\r\n\r\n  // < 80\r\n  var item = new VCS_Item();\r\n  item.Color = '#1956c9';\r\n\r\n  var filter = new EntFilter();\r\n  filter.ValueType = fvt.bynumber;\r\n  filter.NumberFilterType = nft.bysmaller;\r\n  filter.Values = [ 0.80 ];\r\n  item.Filter = filter;\r\n\r\n  list.push(item);\r\n\r\n  // 80 -85\r\n  item = new VCS_Item();\r\n  item.Color = '#3f79d6';\r\n\r\n  filter = new EntFilter();\r\n  filter.ValueType = fvt.bynumber;\r\n  filter.NumberFilterType = nft.bybetween;\r\n  filter.IsEqualLeft = true;\r\n  filter.Values = [ 0.80, 0.85 ];\r\n  item.Filter = filter;\r\n\r\n  list.push(item);\r\n\r\n   // 85 -90\r\n   item = new VCS_Item();\r\n   item.Color = '#6f9fe9';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.85, 0.90 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 90 -95\r\n   item = new VCS_Item();\r\n   item.Color = '#a5c2f2';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.9, 0.95 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 95 -100\r\n   item = new VCS_Item();\r\n   item.Color = '#c9d9f6';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.95, 1 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 100 -105\r\n   item = new VCS_Item();\r\n   item.Color = '#f3cccc';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualRight = true;\r\n   filter.Values = [ 1, 1.05 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 105 -110\r\n   item = new VCS_Item();\r\n   item.Color = '#e9999a';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualRight = true;\r\n   filter.Values = [ 1.05, 1.10 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n    // 110 -115\r\n    item = new VCS_Item();\r\n    item.Color = '#de6568';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybetween;\r\n    filter.IsEqualRight = true;\r\n    filter.Values = [ 1.10, 1.15 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    // 110 -115\r\n    item = new VCS_Item();\r\n    item.Color = '#c90010';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybetween;\r\n    filter.IsEqualRight = true;\r\n    filter.Values = [ 1.15, 1.20 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    // 115 -120\r\n    item = new VCS_Item();\r\n    item.Color = '#980009';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybigger;\r\n    filter.Values = [ 1.20 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    return list;\r\n}","\r\nexport class WorkItemExportSetting_Dict {\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport * as workpackageUtil from './WorkpackageUtil'\r\n\r\nexport class WorkpackageInput {\r\n  Code\r\n  // = \"300\"\r\n  Name\r\n  // = \"Lắp đặt cốp thép\"\r\n  Description = 'mô tả công tác'\r\n  // = \"Mô tả quá trình lắp cốp thép\"\r\n\r\n  isNew = true;\r\n  get IsNew(){\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v){\r\n    this.isNew = v;\r\n    if (v){\r\n      this.Workpackage = undefined;\r\n    }\r\n  }\r\n\r\n  workpackage\r\n  get Workpackage() {\r\n    return this.workpackage;\r\n  }\r\n  set Workpackage(v){\r\n    this.workpackage = v;\r\n    if (!v){\r\n      this.WorkpackageId = undefined;\r\n    }\r\n    else{\r\n      this.WorkpackageId = v._id;\r\n    }\r\n  }\r\n\r\n  WorkpackageId\r\n\r\n  supItem\r\n  get SupItem(){\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v){\r\n    this.supItem = v;\r\n    if (!v){\r\n      this.SupId = undefined;\r\n    }\r\n    else{\r\n      this.SupId = v._id;\r\n    }\r\n  }\r\n\r\n  SupId\r\n\r\n  set AddDatabaseDone(v) {\r\n    if (this.OnAddDatabaseDone){\r\n      this.OnAddDatabaseDone(v);\r\n    }\r\n  }\r\n\r\n  AddDatabase = () => {\r\n    var _id = this.WorkpackageId;\r\n    var code = this.Code;\r\n    var name = this.Name;\r\n    var description = this.Description;\r\n    var supId = this.SupId;\r\n\r\n    var apiData = {\r\n      _id, name, code, description, supId\r\n    };\r\n\r\n    var url = \"https://api.bimdev.vn/api/hbwp\";\r\n\r\n    const apiFunc =  () =>  _id ? \r\n      api.put(`${url}/edit`, apiData) : api.post(`${url}/add`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        this.AddDatabaseDone = true;\r\n        this.NewWorkpackage = workpackageUtil.get(data, this.Dict);\r\n        this.Dict.Update();\r\n      })\r\n  }\r\n\r\n  UpdateWorkpackage\r\n}","import { WorkpackageInput } from './WorkpackageInput';\r\nimport * as workpackageUtil from './WorkpackageUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport class Workpackage_Dict {\r\n  constructor() {\r\n    workpackageUtil.getAll(this, (wps) => {\r\n      this.Workpackages = wps;\r\n      this.GetWorkpackagesDone = true;\r\n    });\r\n  }\r\n\r\n  Workpackages\r\n\r\n  set GetWorkpackagesDone(v) {\r\n    if (this.OnGetWorkpackagesDone) {\r\n      this.OnGetWorkpackagesDone(v);\r\n    }\r\n  }\r\n\r\n  CurrentWorkpackage\r\n\r\n  workpackageInput\r\n  get WorkpackageInput() {\r\n    if (!this.workpackageInput){\r\n      var obj = this.workpackageInput = new WorkpackageInput();\r\n      obj.Dict = this;\r\n    }\r\n    return this.workpackageInput;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Workpackages.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n\r\n  Update = () => {\r\n    var input = this.WorkpackageInput;\r\n    var wp = input.Workpackage;\r\n\r\n    if (!input.IsNew){\r\n      var action = () => { \r\n        wp.Code = input.Code;\r\n        wp.Name = input.Name;\r\n        wp.Description = input.Description;\r\n        wp.FullName = wp.GetFullName();\r\n      };\r\n      genUtil.UpdateFromModel(wp, action);\r\n    }\r\n    else{\r\n      this.Add(input.NewWorkpackage);\r\n    }\r\n\r\n    this.IsDataChanged = true;\r\n  }\r\n\r\n  IsDataChanged\r\n\r\n  RefreshData = () => {\r\n    this.Workpackages.forEach(x => {\r\n      x.SubItems = undefined;\r\n      x.UpperList = undefined;\r\n      x.LowerList = undefined;\r\n      x.Rank = undefined\r\n    })\r\n\r\n    this.IsDataChanged = false;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport * as workPackageUtil from '../../entity/workpackage/WorkpackageUtil'\r\nimport * as fvt from '../../entity/filter/FilterValueType'\r\nimport * as sft from '../../entity/filter/StringFilterType'\r\nimport * as vrt from '../../entity/setting/massExport/exportSetting/MES_ValueRetrieveType'\r\nimport * as mpn from '../../entity/mass/MassPropertyName'\r\nimport * as mt from '../../entity/mass/MassType'\r\nimport * as mif from '../../entity/mass/item/MassItemField'\r\n\r\nexport const GetFilterValueTypes = (data) => {\r\n  return fvt.GetAll();\r\n}\r\n\r\nexport const GetStringFilterTypes = (data) => {\r\n  return sft.GetAll();\r\n}\r\n\r\nexport const GetValueRetrieveTypes = (data) => {\r\n  return vrt.GetAll();\r\n}\r\n\r\nexport const GetCategoryNames = (data) => {\r\n  return ['Floors', 'Structural Framing', 'Walls', 'Structural Column']\r\n}\r\n\r\nexport const GetParameterNames = (data) => {\r\n  return ['Volume', 'HB_Formwork_Total']\r\n}\r\n\r\nexport const GetMassPropertyNames = (data) => {\r\n  return mpn.GetAll();\r\n}\r\n\r\nexport const GetMassItemFields = (data) => {\r\n  return mif.GetAll();\r\n}\r\n\r\nexport const GetMassTypes = (data) => {\r\n  return mt.GetAll();\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport MassResultComp from '../../entity/mass/result/MassResultComp';\r\nimport { Project_Dict } from '../../entity/project/Project_Dict';\r\nimport { ElementFilterSetting_Dict } from '../../entity/setting/elementFilter/ElementFilterSetting_Dict';\r\nimport { MassExportSetting_Dict } from '../../entity/setting/massExport/MassExportSetting_Dict';\r\nimport { MassGroupSetting_Dict } from '../../entity/setting/massGroup/MassGroupSetting_Dict';\r\nimport VersionCompareSetting from '../../entity/setting/versionCompare/VersionCompareSetting';\r\nimport { WorkItemExportSetting_Dict } from '../../entity/setting/workitemexport/WorkItemExportSetting_Dict';\r\nimport { Workpackage_Dict } from '../../entity/workpackage/Workpackage_Dict';\r\nimport { CategoryData } from './CategoryData';\r\nimport * as util from './PMDataUtil'\r\n\r\nexport class PMData {\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new PMData();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  get categoryData(){\r\n    return CategoryData.Instance;\r\n  }\r\n\r\n  workpackage_Dict\r\n  get Workpackage_Dict() {\r\n    if (!this.workpackage_Dict){\r\n      this.workpackage_Dict = new Workpackage_Dict();\r\n    }\r\n    return this.workpackage_Dict;\r\n  }\r\n\r\n  elementFilterSetting_Dict\r\n  get ElementFilterSetting_Dict() {\r\n    if (!this.elementFilterSetting_Dict){\r\n      this.elementFilterSetting_Dict = new ElementFilterSetting_Dict();\r\n    }\r\n    return this.elementFilterSetting_Dict;\r\n  }\r\n\r\n  massExportSetting_Dict\r\n  get MassExportSetting_Dict() {\r\n    if (!this.massExportSetting_Dict){\r\n      this.massExportSetting_Dict = new MassExportSetting_Dict();\r\n    }\r\n    return this.massExportSetting_Dict;\r\n  }\r\n\r\n  massGroupSetting_Dict\r\n  get MassGroupSetting_Dict() {\r\n    if (!this.massGroupSetting_Dict){\r\n      this.massGroupSetting_Dict = new MassGroupSetting_Dict();\r\n    }\r\n    return this.massGroupSetting_Dict;\r\n  }\r\n\r\n  project_Dict\r\n  get Project_Dict() {\r\n    if (!this.project_Dict){\r\n      this.project_Dict = new Project_Dict();\r\n    }\r\n    return this.project_Dict;\r\n  }\r\n\r\n  massResultComp\r\n  get MassResultComp(){\r\n    if (!this.massResultComp){\r\n      this.massResultComp = new MassResultComp();\r\n    }\r\n    return this.massResultComp;\r\n  }\r\n  set MassResultComp(v){\r\n    this.massResultComp = v;\r\n  }\r\n\r\n  filterValueTypes;\r\n  get FilterValueTypes() {\r\n    if (!this.filterValueTypes){\r\n      this.filterValueTypes = util.GetFilterValueTypes();\r\n    }\r\n    return this.filterValueTypes;\r\n  }\r\n\r\n  stringFilterTypes;\r\n  get StringFilterTypes() {\r\n    if (!this.stringFilterTypes){\r\n      this.stringFilterTypes = util.GetStringFilterTypes();\r\n    }\r\n    return this.stringFilterTypes;\r\n  }\r\n\r\n  valueRetrieveTypes\r\n  get ValueRetrieveTypes() {\r\n    if (!this.valueRetrieveTypes){\r\n      this.valueRetrieveTypes = util.GetValueRetrieveTypes();\r\n    }\r\n    return this.valueRetrieveTypes;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = this.categoryData.CategoryNames;\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n\r\n  parameterNames;\r\n  get ParameterNames(){\r\n    if (!this.parameterNames){\r\n      this.parameterNames = util.GetParameterNames();\r\n    }\r\n    return this.parameterNames;\r\n  }\r\n\r\n  massPropertyNames;\r\n  get MassPropertyNames(){\r\n    if (!this.massPropertyNames){\r\n      this.massPropertyNames = util.GetMassPropertyNames();\r\n    }\r\n    return this.massPropertyNames;\r\n  }\r\n\r\n  massItemFields\r\n  get MassItemFields(){\r\n    if (!this.massItemFields){\r\n      this.massItemFields = util.GetMassItemFields();\r\n    }\r\n    return this.massItemFields;\r\n  }\r\n\r\n  massTypes;\r\n  get MassTypes(){\r\n    if (!this.massTypes){\r\n      this.massTypes = util.GetMassTypes();\r\n    }\r\n    return this.massTypes;\r\n  }\r\n\r\n  versionCompareSetting\r\n  get VersionCompareSetting(){\r\n    if (!this.versionCompareSetting){\r\n      this.versionCompareSetting = new VersionCompareSetting();\r\n    }\r\n    return this.versionCompareSetting;\r\n  }\r\n\r\n  workItemExportSetting_Dict\r\n  get WorkItemExportSetting_Dict(){\r\n    if (!this.workItemExportSetting_Dict){\r\n      this.workItemExportSetting_Dict = new WorkItemExportSetting_Dict();\r\n    }\r\n    return this.workItemExportSetting_Dict;\r\n  }\r\n\r\n  DebugPoints = []\r\n}","import { message } from 'antd';\r\nimport * as api from '../../../../util/apiUtil'\r\nimport * as util from './WorkpackageUtil'\r\n\r\nexport class Workpackage {\r\n  get Index() {\r\n    return this.Dict.Workpackages.indexOf(this);\r\n  }\r\n\r\n  _id\r\n\r\n  SupId\r\n\r\n  supItem\r\n  get SupItem(){\r\n    if (!this.supItem){\r\n      this.supItem = util.GetSupItem(this);\r\n    }\r\n    return this.supItem;\r\n  }\r\n\r\n  code\r\n  get Code() {\r\n    return this.code;\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    if (this.OnCodeChanged) {\r\n      this.OnCodeChanged(v);\r\n    }\r\n  }\r\n\r\n  name\r\n  get Name() {\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (this.OnNameChanged) {\r\n      this.OnNameChanged(v);\r\n    }\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (this.OnDescriptionChanged) {\r\n      this.OnDescriptionChanged(v);\r\n    }\r\n  }\r\n\r\n  fullName\r\n  get FullName() {\r\n    if (!this.fullName) {\r\n      this.fullName = this.GetFullName();\r\n    }\r\n    return this.fullName;\r\n  }\r\n  set FullName(v) {\r\n    this.fullName = v;\r\n    if (this.OnFullNameChanged) {\r\n      this.OnFullNameChanged(v);\r\n    }\r\n  }\r\n\r\n  subItems\r\n  get SubItems(){\r\n    if (!this.subItems){\r\n      this.subItems = util.GetSubItems(this);\r\n    }\r\n    return this.subItems;\r\n  }\r\n  set SubItems(v){\r\n    this.subItems = v;\r\n  }\r\n\r\n  upperList\r\n  get UpperList(){\r\n    if (!this.upperList){\r\n      this.upperList = util.GetUpperList(this);\r\n    }\r\n    return this.upperList;\r\n  }\r\n  set UpperList(v){\r\n    this.upperList = v;\r\n  }\r\n\r\n  lowerList\r\n  get LowerList(){\r\n    if (!this.lowerList){\r\n      this.lowerList = util.GetLowerList(this);\r\n    }\r\n    return this.lowerList;\r\n  }\r\n  set LowerList(v){\r\n    this.lowerList = v;\r\n  }\r\n\r\n  rank\r\n  get Rank() {\r\n    if (!this.rank){\r\n      this.rank = util.GetRank(this);\r\n    }\r\n    return this.rank;\r\n  }\r\n  set Rank(v){\r\n    this.rank = v;\r\n  }\r\n\r\n  get LowerIds() {\r\n    return this.LowerList.map(x => x._id);\r\n  }\r\n\r\n  GetFullName = () => {\r\n    return `${this.Code} - ${this.Name}`;\r\n  }\r\n\r\n  Delete = () => {\r\n    var { _id } = this;\r\n    var apiData = { _id };\r\n\r\n    var url = \"https://api.bimdev.vn/api/hbwp/delete\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => message.success('Delete workpackage successfully'));\r\n\r\n    var dict = this.Dict;\r\n    dict.Workpackages.splice(this.Index, 1);\r\n    if (this.OnDelete) {\r\n      this.OnDelete();\r\n    }\r\n\r\n    dict.IsDataChanged = true;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport { PMData } from '../../single/model/PMData';\r\nimport { Workpackage } from \"./Workpackage\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (dbItem, dict) => {\r\n  var { _id, name, code, description, supId } = dbItem;\r\n\r\n  var qI = new Workpackage();\r\n  qI._id = _id;\r\n  qI.Name = name;\r\n  qI.Code = code;\r\n  qI.Description = description;\r\n  qI.SupId = supId;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSupItem = (q) => {\r\n  var supId = q.SupId;\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  var index = list.findIndex(x => x._id === supId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetSubItems = (q) => {\r\n  var id = q._id;\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  return list.filter(x => x !== q && x.SupId === id);\r\n}\r\n\r\nexport const GetUpperList = (q) => {\r\n  var supItem = q.SupItem;\r\n  if (!supItem){\r\n    return [q];\r\n  }else{\r\n    var list = [...supItem.UpperList];\r\n    list.push(q);\r\n    return list;\r\n  }\r\n}\r\n\r\nexport const GetLowerList = (q) => {\r\n  var list = [q];\r\n  q.SubItems.forEach((x, i) => {\r\n    list.push.apply(list, x.LowerList);\r\n  })\r\n  return list;\r\n}\r\n\r\nexport const GetRank = (q) => {\r\n  var supItem = q.SupItem;\r\n  return supItem ? supItem.Rank +1 : 0;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbwp/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var wps = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(wps);\r\n      }\r\n    });\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as workpackageUtil from './WorkpackageUtil'\r\nimport * as util from './Workpackage_DictVMUtil'\r\n\r\nexport class Workpackage_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      workpackageVMs: observable,\r\n    })\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  Workpackage_Dict\r\n\r\n  get M2VM() {\r\n    return this.Workpackage_Dict.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.Workpackage_Dict.M2VM = v;\r\n  }\r\n\r\n  workpackageVMs = undefined\r\n  get WorkpackageVMs() {\r\n    if (!this.workpackageVMs){\r\n      this.workpackageVMs = util.GetWorkpackageVMs(this);\r\n    }\r\n    return this.workpackageVMs;\r\n  }\r\n\r\n  currentWorkpackageVM\r\n  set CurrentWorkpackageVM(v) {\r\n    this.Workpackage_Dict = v;\r\n    this.Workpackage_Dict.CurrentWorkpackage = v.Workpackage;\r\n\r\n    this.WorkpackageInputVM.WorkpackageVM = v;\r\n  }\r\n\r\n  workpackageInputMV\r\n  get WorkpackageInputVM() {\r\n    if (!this.workpackageInputVM){\r\n      this.workpackageInputVM = util.GetWorkpackageInputVM(this);\r\n    }\r\n    return this.workpackageInputVM;\r\n  }\r\n\r\n  Add = (itemView) => {\r\n    this.WorkpackageVMs.push(itemView);\r\n    if (this.OnAdd){\r\n      this.OnAdd(itemView);\r\n    }\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../input/InputView\";\r\nimport { Workpackage_DictVM } from \"./Workpackage_DictVM\";\r\nimport CheckboxView from \"../../../checkbox/CheckboxView\";\r\nimport SelectView from \"../../../select/SelectView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Workpackage_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Workpackage_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var wps = data.WorkpackageVMs;\r\n    var wp = data.CurrentWorkpackageVM = wps[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var wps = data.WorkpackageVMs;\r\n\r\n    var elems = wps ? wps.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var inputVM = data.WorkpackageInputVM;\r\n    var commandVM = inputVM.CommandVM;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Công tác</b>\r\n        </Divider>\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search công tác\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <InputView store={inputVM.CodeVM} />\r\n          <InputView store={inputVM.NameVM} />\r\n          <InputView store={inputVM.DescriptionVM} />\r\n          <SelectView store={inputVM.SupItemSelectVM} />\r\n          <div>\r\n            <CheckboxView store={inputVM.IsNewVM} />\r\n            <Button style={{ margin: 10 }}\r\n              onClick={inputVM.AddDatabase}>{commandVM.Content}</Button>\r\n            {inputVM.DeleteView}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(Workpackage_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { EntFilterVM } from \"./EntFilterVM\";\r\nimport SelectView from \"../../../select/SelectView\";\r\nimport { MultiSelectVM } from \"../../../select/MultiSelectVM\";\r\nimport MultiSelectView from \"../../../select/MultiSelectView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass EntFilterView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntFilterVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  test = () => {\r\n    console.log(\"test button\");\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.ItemVMs;\r\n    var wp = data.CurrentItemVM = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <SelectView store={data.ValueTypeSelectVM} />\r\n        </div>\r\n        <div>\r\n          <SelectView store={data.StringFilterTypeSelectVM} />\r\n        </div>\r\n        <div>\r\n          <MultiSelectView store={data.ValuesSelectVM} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EntFilterView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport ElementFilterSettingDataVM from \"./ElementFilterSettingDataVM\";\r\nimport EntFilterView from \"../../filter/EntFilterView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass ElementFilterSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ElementFilterSettingDataVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var { IsHaveFamilyFilter } = data;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          Thiết lập lọc Category\r\n        </Divider>\r\n        <EntFilterView store={data.CategoryFilterVM} />\r\n\r\n        <Divider orientation=\"left\" plain>\r\n          {/* Thiết lập lọc Family */}\r\n          <CheckboxView store={data.IsHaveFamilyFilterVM}/>\r\n        </Divider>\r\n        {IsHaveFamilyFilter? <EntFilterView store={data.FamilyFilterVM} /> : \"\"}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ElementFilterSettingDataView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { ElementFilterSetting_DictVM } from \"./ElementFilterSetting_DictVM\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport ElementFilterSettingDataView from \"./ElementFilterSettingDataView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass ElementFilterSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ElementFilterSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  test = () => {\r\n    console.log(\"test button\");\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.Items;\r\n    var wp = data.CurrentItem = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    \r\n    var items = data.Items;\r\n    var elems = items ? items.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var input = data.Input;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Bộ lọc đối tượng</b>\r\n        </Divider>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search bộ lọc\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{marginTop:20}}>\r\n          <InputView store={input.NameVM} />\r\n          <InputView store={input.DescriptionVM} />\r\n\r\n          <ElementFilterSettingDataView store={input.DataVM}/>\r\n\r\n          <CheckboxView store={input.IsNewVM} />\r\n          <Button style={{margin:10}}\r\n            onClick={input.AddDatabase}>{input.CommandVM.Content}</Button>\r\n          {input.DeleteView}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ElementFilterSetting_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../../input/InputView\";\r\nimport EntFilterView from \"../../../filter/EntFilterView\";\r\nimport CheckboxView from \"../../../../../checkbox/CheckboxView\";\r\nimport MES_ValueSettingVM from \"./MES_ValueSettingVM\";\r\nimport SelectView from \"../../../../../select/SelectView\";\r\nimport * as floatItemVMUtil from \"../../../../../float/FloatItemVMUtil\";\r\nimport FloatItemView from \"../../../../../float/FloatItemView\";\r\nimport { CloseCircleFilled } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MES_ValueSettingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MES_ValueSettingVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var floatItemStore = floatItemVMUtil.get('top right')\r\n    floatItemStore.wrapper = <Button size='small' type='primary' \r\n      onClick={data.Delete}>x</Button>\r\n\r\n    return (\r\n      <>\r\n        <div style={{ padding: '10px 35px 10px 10px', margin: '8px auto', border: 'solid 0.5px', borderRadius: '10px', position:'relative' }}>\r\n          <FloatItemView store={floatItemStore} />\r\n          <SelectView store={data.RetrieveTypeSelectVM} />\r\n          <SelectView store={data.MassTypeSelectVM} />\r\n          <EntFilterView store={data.ValueFilterVM} />\r\n          <SelectView store={data.WorkpackageSelectVM} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MES_ValueSettingView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { PlusCircleFilled } from \"@ant-design/icons\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport EntFilterView from \"../../filter/EntFilterView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport MassExportSettingDataVM from \"./MassExportSettingDataVM\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport MES_ValueSettingView from \"./exportSetting/MES_ValueSettingView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassExportSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassExportSettingDataVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var valueSettingElems = data.ValueSettingVMs.map((x, i) => {\r\n      return <MES_ValueSettingView key={i} store={x} />\r\n    })\r\n\r\n    return (\r\n      <>\r\n        <SelectView store={data.ElementFilterSelectVM} />\r\n        <Divider orientation=\"left\" plain>\r\n          Thiết lập giá trị\r\n          <Button type='primary' size='small' onClick={data.AddNewValueSettingVM}\r\n            style={{marginLeft:15}}>+</Button>\r\n        </Divider>\r\n        {valueSettingElems}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassExportSettingDataView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport { MassExportSetting_DictVM } from \"./MassExportSetting_DictVM\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport MassExportSettingDataView from \"./MassExportSettingDataView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassExportSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassExportSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.Items;\r\n    var wp = data.CurrentItem = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var items = data.Items;\r\n    var elems = items ? items.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var input = data.Input;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thiết lập xuất khối lượng</b>\r\n        </Divider>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search thiết lập\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <InputView store={input.NameVM} />\r\n          <InputView store={input.DescriptionVM} />\r\n\r\n          <MassExportSettingDataView store={input.DataVM} />\r\n\r\n          <div>\r\n            <CheckboxView store={input.IsNewVM} />\r\n            <Button style={{ margin: 10 }}\r\n              onClick={input.AddDatabase}>{input.CommandVM.Content}</Button>\r\n            {input.DeleteView}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassExportSetting_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassCell from \"./MassCell\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassCellView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassCell();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <td className='text-right' style={data.TDStyle}>\r\n          <a style={data.AStyle}\r\n            onClick={data.ShowDetail}>\r\n            <TextView store={data.ContentVM} />\r\n          </a>\r\n        </td>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassCellView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select, Space } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport MultiSelectView from \"../../../../select/MultiSelectView\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassRow from \"./MassRow\";\r\nimport MassCellView from \"./MassCellView\";\r\nimport { DownCircleOutlined, EnterOutlined, UpCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassRowView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassRow();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var table = data.Dict;\r\n    var columns = table.Columns;\r\n\r\n    var subElems = data.IsShowSub ? data.SubItems.map((x, i) => {\r\n      return <MassRowView store={x} key={x.id} />\r\n    }) : ''\r\n\r\n    var toggleButton = data.IsHaveSub ?\r\n      <Button size='small' style={{ marginRight: 5, minWidth: 25 }} type='primary'\r\n        onClick={data.ToggleSub}>\r\n        <TextView store={data.ToggleButtonContentVM} />\r\n      </Button>\r\n      : <div style={{ padding: '0 15.5px' }} />;\r\n\r\n    return (\r\n      <>\r\n        <tr>\r\n          <th scope=\"row\" >\r\n            <div style={data.Style}>\r\n              {toggleButton}\r\n              {data.Title}\r\n\r\n              {data.HoverToolElement}\r\n              {data.ModalElement}\r\n            </div>\r\n          </th>\r\n          {columns.map((y, j) => {\r\n            var cell = table.GetCell(y, data);\r\n            return <MassCellView key={cell.id} store={cell} />\r\n          })}\r\n        </tr>\r\n        {subElems}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassRowView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport MassTable from \"./MassTable\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassRowView from \"./MassRowView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassTable();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var columns = data.Columns;\r\n    var rows = data.MainRows;\r\n\r\n    var thElems = columns ? columns.map((x, i) => {\r\n      return <th scope=\"col\" key={x.id} className='text-center'>{x.Name}</th>\r\n    }) : '';\r\n\r\n    var tbodyElems = rows ? rows.map((x, i) => {\r\n      return <MassRowView key={x.id} store={x} />\r\n    }) : '';\r\n\r\n\r\n    return (\r\n      <>\r\n        {data.IsValidTable ?\r\n          <>\r\n            <h4 className=\"text-center\">\r\n              BẢNG TỔNG HỢP KHỐI LƯỢNG\r\n            <Button type='primary' size='small' style={{ marginLeft: 15 }}\r\n                disabled={data.IsOnSaveMassGroup}\r\n                onClick={data.SaveMassGroup}>s</Button>\r\n            </h4>\r\n\r\n            {data.IsOnSaveMassGroup ?\r\n              <Row style={{padding:7}}>\r\n                <Col span={4}/>\r\n                <Col span={16} style={{display:'flex'}}>\r\n                  <InputView store={data.MassGroupNameVM} />\r\n                  <Button type='primary' size='small'\r\n                    style={{marginLeft:10}}\r\n                    onClick={data.MassGroupInputOK}>ok</Button>\r\n                  <Button type='default' size='small'\r\n                    onClick={data.MassGroupInputCancel}>cancel</Button>\r\n                </Col>\r\n              </Row> : ''}\r\n\r\n            < table className=\"table table-bordered table-sm\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">\r\n                    <Button onClick={data.AddMainRow} type='primary' size='small'\r\n                      style={{backgroundColor:'#52c41a', border:'none'}}>+</Button>\r\n                  </th>\r\n                  {thElems}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tbodyElems}\r\n              </tbody>\r\n            </table>\r\n          </> : ''\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassTableView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select, Spin } from \"antd\";\r\nimport MassResultCompVM from \"./MassResultCompVM\";\r\nimport MultiSelectView from '../../../../select/MultiSelectView'\r\nimport MassTableView from \"../table/MassTableView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport TextView from \"../../../../text/TextView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassResultCompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassResultCompVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thông tin khối lượng</b>\r\n        </Divider>\r\n        {data.IsShowProjectSelect ?\r\n          <MultiSelectView store={data.ProjectSelectVM} /> : ''}\r\n\r\n        {data.CanHavePhase ?\r\n          <>\r\n            <Divider orientation=\"left\" plain>\r\n              <CheckboxView store={data.IsShowPhaseSelectVM} />\r\n            </Divider>\r\n            {data.IsHavePhase ?\r\n              <MultiSelectView store={data.PhaseSelectVM} /> : ''}\r\n          </>\r\n          : ''\r\n        }\r\n\r\n        <div style={{ marginTop: 8 }} >\r\n          <SelectView store={data.MassGroupSettingSelectVM} />\r\n        </div>\r\n\r\n        <Button style={{ marginTop: 8 }} onClick={data.GetMassData}\r\n          size='middle' type='primary'>GET DATA</Button>\r\n        <div style={{ marginTop: 15 }}>\r\n          {data.IsDataPending ?\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <div>\r\n                <Spin />\r\n                <TextView store={data.LoadingSpinTipVM} />\r\n              </div>\r\n            </div> : <MassTableView store={data.MassItem_Dict.MassTable} />}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassResultCompView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport TableVM from \"./TableVM\";\r\nimport * as rs from './RenderState'\r\n\r\nconst { Option } = Select;\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TableVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var columns = data.Columns;\r\n\r\n    var rows = data.Rows;\r\n    var tableElem = '';\r\n    if (columns && rows) {\r\n      var theadElem = <thead className=\"thead-light\">\r\n        <tr>\r\n          {columns.map(x => {\r\n            return <th scope=\"col\" key={x.Key}>{x.Title}</th>\r\n          })}\r\n        </tr>\r\n      </thead>\r\n\r\n      var tbodyElem = <tbody>\r\n        {rows.map(x => {\r\n          return <tr key={x.Key}>\r\n            {x.Cells.map(y => {\r\n              return <td key={y.Key}>{y.Render()}</td>\r\n            })}\r\n          </tr>\r\n        })}\r\n      </tbody>\r\n\r\n      tableElem = <table className=\"table table-sm\">\r\n        {theadElem}{tbodyElem}\r\n      </table>\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {tableElem}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TableView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport TableView from \"../../../../table/TableView\";\r\nimport { WorkItemExportSetting_DictVM } from \"./WorkItemExportSetting_DictVM\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass WorkItemExportSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new WorkItemExportSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thiết lập xuất hạng mục</b>\r\n        </Divider>\r\n        \r\n        <TableView store={data.TableVM}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(WorkItemExportSetting_DictView)","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport Workpackage_DictView from '../../entity/workpackage/Workpackage_DictView';\r\nimport ElementFilterSetting_DictView from '../../entity/setting/elementFilter/ElementFilterSetting_DictView';\r\nimport MassExportSetting_DictView from '../../entity/setting/massExport/MassExportSetting_DictView';\r\n\r\nimport { PMDataVM } from './PMDataVM';\r\nimport MassResultCompView from '../../entity/mass/result/MassResultCompView';\r\nimport WorkItemExportSetting_DictView from '../../entity/setting/workitemexport/WorkItemExportSetting_DictView';\r\n\r\nclass PMDataView extends Component {\r\n  get pmDataVM() { return PMDataVM.Instance };\r\n\r\n  render() {\r\n    var data = this.pmDataVM;\r\n\r\n    return (\r\n      <>\r\n        <Row gutter={15} style={{ padding: 15 }}>\r\n          <Col span={3} />\r\n          <Col span={5}>\r\n            <Workpackage_DictView store={data.Workpackage_DictVM} />\r\n\r\n            <ElementFilterSetting_DictView store={data.ElementFilterSetting_DictVM} />\r\n\r\n            <MassExportSetting_DictView store={data.MassExportSetting_DictVM} />\r\n          </Col>\r\n          <Col span={13}>\r\n            <MassResultCompView store={data.MassResultCompVM} />\r\n          </Col>\r\n          <Col span={3} />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(PMDataView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport PMDataView from '../main/single/form/PMDataView';\r\nimport { Col, Row } from 'antd';\r\n\r\nclass TestView extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PMDataView />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TestView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class CellVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueString : observable\r\n    })\r\n  }\r\n\r\n  value\r\n  get Value(){\r\n    return this.value\r\n  }\r\n  set Value(v){\r\n    this.value = v;\r\n    this.ValueString = this.GetValueString();\r\n  }\r\n\r\n  valueString = undefined\r\n  get ValueString (){\r\n    if (!this.valueString){\r\n      this.valueString = this.GetValueString();\r\n    }\r\n    return this.valueString;\r\n  }\r\n  set ValueString(v){\r\n    this.valueString = v;\r\n  }\r\n\r\n  GetValueString = () => {\r\n    return this.OnGetValueString();\r\n  }\r\n}","export default class ColumnVM {\r\n  Cells = []\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class RowVM {\r\n  Cells = []\r\n}","import * as mt from '../MassType'\r\nimport * as mif from '../item/MassItemField'\r\nimport ColumnVM from '../../../../table/ColumnVM';\r\n\r\nexport const GetFields = (q) => {\r\n  var list = q.Items;\r\n  if (!list || list.length === 0) return [];\r\n\r\n  var massType = list[0].MassType;\r\n  switch (massType) {\r\n    case mt.rebar:\r\n      return [mif.partition, mif.rebarType, mif.Value, mif.Unit];\r\n    case mt.concrete:\r\n    case mt.formwork:\r\n      return [mif.elementName, mif.Value, mif.Unit];\r\n    default:\r\n      return [mif.Value, mif.Unit]\r\n  }\r\n  return [];\r\n}\r\n\r\nexport const GetColumns = (q) => {\r\n  return q.Fields.map(x => {\r\n    var col = new ColumnVM();\r\n    col.Name = x;\r\n    return col;\r\n  })\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport CellVM from '../../../../table/CellVM';\r\nimport ColumnVM from '../../../../table/ColumnVM';\r\nimport RowVM from '../../../../table/RowVM';\r\nimport * as mif from '../item/MassItemField'\r\nimport * as util from './MassDetailTableUtil'\r\n\r\nexport default class MassDetailTable {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      rows: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    if (v && v.length !== 0) {\r\n      this.IsValidTable = true;\r\n    }\r\n    else {\r\n      this.IsValidTable = false;\r\n    }\r\n    this.Fields = util.GetFields(this);\r\n    this.Rows = this.GetRows();\r\n  }\r\n\r\n  IsValidTable = false\r\n\r\n  fields = undefined\r\n  get Fields() {\r\n    if (!this.fields) {\r\n      this.fields = util.GetFields(this);\r\n    }\r\n    return this.fields;\r\n  }\r\n  set Fields(v){\r\n    this.fields = v;\r\n    this.Columns = util.GetColumns(this);\r\n  }\r\n\r\n  columns = undefined\r\n  get Columns(){\r\n    if (!this.columns){\r\n      this.columns = util.GetColumns(this);\r\n    }\r\n    return this.columns;\r\n  }\r\n  set Columns(v){\r\n    this.columns = v;\r\n  }\r\n\r\n  rows = undefined\r\n  get Rows(){\r\n    if (!this.rows){\r\n      this.rows = this.GetRows();\r\n    }\r\n    return this.rows;\r\n  }\r\n  set Rows(v){\r\n    this.rows = v;\r\n  }\r\n\r\n  GetRows = () => {\r\n    var items = this.Items;\r\n    if (!items) return [];\r\n    var fields = this.Fields;\r\n\r\n    return items.map(x => {\r\n      var row = new RowVM();\r\n      row.Cells = fields.map(y => {\r\n        var cell = new CellVM();\r\n        cell.OnGetValueString = () => {\r\n          var value = cell.Value;\r\n          if(!isNaN(value)){\r\n           return parseFloat(value).toFixed(2);\r\n          }\r\n          return value;\r\n        }\r\n\r\n        const setValueFunc = () => cell.Value = mif.GetValueString(x.GetValue(y), y);\r\n        if (mif.GetIdentifyFields().includes(y) && !x.Element){\r\n          x.OnGetElementDone_Funcs.push(() => {\r\n            setValueFunc();\r\n          });\r\n        }else{\r\n          setValueFunc();\r\n        }\r\n\r\n        var className = 'text-center';\r\n        switch(y){\r\n          case mif.Value:\r\n            className='text-right';\r\n            break;\r\n        }\r\n        cell.className = className;\r\n\r\n        return cell;\r\n      })\r\n      return row;\r\n    })\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as massItemUtil from '../item/MassItemUtil'\r\nimport MassDetailTable from './MassDetailTable';\r\n\r\nexport class MassDetailVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id(){\r\n    return this._id;\r\n  }\r\n  set id(v){\r\n    this._id = v;\r\n    massItemUtil.getByViewDetail(v, (items) => {\r\n      this.Items = items;\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    return this.items;\r\n  } \r\n  set Items(v){\r\n    this.items = v;\r\n    this.DetailTable.Items = v;\r\n  }\r\n\r\n  detailTable\r\n  get DetailTable() {\r\n    if (!this.detailTable){\r\n      this.detailTable = new MassDetailTable();\r\n    }\r\n    return this.detailTable;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport MassDetailTable from './MassDetailTable';\r\n\r\nclass MassDetailTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassDetailTable();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var colElems = data.Columns.map((x,i) => {\r\n      return <th scope=\"col\" key={i} className='text-center'>{x.Name}</th>\r\n    })\r\n\r\n    var rowElems = data.Rows.map((x, i) => {\r\n      var cellElems = x.Cells.map((y, j) => {\r\n        return <td key={j} className={y.className}>{y.ValueString}</td>\r\n      })\r\n      return <tr key={i}>\r\n        {cellElems}\r\n      </tr>\r\n    })\r\n\r\n    return (\r\n      <>\r\n        <table className=\"table table-bordered table-sm\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n             {colElems}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rowElems}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(MassDetailTableView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MassDetailVM } from './MassDetailVM';\r\nimport MassDetailTableView from './MassDetailTableView';\r\n\r\nclass MassDetailView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassDetailVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const id = this.props.match.params.id;\r\n    data.id = id;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Row gutter={10} style={{ padding: 15 }}>\r\n          <Col span={8}>\r\n            <h4 className='text-center'>BẢNG CHI TIẾT KHỐI LƯỢNG</h4>\r\n            <div>\r\n              <MassDetailTableView store={data.DetailTable} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(MassDetailView));\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as projectUtil from '../ProjectUtil'\r\nimport * as projectVMUtil from '../ProjectVMUtil'\r\nimport * as util from './ProjectCompVMUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n\r\nexport default class ProjectCompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      projectVM: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    return this._id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n    projectUtil.getById(v, (item) => {\r\n      this.ProjectVM = projectVMUtil.get(item);\r\n    })\r\n  }\r\n\r\n  projectVM = undefined\r\n  get ProjectVM() {\r\n    return this.projectVM;\r\n  }\r\n  set ProjectVM(v) {\r\n    this.projectVM = v;\r\n\r\n    var list = [v];\r\n    pmDataVM().Project_DictVM.Items = list;\r\n    pmData().Phase_Dict = v.ModelItem.Phase_Dict;\r\n\r\n    var massResComp = this.MassResultCompVM;\r\n    massResComp.ProjectVMStorageList = list;\r\n    massResComp.ProjectSelectVM.InitialItems = list;\r\n\r\n    var setItemsFuncs = () => massResComp.PhaseVMStorageList = phase_DictVM.Items;\r\n\r\n    var phase_DictVM = v.Phase_DictVM;\r\n    if (phase_DictVM.Items) {\r\n      setItemsFuncs();\r\n    } else {\r\n      phase_DictVM.OnGetItemsDone_Funcs.push(() => {\r\n        setItemsFuncs();\r\n      })\r\n    }\r\n  }\r\n\r\n  massResultCompVM\r\n  get MassResultCompVM() {\r\n    if (!this.massResultCompVM) {\r\n      var obj = this.massResultCompVM = util.GetMassResultCompVM(this);\r\n      pmDataVM().MassResultCompVM = obj;\r\n    }\r\n    return this.massResultCompVM;\r\n  }\r\n}","import MassResultComp from '../../mass/result/MassResultComp'\r\nimport * as massResutlCompVMUtil from '../../mass/result/MassResultCompVMUtil'\r\n\r\nexport const GetMassResultCompVM = (q) => {\r\n  var obj = massResutlCompVMUtil.get(new MassResultComp(), false);\r\n  obj.IsShowProjectSelect = false;\r\n  obj.CanHavePhase = true;\r\n  return obj;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Phase_DictVM } from \"./Phase_DictVM\";\r\nimport InputView from \"../../../input/InputView\";\r\nimport * as stateType from '../state/StateType'\r\n\r\nconst { Option } = Select;\r\n\r\nclass Phase_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Phase_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var input = data.Input;\r\n    var state = data.State;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Phiên bản khối lượng</b>\r\n        </Divider>\r\n        <div>\r\n          <Button type='primary' size='middle' onClick={data.AddVersion}\r\n            disabled={state === stateType.addversion}>\r\n            <PlusCircleOutlined /> LƯU KẾT QUẢ HIỆN TẠI\r\n          </Button>\r\n\r\n          {state === stateType.addversion ? <div className=\"mt-3\">\r\n            <InputView store={input.NameVM} />\r\n            <InputView store={input.DescriptionVM} />\r\n            <div className=\"mt-2\">\r\n              <Button type='primary' size='small' onClick={data.OK}>OK</Button>\r\n              <Button type='default' size='small' onClick={data.Cancel}>Cancel</Button>\r\n            </div>\r\n          </div> : ''}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(Phase_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport RebarMass_Dict from \"./RebarMass_Dict\";\r\nimport TableView from \"../../../../table/TableView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass RebarMass_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new RebarMass_Dict();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Dữ liệu thép</b>\r\n        </Divider>\r\n        \r\n        <TableView store={data.TableVM}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(RebarMass_DictView)","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ProjectCompVM from './ProjectCompVM';\r\nimport Phase_DictView from '../../phase/Phase_DictView';\r\nimport MassResultCompView from '../../mass/result/MassResultCompView';\r\nimport RebarMass_DictView from '../../mass/rebar/RebarMass_DictView';\r\n\r\nclass ProjectCompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ProjectCompVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const id = this.props.match.params.id;\r\n    data.id = id;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var projectVM = data.ProjectVM;\r\n\r\n    return (\r\n      <>\r\n        <div style={{ padding: 15 }}>\r\n          <Row gutter={10}>\r\n            <Col span={5}>\r\n            </Col>\r\n            <Col span={14}>\r\n              {projectVM ? <>\r\n                <h4 className='text-center'>Dự án {projectVM.Name}</h4>\r\n                <Phase_DictView store={projectVM.Phase_DictVM} />\r\n\r\n                <MassResultCompView store={data.MassResultCompVM} />\r\n\r\n                <RebarMass_DictView store={projectVM.RebarMass_Dict} />\r\n              </> : ''}\r\n            </Col>\r\n            <Col span={5}>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(ProjectCompView));\r\n","import './App.css';\r\nimport \"antd/dist/antd.css\";\r\nimport { Component } from 'react';\r\n\r\nimport TestView from './model/view/TestView';\r\n//import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport MassDetailView from './model/main/entity/mass/detail/MassDetailView';\r\nimport ProjectCompView from './model/main/entity/project/comp/ProjectCompView';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={TestView} />\r\n          <Route exact path=\"/massdetail/:id\" component={MassDetailView} />\r\n          <Route path=\"/project/:id\" component={ProjectCompView} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
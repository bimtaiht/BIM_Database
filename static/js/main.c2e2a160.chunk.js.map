{"version":3,"sources":["model/text/TextState.js","model/text/TextVM.js","model/text/TextVMUtil.js","model/main/entity/mass/MassType.js","model/main/entity/mass/site/Site_FieldType.js","model/main/entity/mass/field/MassItemField.js","util/apiUtil.js","util/generalUtil.js","model/main/entity/mass/table/column/MassColumn.js","model/text/TextRenderState.js","model/main/entity/filter/FilterCategoryType.js","model/main/entity/filter/FilterValueType.js","model/main/entity/filter/StringFilterType.js","model/main/entity/filter/NumberFilterType.js","model/main/entity/filter/EntFilterUtil.js","model/main/entity/filter/EntFilter.js","model/main/entity/mass/table/rowgroup/MGI_Item.js","model/main/entity/mass/table/rowgroup/MGI_I_CreateType.js","model/main/entity/mass/table/rowgroup/MGI_ItemUtil.js","model/main/entity/mass/table/rowgroup/MassGroupItem.js","model/main/entity/mass/table/rowgroup/MassGroupComponent.js","model/main/entity/setting/massGroup/data/Data_Url.js","model/main/entity/setting/massGroup/data/Data.js","model/main/entity/mass/table/rowgroup/MassGroupComponentUtil.js","model/main/entity/mass/table/rowgroup/MassGroupItemUtil.js","model/select/MultiSelectVMUtil.js","model/select/MultiSelectVM.js","model/select/MultiSelectView.js","model/hover/EntHoverVM.js","model/hover/EntHoverView.js","model/select/SelectVMUtil.js","model/select/SelectVM.js","model/float/FloatItemVM.js","model/float/FloatItemVMUtil.js","model/float/FloatItemView.js","model/select/SelectView.js","model/main/entity/mass/table/location/RRLF_LocationType.js","model/main/entity/mass/table/location/ReplaceRowLocationFactory.js","model/main/entity/mass/table/location/ReplaceRowLocationFactoryUtil.js","model/main/entity/mass/table/row/base/MassRow_Field_InputType.js","model/input/NewInputView.js","model/select/twocol/TwoCol_SelectVM.js","model/select/twocol/TwoCol_SelectVMUtil.js","model/select/twocol/TwoCol_SelectView.js","model/main/entity/mass/unit/MassUnitType.js","model/main/entity/update/Update_DirectionType.js","model/main/entity/mass/table/row/update/MRU_SectionName.js","model/main/entity/mass/table/cell/update/MCU_SectionName.js","model/main/entity/mass/table/row/delete/MR_DeleteType.js","model/main/entity/mass/table/row/base/MassRow.js","model/main/entity/mass/table/command/CommandType.js","model/main/entity/mass/table/row/unit/MR_Unit_SetType.js","util/inputUtil.js","model/main/entity/mass/table/tool/MassRow_ToolElementView.js","model/main/entity/mass/table/tool/MassRow_ToolElement.js","model/main/entity/mass/table/tool/MassRow_ToolElementUtil.js","model/main/entity/mass/item/value/MI_ValueItem.js","model/main/entity/mass/table/cell/update/MC_Update.js","model/main/entity/mass/table/cell/MassCellUtil.js","model/main/entity/mass/table/cell/MassCell.js","model/main/entity/mass/table/row/unit/MR_Unit_RenderState.js","model/main/entity/mass/table/row/unit/MR_UnitUtil.js","model/main/entity/mass/table/row/unit/MR_Unit.js","model/main/entity/mass/table/row/delete/MR_Delete.js","model/main/entity/mass/table/row/update/MR_Update.js","model/main/entity/mass/site/SiteVM.js","model/input/InputView.js","util/dateUtil.js","model/datepicker/DatePickerUtil.js","model/datepicker/DatePicker.js","model/datepicker/DatePickerView.js","model/main/entity/mass/site/SiteVMUtil.js","model/main/entity/mass/item/phaseValue/MIPh_Item.js","model/main/entity/mass/item/levelValue/Level_Item.js","model/main/entity/mass/item/levelValue/Level_ItemUtil.js","model/main/entity/mass/item/phaseValue/MIPh_ItemUtil.js","model/main/entity/mass/item/value/MI_ValueItemUtil.js","model/main/entity/mass/item/value/MI_ValueDictUtil.js","model/main/entity/mass/item/value/MI_ValueDict_GroupType.js","model/main/entity/mass/item/value/MI_ValueDict.js","model/main/entity/mass/item/base/MassItemUtil.js","model/main/entity/mass/item/base/MassItem.js","model/main/entity/mass/site/Site.js","model/main/entity/mass/site/SiteUtil.js","model/main/entity/mass/site/SiteUrl.js","model/text/TextRenderItem.js","model/text/TextRenderItemUtil.js","model/text/TextRender_Dict.js","model/text/EditableTextVM.js","model/text/EditableTextVMUtil.js","model/delete/EntDelete_ToggleType.js","model/delete/EntDelete_VisibleType.js","model/delete/EntDelete_UseType.js","model/delete/EntDeleteView.js","model/delete/EntDelete.js","model/delete/EntDeleteUtil.js","model/main/entity/mass/table/row/base/MassRowUtil.js","model/main/entity/mass/table/command/CommandDict.js","model/main/entity/svg/UndoView.js","model/main/entity/mass/table/command/CommandDictUtil.js","model/main/entity/mass/table/base/MassTableUtil.js","model/export/excel/ExcelExport.js","model/main/entity/mass/table/export/MT_Cell.js","model/main/entity/mass/table/export/MT_CellUtil.js","model/main/entity/mass/table/export/MT_Data_Row.js","model/main/entity/mass/table/export/MT_Cell_ValueType.js","model/main/entity/mass/table/export/MT_Data_RowUtil.js","model/main/entity/mass/table/export/MT_Data_Worksheet.js","model/main/entity/mass/table/export/MT_Data_WorksheetUtil.js","model/main/entity/mass/table/export/MT_RawData_Worksheet.js","model/main/entity/mass/table/export/MT_RawData_WorksheetUtil.js","model/main/entity/mass/table/export/MT_Workbook.js","model/main/entity/mass/table/export/MT_WorkbookUtil.js","model/text/TextView.js","model/main/entity/mass/table/cell/MassCellView.js","model/text/EditableTextView.js","model/main/entity/mass/table/row/unit/MR_UnitView.js","model/main/entity/mass/table/row/base/MassRowView.js","model/main/entity/mass/table/tbody/MassTBody.js","model/main/entity/mass/table/base/MassTable.js","model/main/entity/mass/table/column/MassColumnUtil.js","model/export/excel/ExcelExportUtil.js","model/main/entity/mass/item/base/MassItem_DictUtil.js","model/main/entity/mass/table/tbody/MassTBody_View.js","model/main/entity/mass/table/base/MassTableView.js","model/main/entity/mass/item/base/MassItem_Dict.js","model/main/entity/mass/result/MassResultCompUtil.js","model/main/entity/mass/result/MassResultComp.js","model/main/entity/setting/versionCompare/VCS_Item.js","model/main/entity/setting/versionCompare/VersionCompareSetting.js","model/main/entity/setting/versionCompare/VersionCompareSettingUtil.js","model/main/entity/tracking/TrackingItem.js","model/main/entity/tracking/Tracking.js","model/main/entity/mass/field/MassItemField_Dict.js","model/main/entity/setting/base/Setting.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroup.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupUtil.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValue_InputType.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValue.js","model/main/entity/setting/typicallevel/filter/TLS_Filter.js","model/main/entity/setting/typicallevel/filter/TLS_FilterUtil.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItem.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSettingData.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataUtil.js","model/main/entity/setting/level/item/LS_Item.js","model/main/entity/setting/level/LevelSettingData.js","model/main/entity/setting/level/item/LS_ItemUtil.js","model/main/entity/setting/level/LevelSettingDataUtil.js","model/main/entity/setting/typicallevel/wrapper/TLS_Data_Wrapper.js","model/main/entity/setting/typicallevel/wrapper/TLS_Data_WrapperUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSetting.js","model/main/entity/setting/base/SettingType.js","model/main/entity/setting/typicallevel/TypicalLevelSettingUtil.js","model/main/entity/phase/Phase.js","model/main/entity/phase/PhaseUtil.js","model/main/entity/phase/Phase_Dict.js","model/main/entity/setting/base/SettingUtil.js","model/main/entity/phase/PhaseInput.js","model/main/entity/phase/Phase_DictUtil.js","model/main/entity/phase/PhaseInputUtil.js","model/main/entity/project/base/Project.js","model/main/entity/level/new/LevelDict.js","model/main/entity/level/new/LevelItem.js","model/main/entity/level/new/LevelDict_Url.js","model/main/entity/level/new/LevelDictUtil.js","model/main/entity/level/new/LevelItemUtil.js","model/main/entity/setting/level/LevelSetting_Url.js","model/main/entity/setting/level/LevelSetting.js","model/main/entity/exportset/item/base/ExportSet_Url.js","model/main/entity/exportset/item/base/ExportSet_RetrieveFrom.js","model/main/entity/exportset/item/base/ExportSet.js","model/main/entity/exportset/item/base/ExportSetUtil.js","model/main/entity/mass/item/base/MassItemResult_Url.js","model/main/entity/exportset/item/base/ExportSetVersion_Url.js","model/main/entity/mass/item/base/MassItemUrl.js","model/main/entity/exportset/dict/ExportSet_Dict.js","model/main/entity/exportset/dict/ExportSet_DictUtil.js","model/main/entity/project/base/ProjectUtil.js","model/main/entity/setting/level/LevelSettingUtil.js","model/main/entity/project/base/ProjectCommand_Url.js","model/main/entity/project/base/Project_Dict.js","model/main/entity/project/base/Project_DictUtil.js","model/main/entity/setting/massGroup/dict/dict/MGS_Dict_Dict.js","model/main/entity/setting/massGroup/dict/MassGroupSetting_Dict.js","model/main/entity/setting/massGroup/item/MassGroupSetting_Url.js","model/main/entity/setting/massGroup/item/MassGroupSetting.js","model/main/entity/setting/massGroup/dict/MGS_Dict_UseType.js","model/main/entity/setting/massGroup/item/addtemplate/AddTemplateUtil.js","model/main/entity/setting/massGroup/item/addtemplate/AddTemplate.js","model/main/entity/setting/massGroup/item/MassGroupSettingUtil.js","model/main/entity/setting/massGroup/data/DataUtil.js","model/main/entity/setting/massGroup/save/Save.js","model/main/entity/setting/massGroup/save/SaveUtil.js","model/main/entity/setting/massGroup/dict/MGS_Dict_Category.js","model/main/entity/setting/massGroup/dict/MassGroupSetting_DictUtil.js","model/main/entity/setting/massGroup/dict/dict/MGS_Dict_DictUtil.js","model/main/entity/setting/massDetail/dict/dict/MDS_Dict_Dict.js","model/main/entity/setting/massDetail/dict/MassDetailSetting_Dict.js","model/main/entity/setting/massDetail/item/MassDetailSetting_Url.js","model/main/entity/setting/massDetail/item/MassDetailSetting.js","model/main/entity/setting/massDetail/item/MassDetailSettingUtil.js","model/main/entity/setting/massDetail/save/Save.js","model/main/entity/setting/massDetail/save/SaveUtil.js","model/main/entity/setting/massDetail/dict/MassDetailSetting_DictUtil.js","model/main/entity/setting/massDetail/dict/dict/MDS_Dict_DictUtil.js","model/main/entity/setting/sitesuggest/item/Item_Url.js","model/main/entity/setting/sitesuggest/item/Item.js","model/main/entity/setting/sitesuggest/item/ItemUtil.js","model/main/entity/setting/sitesuggest/dict/dict/Dict_Dict.js","model/main/entity/setting/sitesuggest/dict/base/Dict.js","model/main/entity/setting/sitesuggest/dict/base/Dict_UseType.js","model/main/entity/setting/sitesuggest/dict/base/DictUtil.js","model/main/entity/setting/sitesuggest/dict/dict/Dict_DictUtil.js","model/user/dict/User_Dict.js","model/user/item/User.js","model/user/item/UserUtil.js","model/user/dict/User_DictUtil.js","model/main/entity/admin/main/Admin.js","model/main/entity/admin/usermanager/dict/Dict.js","model/main/entity/admin/usermanager/dict/DictUtil.js","model/main/entity/admin/project/item/Item_Url.js","model/main/entity/admin/project/item/Item.js","model/main/entity/admin/project/item/ItemUtil.js","model/main/entity/admin/project/dict/Dict.js","model/main/entity/admin/project/dict/DictUtil.js","model/main/entity/admin/projectgroup/item/Item_Url.js","model/main/entity/admin/projectgroup/item/Item.js","model/main/entity/admin/projectgroup/item/ItemUtil.js","model/main/entity/admin/projectgroup/dict/Dict.js","model/main/entity/admin/projectgroup/dict/DictUtil.js","model/main/entity/admin/main/AdminUtil.js","model/main/entity/project/base/Project_Url.js","model/main/single/model/PMDataUtil.js","model/main/entity/mass/unit/MassUnitType_Dict.js","model/main/entity/project/base/ProjectGroupCommand_Url.js","model/main/single/model/PMData.js","model/main/entity/project/base/ProjectViewType.js","model/main/entity/phase/PhaseVM.js","model/main/entity/phase/PhaseVMUtil.js","model/main/entity/state/StateType.js","model/main/entity/phase/Phase_DictVM.js","model/main/entity/phase/PhaseInputVM.js","model/main/entity/phase/Phase_DictVMUtil.js","model/main/entity/phase/PhaseInputVMUtil.js","model/main/entity/project/base/ProjectVM.js","model/main/entity/setting/base/SettingVM.js","model/main/entity/setting/level/LevelSettingVM.js","model/main/entity/command/ProjectCommand.js","model/main/entity/setting/level/item/LS_ItemVM.js","model/main/entity/setting/level/item/LS_ItemVMUtil.js","model/main/entity/setting/level/LevelSettingDataVM.js","model/table/RenderState.js","model/table/RenderItem.js","model/table/TableCell.js","model/table/TableCellUtil.js","model/table/RenderItemUtil.js","model/table/Render_Dict.js","model/table/TitleRenderItem.js","model/table/TitleRenderItemUtil.js","model/table/TitleRender_Dict.js","model/table/TableColumn_InputType.js","model/table/TableColumnUtil.js","model/table/TableColumn.js","model/table/TableRow.js","model/table/TableRowUtil.js","model/table/TableVM.js","model/table/TableVMUtil.js","model/main/entity/setting/level/LevelSettingDataVMUtil.js","model/main/entity/setting/typicallevel/wrapper/TLS_Data_WrapperVM.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemStateType.js","model/checkbox/CheckboxVM.js","model/checkbox/CheckboxVMUtil.js","model/checkbox/CheckboxView.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupVM.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupVMUtil.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValueVM.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValueVMUtil.js","model/main/entity/setting/typicallevel/filter/TLS_FilterVM.js","model/main/entity/setting/typicallevel/filter/TLS_FilterVMUtil.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemVM.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemVMUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataVM.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataVMUtil.js","model/main/entity/setting/typicallevel/wrapper/TLS_Data_WrapperVMUtil.js","model/main/entity/setting/typicallevel/TypicalLevelSettingVM.js","model/main/entity/setting/typicallevel/TypicalLevelSettingVMUtil.js","model/main/entity/exportset/item/massitem_table/column/Column_GroupType.js","util/commandUtil.js","model/main/entity/exportset/item/massitem_table/table/Table_UseType.js","model/main/entity/exportset/item/massitem_table/columngroup/ColumnGroup.js","model/main/entity/exportset/item/massitem_table/column/Column.js","model/main/entity/exportset/item/massitem_table/column/ColumnUtil.js","model/main/entity/exportset/item/massitem_table/columngroup/ColumnGroupUtil.js","model/main/entity/exportset/item/massitem_table/table/TableView.js","model/main/entity/exportset/item/massitem_table/table/TableUrl.js","model/main/entity/exportset/item/massitem_table/table/Table.js","model/main/entity/mass/detail/MassDetailVM.js","model/main/entity/mass/detail/MassDetailVMUtil.js","model/main/entity/exportset/item/massitem_table/table/TableUtil.js","model/main/entity/exportset/item/base/ExportSetVMUtil.js","model/main/entity/exportset/item/base/ExportSetVM.js","model/main/entity/exportset/table/TableItemView.js","model/main/entity/exportset/table/TableView.js","model/main/entity/exportset/dict/ExportSet_DictVM.js","model/main/entity/exportset/dict/ExportSet_DictVMUtil.js","model/main/entity/project/base/ProjectVMUtil.js","model/main/entity/setting/level/LevelSettingVMUtil.js","model/main/entity/project/base/Project_DictVM.js","model/main/entity/project/base/Project_DictVMUtil.js","model/main/entity/mass/result/MassResultCompVM.js","model/main/entity/mass/result/MassResultCompVMUtil.js","model/main/entity/doc/comp/DO_Comp.js","model/main/entity/doc/DO_Element.js","model/main/entity/doc/DO_ElementType.js","model/main/entity/doc/DO_ElementUtil.js","model/main/entity/doc/DO_ElementVM.js","model/main/entity/doc/DO_ElementVMUtil.js","model/main/entity/doc/comp/DO_CompVMUtil.js","model/main/entity/doc/comp/DO_CompUtil.js","model/main/entity/doc/comp/DO_CompVM.js","model/main/entity/doc/DO_ElementView.js","model/main/entity/doc/comp/DO_CompView.js","model/main/entity/setting/massType/Category/Category_ItemVM.js","model/main/entity/setting/massType/Category/Category_ItemVMUtil.js","model/main/entity/setting/massType/MEP/MEP_ItemVM.js","model/main/entity/setting/massType/MEP/MEP_ItemVMUtil.js","model/main/entity/setting/massType/Item/MT_ItemVM.js","model/main/entity/setting/massType/Item/MT_ItemVMUtil.js","model/main/entity/setting/massType/MassTypeSettingDataVM.js","model/main/entity/setting/massType/CategorySettingDataVMUtil.js","model/main/entity/setting/massType/MEPSettingDataVMUtil.js","model/main/entity/setting/massType/MassTypeSettingDataVMUtil.js","model/main/entity/setting/massType/MassTypeSettingVM.js","model/main/entity/setting/massType/MassTypeSetting.js","model/main/entity/setting/massType/Item/MT_Item.js","model/main/entity/setting/massType/Category/Category_Item.js","model/main/entity/setting/massType/MassTypeSettingData.js","model/main/entity/setting/massType/Item/MT_ItemUtil.js","model/main/entity/setting/massType/Category/Category_ItemUtil.js","model/main/entity/setting/massType/MassTypeSettingDataUtil.js","model/main/entity/setting/massType/MassTypeSettingUtil.js","model/main/entity/setting/massType/MassTypeSettingVMUtil.js","model/table/TableView.js","model/main/entity/setting/massType/MassTypeSettingDataView.js","model/main/entity/setting/massType/MassTypeSettingView.js","model/main/entity/tab/Tab.js","model/main/entity/tab/TabUtil.js","model/main/entity/setting/massGroup/item/addtemplate/AddTemplateVM.js","model/main/entity/setting/massGroup/item/addtemplate/AddTemplateVMUtil.js","model/main/entity/setting/massGroup/dict/dict/MGS_Dict_Dict_UseType.js","model/main/entity/setting/massGroup/item/MassGroupSettingVMUtil.js","model/main/entity/setting/massGroup/item/MassGroupSettingVM.js","model/main/entity/setting/massGroup/table/TableItemView.js","model/main/entity/tab/TabView.js","model/main/entity/setting/massGroup/table/TableView.js","model/main/entity/setting/massGroup/dict/MassGroupSetting_DictVM.js","model/main/entity/setting/massGroup/save/SaveVM.js","model/main/entity/setting/massGroup/dict/MassGroupSetting_DictVMUtil.js","model/main/entity/setting/massGroup/save/SaveVMUtil.js","model/main/entity/setting/massGroup/dict/dict/MGS_Dict_DictVM.js","model/main/entity/setting/massGroup/dict/dict/MGS_Dict_DictVMUtil.js","model/main/entity/setting/massDetail/item/MassDetailSettingVMUtil.js","model/main/entity/setting/massDetail/dict/dict/MDS_Dict_Dict_UseType.js","model/main/entity/setting/massDetail/item/MassDetailSettingVM.js","model/main/entity/setting/massDetail/table/TableItemView.js","model/main/entity/setting/massDetail/table/TableView.js","model/main/entity/setting/massDetail/dict/MassDetailSetting_DictVM.js","model/main/entity/setting/massDetail/save/SaveVM.js","model/main/entity/setting/massDetail/dict/MassDetailSetting_DictVMUtil.js","model/main/entity/setting/massDetail/save/SaveVMUtil.js","model/main/entity/setting/massDetail/dict/dict/MDS_Dict_DictVM.js","model/main/entity/setting/massDetail/dict/dict/MDS_Dict_DictVMUtil.js","model/main/entity/setting/sitesuggest/item/ItemVMUtil.js","model/main/entity/setting/sitesuggest/item/ItemVM.js","model/main/entity/setting/sitesuggest/table/TableItemView.js","model/main/entity/setting/sitesuggest/table/TableView.js","model/main/entity/setting/sitesuggest/dict/base/DictVM.js","model/main/entity/setting/sitesuggest/dict/base/DictVMUtil.js","model/main/entity/setting/sitesuggest/dict/dict/Dict_DictVM.js","model/popover/EntPopover_TriggerType.js","model/popover/EntPopoverView.js","model/popover/EntPopover.js","model/popover/EntPopoverUtil.js","model/main/entity/setting/sitesuggest/dict/dict/Dict_DictVMUtil.js","model/user/dict/User_Dict_ViewType.js","model/user/dict/User_DictVM.js","model/user/item/UserVM.js","model/user/item/UserVMUtil.js","model/user/login/Login.js","model/user/login/LoginUtil.js","model/user/newpassword/NewPassword.js","model/user/newpassword/NewPasswordUtil.js","model/user/dict/User_DictVMUtil.js","model/main/entity/admin/main/AdminVM.js","model/main/entity/admin/usermanager/table/TableView.js","model/main/entity/admin/usermanager/dict/DictVM.js","model/main/entity/admin/usermanager/dict/DictVMUtil.js","model/main/entity/admin/project/item/ItemVM.js","model/main/entity/admin/project/group/GroupVMUtil.js","model/main/entity/admin/project/group/GroupVM.js","model/main/entity/admin/project/item/ItemVMUtil.js","model/main/entity/admin/project/table/TableItemView.js","model/main/entity/admin/project/table/TableView.js","model/main/entity/admin/project/dict/DictVM.js","model/main/entity/admin/project/dict/DictVMUtil.js","model/main/entity/admin/projectgroup/item/ItemVM.js","model/main/entity/admin/projectgroup/item/ItemVMUtil.js","model/main/entity/admin/projectgroup/table/TableItemView.js","model/main/entity/admin/projectgroup/table/TableView.js","model/main/entity/admin/projectgroup/dict/DictVM.js","model/main/entity/admin/projectgroup/dict/DictVMUtil.js","model/main/entity/admin/main/AdminVMUtil.js","model/main/entity/mass/item/base/MassItem_DictView.js","model/main/entity/mass/result/MassResultCompView.js","model/main/single/form/PMDataVMUtil.js","model/main/single/form/PMDataVM.js","model/main/entity/nav/left/LeftNav.js","model/main/entity/nav/left/LeftNavItem.js","model/main/entity/nav/left/LeftNavItemUtil.js","model/main/entity/nav/left/LeftNavUtil.js","model/main/entity/nav/left/LeftNavVMUtil.js","model/main/entity/nav/left/LeftNavVM.js","model/main/entity/nav/left/LeftNavView.js","model/main/entity/mass/detail/MassDetailView.js","model/main/entity/setting/typicallevel/levelGroup/LevelGroupView.js","model/main/entity/setting/typicallevel/filter/TLS_FilterValueView.js","model/main/entity/setting/typicallevel/filter/TLS_FilterView.js","model/main/entity/setting/typicallevel/pageItem/TLS_PageItemView.js","model/main/entity/setting/typicallevel/TypicalLevelSettingDataView.js","model/main/entity/setting/level/LevelSettingDataView.js","model/main/entity/setting/typicallevel/TypicalLevelSettingView.js","model/main/entity/phase/Phase_DictView.js","model/main/entity/exportset/main/ExportSetMain_View.js","model/main/entity/project/comp/ProjectCompVM.js","model/main/entity/project/base/ProjectCommandType.js","model/main/entity/project/comp/ProjectCompVMUtil.js","model/main/entity/project/comp/ProjectCompView.js","model/main/entity/admin/main/AdminView.js","model/main/entity/command/Command.js","model/main/entity/home/HomeView.js","model/main/single/form/PMDataView.js","App.js","reportWebVitals.js","index.js"],"names":["text","password","TextVM","content","undefined","placeholder","State","ts","makeObservable","this","observable","v","onSetContent","OnSetContent","style","inputStyle","wrapper","position","get","q","qI","Concrete","Rebar","AcceptanceNumberInternal","AcceptanceNumber","AcceptanceDate","SupervisorContractor","SupervisorConsultant","SupervisorClient","SubContractor","PaymentPeriodSubContractor","PaymentPeriodClient","GetList","GetKey","GetTitle","Project","Phase","Workpackage","Value","Unit","elementName","MassType","workItem","level","diameter","block","zone","typename","materialName","systemtype","systemclassification","familyName","size","roomName","roomNumber","guid","elementId","GetForMassGroup","list","push","apply","sft","GetValueString","massFieldValue","field","value","Name","FullName","GetListForTypicalLevelFilter","GetName","name","http","timeout","axios","create","baseURL","Accept","handleResponse","response","success","status","data","message","statusText","callApi","action","a","err","error","timeout_default","url","config","put","payload","result","post","randomId","Intl","DateTimeFormat","Math","random","toString","substr","newGUID","replace","c","crypto","getRandomValues","Uint8Array","MoveItem","oldIndex","newIndex","temp","IsSameValues","list1","list2","isValidCheck","isSame","length","forEach","x","i","includes","Remove","dict","key","index","findIndex","Key","splice","Add","func","isDelete","newfunc","Add_2","IsDelete","Handle","newDict_Handle","filter","ExcelCellName","row","col","n","ordA","charCodeAt","len","s","String","fromCharCode","floor","ExcelColumnName","ExcelRangeName","row1","col1","row2","col2","SaveDatabase","handle","method","apiFunc","apiData","ApiData","_id","api","isNew","then","DeleteDatabase","GetPlainText","pasteEvent","originalEvent","clipboardData","getData","SingleFilter","nullHandle","obj","MassColumn","Cells","genUtil","Dict","Columns","indexOf","_default","edit","category","parameter","bystring","bynumber","byequal","bycontain","bynotcontain","bysmaller","bybigger","bybetween","Clone","EntFilter","ValueType","NumberFilterType","StringFilterType","Values","CategoryType","GetValueStorageList","fct","PMData","Instance","ParameterNames","IsValid","isValid","filterValues","fvt","lowerVal","toLowerCase","isNaN","nft","leftVal","rightVal","IsEqualLeft","IsEqualRight","values","valueStorageList","util","valueType","numberFilterType","stringFilterType","MGI_Item","Delete","handleUndo","Index","MassGroupItem","Items","supItem","title","newMGI","newMGI_id","id","supValue","SupValue","Title","createType","CreateType","byuser","byauto","mgi","ct","GetNewMGI","SupComponent","AllItems","GetSupItem","IsGet_SupItem","SubComponents","NotIncludeValues","AddNotIncludeValue","GetItem","item","itemUtil","SupRows","CreatedByUser_Rows","On_AddSupRow_Func_Dict","AddSupRow","NewRow","HandleCreatedByUserRows","OnIsFirstSetSupRow_Funcs","newSupRow","userItems","mgii_ct","IsAdd_Done","sortedUserItems","isFirst_Handle","validIndexs","SupItem","y","IsDebug","supRow","supRows","concat","addRow","Table","GetRow","FullValue","IsCreatedByUser","handleRow","handleNonField","subMgcIndex","Filter","replaceMgi","NewMGI","supName","Handle_ReplaceMGI","Rank","map","items","Field","subComponents","valueOrders","ValueOrders","notIncludeValues","isFirstSetSupRow","IsHaveMassItem","table","MassGroupComponent","originComponent","OriginComponent","AllSubItems","Data","showMessage","tempId","TempId","dictId","mainMassGroupComponent","MainMassGroupComponent","categoryType","filterUtil","forTemplate","GetOriginComponent","subComps","supCom","getFromDb","compUtil","IsHaveValueOrder","GetTable","initialItems","MultiSelectVM","InitialItems","GetInitialIndexs","selectedIndexs","GetSelectedItems","SelectedIndexs","open","canOpen","disabled","IsSet_InitialItem","InitialIndexs","initialIndexs","SelectedItems","selectedItems","OnSelectedItemChanged","titleRender","DisplayContent","OnSetOpen","GetDisabled_Func","Option","Select","MultiSelectView","props","onValueChange","state","onDropdownVisibleChange","Open","store","width","Placeholder","elems","displayContent","TitleRender","mode","optionFilterProp","onChange","filterOption","input","option","children","CanOpen","Disabled","Component","observer","EntHoverVM","IsElementVisible","ShowElement","HideElement","EntHoverView","className","minWidth","onMouseEnter","onMouseLeave","Element","initialItem","SelectVM","InitialItem","GetInitialIndex","selectedIndex","SetValue","SelectedItem","GetSelectedItem","SelectedIndex","CanClear","Clear","isDisabled","InitialIndex","initialIndex","selectedItem","padding","FloatItemVM","getClassName","location","loc","FloatItemView","getWrapperContent","floatItemVMUtil","SelectView","floatElem","floatItemStore","type","onClick","DivStyle","showSearch","IsDisabled","inside","lower","ReplaceRowLocationFactory","Location","lt","ToggleLocation","backgroundColor","Color","border","select","NewInputView","handleChange","e","Content","target","OnPaste","preventDefault","OnKeyDown","ctrlKey","which","keyCode","contentEditable","React","createRef","textVMUtil","Ref","onFocus","OnFocus","onKeyDown","ref","innerRef","Password","TwoCol_SelectVM","inputTitle","outputTitle","availableItems","index1","AvailableItems","IsChanged","Unselect","render","Render","InputTitle","OutputTitle","GetRender","TwoCol_SelectView","each","upper","both","none","celldata","unitlist","unit","_delete","addsub","subcells","removedata","MassRow","subItems","isShowSub","rank","IsToolVisible","FieldInputType","mr_f_it","Toggle_FieldInputType","TempField","FieldInputVM","FieldSelectVM","EditTitle","HideHover","Editable_TitleVM","RenderState","trs","GetCellByColumn","Column","ToggleSub","IsShowSub","SetSubFields","tempSubFields","TempSubFields","SubFields","undoFuncs","oldSubItems","SubItems","oldSubFields","supMgi","mgc","SubItem","subMgis","mgiUtil","SubMassGroupComponent","oldMgc","oldSubMassGroupComponent","oldO_SMGI","Original_SubMassGroupItem","ColumnField","mif","ValidPhasesByInput","HandleItem","GetValue","Update","Run","Section","u_sn","Sections","uc_sn","u_dt","oldUnit","ut","MoveUp","CurrentList","orderItems","OrderMGI","OrderItems","orderValues","OrderValues","mgiIndex1","mgiIndex2","CommandDict","Undo","MoveDown","AddSub","DeleteType","delType","undo","ReplaceOK","factory","ReplaceFactory","refRow","ReferenceRow","rrlf_lt","Replace","Replace_SubItems","Temp_SelectSubItems","Original_SupRow","oldMgi","old_IsReplaced","IsReplaced","newMgi","Replace_SubMassGroupItem","MainMGI","mgi_i","oldNewMgi","oldSupValue","oldReplaceMGI","ReplaceMGI","oldSupItem","Item","oldIsShowSubFieldSelect","IsShowSubFieldSelect","IsModalVisible","OpenModal","TitleVM","fieldSelectVM","subFieldSelectVM","SubFieldSelectVM","SelectSubItemsVM","LocationStorageList","locSelectVM","LocationSelectVM","ModalOK","oldField","ModalCancel","PMS_WorkPackages","ShowHover","HoverData","Show","Hide","On_HandleTotal_Cells_Done_Dict_Funcs","AddHandleTotal_Cell","cell","HandleTotal_Cells","Is_HandleTotal_Cells_Done","Add_Handled_CreatedByUser_Row","On_HandleTotalData_Cells_Func","HandleTotalData_Cells","AddHandleTotalData_Cell","Is_HandleTotalData_Cells","IsHaveAdditionInformation","AdditionInformation","Is_SelectSubItems_ModalOpen","Open_SelectSubItems_Modal","SelectSubItems_ModalCancel","SelectSubItems_ModalOK","isShow_RawValue","currentList","MainRows","cells","update","reduce","b","massGroupItem","replaceMGI","original_SubMassGroupItem","replace_SubMassGroupItem","isReplaced","original_SupRow","subFields","ToggleButtonContentVM","toggleButtonContent","toggleButtonContentVM","ToggleButtonContent","fieldInputVM","unCheckedChildren","checkedChildren","checked","titleVM","editable_TitleVM","AllRows","locationSelectVM","deleteData","replaceFactory","pms_WorkPackages_SelectVM","selectUtil","titleWidth","visible","onOk","onCancel","gutter","marginTop","flex","FieldInputElement","SelectSubItems_ModalElement","ButtonStyle","ViewItem","CanEdit_Site","Site","ModalView","hoverData","ToolElement","View","toolElement","trigger","InfoCircleOutlined","info","ExportInfo","TotalValue","Infos","ExportValue","is_HandleTotalData_Cells","IsShow_RawValue","selectSubItemsVM","tc_selectUtil","marginLeft","RawValue","unit_SetType","UnitData","CurrentUnit","unitData","site","enter","Get_Shortcut","altKey","MassRow_ToolElementView","MassRow_ToolElement","Method","UpCircleOutlined","DownCircleOutlined","danger","editable_TitleVM_RenderState","MI_ValueItem","roundingFactor","formatValue","toLocaleString","maximumFractionDigits","MC_Update","Update_SubCells","dirType","Host","SubCells","hUtil","Update_TotalValueData","Update_Unit","Update_ValueCurrent","host","setObj","CurrentTotalValueItem","TotalValueData","OnGet_TotalValueData_Func","sections","isHostApplied","Array","isArray","RunItem","secData","section","sn","pmData","ReHandle_TotalValueData","IsGet_TotalValueData","Handle_TotalValueData","totalVal_Data","m_ut","handledCount","count","handle_Val","valData","deleteIds","targetObj","ValueDict","GetPhaseItem","FullData","OnGet_FullData_Func_Dict","Get_SubCells","subRows","Row","MassCell","totalValueData","AsString","console","log","ShowDetail","process","openTabFunc","window","getUrl","viewDetailId","GetViewDetailId","vcs_Item","valueColor","tdBgColor","phaseId","massIds","massType","OnGet_TLS_LevelGroups_Func_Dict","isHaveWarning","tls_LevelGroup_Descriptions","contentVM","ValueString","CanHave_TotalValue","totalValue","subCells","isPending","isHaveVCS_Item","MassResultComp","Phases","ColumnIndex","ValueColor","IsHaveVCS_Item","VCS_Item","TDBgColor","color","fontWeight","tls_LevelGroups","IsGet_TLS_LevelGroups","checkadd_Val","val","TLS_LevelGroups","TLS_LevelGroup","Get_TLS_LevelGroup","OnGet_TLS_LevelGroup_Func_Dict","Get_TLS_LevelGroups","getWarningFunc","levelGroups","IsHaveWarning","IsGet_TLS_LevelGroup_Descriptions","TLS_LevelGroup_Descriptions","getDescFunc","FullDescription","OnGetLevelStorageList_Func_Dict","OnGet_TLS_LevelGroups_Funcs","Handle_Units","IsGet_Units","units","deleteIndexs","j","Units","SetUndo","SetUnit_FromHost","getRows","r","DirectionType","MR_Unit","OnSet_Unit_Func","Reset_Units","IsUndo","Unit_SelectVM","rs","OnMouseEnter","OnMouseLeave","update_DirectionType","currentUnit","Update_DirectionType","Unit_RenderVM","unit_SelectVM","Is_Unit_Select_Created","rUtil","unit_RenderVM","textUtil","MR_Delete","deleteType","dt","IsContinue","MR_Update","Update_Units","ud","Update_CellData","Unit_SetType","Update_Delete","DeleteData","Update_AddSub","SiteVM","ModelItem","Initial","Run_SetValue","Is_Modal_Visible","Is_Run_Valid","Is_OK_Valid","warn","inputVMs","InputView","onBlur","OnBlur","onPaste","Is_DayString_Valid","dayS","day","parseInt","Is_MonthString_Valid","monthS","month","Is_YearString_Valid","yearS","GetDate","dateString","format","refinedString","q1","split","reverse","join","Date","dateUtil","DatePicker","date","dateOnPicker","SetDate","toLocaleDateString","weekday","year","Set_DateOnPicker","HidePopover","Is_Popover_Visible","ShowPopover","DateOnPicker","selected","inline","onSelect","DatePickerView","GetInputVMs","ft","GetInputItem_Wrapper_Render","GetInputItem_Render","PMDataVM","SG_Dict_Dict","button","popover","Popover_Render","CurrentField","CurrentMassType","CurrentPopover","GetInputView","InputVMs","GetModalView","footer","MIPh_Item","IsGet_TLS_LevelGroup","OnGet_FullValue_Func_Dict","get_TLS_LevelGroup","tls_LevelGroup","fullValue","Get_FullValue","levelItem","Level_Item","OnSet_Replace_Value_Func_Dict","OnSet_Value_Func_Dict","originValue","replace_Value","MassItem","MassPhase_Item","mi","miPh_Item","GetOrigin_Value","GetValue_Mas","Handle_Replace_Value","IsGet_Replace_Value","source","originVal","Origin_Value","tls","replaceVal","Binding","Replace_Value","TypicalLevelSetting","OnGetTypicalLevelSetting_Func_Dict","Handle_Value","IsGet_Value","reVal","Handle_TLS_LevelGroup","phase","getLevelGroup_Func","Typical","pi","GetValidTLS_PageItem","GetValidTLS_LevelGroup","validPi","PageItems","IsValidTLS_PageItem","pageItem","filters","Filters","qVal","validLg","LevelGroups","primary_Values","Primary_Values","Handle_FullValue","IsGet_FullValue","getFullValue_Func","lg","Count","GetLevelItem","levelItemUtil","GetFromDb","Handle_FullData","IsGet_FullData","valueItemUtil","raw","MI_ValueDict","group","gt","getObj","isFormat","fullData","isDetailView","project","valueData","ExportSets","Info","projectId","workpackageId","exportSetId","exportSetVersionId","Elements","SiteInfos","siteUtil","projectData","Projects","Project_Dict_ForMassDetail","Get_Project","IsDetailView","IsHavePhase","Phase_Dict_ForMassDetail","Get_Phase","GetPhaseItems","phaseItemUtil","IsGetElement","OnGetElementDone_Funcs","isHandle","LevelItem","IsHandle","massItem","fields","isFromElement","groupName","getValFunc","AddDatabase","command","phaseName","PhaseItems","Project_Dict","workpackage","Workpackage_Dict","Workpackages","phases","Phase_Dict","exportSetVersionIds","inputPhases","GetTypicalLevelSetting","get_FullValue","valueDict","phaseItems","lastest_PhaseItem","IsGet_Lastest_PhaseItem","sort","CreatedDate","CurrentProject","OriginLevelItem","phaseItem","Lastest_PhaseItem","originLevelItem","Url","getFilter","Original_Full_SupRows","massId","handleSave","TextRenderItem","context","ClassName","Style","onDoubleClick","OnDoubleClick","OnClick","Is_Tool_Visible","Is_Edit_Visible","Edit","Is_OK_Visible","EditOK","TextRender_Dict","renderUtil","EditableTextVM","IsEditing","OnSet_RenderState_Func_Dict","renderState","CanChange_RenderState","Render_Dict","OnSet_Ref_Func_Dict","Focus","setFocus","Ref_Element","focus","titleFunc","render_Dict","ref_Element","current","getEl","canEdit","isToolVisible","manual","mouseEvent","hidden","mobx","EntDeleteView","EntDelete","UseType","Is_Visible","WrapperStyle","WrapperView","AdditionElement","VisibleType","vt","BlankStyle","is_Visible","ToggleType","tt","is_Hover_Visible","Show_Hover","stopPropagation","OnPre_ShowHover","Is_Hover_Visible","Toggle_Hover","PreRun","IsRun_Cancel","OnPreRun","PreCancel","Cancel","OnPreHide","OnSet_Is_Hover_Visible","run","OnRun","cancel","OnCancel","showHover_Button","Retrieve_ShowHover_Button","retrieve_ShowHover_Button","Retrieve_WrapperView","retrieve_WrapperView","Modal_ContentView","onVisibleChange","ShowHover_Button","modal_ButtonView","modal_InfoView","modal_ContentView","Modal_InfoView","Modal_ButtonView","display","GetRank","GetStyle","GetIsHaveSub","GetToggleButtonContent","GetFieldSelectVM","storageList","MassItemField_Dict","GetSubFieldSelectVM","multiSelectUtil","GetLocationSelectVM","GetOriginal_SubMassGroupItem","GetReplace_SubMassGroupItem","GetSubFields","subMGI","SubMassGroupItem","mgis","lastValidIndex","isValidHandle","HaveMassItemSubComponents","currentIndex","CreateSubMassGroupItem","mgcIndex","oldSubMassGroupItem","mgi_I","mgi_iUtil","Get_Original_SupRow","IsGet_Original_SupRow","Get_Original_Full_SupRows","Get_IsHaveAdditionInformation","Get_AdditionInformation","GetHoverData","d_tt","d_vt","Get_ToolElement","Get_Cells","GetIsShow_RawValue","Get_DefaultUnit","isDone","GetUnitData","GetDeleteData","GetUpdate","GetSite","siteVMUtil","GetEditable_TitleVM","editTextUtil","inputUtil","IsEscape","oldIsShow_RawValue","oldTitle","mgii","oldMgii_Title","MaxLength","UndoView","height","viewBox","d","GetButtonView","GetCommandDict","commandDictUtil","ExcelExport","Export","excelBuffer","XLSX","Workbook","bookType","Blob","FileSaver","FileName","Override_Get_Workbook","workbook","Override_Get_FileName","fileName","MT_Cell","column","Override_Get_Row","Override_Get_Column","Override_Get_Formula","formula","isContinueSubRows","t","Type","f","Formula","z","Format","MT_Data_Row","Worksheet","FullRows","string","ws","GetSubItems","GetCells","vc_dict","ValueCell_Dict","firstCol","First_ValueColumn","firstRow","First_ValueRow","getRowFunc","FullIndex","titleCell","c_vt","columns","valueCell","IsContinueSubRows","Address","GetFullItems","FullItems","MT_Data_Worksheet","First_TitleColumn","First_TitleRow","mainRows","rowUtil","fullRows","valueCells","titleCells","fc","fr","font","bold","allCells","TitleCells","ValueCells","listCells","AllCells","range","minRow","minCol","maxRow","maxCol","RangeName","ResultData","MT_RawData_Worksheet","InfoFields","dataRows","Data_WS","tableRows","DataRows","records","ExportData","infoFields","Binding_DataRow","valueFields","Records","ifs","ifl","vfs","ValueFields","cell_val","data_cell","MT_Workbook","RawData_WS","data_WS","rawData_WS","Sheets","SheetNames","All_WS","GetData_WS","GetRawData_WS","TextView","MassCellView","TDStyle","AStyle","LinkOutlined","EditableTextView","MR_UnitView","MainView","MassRowView","toggleButton","IsHaveSub","marginRight","scope","IsHave_Addition_Wrapper","AdditionInfomation_Element","RawValue_Element","ModalElement","MassTBody","rows","Rows","MassTable","IsValidTable","columnField","Init","Handled_CreatedByUser_Rows","GetColumn","colUtil","GetCell","canAdd","cellUtil","Build","colField","OnSet_MainMGI_Func","IsOnSaveMassGroup","HandledItems","HandledItemPhases","OnSetHandledRatio_Funcs","AddHandledItems","HandledRatio","UpdateData","TBody","IsUpdateDataDone","OnIsUpdateDataDone_Funcs","colFieldValue","initialRow","MainMGC","HandleRowFieldIndex","GetRow_Value_FieldIndex","rowFieldIndex","itemCount","lastRow","rowField","valueString","Handle_AddRow","subMgcs","subIndex","mgiItem","Is_Original_SupRow","r1","originalSupRow","isGet_SupRow_Done","fullFunc","sr","getSupRow","r2","awaitGetSupRowForAdd","AddMainRow","tbody","handledRatio","MassGroupSetting_Dict","Mgs_Dict_Dict","Used_MassGroupComponent","mainMGI","IsGet_MainMGI","Used_MassGroupItem","OnSet_Used_MassGroupItem_Func","formatedDate","dayjs","now","wbUtil","excelExport","wb","ovrgFileName","ovrgWb","eeUtil","ExportTitle","ExcelWorkbook","commandDict","GetMassTable","IsDataPending","MassTBody_View","MassTableView","thElems","Save_MGS_View","DownloadOutlined","ButtonView","MassItem_Dict","massTable","toFixed","loadingSpinTipVM","LoadingSpinTip","LoadingSpinTipVM","OnGetItemsDone_Funcs","isHavePhase","GetMassData","Is_First_Get_MassTable","MIF_Dict_ForInput","MIF_Dict_ForMassGroup","MassGroupSetting","GetItemsDone","projectIds","phaseIds","skip","take","massItem_Dict","VersionCompareSetting","TrackingItem","Tracking","AddItem","GetForDetail","GetForInput","Setting","OnDelete","Input","EditItemId","OnNameChanged","description","OnDescriptionChanged","OnDataChanged","settingType","SettingType","Description","LevelGroup","levels","Levels","primary","Primary","getLevelStorageList","LevelStorageList","IsGet_LevelStorageList","OnGetLevelStorageList_Funcs","GetLevelStorageList","min","LevelIndexs","max","MinLevel","MaxLevel","FilterDescription","GetDefault","GetDefaultPrimary","GetPrimary_Values","TLS_FilterValue","InputType","it","inputType","TLS_Filter","FieldStorageList","FieldFilterStorageList","arr","TLS_PageItem","AddLevelGroup","levelGroupUtil","AddFilter","GetLevelGroups","GetFilters","TypicalLevelSettingData","AddPageItem","pageItemUtil","pageItems","GetTest","GetPageItems","LS_Item","LevelSettingData","Update_LevelData","OnSet_LevelStorageList_Func_Dict","levelStorageList","TLS_Data_Wrapper","binding","typical","Save","fieldFilterStorageList","masstype","ls_dataUtil","tls_dataUtil","dataUtil","GetFromDb_Async","resData","editData","GetFieldFilterStorageList","fieldUtil","level_Dict","Level_Dict","getLevelsFunc","OnGetExportSetVersions_Func","exportSetVersions","typicalLevelSetting","IsOnGetDb_Async","typicalLevelUtil","createdDate","GetExportSetVersionData","ExportSetVersions","GetExportSetVersions","OnAdd","AddMassVersion","settingUtil","addVersionFunc","exportSet","AddVersion","inputExportSet","InputExportSet","OnGetInputExportSetDone_Funcs","PhaseInput","phaseUtil","GetInput","OnSet_LevelDict_Func_Dict","OnSet_LevelSetting_Func_Dict","OnSet_Commands_Func","Reset_Commands","Commands","phase_Dict","phaseDictUtil","exportSet_Dict","levelDict","levelSetting","getTypicalLevelSetting","TypicalLevelSetting_ForEdit","typicalLevelSetting_ForEdit","commands","LevelDict","baseurl","ApiUrl","GetFromData","Elevation","elevation","LevelSetting","st","ExportSet","OnSet_id_Func_Dict","NewVersion","SaveMassItems","OnSet_MassItems_Func","__id","retrieveFrom","rf","massItems","Handle_MassItems","IsGet_MassItems","MassItems","massItemUtil","otherData","versionId","ApiData_ForInput","addDataFunc","ExportSet_Dict","OnSet_Items_Func","OnAddItem","NewItem","iUtil","Handle_Items","IsGet_Items","getApi","Code","code","getAll","GetExportSet_Dict","exportSetDictUtil","Handle_LevelDict","IsGet_LevelDict","levelDictUtil","Handle_LevelSetting","IsGet_LevelSetting","levelUtil","Handle_Commands","IsGet_Commands","UserDict","LoginUser","userId","OnGetItemsDone","isAuto_GetData","MGS_Dict_Dict","OnSet_Used_MassGroupComponent_Func","current_MGS","used_MassGroupComponent","used_MassGroupItem","main_CurrentItem","save","OnSet_Data_Func","isSaveData","saveData","addTemplate","useType","template","mgs","mgsd_ut","InputName","AddTemplate","Handle_Data","IsGet_Data","mgcUtil","GetAddTemplate","OnSet_MassGroupComponent_Func","massGroupComponent","OnSet_Retrieve_MassGroupComponent_Func","Refresh","massGroupSetting","retrieve_MassGroupComponent","Handle_MassGroupComponent","IsGet_MassGroupComponent","funcObj","Retrieve_MassGroupComponent","setObj2","Get","Func","Handle_Retrieve_MassGroupComponent","IsGet_Retrieve_MassGroupComponent","mgsUtil","main","ReHandle_Items","pId","oldData","GetSave","saveUtil","GetCategory","mgsd_c","GetCategoryName","Category","GetItems","mgsdUtil","Handle_Used_MassGroupComponent","IsGet_Used_MassGroupComponent","mgi1","Current_MGS","Handle_Used_MassGroupItem","IsGet_Used_MassGroupItem","MDS_Dict_Dict","current_MDS","Refresh_Columns","infos","MassDetail_Table","MassDetailSetting_Dict","MassDetailSetting","mdsUtil","mdsdUtil","Dict_Dict","AddData","dataItemUtil","OnAddData","currentItem","OnSet_Data","Refresh_Items","OnSet_Items","partial","all","i_ut","userToken","User_Dict","OnSet_LoginUser_Func","token","localStorage","getItem","setItem","removeItem","loginUser","Token","OnSet_LoginUser","headers","User","GetApiData_Func","username","Username","GetUrl_Func","GetData","Handle_LoginUser","IsGet_LoginUser","userUtil","Config","Admin","OnSet_Users_Func","OnSet_Projects_Func","users","getUser_Func","projects","userManager_Dict","projectCommand_Dict","projectGroupCommand_Dict","Users","OnSet_User_Func","OnSet_Project_Func","user","Handle_User","IsGet_User","Handle_Project","IsGet_Project","GetGetUser_Func","UserManager_Dict","Handle_Users","IsGet_Users","GetUser_Func","Handle_Projects","IsGet_Projects","projectUtil","GetUserManager_Dict","umDictUtil","GetProjectCommand_Dict","pcDictUtil","GetProjectGroupCommand_Dict","pgcDictUtil","GetMassItemFields","GetMIF_Dict_ForMassGroup","GetMUT_Dict","mut","GetMgs_Dict_Dict","GetMds_Dict_Dict","Handle_SG_Dict_Dict","IsGet_SG_Dict_Dict","sgddUtil","GetUserDict","userDictUtil","Reset_AdminCommands","GetAdmin","adminUtil","fromType","Command_FromType","Handle_AdminCommands","IsGet_AdminCommands","AdminCommands","massGroupSetting_Dict","OnSet_SG_Dict_Dict_Funcs","DebugPoints","OnSet_CurrentProject_Func_Dict","UpdatedDate","LoggingItems","OnSet_AdminCommands_Func","project_Dict","projectDictUtil","project_Dict_ForMassDetail","currentProject","mgs_Dict_Dict","mds_Dict_Dict","sg_Dict_Dict","phase_Dict_ForMassDetail","massResultComp","massItemFields","mifs_ForMassGroup","mif_Dict_ForMassGroup","mif_Dict_ForDetail","mifd","mif_Dict_ForInput","mut_Dict","versionCompareSetting","tracking","userDict","admin","adminCommands","instance","mass","typicallevel","inputdata","mepsetting","document","PhaseVM","addversion","Phase_DictVM","stateType","OK","warning","PhaseInputVM","nameVM","descriptionVM","dictVM","itemVMUtil","inputVMUtil","ProjectVM","phase_DictVM","SettingVM","GetDataVM","OnGetDataVM","M2VM","dataVM","OnInitialSetDataVM","LevelSettingVM","view","LS_ItemVM","Is_ShowValue_Delete","ShowValue_Delete","pct","HideValue_Delete","DeleteItem","value_StorageList","ValueVM","valueVM","Value_StorageList","mulSelectUtil","Handle_Value_StorageList","IsGet_Value_StorageList","LevelSettingDataVM","NameVM","RenderItem","TableCell","dataIndex","DataIndex","Override_Get_CellRender","Override_Get_CellValue","inputVM","TitleRenderItem","CanHandleColumn","IsShow_MoveCommand","CanEditColumn","CanDeleteColumn","InputElement","TitleRender_Dict","renders","TableColumn","GetByTitle","OnSetTitleOK_Funcs","GetActionColumn","editElem","CanHandleItem","CanEditItem","delElem","CanDeleteItem","IsAction","AddColumn","CanAddItem","TitleRenderState","Show_MoveCommand","Collapse_MoveCommand","MoveLeft","IsActive","MoveRight","l1","titleRender_Dict","Column_InputType","AllColumnNames","selectVM","AllNames","firstItem","InputVM","Column_Title_SelectWidth","CanShow_MoveCommand","TableRow","EditItem","TableVM","CanAddColumn","IsShowActionColumn","dataSource","isEdit","OnGetItemForAdd","IsTypeNotDefined","DataSource","OnDeleteItem","OnEditItem","actionCol_Index","cit","nameCol","valCol","Value_Element","TLS_Data_WrapperVM","CheckboxVM","ischecked","isDisable","onCheckChange","CheckboxView","onCheckedChange","OnCheckChanging","Ischecked","checkboxVMUtil","LevelGroupVM","isSelectOpen","LevelSelectVM","levelSelectVM","triggerVM","IsSelectOpen","buttonTypeVM","addContentVM","TLS_FilterValueVM","ToggleInputType","SwitchChecked_Funcs","SelectOpen","selectOpen","PopoverState","popoverState","GetPopoverState","TLS_FilterVM","valueUtil","TLS_PageItemVM","ToggleState","NameOK","NameCancel","isLast","IsLast","AllTabs","IsModelChangePageKey","CurrentPageKey","InputToolElement","TypicalLevelSettingDataVM","IsHaveAddCommandTab","allTabs","currentPageKey","ChangePageKey","addCommandTab","TitleElement","AddCommandTab","GetBinding","bindingUtil","GetTypical","typicalUtil","TypicalLevelSettingVM","DataVM","dataVMUtil","pmDataVM","Validate","ValidateInGroup","detail","ColumnGroup","Refresh_ColumnCount","colSpan","ColumnsCount","comUtil","Hide_Tool","Show_Tool","MassItem_Render","textVM","Group","cgt","DeleteVM","titleSelect","TitleSelect","Tr_Style","TitleView","deleteVM","GetTitleSelect","t_ut","MUT_Dict","GetDeleteVM","GetColumns","Fields","GetDefaultField","DefaultField","TableView","ColumnGroups","SetItems","Refresh_Info","ColumnCount","columnCount","columnGroups","GetColumnGroup","q2","lastIndex","PasteVM","pasteContent","pasteVM","PasteContent","MassDetailVM","viewDetail","masses","MainMassType","mt","DetailTable","detailTable","tableUtil","ExportSetVM","GetDefaultInfos","GetInfos","GetDefaultValues","GetValues","GetColumnGroups","qInfo","colGroupUtil","qValue","GetColumnCount","GetItems_FromPaste","rawData","infoCount","totalCount","infoDict","parseFloat","Mds_Dict_Dict","OpenSave","Handle_MassItems_Table","IsGet_MassItems_Table","MassItems_Table","GetMassType_Select","isActive","Set_Active","TempCurrentItem","UnSet_Active","massItems_Table","ActiveTool","DescriptionVM","CanEdit","NameView","MassType_Render","massType_Render","massType_Select","MassType_Select","DescriptionView","activeTool","CloseCircleOutlined","CheckCircleOutlined","ActiveStyle","NameWrapper_View","MassType_View","DescriptionWrapper_View","TableItemView","RowView","ExportSet_DictVM","addVM","CurrentItem","AddVM","GetAddVM","PlusCircleOutlined","GetPickView","hideVisible","GetPhase_DictVM","phaseDictVMUtil","levelSettingUtil","GetTypicalLevelSetting_Func","model","GetTypicalLevelSetting_ForEdit","Project_DictVM","MassResultCompVM","IsShowProjectSelect","CanHavePhase","canEdit_Site","projectVMs","projectVMStorageList","ProjectSelectVM","projectSelectOpen","ProjectPopoverState","projectPopoverState","projectSelectVM","ProjectVMStorageList","multiSelectVMUtil","ProjectVMs","placement","rel","href","ProjectSelectOpen","phaseVMs","phaseVMStorageList","PhaseSelectVM","phaseSelectVM","PhaseVMStorageList","PhaseVMs","isShowPhaseSelectVM","isfetchProjects","GetProjectVMStorageList","GetProjectVMs","GetPhaseVMs","GetProjectPopoverStateValue","Handle_MassGroupSetting_Dict","IsGet_MassGroupSetting_Dict","OnSet_MassGroupSetting_Dict_Func","GetCanEdit_Site","DO_Comp","DO_Element","element","elementinfo","elementinfo_identify","elementinfo_locate","et","DO_ElementVM","isOpenSub","IsOpenSub","ToggleSubContentVM","toggleSubContentVM","GetToggleSubContent","DO_CompVM","modelUtil","DO_ElementView","IsHaveButton","DO_CompView","Category_ItemVM","ItemCategories","TableCategory","SelectUtil","MEP_ItemVM","itemMEPs","TableMEP","systemClassificationVM","systemClassification","SystemClassificationVM","MT_ItemVM","MassTypeSettingDataVM","itemCategories","AddItemCategory","itemUtilCategory","AddItemMEP","itemUtilMEP","ItemMEPs","Update_MasstypeData","makeAutoObservable","tableCategory","Name_Element","utilCategory","tableMEP","ClassCol","SystemClassification_Element","utilMEP","MassTypeSettingVM","MassTypeStorageList","MassTypeSetting","MT_Item","Category_Item","MassTypeSettingData","masstypeStorageList","OnSet_MassTypeStorageList_Func_Dict","GetMassTypeStorageList","tableElem","theadElem","LeftCircleOutlined","RightCircleOutlined","tbodyElem","MassTypeSettingDataView","SaveFilled","MassTypeSettingView","Tab","SetCurrent","IsHaveBorder","idRender","titleView_Render","active","IdRender","contentRender","contentWrapper_Render","ContentRender","TitleView_Render","ContentWrapper_Render","BorderStyle","ContentView","ContentWrapper_View","AddTemplateVM","Tool","inputNameVM","tool","GetTool","InputNameVM","SetDict","v1","query","MassGroupSettingVM","DeleteView","addTemplateUtil","dd_UseType","DD_UseType","mgsdd_ut","D_UseType","SaveTable","saveTable","MassGroupSetting_DictVM","CategoryName","SaveVM","MGS_Dict_DictVM","Toggle_UseType","queryTab","saveTab","mainItem","add_MGS","GetMainItem","GetQueryTab","TableWrapper_View","GetSaveTab","MainItem","GetAdd_MGS","GetPick_MGS_View","Name_ForPick","GetSave_MGS_View","GetView","QueryTab","Add_MGS","SaveTab","SetUseType","MassDetailSettingVM","mdsdd_ut","MassDetailSetting_DictVM","MDS_Dict_DictVM","add_MDS","Current_MDS","GetAdd_MDS","GetPick_MDS_View","GetSave_MDS_View","Add_MDS","ItemVM","GetNameForView","nameForView","IsCancel","d_ut","NameForView","DictVM","addData","GetAddData","Dict_DictVM","currentField","currentMassType","Refine","popover_Render","hover","click","EntPopoverView","EntPopover","ClickRef","Trigger","ShowContent","HideContent","ToggleContent","Is_Content_Visible","is_Content_Visible","OnClickOutside","Init_ClickOutside","isInside","p","contains","from","zIndex","PreSet_Is_Content_Visible","addEventListener","removeEventListener","OnSet_Is_Content_Visible","GetDefault_TitleRender","GetDefault_ContentRender","GetDefaultPopover_Render","popoverUtil","removes","login","User_DictVM","Logout","viewType","ViewType","IsSet_Model","newPassword","loginRender","userRender","mainViewRender","MainViewRender","modalViewRender","ModalViewRender","viewRender","ViewRender","UserVM","IsSaveDatabase","UsernameVM","OnSet_RenderState","usernameVM","Login","pw","PasswordVM","passwordVM","GetUsernameVM","GetPasswordVM","GetMainView","uUtil","uVMUtil","NewPassword","opw","OldPassword","npw","rnpw","ReNewPassword","OldPasswordVM","NewPasswordVM","ReNewPasswordVM","oldPasswordVM","newPasswordVM","reNewPasswordVM","oldpassword","newpassword","GetOldPasswordVM","GetNewPasswordVM","GetReNewPasswordVM","GetLogin","loginUtil","GetNewPassword","newpasswordUtil","Handle_ViewType","IsGet_ViewType","GetViewType","GetDefault_LoginRender","GetDefault_UserRender","GetDefault_MainViewRender","LoginRender","UserRender","GetDefault_ModalViewRender","GetDefault_ViewRender","AdminVM","ItemRender","iVM","GetItem_Func","getItem_Func","itemRender","GetDefault_ItemRender","UsernameView","PasswordView","ToolView_Render","GetGetItem_Func","ok","Project_Render","project_Render","project_Select","Project_Select","User_Render","user_Render","user_Select","User_Select","command_Select","Command_Select","GroupVM","itemDict","ivm","iVMUtil","Groups","Project_View","User_View","Command_View","GetProject_Render","GetProject_Select","GetUser_Render","GetUser_Select","setList","setSelect","host2","GetCommand_Select","pc","groups","AddGroup","gUtil","removeItems","Handle_Groups","IsGet_Groups","mainFunc","xs","createGroupFunc","handleItemFunc","validFunc","ProjectCommand_Dict","ProjectGroupCommand_Dict","MassItem_DictView","justifyContent","MassResultCompView","IsShowPhaseSelectVM","Pick_MGS_View","GetProject_DictVM","project_DictVMUtil","mgsddUtil","mdsddUtil","isDebug","OnSet_ProjectViewType_Func_Dict","projectViewType","pvt","main_Classname","UnAuthorized_View","project_DictVM","massResultCompVM","massResultCompVMUtil","ProjectViewType","LeftNav","LeftNavItem","LeftNavVM","GetPreTitle","preTitle","GetItemClass","SetView","PreTitle","LeftNavView","navUtil","MassDetailView","match","params","Main_Classname","Pick_MDS_View","withRouter","LevelGroupView","DeleteFilled","TLS_FilterValueView","TLS_FilterView","TLS_PageItemView","Tabs","TabPane","TypicalLevelSettingDataView","activeKey","tab","LevelSettingDataView","TypicalLevelSettingView","Phase_DictView","ExportSetMain_View","PickView","ProjectCompVM","projectVM","projectVMUtil","massResComp","setItemsFuncs","GetMassResultCompVM","massResutlCompVMUtil","ProjectCompView","ViewElement","AdminView","HomeView","PMDataView","basename","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c2e2a160.chunk.js","sourcesContent":["export const text = 'text'\r\nexport const password = 'password'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as ts from './TextState'\r\n\r\nexport class TextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder : observable,\r\n      State : observable\r\n    })\r\n  }\r\n\r\n  GetContentFunc\r\n\r\n  content = undefined\r\n  get Content(){\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n\r\n    if (this.OnSetContent) {\r\n      this.OnSetContent(v);\r\n    }\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  inputStyle\r\n\r\n  style\r\n  get Style() {\r\n    if (!this.style) {\r\n      this.style = this.inputStyle ? this.inputStyle : {};\r\n\r\n      if (this.wrapper) {\r\n        this.style.position = 'relative';\r\n      }\r\n    }\r\n    return this.style;\r\n  }\r\n\r\n  State = ts.text\r\n}","import { TextVM } from \"./TextVM\"\r\n\r\nexport const get = (q, placeholder) => {\r\n  var qI = new TextVM();\r\n  qI.content = q;\r\n  qI.placeholder = placeholder;\r\n  return qI;\r\n}","export const Concrete = \"Concrete\";\r\nexport const Formwork = \"Formwork\";\r\nexport const Rebar = \"Rebar\";\r\nexport const Structure = \"Structure\";\r\n\r\nexport const Sitework = \"Sitework\";\r\nexport const Tiling_Paving = \"Tiling & Paving\";\r\nexport const Masonry = \"Masonry\";\r\nexport const Metal = \"Metal\";\r\nexport const Painting = \"Painting\";\r\nexport const Plaster = \"Plaster\";\r\nexport const Screed = \"Screed\";\r\nexport const Roofing = \"Roofing\";\r\nexport const Wooden = \"Wooden\";\r\nexport const Mosaic = \"Mosaic\";\r\nexport const Gypsum = \"Gypsum\";\r\nexport const Carpet = \"Carpet\";\r\nexport const Vinyl = \"Vinyl\";\r\nexport const Skirting = \"Skirting\";\r\n\r\nexport const FloorFinish = \"FloorFinish\";\r\nexport const WallFinish = \"WallFinish\";\r\nexport const CeilingFinish = \"CeilingFinish\";\r\n\r\nexport const Staircase = \"Staircase\";\r\nexport const Ceiling = \"Ceiling\";\r\nexport const Door = \"Door\";\r\nexport const Window = \"Window\";\r\nexport const Furniture = \"Furniture\";\r\nexport const Lighting_Fixture = \"Lighting Fixture\";\r\nexport const Plumbing_Fixture = \"Plumbing Fixture\";\r\nexport const Railing = \"Railing\";\r\n\r\nexport const Arc = \"Arc\";\r\n\r\nexport const HVAC = \"HVAC\";\r\nexport const Electrical = \"Electrical\";\r\nexport const Plumbing = \"Plumbing\";\r\nexport const Firefighter = \"Firefighter\";\r\nexport const MEP = \"MEP\";\r\n\r\nexport const GetList = () => {\r\n return [\r\n   Concrete,\r\n   Formwork,\r\n   Rebar,\r\n   Structure,\r\n\r\n   Sitework,Tiling_Paving,Masonry, Metal,Painting,Plaster,\r\n   Screed, Roofing, Wooden, Mosaic, Gypsum, Carpet,\r\n   Vinyl, Skirting,\r\n\r\n   FloorFinish, WallFinish, CeilingFinish,\r\n\r\n   Staircase, Ceiling, Door, Window, Furniture, \r\n   Lighting_Fixture, Plumbing_Fixture, Railing,\r\n   Arc,\r\n\r\n   HVAC,\r\n   Electrical,\r\n   Plumbing,\r\n   Firefighter,\r\n   MEP\r\n ] \r\n}","export const AcceptanceNumberInternal = 'AcceptanceNumberInternal'\r\nexport const AcceptanceNumber = 'AcceptanceNumber'\r\nexport const AcceptanceDate = 'AcceptanceDate'\r\nexport const SupervisorContractor = 'SupervisorContractor'\r\nexport const SupervisorConsultant = 'SupervisorConsultant'\r\nexport const SupervisorClient = 'SupervisorClient'\r\nexport const SubContractor = 'SubContractor'\r\nexport const PaymentPeriodSubContractor = 'PaymentPeriodSubContractor'\r\nexport const PaymentPeriodClient = 'PaymentPeriodClient'\r\n\r\nexport const GetList = () => {\r\n  return [\r\n    AcceptanceNumberInternal,\r\n    AcceptanceNumber,\r\n    AcceptanceDate,\r\n    SupervisorContractor,\r\n    SupervisorConsultant,\r\n    SupervisorClient,\r\n    SubContractor,\r\n    PaymentPeriodSubContractor,\r\n    PaymentPeriodClient\r\n  ]\r\n}\r\n\r\nexport const GetKey = (v) => {\r\n  switch (v) {\r\n    case AcceptanceNumberInternal:\r\n      return 'acceptanceNumberInternal'\r\n    case AcceptanceNumber:\r\n      return 'acceptanceNumber'\r\n    case AcceptanceDate:\r\n      return 'acceptanceDate'\r\n    case SupervisorContractor:\r\n      return 'supervisorContractor'\r\n    case SupervisorConsultant:\r\n      return 'supervisorConsultant'\r\n    case SupervisorClient:\r\n      return 'supervisorClient'\r\n    case SubContractor:\r\n      return 'subContractor'\r\n    case PaymentPeriodSubContractor:\r\n      return 'paymentPeriodSubContractor'\r\n    case PaymentPeriodClient:\r\n      return 'paymentPeriodClient'\r\n  }\r\n}\r\n\r\nexport const GetTitle = (v) => {\r\n  switch (v) {\r\n    case AcceptanceNumberInternal:\r\n      return 'BBNT nội bộ'\r\n    case AcceptanceNumber:\r\n      return 'BBNT'\r\n    case AcceptanceDate:\r\n      return 'Ngày nghiệm thu'\r\n    case SupervisorContractor:\r\n      return 'Giám sát Nhà thầu'\r\n    case SupervisorConsultant:\r\n      return 'Giám sát Tư vấn'\r\n    case SupervisorClient:\r\n      return 'Giám sát CĐT'\r\n    case SubContractor:\r\n      return 'Thầu phụ'\r\n    case PaymentPeriodSubContractor:\r\n      return 'Kỳ thanh toán Thầu phụ'\r\n    case PaymentPeriodClient:\r\n      return 'Kỳ thanh toán Chủ đầu tư'\r\n  }\r\n}","import * as mt from '../MassType'\r\nimport * as sft from '../site/Site_FieldType'\r\n\r\nexport const Project = 'Project'\r\nexport const Phase = 'Phase'\r\nexport const Workpackage = 'Workpackage'\r\nexport const Value = 'Value'\r\nexport const Unit = 'Unit'\r\nexport const partition = 'partition'\r\nexport const rebarType = 'rebarType'\r\nexport const elementName = 'elementName'\r\nexport const MassType = 'MassType'\r\nexport const workItem = 'workItem'\r\nexport const level = 'level'\r\nexport const diameter = 'diameter'\r\nexport const block = 'block'\r\nexport const discipline = 'discipline'\r\nexport const zone = 'zone'\r\nexport const typename = 'typename'\r\nexport const materialName = 'materialName'\r\nexport const systemtype = 'systemtype'\r\nexport const systemclassification = 'systemclassification'\r\nexport const familyName = 'familyName'\r\nexport const size = 'size'\r\nexport const roomName = 'roomName'\r\nexport const roomNumber = 'roomNumber'\r\n\r\nexport const guid = 'guid'\r\nexport const elementId = 'elementId'\r\n\r\nexport const GetAll = () => {\r\n  return [MassType, workItem, level, block, elementName, diameter]\r\n}\r\n\r\nexport const GetForMassGroup = () => {\r\n  var list = [\r\n    MassType, workItem, level, block, zone,\r\n    familyName, typename,\r\n    elementName, materialName, roomName, roomNumber,\r\n    systemtype, systemclassification, size,\r\n    guid, elementId\r\n  ]\r\n\r\n  list.push.apply(list, sft.GetList());\r\n  return list;\r\n}\r\n\r\nexport const GetForDetail = () => {\r\n  return [\r\n    MassType, workItem, level, block, zone,\r\n    familyName, typename,\r\n    elementName, materialName, roomName, roomNumber,\r\n    systemtype, systemclassification, size,\r\n    guid, elementId,\r\n    Unit, Value\r\n  ]\r\n}\r\n\r\nexport const GetForInput = () => {\r\n  var list = [\r\n    MassType, workItem, level, block, zone,\r\n    familyName, typename,\r\n    elementName, materialName, roomName, roomNumber,\r\n    systemtype, systemclassification, size,\r\n  ]\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetDirectiveFields = () => {\r\n  return [Project, Workpackage, Value, Unit];\r\n}\r\n\r\nexport const GetIdentifyFields = () => {\r\n  return [elementName];\r\n}\r\n\r\nexport const Get_MassInfo_Fields = () => {\r\n  return [materialName]\r\n}\r\n\r\nexport const GetFullFields = (massItem, field) => {\r\n  switch (field) {\r\n    case Project:\r\n    case MassType:\r\n    case Phase:\r\n      return {\r\n        fields: [field],\r\n        isFromElement: false\r\n      };\r\n    case workItem:\r\n    case elementName:\r\n    case rebarType:\r\n    case partition:\r\n    case level:\r\n    case diameter:\r\n    case block:\r\n    case zone:\r\n    case typename:\r\n    case materialName:\r\n    case roomName:\r\n    case roomNumber:\r\n    case systemtype:\r\n    case systemclassification:\r\n    case familyName:\r\n    case size:\r\n\r\n    case guid:\r\n    case elementId:\r\n      if (!massItem.Element || field === materialName) {\r\n        return {\r\n          fields: ['Info', field],\r\n          isFromElement: false\r\n        };\r\n      } else {\r\n        var groupName = undefined;\r\n        // kiểm tra các phân nhóm trong Element: identify, locate ...\r\n        switch (field) {\r\n          // Thông tin định danh element\r\n          case guid:\r\n          case elementId:\r\n            return {\r\n              fields: ['Element', field],\r\n              isFromElement: true\r\n            }\r\n\r\n          case workItem:\r\n          case elementName:\r\n          case typename:\r\n          case systemtype:\r\n          case systemclassification:\r\n          case familyName:\r\n            groupName = 'identify';\r\n            break;\r\n          case level:\r\n          case block:\r\n          case zone:\r\n          case roomName:\r\n          case roomNumber:\r\n            groupName = 'locate';\r\n            break;\r\n          case size:\r\n            groupName = 'geometry';\r\n            break;\r\n        }\r\n        return {\r\n          fields: ['Element', 'info', groupName, field],\r\n          isFromElement: true\r\n        }\r\n      }\r\n      break;\r\n    default:\r\n      return {\r\n        fields: ['Site', field]\r\n      }\r\n  }\r\n}\r\n\r\nexport const GetValueString = (massFieldValue, field) => {\r\n  var value = undefined;\r\n\r\n  switch (field) {\r\n    case Project:\r\n    case Phase:\r\n      value = massFieldValue.Name;\r\n      break;\r\n    case Workpackage:\r\n      value = massFieldValue.FullName;\r\n      break;\r\n    default:\r\n      value = massFieldValue;\r\n      break;\r\n  }\r\n\r\n  return value ? value : 'undefined';\r\n}\r\n\r\nexport const GetListForTypicalLevelFilter = () => {\r\n  return [workItem, MassType, block]\r\n}\r\n\r\nexport const GetDefaultListValue = (field) => {\r\n  switch (field) {\r\n    case workItem:\r\n      return ['Dầm', 'Sàn', 'Cột', 'Vách'];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n\r\nexport const GetName = (field) => {\r\n  var name;\r\n\r\n  switch (field) {\r\n    case Project:\r\n      name = 'Dự án'\r\n      break;\r\n    case Phase:\r\n      name = \"Phiên bản\"\r\n      break;\r\n    case Workpackage:\r\n      name = \"Gói thầu\"\r\n      break;\r\n    case Value:\r\n      name = \"Giá trị\"\r\n      break;\r\n    case Unit:\r\n      name = \"Đơn vị\"\r\n      break;\r\n    case elementName:\r\n      name = \"Tên cấu kiện\"\r\n      break;\r\n    case MassType:\r\n      name = \"Công tác\"\r\n      break;\r\n    case workItem:\r\n      name = \"Hạng mục\"\r\n      break;\r\n    case level:\r\n      name = \"Level\"\r\n      break;\r\n    case block:\r\n      name = \"Block\"\r\n      break;\r\n    case discipline:\r\n      name = \"Bộ môn\"\r\n      break;\r\n    case zone:\r\n      name = \"Zone\"\r\n      break\r\n    case typename:\r\n      name = \"Type\"\r\n      break;\r\n    case materialName:\r\n      name = \"Vật liệu\"\r\n      break;\r\n    case systemtype:\r\n      name = \"System Type\"\r\n      break;\r\n    case systemclassification:\r\n      name = \"System Classification\"\r\n      break;\r\n    case familyName:\r\n      name = \"Family\"\r\n      break;\r\n    case size:\r\n      name = \"Size\"\r\n      break;\r\n    case roomName:\r\n      name = \"Room Name\";\r\n      break;\r\n    case roomNumber:\r\n      name = \"Room Numnber\";\r\n      break;\r\n    case guid:\r\n      name = \"Guid\";\r\n      break;\r\n    case elementId:\r\n      name = \"ElementId\"\r\n      break\r\n    default:\r\n      name = sft.GetTitle(field)\r\n      break;\r\n  }\r\n\r\n  return name;\r\n}","import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nexport const API_URL = 'https://api.bimdev.vn/api';\r\n\r\n// const http = axios.create({\r\n//   baseURL: API_URL,\r\n//   Accept: 'application/json',\r\n//   'Content-Type': 'application/json',\r\n//   //timeout: 20000\r\n//   timeout: 20000000\r\n// });\r\n\r\nconst http = (timeout) => axios.create({\r\n    baseURL: API_URL,\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n    timeout\r\n  });\r\n\r\nconst handleNetworkError = (err) => {\r\n  message.error(`Error sending request: ${err}`);\r\n  return {\r\n    success: false\r\n  };\r\n}\r\n\r\nconst handleResponse = (response) => {\r\n  // Parse the axios response\r\n  const success = response.status >= 200 && response.status < 300;\r\n  const data = response.data;\r\n  let message = response.statusText;\r\n  return {\r\n    success,\r\n    data,\r\n    message\r\n  };\r\n}\r\n\r\nexport const callApi = async (action) => {\r\n  try {\r\n    const response = await action;\r\n    return handleResponse(response);\r\n  } catch (err) {\r\n    return handleNetworkError(err);\r\n  } finally { }\r\n}\r\n\r\nexport const timeout_default = 20000\r\n\r\nexport const get = async (url, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  return callApi(http(timeout).get(url, config));\r\n}\r\n\r\nexport const put = async (url, payload, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).put(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const post = async (url, payload, config, timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).post(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const del = async (url, payload,timeout) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).delete(url, payload));\r\n  return result;\r\n}","import * as api from './apiUtil'\r\n\r\nexport let dtFormat = new Intl.DateTimeFormat('en-GB');\r\n\r\nexport const deepClone = (q) => {\r\n  return JSON.parse(JSON.stringify(q));\r\n}\r\n\r\nexport const randomId = () => {\r\n  // Math.random should be unique because of its seeding algorithm.\r\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n  // after the decimal.\r\n  return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nexport const newGUID = () => {\r\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n  );\r\n}\r\n\r\nexport const UpdateFromModel = (obj, action) => {\r\n  obj.M2VM = true;\r\n  action();\r\n  obj.M2VM = false;\r\n}\r\n\r\nexport const MoveItem = (list, oldIndex, newIndex) => {\r\n  if (oldIndex === -1 || newIndex === -1 ||\r\n    oldIndex === newIndex) return;\r\n  var temp = list[oldIndex];\r\n  list[oldIndex] = list[newIndex];\r\n  list[newIndex] = temp;\r\n}\r\n\r\nexport const IsEqual = (list1, list2) => {\r\n  if (list1.length !== list2.length) return false;\r\n  var isValidCheck = true;\r\n  var isEqual = true;\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && x !== list2[i]) {\r\n      isValidCheck = false; isEqual = false;\r\n    }\r\n  })\r\n\r\n  return isEqual;\r\n}\r\n\r\nexport const IsSameValues = (list1, list2) => {\r\n  var isValidCheck = true;\r\n  var isSame = true;\r\n\r\n  if (list1.length !== list2.length) return false;\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && !list2.includes(x)) {\r\n      isValidCheck = false; isSame = false;\r\n    }\r\n  })\r\n\r\n  return isSame;\r\n}\r\n\r\nexport const GroupBy = (xs, key, createGroupFunc, handleItemFunc) => {\r\n  var groups = [];\r\n\r\n  xs.forEach(x => {\r\n    var val = x[key];\r\n    var group = undefined;\r\n    var index = groups.findIndex(y => val === y.Key);\r\n    if (index === -1) {\r\n      if (createGroupFunc) {\r\n        group = createGroupFunc(val);\r\n      } else {\r\n        group = {\r\n          Key: val,\r\n          Items: []\r\n        };\r\n      }\r\n\r\n      groups.push(group);\r\n    } else {\r\n      group = groups[index];\r\n    }\r\n    \r\n    var item = handleItemFunc ? handleItemFunc(x, group) : x\r\n    group.Items.push(item);\r\n  })\r\n\r\n  return groups;\r\n};\r\n\r\nexport const Remove = (dict, key) => {\r\n  var index = dict.findIndex(x => x.Key === key);\r\n  if (index !== 0) {\r\n    return dict.splice(index, 1);\r\n  }\r\n}\r\n\r\nexport const Add = (dict, func, isDelete = true) => {\r\n  var key = newGUID();\r\n\r\n  var newfunc = () => {\r\n    func();\r\n    if (isDelete) {\r\n      Remove(dict, key);\r\n    }\r\n  }\r\n\r\n  dict.push({\r\n    Key: key,\r\n    Value: newfunc\r\n  });\r\n}\r\n\r\nexport const Add_2 = (dict, func, isDelete = true) => {\r\n  dict.push({\r\n    Key: newGUID(),\r\n    Value: func,\r\n    IsDelete: isDelete\r\n  });\r\n}\r\n\r\nexport const Handle = (dict, newDict_Handle) => {\r\n  dict.forEach(x => x.Value());\r\n\r\n  dict = dict.filter(x => !x.IsDelete);\r\n  newDict_Handle(dict);\r\n}\r\n\r\n// Truy xuất thông tin Excel\r\nexport const ExcelColumnName = (n) => {\r\n  var ordA = 'A'.charCodeAt(0);\r\n  var ordZ = 'Z'.charCodeAt(0);\r\n  var len = ordZ - ordA + 1;\r\n\r\n  var s = \"\";\r\n  while (n >= 0) {\r\n    s = String.fromCharCode(n % len + ordA) + s;\r\n    n = Math.floor(n / len) - 1;\r\n  }\r\n  return s;\r\n}\r\n\r\nexport const ExcelCellName = (row, col) => {\r\n  return `${ExcelColumnName(col)}${row + 1}`;\r\n}\r\n\r\nexport const ExcelRangeName = (row1, col1, row2, col2) => {\r\n  return `${ExcelCellName(row1, col1)}:${ExcelCellName(row2, col2)}`\r\n}\r\n\r\n// Max min\r\nexport const MinMax = (arr) => {\r\n  return arr.reduce(({ min, max }, v) => ({\r\n    min: min < v ? min : v,\r\n    max: max > v ? max : v,\r\n  }), { min: arr[0], max: arr[0] });\r\n}\r\n\r\n// Save Database\r\nexport const SaveDatabase = (q, url, handle, method) => {\r\n  var apiData = q.ApiData\r\n  var _id = apiData._id ? apiData._id : q._id;\r\n\r\n  var apiFunc\r\n\r\n  if (!method) {\r\n    var isNew = _id ? false : true\r\n    apiFunc = () => isNew ?\r\n      api.post(`${url}/add`, apiData) :\r\n      api.put(`${url}/edit`, apiData)\r\n  } else {\r\n    apiFunc = () => api.put(`${url}/${method}`, apiData)\r\n  }\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (isNew) {\r\n        q._id = data._id\r\n      }\r\n      handle(data, isNew);\r\n    })\r\n}\r\n\r\nexport const DeleteDatabase = (q, url, handle) => {\r\n  var apiData = {\r\n    _id: q._id\r\n  }\r\n\r\n  const apiFunc = () => api.put(`${url}/delete`, apiData)\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      handle(data);\r\n    })\r\n}\r\n\r\n// Get plain text from paste\r\nexport const GetPlainText = (pasteEvent) => {\r\n  var text = (pasteEvent.originalEvent || pasteEvent).clipboardData.getData('text/plain');\r\n  return text;\r\n}\r\n\r\n// Remove new line\r\nexport const RemoveNewLine = (text) => {\r\n  return text.replace(/\\r?\\n|\\r/g, \"\");\r\n}\r\n\r\n// First - Last Item\r\nexport const GetFirst = (list) => {\r\n  return list.length !== 0 ? list[0] : undefined;\r\n}\r\n\r\nexport const GetLast = (list) => {\r\n  return list.length !== 0 ? list[list.length - 1] : undefined;\r\n}\r\n\r\nexport const SingleFilter = (list, filter, nullHandle) => {\r\n  var index = list.findIndex(filter);\r\n  var obj = index !== -1 ? list[index] : undefined\r\n\r\n  if (obj === undefined && nullHandle) {\r\n    var obj = nullHandle();\r\n    list.push(obj);\r\n  }\r\n\r\n  return obj;\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport default class MassColumn {\r\n  _id\r\n  get id() {\r\n    if (!this._id){\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index(){\r\n    return this.Dict.Columns.indexOf(this);\r\n  }\r\n\r\n  Cells = []\r\n}","export const _default = \"default\";\r\nexport const edit = \"edit\";","export const category = \"category\";\r\nexport const family = \"family\";\r\nexport const parameter = 'parameter'\r\n\r\nexport const GetAll = () => {\r\n  return [ category, family, parameter ];\r\n}","export const bystring = \"bystring\";\r\nexport const bynumber = \"bynumber\";\r\n\r\nexport const GetAll = () => {\r\n  return [ bystring, bynumber ];\r\n}","export const byequal = \"byequal\";\r\nexport const bycontain = \"bycontain\";\r\nexport const bynotcontain = \"bynotcontain\";\r\n\r\nexport const GetAll = () => {\r\n  return [ byequal, bycontain, bynotcontain ];\r\n}","export const byequal = \"byequal\";\r\nexport const bysmaller = \"bysmaller\";\r\nexport const bysmallerorequal = \"bysmallerorequal\";\r\nexport const bybigger = \"bybigger\";\r\nexport const bybiggerorequal = \"bybiggerorequal\";\r\nexport const bybetween = \"bybetween\";\r\n\r\nexport const GetAll = () => {\r\n  return [ byequal, bysmaller, bybigger, bybetween ];\r\n}","import { PMData } from \"../../single/model/PMData\";\r\nimport { EntFilter } from \"./EntFilter\"\r\nimport * as fct from './FilterCategoryType'\r\nimport * as fvt from './FilterValueType'\r\nimport * as sft from './StringFilterType'\r\nimport * as nft from './NumberFilterType'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, categoryType) => {\r\n  var qI = new EntFilter();\r\n  qI.ValueType = q.valueType;\r\n  qI.NumberFilterType = q.numberFilterType;\r\n  qI.StringFilterType = q.stringFilterType;\r\n  qI.Values = q.values;\r\n  qI.CategoryType = categoryType;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q) => {\r\n  if (!q) return q;\r\n  var qI = new EntFilter();\r\n  qI.ValueType = q.ValueType;\r\n  qI.NumberFilterType = q.NumberFilterType;\r\n  qI.StringFilterType = q.StringFilterType;\r\n  qI.Values = [...q.Values];\r\n  qI.CategoryType = q.CategoryType;\r\n  return qI;\r\n}\r\n\r\nexport const GetValueStorageList = (q) => {\r\n  var list = [];\r\n\r\n  switch (q.CategoryType) {\r\n    case fct.category:\r\n      list = [];\r\n      break;\r\n    case fct.parameter:\r\n      list = pmData().ParameterNames;\r\n      break;\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    valueType: q.ValueType,\r\n    numberFilterType: q.NumberFilterType,\r\n    stringFilterType: q.StringFilterType,\r\n    values: q.Values\r\n  }\r\n}\r\n\r\nexport const IsValid = (filter, value) => {\r\n  if (value === undefined || value === null) return false;\r\n\r\n  var isValid = false;\r\n  var filterValues = filter.Values;\r\n  switch (filter.ValueType) {\r\n    case fvt.bystring:\r\n      if (typeof value === 'string') {\r\n        var filterType = filter.StringFilterType;\r\n        switch (filterType) {\r\n          case sft.byequal:\r\n            filterValues.forEach(x => {\r\n              if (!isValid && x === value) {\r\n                isValid = true;\r\n              }\r\n            })\r\n            break;\r\n          case sft.bycontain:\r\n            var lowerVal = value.toLowerCase();\r\n            filterValues.forEach(x => {\r\n              if (!isValid && lowerVal.includes(x.toLowerCase())) {\r\n                isValid = true;\r\n              }\r\n            })\r\n            break;\r\n          case sft.bynotcontain:\r\n            var lowerVal = value.toLowerCase();\r\n            isValid = true;\r\n            filterValues.forEach(x => {\r\n              if (isValid && lowerVal.includes(x.toLowerCase())) {\r\n                isValid = false;\r\n              }\r\n            })\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    case fvt.bynumber:\r\n      if (!isNaN(value)) {\r\n        var filterType = filter.NumberFilterType;\r\n        switch (filterType) {\r\n          case nft.byequal:\r\n            return value === filterValues[0];\r\n          case nft.bysmaller:\r\n            return value < filterValues[0];\r\n          case nft.bysmallerorequal:\r\n            return value <= filterValues[0];\r\n          case nft.bybigger:\r\n            return value > filterValues[0];\r\n          case nft.bybiggerorequal:\r\n            return value >= filterValues[0];\r\n          case nft.bybetween:\r\n            var leftVal = filterValues[0];\r\n            var rightVal = filterValues[1];\r\n            return (filter.IsEqualLeft && leftVal === value) ||\r\n              leftVal < value && value < rightVal\r\n              || (filter.IsEqualRight && value === rightVal);\r\n        }\r\n      }\r\n      break;\r\n  }\r\n\r\n  L1:\r\n  return isValid;\r\n}","import * as util from './EntFilterUtil'\r\n\r\nexport class EntFilter\r\n{\r\n  ValueType\r\n  NumberFilterType\r\n  StringFilterType\r\n  IsEqualLeft\r\n  IsEqualRight\r\n\r\n  values\r\n  get Values(){\r\n    return this.values;\r\n  }\r\n  set Values(v){\r\n    this.values = v;\r\n  }\r\n\r\n  CategoryType\r\n\r\n  valueStorageList\r\n  get ValueStorageList(){\r\n    if (!this.valueStorageList){\r\n      this.valueStorageList = util.GetValueStorageList(this);\r\n    }\r\n    return this.valueStorageList;\r\n  }\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n}","import { PMData } from '../../../../single/model/PMData';\r\nimport * as util from './MGI_ItemUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport default class MGI_Item {\r\n  Value\r\n\r\n  SupValue\r\n\r\n  supItem\r\n  get SupItem(){\r\n    if (!this.supItem){\r\n      this.supItem = util.GetSupItem(this);\r\n    }\r\n    return this.supItem;\r\n  }\r\n\r\n  get Index() {\r\n    return this.MassGroupItem.Items.indexOf(this);\r\n  }\r\n\r\n  title\r\n  get Title(){\r\n    if (!this.title){\r\n      this.title = this.Value;\r\n    }\r\n    return this.title;\r\n  }\r\n  set Title(v){\r\n    this.title = v;\r\n  }\r\n\r\n  newMGI\r\n  get NewMGI(){\r\n    if (!this.newMGI){\r\n      this.newMGI = util.GetNewMGI(this);\r\n\r\n      if (!this.newMGI && this.newMGI_id){\r\n        this.newMGI_id = undefined;\r\n      }\r\n    }\r\n    return this.newMGI;\r\n  }\r\n  set NewMGI(v){\r\n    this.newMGI = v;\r\n    if (!v || v === this.MassGroupItem){\r\n      this.newMGI_id = undefined;\r\n    }\r\n    else{\r\n      this.newMGI_id = v.id;\r\n    }\r\n  }\r\n\r\n  newMGI_id\r\n\r\n  get ApiData(){\r\n    return {\r\n      value : this.Value,\r\n      supValue: this.SupValue,\r\n      title : this.Title,\r\n      newMGI_id : this.newMGI_id,\r\n      createType : this.CreateType\r\n    }\r\n  }\r\n\r\n  Delete = (handleUndo) => {\r\n    var index = this.Index;\r\n    this.MassGroupItem.Items.splice(index, 1);\r\n\r\n    if (handleUndo){\r\n      handleUndo(() => {\r\n        this.MassGroupItem.Items.splice(index, 0, this);\r\n      })\r\n    }\r\n  }\r\n}","export const byuser = 'byuser'\r\nexport const byauto = 'byauto'","import MGI_Item from \"./MGI_Item\";\r\nimport * as ct from './MGI_I_CreateType'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const create = (mgi, createType) => {\r\n  var qI = new MGI_Item();\r\n  qI.MassGroupItem = mgi;\r\n\r\n  if (!createType) {\r\n    qI.CreateType = ct.byauto;\r\n  } else {\r\n    qI.CreateType = ct.byuser;\r\n    qI.Value = genUtil.newGUID();\r\n    qI.Title = 'Tên đầu mục';\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getFromDb = (data, mgi) => {\r\n  var qI = new MGI_Item();\r\n\r\n  qI.Value = data.value;\r\n  qI.SupValue = data.supValue\r\n  qI.Title = data.title;\r\n  qI.newMGI_id = data.newMGI_id;\r\n  qI.MassGroupItem = mgi;\r\n  qI.CreateType = data.createType ? data.createType : ct.byauto\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, mgi) => {\r\n  var qI = new MGI_Item();\r\n\r\n  qI.Value = q.Value;\r\n  qI.SupValue = q.SupValue;\r\n  qI.Title = q.Title;\r\n  qI.newMGI_id = q.newMGI_id;\r\n  qI.MassGroupItem = mgi;\r\n  qI.CreateType = q.CreateType;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetNewMGI = (q) => {\r\n  var _id = q.newMGI_id;\r\n  if (!_id) return undefined;\r\n  var list = q.MassGroupItem.SupComponent.AllItems;\r\n\r\n  var index = list.findIndex(x => x._id === _id);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetSupItem = (q) => {\r\n  if (q.IsGet_SupItem) return undefined\r\n  q.IsGet_SupItem = true;\r\n\r\n  var supValue = q.SupValue;\r\n  if (!supValue) return undefined;\r\n  \r\n  var list = q.MassGroupItem.Items;\r\n  var index = list.findIndex(x => x.Value === supValue);\r\n  return index !== -1 ? list[index] : undefined\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as itemUtil from './MGI_ItemUtil'\r\nimport * as mgii_ct from './MGI_I_CreateType'\r\nimport * as util from './MassGroupItemUtil'\r\n\r\nexport default class MassGroupItem {\r\n  Field\r\n  SubComponents = []\r\n  NotIncludeValues = []\r\n  IsHaveValueOrder\r\n  BindingRows\r\n  SupComponent\r\n\r\n  Items = []\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  get Index() {\r\n    return this.SupComponent.Items.indexOf(this);\r\n  }\r\n\r\n  get Rank() {\r\n    return this.SupComponent.Rank\r\n  }\r\n\r\n  get OrderItems() {\r\n    return this.Items;\r\n  }\r\n\r\n  get OrderValues() {\r\n    return this.Items.map(x => x.Value);\r\n  }\r\n\r\n  get ApiData() {\r\n    var items = this.Items.map(x => x.ApiData);\r\n\r\n    return {\r\n      _id: this.id,\r\n      field: this.Field,\r\n      subComponents: this.SubComponents.map(x => x.ApiData),\r\n      valueOrders: this.ValueOrders,\r\n      notIncludeValues: this.NotIncludeValues,\r\n      items\r\n    }\r\n  }\r\n\r\n  AddNotIncludeValue = (v, handleUndo) => {\r\n    var list = this.NotIncludeValues;\r\n    var index = list.indexOf(v);\r\n    if (index === -1) {\r\n      this.NotIncludeValues.push(v);\r\n\r\n      if (handleUndo){\r\n        index = list.length -1;\r\n        handleUndo(() => {\r\n          list.splice(index, 1);\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  GetItem = (v, title, handleUndo) => {\r\n    var index = this.Items.findIndex(x => x.Value === v);\r\n    if (index === -1) {\r\n      var item = itemUtil.create(this)\r\n      item.Value = v;\r\n      item.Title = title;\r\n      this.Items.push(item);\r\n\r\n      if (handleUndo){\r\n        var length = this.Items.length\r\n        handleUndo(() => {\r\n          this.Items.splice(length -1, 1);\r\n        })\r\n      }\r\n\r\n      return item;\r\n    }\r\n    return this.Items[index];\r\n  }\r\n\r\n  SupRows = []\r\n\r\n  // Những Row được add bằng Phương thức HandleCreatedByUserRows bên dưới\r\n  CreatedByUser_Rows = []\r\n\r\n  On_AddSupRow_Func_Dict = []\r\n\r\n  AddSupRow = (v) => {\r\n    var list = this.SupRows;\r\n    if (list.indexOf(v) !== -1) return;\r\n\r\n    this.NewRow = v;\r\n    list.push(v);\r\n    this.HandleCreatedByUserRows(v);\r\n\r\n    genUtil.Handle(this.On_AddSupRow_Func_Dict, (v) => this.On_AddSupRow_Func_Dict = v);\r\n  }\r\n\r\n  OnIsFirstSetSupRow_Funcs = []\r\n\r\n  isFirstSetSupRow\r\n  get IsFirstSetSupRow() {\r\n    return this.isFirstSetSupRow;\r\n  }\r\n  set IsFirstSetSupRow(v) {\r\n    this.isFirstSetSupRow = v;\r\n    this.OnIsFirstSetSupRow_Funcs.forEach(x => x());\r\n  }\r\n\r\n  get HaveMassItemSubComponents() {\r\n    return this.SubComponents.filter(x => x.IsHaveMassItem);\r\n  }\r\n\r\n  table\r\n  get Table() {\r\n    if (!this.table) {\r\n      this.table = util.GetTable(this);\r\n    }\r\n    return this.table;\r\n  }\r\n  set Table(v) {\r\n    this.table = v;\r\n  }\r\n\r\n  HandleCreatedByUserRows = (newSupRow) => {\r\n    var userItems = this.Items\r\n      .filter(x => x.CreateType === mgii_ct.byuser && !x.IsAdd_Done);\r\n\r\n    // tiến hành Sort UserItems\r\n    var sortedUserItems = []\r\n    var isFirst_Handle = true;\r\n\r\n    while (userItems.length !== 0) {\r\n      let filter\r\n      const validIndexs = []\r\n\r\n      if (isFirst_Handle) {\r\n        // Không có SupItem hoặc SupItem không tạo bởi User\r\n        filter = (x) => x.SupItem === undefined || \r\n          x.SupItem.CreateType !== mgii_ct.byuser;\r\n        isFirst_Handle = false;\r\n      } else {\r\n        filter = (x) =>\r\n          sortedUserItems.findIndex(y => y.Value === x.SupValue) !== -1\r\n      }\r\n\r\n      userItems.forEach((x, i, a) => {\r\n        if (this.IsDebug){\r\n          debugger\r\n        }\r\n\r\n        if (filter(x)) {\r\n          sortedUserItems.push(x);\r\n          validIndexs.push(i);\r\n        }\r\n      })\r\n\r\n      validIndexs.forEach((x, i) => {\r\n        userItems.splice(x - i, 1);\r\n      })\r\n    }\r\n\r\n    sortedUserItems.forEach(x => {\r\n      var value = x.Value;\r\n      var supRows = this.SupRows.concat(this.CreatedByUser_Rows);\r\n      var supRow\r\n\r\n      var isValid = true;\r\n      if (!x.SupValue && supRows.length !== 0) {\r\n        supRow = supRows[0]\r\n      } else {\r\n        var index = supRows.findIndex(y => y.Name === x.SupValue);\r\n        if (index !== -1) {\r\n          supRow = supRows[index];\r\n        } else {\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      if (!isValid) return false;\r\n\r\n      // Gán nhãn IsAdd_Done\r\n      x.IsAdd_Done = true;\r\n\r\n      const addRow = (supRow) => {\r\n        var row = this.Table.GetRow(value, supRow);\r\n        row.FullValue = value;\r\n        row.IsCreatedByUser = true;\r\n\r\n        // Lưu vào danh sách Tạo bởi người dùng trong đối tượng Table\r\n        this.Table.CreatedByUser_Rows.push(row);\r\n        this.CreatedByUser_Rows.push(row);\r\n        return row;\r\n      }\r\n\r\n      const handleRow = (row) => {\r\n        row.MassGroupItem = this;\r\n        handleNonField(row);\r\n      }\r\n\r\n      const handleNonField = (row) => {\r\n        var subMgcIndex = this.SubComponents.findIndex(y =>\r\n          y.Filter.Values.includes(x.Value))\r\n        if (subMgcIndex !== -1) {\r\n          var subMgi = this.SubComponents[subMgcIndex].Items[0];\r\n          subMgi.AddSupRow(row);\r\n        }\r\n      }\r\n\r\n      var replaceMgi = x.NewMGI;\r\n      if (replaceMgi) {\r\n        var supName = x.SupValue;\r\n\r\n        replaceMgi.GetItem(value);\r\n        this.Table.Handle_ReplaceMGI(replaceMgi, supName, addRow, handleRow);\r\n      } else {\r\n        handleRow(addRow(supRow));\r\n      }\r\n    })\r\n  }\r\n}","import * as util from './MassGroupComponentUtil'\r\n\r\nexport default class MassGroupComponent {\r\n  Filter\r\n  Items\r\n  SupItem\r\n\r\n  originComponent\r\n  get OriginComponent(){\r\n    if (!this.originComponent){\r\n      this.originComponent = util.GetOriginComponent(this);\r\n    }\r\n    return this.originComponent;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      filter : this.Filter ? this.Filter.ApiData : undefined,\r\n      items: this.Items.map(x => x.ApiData)\r\n    }\r\n  }\r\n\r\n  get AllItems(){\r\n    return this.OriginComponent.AllSubItems;\r\n  }\r\n\r\n  get AllSubItems(){\r\n    var list = [...this.Items];\r\n    this.Items.forEach(x => \r\n      x.SubComponents.forEach(y => list.push.apply(list, y.AllSubItems)));\r\n    return list;\r\n  }\r\n\r\n  get Rank(){\r\n    return this.SupItem ? this.SupItem.SupComponent.Rank + 1 : 0\r\n  }\r\n}","export const url = \"https://api.bimdev.vn/api/hb_mgs_d\"","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { url } from './Data_Url'\r\n\r\nexport class Data {\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      _id: this._id,\r\n      dictId : this.Dict._id,\r\n      mainMassGroupComponent : this.MainMassGroupComponent.ApiData\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle){\r\n          handle();\r\n        }\r\n      }, 'edit');\r\n  }\r\n}","import MassGroupComponent from \"./MassGroupComponent\"\r\nimport * as filterUtil from '../../../filter/EntFilterUtil'\r\nimport * as itemUtil from './MassGroupItemUtil'\r\nimport { PMData } from \"../../../../single/model/PMData\"\r\nimport * as mgiUtil from './MassGroupItemUtil'\r\nimport * as mif from '../../field/MassItemField'\r\nimport { Data } from \"../../../setting/massGroup/data/Data\"\r\nimport MassGroupItem from \"./MassGroupItem\"\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const get = (data, dict) => {\r\n  var qI = new MassGroupComponent();\r\n\r\n  qI.Filter = data.filter ? filterUtil.get(data.filter) : undefined;\r\n  qI.Items = data.items.map(x => itemUtil.getFromDb(x, qI));\r\n\r\n  if (dict instanceof Data) {\r\n    qI.Dict = dict;\r\n  } else if (dict instanceof MassGroupItem) {\r\n    qI.SupItem = dict;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, supItem, forTemplate = false) => {\r\n  if (!q) return q;\r\n  var qI = new MassGroupComponent();\r\n  qI.Filter = filterUtil.Clone(q.Filter);\r\n\r\n  qI.Items = q.Items.map(x => itemUtil.Clone(x, qI, forTemplate));\r\n  qI.SupItem = supItem;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetOriginComponent = (q) => {\r\n  return q.SupItem ? q.SupItem.SupComponent.OriginComponent : q;\r\n}\r\n\r\nexport const GetDefault = (q) => {\r\n  var qI = new MassGroupComponent();\r\n\r\n  var mgi1 = mgiUtil.get(mif.MassType);\r\n  qI.Items = [mgi1];\r\n\r\n  return qI;\r\n}","import MassGroupItem from \"./MassGroupItem\"\r\nimport * as compUtil from './MassGroupComponentUtil'\r\nimport * as itemUtil from './MGI_ItemUtil'\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (field, subComps, supCom) => {\r\n  var qI = new MassGroupItem();\r\n  qI.Field = field;\r\n  qI.SupComponent = supCom;\r\n  if (subComps) {\r\n    qI.SubComponents = subComps;\r\n  }\r\n  return qI;\r\n}\r\n\r\nexport const getFromDb = (data, supCom) => {\r\n  var qI = new MassGroupItem();\r\n  qI._id = data._id;\r\n  qI.Field = data.field;\r\n  qI.SupComponent = supCom;\r\n  qI.SubComponents = data.subComponents ? data.subComponents.map(x => compUtil.get(x, qI))\r\n    : [];\r\n\r\n  if (data.items) {\r\n    qI.Items = data.items.map(x => itemUtil.getFromDb(x, qI))\r\n      .filter(x => x.Value);\r\n    qI.IsHaveValueOrder = true;\r\n  } else {\r\n    qI.Items = []\r\n    qI.IsHaveValueOrder = false;\r\n  }\r\n\r\n  qI.NotIncludeValues = data.notIncludeValues ? data.notIncludeValues : [];\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, supCom, forTemplate = false) => {\r\n  if (!q) return q;\r\n  var qI = new MassGroupItem();\r\n  qI.id = q.id;\r\n  qI.Field = q.Field;\r\n  \r\n  qI.NotIncludeValues = [...q.NotIncludeValues];\r\n  qI.IsHaveValueOrder = q.IsHaveValueOrder;\r\n  qI.SupComponent = supCom;\r\n  \r\n  if (forTemplate && q.Rank > 0){\r\n\r\n  }else {\r\n    qI.Items = q.Items.map(x => itemUtil.Clone(x, qI));\r\n    qI.SubComponents = q.SubComponents.map(x => compUtil.Clone(x, qI, forTemplate));\r\n  }\r\n  \r\n  return qI;\r\n}\r\n\r\nexport const GetTable = (q) => {\r\n  return q.SupComponent.SupItem.Table;\r\n}","import { MultiSelectVM } from \"./MultiSelectVM\";\r\n\r\nexport const get = (items, initialItems) => {\r\n  var qI = new MultiSelectVM();\r\n  qI.Items = items;\r\n  qI.InitialItems = initialItems;\r\n  return qI;\r\n}\r\n\r\nexport const GetTitleRender = (q) => {\r\n  return (item) => item.DisplayContent ? item.DisplayContent : `${item}`;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MultiSelectVMUtil'\r\n\r\nexport class MultiSelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      selectedIndexs: observable,\r\n      open: observable,\r\n      canOpen: observable,\r\n      disabled : observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  initialItems;\r\n  get InitialItems() {\r\n    return this.initialItems;\r\n  }\r\n  set InitialItems(v) {\r\n    this.IsSet_InitialItem = true;\r\n    this.initialItems = v;\r\n    this.InitialIndexs = this.GetInitialIndexs();\r\n    this.SelectedIndexs = this.InitialIndexs;\r\n  }\r\n\r\n  initialIndexs;\r\n  get InitialIndexs() {\r\n    if (!this.initialIndexs) {\r\n      this.initialIndexs = this.GetInitialIndexs();\r\n    }\r\n    return this.initialIndexs;\r\n  }\r\n  set InitialIndexs(v) {\r\n    this.initialIndexs = v;\r\n  }\r\n\r\n  GetInitialIndexs = () => {\r\n    var initialItems = this.InitialItems;\r\n    if (!initialItems) return [];\r\n    return initialItems.map(x => this.Items.indexOf(x)).filter(x => x !== -1);\r\n  }\r\n\r\n  selectedIndexs = []\r\n  get SelectedIndexs() {\r\n    return this.selectedIndexs;\r\n  }\r\n  set SelectedIndexs(v) {\r\n    this.selectedIndexs = v;\r\n    this.SelectedItems = this.GetSelectedItems();\r\n  }\r\n\r\n  selectedItems\r\n  get SelectedItems() {\r\n    if (!this.selectedItems) {\r\n      this.selectedItems = this.GetSelectedItems();\r\n    }\r\n    return this.selectedItems;\r\n  }\r\n  set SelectedItems(v) {\r\n    this.selectedItems = v;\r\n\r\n    if (this.IsSet_InitialItem) {\r\n      this.IsSet_InitialItem = false\r\n    } else if (this.OnSelectedItemChanged) {\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  GetSelectedItems = () => {\r\n    return this.SelectedIndexs.map(x => this.Items[x]);\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder() {\r\n    if (!this.placeholder) {\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender) {\r\n      this.titleRender = util.GetTitleRender(this);\r\n    }\r\n    return this.titleRender;\r\n  }\r\n  set TitleRender(v) {\r\n    this.titleRender = v;\r\n  }\r\n\r\n  open = false\r\n  get Open() {\r\n    return this.open;\r\n  }\r\n  set Open(v) {\r\n    this.open = v;\r\n    if (this.OnSetOpen) {\r\n      this.OnSetOpen(v);\r\n    }\r\n  }\r\n\r\n  canOpen = true\r\n  get CanOpen() {\r\n    return this.canOpen;\r\n  } set CanOpen(v) {\r\n    this.canOpen = v;\r\n  }\r\n\r\n  // disabled\r\n  disabled = false\r\n  get Disabled(){\r\n    if (this.GetDisabled_Func){\r\n      return this.GetDisabled_Func();\r\n    }\r\n    return this.disabled\r\n  } set Disabled(v){\r\n    this.disabled = v;\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { MultiSelectVM } from \"./MultiSelectVM\";\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nconst { Option } = Select;\r\n\r\nclass MultiSelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MultiSelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndexs = v;\r\n  }\r\n\r\n  onDropdownVisibleChange = (v) => {\r\n    var data = this.state;\r\n    data.Open = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var style = this.props.style ? this.props.style : { width: '100%' }; \r\n    var { Placeholder, Items, SelectedIndexs, InitialIndexs } = data;\r\n\r\n    if (SelectedIndexs.length === 0) {\r\n      SelectedIndexs = InitialIndexs;\r\n      data.InitialIndexs = [];\r\n    }\r\n\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = data.TitleRender(item);\r\n\r\n      var id = undefined;\r\n      if (item === undefined){\r\n        id = genUtil.randomId();\r\n      }else if (typeof item === 'string' || !isNaN(item)) {\r\n        id = item;\r\n      } else {\r\n        id = item._id ? item._id : item.id;\r\n      }\r\n      return <Option key={id} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    return (\r\n      <>\r\n        <Select style={style}\r\n          mode=\"multiple\"\r\n          placeholder={Placeholder}\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={SelectedIndexs}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n          open={data.CanOpen && data.Open}\r\n          onDropdownVisibleChange={this.onDropdownVisibleChange}\r\n          disabled={data.Disabled}\r\n        >\r\n          {elems}\r\n        </Select>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MultiSelectView)","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class EntHoverVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsElementVisible: observable,\r\n    })\r\n  }\r\n\r\n  IsElementVisible = false;\r\n\r\n  ShowElement = () => {\r\n    this.IsElementVisible =  true;\r\n  }\r\n\r\n  HideElement = () => {\r\n    this.IsElementVisible =  false;\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport EntHoverVM from \"./EntHoverVM\";\r\n\r\nclass EntHoverView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntHoverVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var className = this.props.className;\r\n    if (!data.style) {\r\n      var style = this.props.style ? this.props.style : {};\r\n      if (!style.minWidth) {\r\n        style.minWidth = 150;\r\n      }\r\n      data.style = style;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={className} style={data.style}\r\n          onMouseEnter={data.ShowElement}\r\n          onMouseLeave={data.HideElement}>\r\n          {data.IsElementVisible ? data.Element : ''}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EntHoverView)","import { SelectVM } from \"./SelectVM\";\r\n\r\nexport const get = (items, initialItem) => {\r\n  var qI = new SelectVM();\r\n  qI.Items = items;\r\n  qI.InitialItem = initialItem;\r\n  return qI;\r\n}\r\n\r\nexport const GetTitleRender = (q) => {\r\n  return (item) => item.DisplayContent ? item.DisplayContent : `${item}`;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './SelectVMUtil'\r\n\r\nexport class SelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable,\r\n      selectedIndex : observable,\r\n      CanClear :observable,\r\n      open : observable,\r\n      canOpen : observable,\r\n      isDisabled : observable,\r\n      disabled : observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = [];\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n  }\r\n\r\n  initialItem = undefined\r\n  get InitialItem() {\r\n    return this.initialItem;\r\n  }\r\n  set InitialItem(v){\r\n    this.IsSet_InitialItem = true;\r\n    this.initialItem = v;\r\n    this.InitialIndex = this.GetInitialIndex();\r\n    this.SelectedIndex = this.InitialIndex;\r\n  }\r\n\r\n  initialIndex\r\n  get InitialIndex(){\r\n    if (!this.initialIndex){\r\n      this.initialIndex = this.GetInitialIndex();\r\n    }\r\n    return this.initialIndex;\r\n  }\r\n  set InitialIndex(v){\r\n    this.initialIndex = v;\r\n  }\r\n\r\n  GetInitialIndex = () => {\r\n    var index = this.Items.indexOf(this.InitialItem);\r\n    return index !== -1 ? index : null;\r\n  }\r\n\r\n  selectedIndex = undefined\r\n  get SelectedIndex(){\r\n    return this.selectedIndex;\r\n  }\r\n  set SelectedIndex(v){\r\n    this.selectedIndex = v;\r\n    this.SelectedItem = this.GetSelectedItem();\r\n  }\r\n\r\n  selectedItem\r\n  get SelectedItem (){\r\n    if (!this.selectedItem){\r\n      this.selectedItem = this.GetSelectedItem();\r\n    }\r\n    return this.selectedItem;\r\n  }\r\n  set SelectedItem (v) {\r\n    this.selectedItem = v;\r\n\r\n    if (this.IsSet_InitialItem){\r\n      this.IsSet_InitialItem = false\r\n    } else if (this.OnSelectedItemChanged){\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  SetValue = (v) => {\r\n    this.InitialItem = this.SelectedItem = v;\r\n  }\r\n\r\n  GetSelectedItem = () => {\r\n    var index = this.SelectedIndex;\r\n    if (index === -1) return undefined;\r\n    return this.Items[index];\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder(){\r\n    if (!this.placeholder){\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v){\r\n    this.placeholder = v;\r\n  }\r\n\r\n  CanClear = false\r\n\r\n  Clear = () => {\r\n    this.SelectedIndex = null\r\n  }\r\n  \r\n  get DivStyle() {\r\n    return this.CanClear ? { \r\n      position: 'relative', \r\n      padding: '0 22px 0 0' \r\n    } : {};\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender){\r\n      this.titleRender = util.GetTitleRender(this);\r\n    }\r\n    return this.titleRender;\r\n  }\r\n  set TitleRender (v){\r\n    this.titleRender = v;\r\n  }\r\n\r\n  open = false\r\n  get Open(){\r\n    return this.open;\r\n  }\r\n  set Open(v){\r\n    this.open = v;\r\n    if (this.OnSetOpen){\r\n      this.OnSetOpen(v);\r\n    }\r\n  }\r\n\r\n  canOpen = true\r\n  get CanOpen(){\r\n    return this.canOpen;\r\n  } set CanOpen(v){\r\n    this.canOpen = v;\r\n  }\r\n\r\n  isDisabled = false\r\n  get IsDisabled(){\r\n    return this.isDisabled;\r\n  } set IsDisabled(v){\r\n    this.isDisabled = v;\r\n  }\r\n\r\n   // disabled\r\n   disabled = false\r\n   get Disabled(){\r\n     if (this.GetDisabled_Func){\r\n       return this.GetDisabled_Func();\r\n     }\r\n     return this.disabled\r\n   } set Disabled(v){\r\n     this.disabled = v;\r\n   }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class FloatItemVM {\r\n  location\r\n\r\n  className\r\n  getClassName = () => {\r\n    if (!this.className){\r\n      this.className = `float ${this.location}`;\r\n    }\r\n    return this.className\r\n  }\r\n}","import FloatItemVM from \"./FloatItemVM\";\r\n\r\nexport const get = (loc) => {\r\n  var qI = new FloatItemVM();\r\n  qI.location = loc;\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport * as floatItemVMUtil from './FloatItemVMUtil'\r\n\r\nclass FloatItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = floatItemVMUtil.get('top right', 'Test')\r\n    }else{\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <span className={data.getClassName()}>{this.getWrapperContent()}</span>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FloatItemView);\r\n","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { SelectVM } from \"./SelectVM\";\r\nimport * as floatItemVMUtil from '../float/FloatItemVMUtil'\r\nimport FloatItemView from \"../float/FloatItemView\";\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport './Select.css'\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new SelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  onDropdownVisibleChange = (v) => {\r\n    var data = this.state;\r\n    data.Open = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var className = this.props.className ? this.props.className : ''\r\n    var style = this.props.style ? this.props.style : { width: '100%' };\r\n    var { Placeholder, Items, SelectedIndex, InitialIndex } = data;\r\n\r\n    if (SelectedIndex === -1) {\r\n      SelectedIndex = InitialIndex;\r\n      data.InitialIndex = -1;\r\n    }\r\n\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = data.TitleRender(item);\r\n\r\n      var id = undefined;\r\n      if (item === undefined) {\r\n        id = genUtil.randomId();\r\n      } else if (typeof item === 'string' || !isNaN(item)) {\r\n        id = item;\r\n      } else {\r\n        id = item._id ? item._id : item.id;\r\n      }\r\n      return <Option key={id} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    var floatElem = ''\r\n    if (data.CanClear) {\r\n      var floatItemStore = floatItemVMUtil.get('right')\r\n      floatItemStore.wrapper = <Button size='small' type='primary'\r\n        onClick={data.Clear}>x</Button>\r\n\r\n      floatElem = <FloatItemView store={floatItemStore} />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={`select__wrapper ${className}`}\r\n          style={data.DivStyle} >\r\n          {floatElem}\r\n          <Select style={style}\r\n            showSearch\r\n            placeholder={Placeholder}\r\n            optionFilterProp=\"children\"\r\n            onChange={this.onValueChange}\r\n            value={SelectedIndex}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            open={data.CanOpen && data.Open}\r\n            onDropdownVisibleChange={this.onDropdownVisibleChange}\r\n            disabled={data.Disabled || data.IsDisabled}\r\n          >\r\n            {elems}\r\n          </Select>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(SelectView)","export const inside = 'inside'\r\nexport const lower = 'lower'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ReplaceRowLocationFactoryUtil'\r\nimport { PMData } from '../../../../single/model/PMData';\r\nimport * as lt from './RRLF_LocationType'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance\r\n}\r\n\r\nexport default class ReplaceRowLocationFactory {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Location: observable,\r\n    })\r\n  }\r\n\r\n  ReferenceRow\r\n  Location = lt.inside\r\n\r\n  get Color(){\r\n    return util.GetColor(this);\r\n  }\r\n\r\n  get ButtonStyle(){\r\n    return {\r\n      width: 50,\r\n      backgroundColor: this.Color,\r\n      border: 'none'\r\n    };\r\n  }\r\n\r\n  ToggleLocation = () =>{\r\n    switch (this.Location) {\r\n      case lt.inside:\r\n        this.Location = lt.lower;\r\n        break;\r\n      case lt.lower:\r\n        this.Location = lt.inside;\r\n        break;\r\n    }\r\n  }\r\n}","import * as lt from './RRLF_LocationType'\r\n\r\nexport const GetColor = (v) => {\r\n  switch (v.Location) {\r\n    case lt.inside:\r\n      return \"#52c41a\";\r\n    case lt.lower:\r\n      return \"#faad14\";\r\n  }\r\n}","export const input = 'input'\r\nexport const select = 'select'","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport * as ts from '../text/TextState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nclass NewInputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.contentEditable = React.createRef();\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    var data = this.state;\r\n    data.Content = e.target.value;\r\n  };\r\n\r\n  OnPaste = (e) => {\r\n    e.preventDefault();\r\n    var text = genUtil.GetPlainText(e);\r\n\r\n    var data = this.state;\r\n    data.Content = text;\r\n  }\r\n\r\n  OnKeyDown = (e) => {\r\n    var data = this.state;\r\n    if (data.OnKeyDown){\r\n      data.OnKeyDown(e)\r\n      return;\r\n    }\r\n\r\n    // Ctrl + B\r\n    if (e.ctrlKey && e.which == 66) {\r\n      e.preventDefault();\r\n    }\r\n    // Ctrl + I\r\n    else if (e.ctrlKey && e.which == 73) {\r\n      e.preventDefault();\r\n    }\r\n    // Enter\r\n    else if (e.keyCode == 13) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var Content = data.Content;\r\n    var className = this.props.className ? this.props.className : ''\r\n    var style = this.props.style\r\n    var onFocus = this.props.onFocus ? \r\n      this.props.onFocus : data.OnFocus\r\n    \r\n    data.OnKeyDown = data.OnKeyDown ?\r\n      data.OnKeyDown : this.props.onKeyDown\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <ContentEditable ref={data.Ref}\r\n            className={`ant-input ${className}`}\r\n            style={style}\r\n            innerRef={this.contentEditable}\r\n            placeholder={data.Placeholder}\r\n            style={style}\r\n            html={Content ? Content : ''}\r\n            onChange={this.handleChange}\r\n            onPaste={this.OnPaste}\r\n            onKeyDown={this.OnKeyDown} \r\n            onFocus={onFocus}/>\r\n          : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password value={Content} onChange={this.handleChange}\r\n            className={className}\r\n            style={style} /> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(NewInputView)","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './TwoCol_SelectVMUtil'\r\nimport * as genUtil from '../../../util/generalUtil'\r\n\r\nexport class TwoCol_SelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      availableItems: observable,\r\n      selectedItems: observable,\r\n      inputTitle: observable,\r\n      outputTitle: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    this.AvailableItems = [...this.Items];\r\n    this.SelectedItems = [];\r\n  }\r\n\r\n  inputTitle = undefined\r\n  get InputTitle(){\r\n    if (!this.inputTitle){\r\n      this.inputTitle = 'Dữ liệu input'\r\n    }\r\n    return this.inputTitle;\r\n  } set InputTitle(v){\r\n    this.inputTitle = v;\r\n  }\r\n\r\n  outputTitle = undefined\r\n  get OutputTitle(){\r\n    if (!this.outputTitle){\r\n      this.outputTitle = 'Dữ liệu output'\r\n    }\r\n    return this.outputTitle;\r\n  } set OutputTitle(v){\r\n    this.outputTitle = v;\r\n  }\r\n\r\n  availableItems = undefined\r\n  get AvailableItems() {\r\n    return this.availableItems;\r\n  } set AvailableItems(v) {\r\n    this.availableItems = v;\r\n  }\r\n\r\n  selectedItems = []\r\n  get SelectedItems() {\r\n    return this.selectedItems;\r\n  } set SelectedItems(v) {\r\n    this.selectedItems = v;\r\n  }\r\n\r\n  GetKey = (item) => {\r\n    if (typeof item === 'string') return item;\r\n    var id = item.id ? item.id : genUtil.newGUID();\r\n    return id;\r\n  }\r\n\r\n  Select = (item) => {\r\n    var index1 = this.AvailableItems.indexOf(item);\r\n    this.AvailableItems.splice(index1, 1);\r\n\r\n    this.SelectedItems.push(item);\r\n\r\n    this.IsChanged = true;\r\n  }\r\n\r\n  Unselect = (item) => {\r\n    var index1 = this.SelectedItems.indexOf(item);\r\n    this.SelectedItems.splice(index1, 1);\r\n\r\n    var index = this.Items.indexOf(item);\r\n    if (index < this.AvailableItems.length) {\r\n      this.AvailableItems.splice(index, 0, item);\r\n    } else {\r\n      this.AvailableItems.push(item);\r\n    }\r\n\r\n    this.IsChanged = true;\r\n  }\r\n\r\n  set IsChanged(v) {\r\n    if (this.OnSelectedItemChanged) {\r\n      this.OnSelectedItemChanged(this.SelectedItems);\r\n    }\r\n  }\r\n\r\n  render\r\n  get Render() {\r\n    if (!this.render) {\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v) {\r\n    this.render = v;\r\n  }\r\n}","import { TwoCol_SelectVM } from \"./TwoCol_SelectVM\";\r\n\r\n// Instance\r\nexport const get = (items, render, inputTitle, outputTitle) => {\r\n  var qI = new TwoCol_SelectVM();\r\n\r\n  qI.Items = items;\r\n  qI.Render = render;\r\n  qI.InputTitle = inputTitle;\r\n  qI.OutputTitle = outputTitle;\r\n  \r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return get(\r\n    [\r\n      'a', 'b', 'c',\r\n      'd', 'e', 'f',\r\n      'g', 'h', 'i',\r\n      'j', 'k', 'q',\r\n      'r', 's', 't',\r\n    ]\r\n  )\r\n}\r\n\r\n// Property\r\nexport const GetRender = (q) => {\r\n  return (item) => item;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { TwoCol_SelectVM } from \"./TwoCol_SelectVM\";\r\nimport * as util from './TwoCol_SelectVMUtil'\r\nimport './TwoCol_Select.css'\r\n\r\nclass TwoCol_SelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = util.GetTest();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndexs = v;\r\n  }\r\n\r\n  onDropdownVisibleChange = (v) => {\r\n    var data = this.state;\r\n    data.Open = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var style = this.props.style;\r\n\r\n    return (\r\n      <>\r\n        <table className='tc_table'>\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <div className='tc_table__title'>\r\n                  <span>\r\n                    {data.InputTitle}\r\n                  </span>\r\n                </div>\r\n              </th>\r\n              <th>\r\n                <div className='tc_table__title'>\r\n                  {data.OutputTitle}\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <span className='tc_select__partition__items'>\r\n                  {data.AvailableItems.map(x => {\r\n                    return <span key={data.GetKey(x)} onClick={() => data.Select(x)}>\r\n                      {data.Render(x)}\r\n                    </span>\r\n                  })}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className='tc_select__partition__items'>\r\n                  {data.SelectedItems.map(x => {\r\n                    return <span key={data.GetKey(x)} onClick={() => data.Unselect(x)}>\r\n                      {data.Render(x)}\r\n                    </span>\r\n                  })}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TwoCol_SelectView)","export const m = 'm'\r\nexport const m2 = 'm2'\r\nexport const m3 = 'm3'\r\nexport const kg = 'kg'\r\nexport const each = 'each'\r\n\r\nexport const GetList = () => {\r\n  return [m, m2, m3, kg, each]\r\n}\r\n\r\nexport const GetName = (v) => {\r\n  var name\r\n\r\n  switch (v) {\r\n    case each:\r\n      name = 'Số lượng (cái)'\r\n      break;\r\n    case m:\r\n      name = 'Chiều dài (m)'\r\n      break;\r\n    case m2:\r\n      name = 'Diện tích (m2)'\r\n      break;\r\n    case m3:\r\n      name = 'Thể tích (m3)'\r\n      break;\r\n    case kg:\r\n      name = 'Khối lượng (kg)'\r\n      break;\r\n  }\r\n\r\n  return name;\r\n}","export const lower = 'lower'\r\nexport const upper = 'upper'\r\nexport const both = 'both'\r\nexport const none = 'none'","export const celllist = 'celllist'\r\nexport const celldata = 'celldata'\r\nexport const cellunit = 'cellunit'\r\nexport const unitlist = 'unitlist'\r\nexport const unit = 'unit'\r\nexport const _delete = 'delete'\r\nexport const addsub = 'addsub'","export const subcells = 'subcells'\r\nexport const valuelist = 'valuelist'\r\nexport const unit = 'unit'\r\nexport const valuecurrent = 'valuecurrent'","export const _default = 'default'\r\nexport const removedata = 'removedata'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../../../text/TextVMUtil'\r\nimport * as trs from '../../../../../../text/TextRenderState';\r\nimport * as util from './MassRowUtil'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport { EntFilter } from '../../../../filter/EntFilter';\r\nimport * as fvt from '../../../../filter/FilterValueType'\r\nimport * as sft from '../../../../filter/StringFilterType'\r\nimport * as mgiUtil from '../../rowgroup/MassGroupItemUtil'\r\nimport MassGroupComponent from '../../rowgroup/MassGroupComponent';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport MultiSelectView from '../../../../../../select/MultiSelectView';\r\nimport { Col, Row, Space, Button, Switch, message, Popover } from 'antd';\r\nimport EntHoverVM from '../../../../../../hover/EntHoverVM';\r\nimport EntHoverView from '../../../../../../hover/EntHoverView';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\nimport SelectView from '../../../../../../select/SelectView';\r\nimport ReplaceRowLocationFactory from '../../location/ReplaceRowLocationFactory';\r\nimport * as rrlf_lt from '../../location/RRLF_LocationType';\r\nimport { PMData } from '../../../../../single/model/PMData';\r\nimport * as mif from '../../../field/MassItemField'\r\nimport * as selectUtil from '../../../../../../select/SelectVMUtil';\r\nimport * as mr_f_it from './MassRow_Field_InputType'\r\nimport NewInputView from '../../../../../../input/NewInputView';\r\nimport * as tc_selectUtil from '../../../../../../select/twocol/TwoCol_SelectVMUtil';\r\nimport TwoCol_SelectView from \"../../../../../../select/twocol/TwoCol_SelectView\";\r\nimport * as u_st from '../unit/MR_Unit_SetType'\r\nimport * as ut from '../../../unit/MassUnitType'\r\nimport * as u_dt from '../../../../update/Update_DirectionType'\r\nimport * as u_sn from '../update/MRU_SectionName'\r\nimport * as uc_sn from '../../cell/update/MCU_SectionName'\r\nimport * as delType from '../delete/MR_DeleteType'\r\nimport * as tct from '../../command/CommandType'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n\r\nexport default class MassRow {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      rank: observable,\r\n      isShowSub: observable,\r\n      IsToolVisible: observable,\r\n      subItems: observable,\r\n      IsModalVisible: observable,\r\n      title: observable,\r\n      FieldInputType: observable,\r\n      IsHaveAdditionInformation: observable,\r\n      AdditionInformation: observable,\r\n      Is_SelectSubItems_ModalOpen: observable,\r\n      Temp_SelectSubItems: observable,\r\n      isShow_RawValue: observable,\r\n\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this);\r\n  }\r\n\r\n  // SupItem\r\n  // Nguyên bản là SupRow gốc của Row (đã bị thay đổi vị trí)\r\n  Is_Original_SupRow\r\n\r\n  supItem\r\n  get SupItem() {\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v) {\r\n    this.supItem = v;\r\n    this.CurrentList = undefined;\r\n    this.Rank = undefined;\r\n  }\r\n\r\n  currentList\r\n  get CurrentList() {\r\n    if (!this.currentList) {\r\n      this.currentList = this.SupItem ? this.SupItem.SubItems : this.Table.MainRows;\r\n    }\r\n    return this.currentList;\r\n  }\r\n  set CurrentList(v) {\r\n    this.currentList = v;\r\n  }\r\n\r\n  get Table() {\r\n    return this.Dict;\r\n  }\r\n\r\n  // SubItems\r\n  subItems = []\r\n  get SubItems() {\r\n    return this.subItems;\r\n  } set SubItems(v) {\r\n    this.subItems = v;\r\n  }\r\n\r\n  get AllItems() {\r\n    var list = [];\r\n    list.push(this);\r\n    this.SubItems.forEach(x => {\r\n      list.push.apply(list, x.AllItems)\r\n    });\r\n    return list;\r\n  }\r\n\r\n  // Cells\r\n  cells\r\n  get Cells() {\r\n    if (!this.cells) {\r\n      this.cells = util.Get_Cells(this)\r\n    } return this.cells;\r\n  }\r\n\r\n  // Update\r\n  update\r\n  get Update() {\r\n    if (!this.update) {\r\n      this.update = util.GetUpdate(this)\r\n    } return this.update\r\n  }\r\n\r\n  get Items() {\r\n    var items = this.Cells.reduce((a, b) => a.concat(b.Items), []);\r\n    items = items.filter((x, i, a) => a.indexOf(x) === i);\r\n    return items;\r\n  }\r\n\r\n  // MassGroupItem\r\n  massGroupItem\r\n  get MassGroupItem() {\r\n    return this.massGroupItem;\r\n  }\r\n  set MassGroupItem(v) {\r\n    this.massGroupItem = v;\r\n    if (v) {\r\n      var title = v.GetItem(this.FullValue).Title;\r\n      this.Title = title;\r\n    }\r\n  }\r\n\r\n  replaceMGI\r\n  get ReplaceMGI() {\r\n    return this.replaceMGI\r\n  } set ReplaceMGI(v) {\r\n    this.replaceMGI = v;\r\n  }\r\n\r\n  original_SubMassGroupItem\r\n  get Original_SubMassGroupItem() {\r\n    if (!this.original_SubMassGroupItem) {\r\n      this.original_SubMassGroupItem = util.GetOriginal_SubMassGroupItem(this);\r\n    }\r\n    return this.original_SubMassGroupItem\r\n  }\r\n  set Original_SubMassGroupItem(v) {\r\n    this.original_SubMassGroupItem = v;\r\n  }\r\n\r\n  replace_SubMassGroupItem\r\n  get Replace_SubMassGroupItem() {\r\n    if (!this.replace_SubMassGroupItem) {\r\n      this.replace_SubMassGroupItem = util.GetReplace_SubMassGroupItem(this);\r\n    }\r\n    return this.replace_SubMassGroupItem\r\n  }\r\n  set Replace_SubMassGroupItem(v) {\r\n    this.replace_SubMassGroupItem = v;\r\n  }\r\n\r\n  get SubMassGroupItem() {\r\n    return this.Replace_SubMassGroupItem ?\r\n      this.Replace_SubMassGroupItem : this.Original_SubMassGroupItem\r\n  } set SubMassGroupItem(v) {\r\n    this.Replace_SubMassGroupItem = v;\r\n  }\r\n\r\n  field\r\n  get Field() {\r\n    if (!this.field) {\r\n      this.field = this.MassGroupItem ? this.MassGroupItem.Field : undefined;\r\n    }\r\n    return this.field;\r\n  } set Field(v) {\r\n    this.field = v;\r\n  }\r\n\r\n  isReplaced\r\n  get IsReplaced() {\r\n    return this.isReplaced;\r\n  } set IsReplaced(v) {\r\n    this.isReplaced = v;\r\n    var obj = this.IsHaveAdditionInformation\r\n      = util.Get_IsHaveAdditionInformation(this);\r\n\r\n    if (obj) {\r\n      this.AdditionInformation = util.Get_AdditionInformation(this);\r\n    }\r\n  }\r\n\r\n  original_SupRow\r\n  get Original_SupRow() {\r\n    if (!this.original_SupRow) {\r\n      this.original_SupRow = util.Get_Original_SupRow(this);\r\n    }\r\n    return this.original_SupRow;\r\n  } set Original_SupRow(v) {\r\n    this.original_SupRow = v;\r\n  }\r\n\r\n  get Original_Full_SupRows() {\r\n    return util.Get_Original_Full_SupRows(this);\r\n  }\r\n\r\n  get OrderMGI() {\r\n    return this.ReplaceMGI ? this.ReplaceMGI : this.MassGroupItem;\r\n  }\r\n\r\n  subFields\r\n  get SubFields() {\r\n    if (!this.subFields) {\r\n      this.subFields = util.GetSubFields(this);\r\n    }\r\n    return this.subFields;\r\n  }\r\n  set SubFields(v) {\r\n    this.subFields = v;\r\n  }\r\n\r\n  TempSubFields\r\n\r\n  isShowSub = true\r\n  get IsShowSub() {\r\n    return this.isShowSub;\r\n  }\r\n  set IsShowSub(v) {\r\n    this.isShowSub = v;\r\n    this.ToggleButtonContentVM.Content = util.GetToggleButtonContent(this);\r\n  }\r\n\r\n  toggleButtonContent\r\n  get ToggleButtonContent() {\r\n    if (!this.toggleButtonContent) {\r\n      this.toggleButtonContent = util.GetToggleButtonContent(this);\r\n    }\r\n    return this.toggleButtonContent;\r\n  }\r\n  set ToggleButtonContent(v) {\r\n    this.toggleButtonContent = v;\r\n  }\r\n\r\n  toggleButtonContentVM\r\n  get ToggleButtonContentVM() {\r\n    if (!this.toggleButtonContentVM) {\r\n      var obj = this.toggleButtonContentVM = textVMUtil.get(this.ToggleButtonContent);\r\n      obj.OnSetContent = (v) => this.ToggleButtonContent = v;\r\n    }\r\n    return this.toggleButtonContentVM;\r\n  }\r\n\r\n  rank = undefined\r\n  get Rank() {\r\n    if (this.rank === undefined) {\r\n      this.rank = util.GetRank(this);\r\n    }\r\n    return this.rank;\r\n  }\r\n  set Rank(v) {\r\n    this.rank = v;\r\n    this.SubItems.forEach(x => x.Rank = undefined);\r\n  }\r\n\r\n  get IsHaveSub() {\r\n    return util.GetIsHaveSub(this);\r\n  }\r\n\r\n  get Style() {\r\n    return util.GetStyle(this);\r\n  }\r\n\r\n  IsToolVisible = false\r\n\r\n  FieldInputType = mr_f_it.select\r\n\r\n  Toggle_FieldInputType = () => {\r\n    switch (this.FieldInputType) {\r\n      case mr_f_it.select:\r\n        this.TempField = this.FieldInputVM.Content;\r\n        this.FieldInputType = mr_f_it.input;\r\n        break;\r\n      case mr_f_it.input:\r\n        this.FieldSelectVM.InitialItem = this.TempField\r\n        this.FieldInputType = mr_f_it.select;\r\n        break;\r\n    }\r\n  }\r\n\r\n  TempField\r\n\r\n  fieldInputVM\r\n  get FieldInputVM() {\r\n    if (!this.fieldInputVM) {\r\n      var obj = this.fieldInputVM = textVMUtil.get();\r\n      obj.onSetContent = (v) => this.TempField = v;\r\n    }\r\n    return this.fieldInputVM;\r\n  }\r\n\r\n  fieldSelectVM\r\n  get FieldSelectVM() {\r\n    if (!this.fieldSelectVM) {\r\n      this.fieldSelectVM = util.GetFieldSelectVM(this);\r\n    }\r\n    return this.fieldSelectVM;\r\n  }\r\n\r\n  get FieldInputElement() {\r\n    return <>\r\n      <div className='massrow__fieldinput_wrapper'>\r\n        <div className='massrow__fieldinput'>\r\n          {this.FieldInputType === mr_f_it.select ?\r\n            <SelectView store={this.FieldSelectVM} /> :\r\n            <NewInputView store={this.FieldInputVM} />\r\n          }\r\n        </div>\r\n        {this.IsCreatedByUser ?\r\n          <Switch unCheckedChildren='inp' checkedChildren='sel'\r\n            checked={this.FieldInputType === mr_f_it.select}\r\n            onChange={this.Toggle_FieldInputType} />\r\n          : ''}\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  subFieldSelectVM\r\n  get SubFieldSelectVM() {\r\n    if (!this.subFieldSelectVM) {\r\n      this.subFieldSelectVM = util.GetSubFieldSelectVM(this);\r\n    }\r\n    return this.subFieldSelectVM;\r\n  }\r\n\r\n  // Title\r\n  title = undefined\r\n  get Title() {\r\n    return this.title;\r\n  }\r\n  set Title(v) {\r\n    this.title = v;\r\n    this.TitleVM.Content = v;\r\n    this.Editable_TitleVM.Content = v;\r\n  }\r\n\r\n  titleVM\r\n  get TitleVM() {\r\n    if (!this.titleVM) {\r\n      this.titleVM = textVMUtil.get(this.Title, 'tiêu đề');\r\n    }\r\n    return this.titleVM;\r\n  }\r\n\r\n  EditTitle = () => {\r\n    this.HideHover();\r\n    this.Editable_TitleVM.RenderState = trs.edit\r\n  }\r\n\r\n  editable_TitleVM\r\n  get Editable_TitleVM() {\r\n    if (!this.editable_TitleVM) {\r\n      this.editable_TitleVM = util.GetEditable_TitleVM(this)\r\n    }\r\n    return this.editable_TitleVM;\r\n  }\r\n\r\n  get LocationStorageList() {\r\n    return this.Table.AllRows;\r\n  }\r\n\r\n  locationSelectVM\r\n  get LocationSelectVM() {\r\n    if (!this.locationSelectVM) {\r\n      this.locationSelectVM = util.GetLocationSelectVM(this);\r\n    }\r\n    return this.locationSelectVM;\r\n  }\r\n\r\n  // Value lồng giữa Row hiện tại và SupRow\r\n  // Ví dụ: concrete__Tầng 6__Dầm\r\n  FullValue\r\n\r\n  GetCellByColumn = (col) => {\r\n    var index = this.Cells.findIndex(x => x.Column === col);\r\n    return index !== -1 ? this.Cells[index] : undefined;\r\n  }\r\n\r\n  ToggleSub = () => {\r\n    this.IsShowSub = !this.IsShowSub;\r\n  }\r\n\r\n  SetSubFields = (handleUndo) => {\r\n    var tempSubFields = this.TempSubFields ? this.TempSubFields : [];\r\n\r\n    var isSame = true;\r\n    if (this.SubFields.length !== tempSubFields.length) {\r\n      isSame = false;\r\n    } else {\r\n      this.SubFields.forEach((x, i) => {\r\n        if (isSame && x !== tempSubFields[i]) {\r\n          isSame = false;\r\n        }\r\n      })\r\n    }\r\n    if (isSame) return;\r\n\r\n    // Undo Func\r\n    var undoFuncs\r\n    if (handleUndo) {\r\n      undoFuncs = []\r\n      handleUndo(() => {\r\n        undoFuncs.forEach(x => x());\r\n      });\r\n    }\r\n\r\n    // Undo\r\n    if (handleUndo) {\r\n      var oldSubItems = this.SubItems;\r\n      undoFuncs.push(() => {\r\n        this.SubItems = oldSubItems\r\n      })\r\n    }\r\n\r\n    // Undo\r\n    var oldSubFields = this.SubFields;\r\n    if (handleUndo) {\r\n      undoFuncs.push(() => {\r\n        this.SubFields = oldSubFields\r\n      });\r\n    }\r\n    // Do\r\n    this.SubFields = tempSubFields;\r\n\r\n    var filter = new EntFilter();\r\n    filter.ValueType = fvt.bystring;\r\n    filter.StringFilterType = sft.byequal;\r\n    filter.Values = [this.FullValue];\r\n\r\n    var supMgi = this.MassGroupItem;\r\n\r\n    var mgc = new MassGroupComponent();\r\n    mgc.SubItem = supMgi;\r\n    mgc.Filter = filter;\r\n\r\n    var subMgis = mgc.Items = tempSubFields.map(x => mgiUtil.get(x, null, mgc));\r\n\r\n    var subComps = supMgi.SubComponents;\r\n    if (this.SubMassGroupComponent) {\r\n      var index = subComps.indexOf(this.SubMassGroupComponent);\r\n\r\n      // Undo\r\n      if (handleUndo) {\r\n        var oldMgc = subComps[index];\r\n        undoFuncs.push(() => {\r\n          subComps[index] = oldMgc;\r\n        })\r\n      }\r\n      // Do\r\n      subComps[index] = mgc;\r\n    } else {\r\n      // Undo\r\n      if (handleUndo) {\r\n        undoFuncs.push(() => {\r\n          subComps.splice(subComps.length - 1, 1);\r\n        })\r\n      }\r\n      subComps.push(mgc);\r\n    }\r\n\r\n    // Undo\r\n    if (handleUndo) {\r\n      var oldSubMassGroupComponent = this.SubMassGroupComponent;\r\n      undoFuncs.push(() => {\r\n        this.SubMassGroupComponent = oldSubMassGroupComponent;\r\n      })\r\n    }\r\n    // Do\r\n    this.SubMassGroupComponent = mgc;\r\n\r\n    this.SubItems = [];\r\n\r\n    // Undo\r\n    if (handleUndo) {\r\n      var oldO_SMGI = this.Original_SubMassGroupItem;\r\n      undoFuncs.push(() => {\r\n        this.Original_SubMassGroupItem = oldO_SMGI;\r\n      })\r\n    }\r\n    // Do\r\n    this.Original_SubMassGroupItem = undefined;\r\n\r\n    if (subMgis.length !== 0) {\r\n      var table = this.Table;\r\n      this.Items.forEach(x => {\r\n        // Xử lý Item theo ColumnField: Project ... (single value)\r\n        // hoặc theo Phase (multiple values)\r\n        switch (table.ColumnField) {\r\n          case mif.Phase:\r\n            x.ValidPhasesByInput.forEach(y =>\r\n              table.HandleItem(x, y, mgc, this));\r\n            break;\r\n          default:\r\n            table.HandleItem(x, x.GetValue(table.ColumnField).Value, mgc, this);\r\n            break;\r\n        }\r\n      })\r\n\r\n      // Update\r\n      // UpdateCell với Unit_SetType là Both cho các SubCell\r\n      this.Update.Run(\r\n        {\r\n          Section: u_sn.celldata,\r\n          Data: { Sections: uc_sn.subcells }\r\n        },\r\n        u_dt.lower, false\r\n      )\r\n\r\n      // Update Unit với SubCell\r\n      // Undo\r\n      if (handleUndo) {\r\n        var oldUnit = this.Unit\r\n        undoFuncs.push(() => {\r\n          this.Update.Run(\r\n            {\r\n              Section: u_sn.unit,\r\n              Data: { Unit: oldUnit }\r\n            },\r\n            u_dt.none\r\n          )\r\n        })\r\n      }\r\n      // Do\r\n      this.Update.Run(\r\n        {\r\n          Section: u_sn.unit,\r\n          Data: { Unit: this.Unit ? this.Unit : ut.each }\r\n        },\r\n        u_dt.lower\r\n      )\r\n    }\r\n  }\r\n\r\n  MoveUp = () => {\r\n    var list = this.CurrentList;\r\n    var index = this.Index;\r\n    if (0 === index) return;\r\n\r\n    var orderItems = this.OrderMGI.OrderItems;\r\n    var orderValues = this.OrderMGI.OrderValues;\r\n    var mgiIndex1 = orderValues.indexOf(list[index].FullValue);\r\n    var mgiIndex2 = orderValues.indexOf(list[index - 1].FullValue);\r\n\r\n    const func = () => {\r\n      genUtil.MoveItem(list, index, index - 1);\r\n      genUtil.MoveItem(orderItems, mgiIndex1, mgiIndex2);\r\n    }\r\n\r\n    func();\r\n\r\n    this.Table.CommandDict.Add({\r\n      Key: tct.moveuprow,\r\n      Undo: func\r\n    })\r\n  }\r\n\r\n  MoveDown = () => {\r\n    var list = this.CurrentList;\r\n    var index = this.Index;\r\n    if (list.length - 1 === index) return;\r\n\r\n    var orderItems = this.OrderMGI.OrderItems;\r\n    var orderValues = this.OrderMGI.OrderValues;\r\n    var mgiIndex1 = orderValues.indexOf(list[index].FullValue);\r\n    var mgiIndex2 = orderValues.indexOf(list[index + 1].FullValue);\r\n\r\n    const func = () => {\r\n      genUtil.MoveItem(list, index, index + 1);\r\n      genUtil.MoveItem(orderItems, mgiIndex1, mgiIndex2);\r\n    }\r\n\r\n    func();\r\n\r\n    this.Table.CommandDict.Add({\r\n      Key: tct.movedownrow,\r\n      Undo: func\r\n    })\r\n  }\r\n\r\n  AddSub = () => {\r\n    util.Add(this, this.Table);\r\n  }\r\n\r\n  // Delete\r\n  deleteData\r\n  get DeleteData() {\r\n    if (!this.deleteData) {\r\n      this.deleteData = util.GetDeleteData(this)\r\n    } return this.deleteData\r\n  }\r\n\r\n  Delete = () => {\r\n    // this.DeleteData.Run(at.remove);\r\n    this.Update.Run({\r\n      Section: u_sn._delete,\r\n      Data: { DeleteType: delType.removedata }\r\n    }, u_dt.upper, true,\r\n      (undo) => {\r\n        this.Table.CommandDict.Add({\r\n          Key: tct.deleterow,\r\n          Undo: undo\r\n        })\r\n      })\r\n  }\r\n\r\n  replaceFactory\r\n  get ReplaceFactory() {\r\n    if (!this.replaceFactory) {\r\n      this.replaceFactory = new ReplaceRowLocationFactory();\r\n    }\r\n    return this.replaceFactory;\r\n  }\r\n\r\n  ReplaceOK = (handleUndo) => {\r\n    var factory = this.ReplaceFactory;\r\n    var refRow = factory.ReferenceRow;\r\n\r\n    if (!refRow) return;\r\n\r\n    var loc = factory.Location;\r\n    if ((refRow === this && loc === rrlf_lt.lower) ||\r\n      (refRow === this.SupItem && loc === rrlf_lt.inside)) {\r\n      return\r\n    }\r\n\r\n    this.Replace(refRow, loc, handleUndo);\r\n\r\n    factory.Location = rrlf_lt.inside;\r\n  }\r\n\r\n  Replace_SubItems = (handleUndo) => {\r\n    // Undo\r\n    var undoFuncs\r\n    if (handleUndo) {\r\n      undoFuncs = []\r\n      handleUndo(() => {\r\n        undoFuncs.forEach(x => x());\r\n      });\r\n    }\r\n\r\n    var subItems = this.Temp_SelectSubItems;\r\n    subItems.forEach(x => {\r\n      x.Replace(this, rrlf_lt.inside,\r\n        (undo) => {\r\n          if (undoFuncs) {\r\n            undoFuncs.push(undo)\r\n          }\r\n        })\r\n    })\r\n  }\r\n\r\n  Replace = (refRow, loc, handleUndo) => {\r\n    var osr = this.Original_SupRow;\r\n\r\n    // Save data\r\n    var oldMgi = this.MassGroupItem;\r\n    var supRow = undefined;\r\n\r\n    switch (loc) {\r\n      case rrlf_lt.inside:\r\n        supRow = refRow;\r\n        break;\r\n      case rrlf_lt.lower:\r\n        supRow = refRow.SupItem;\r\n        break;\r\n    }\r\n\r\n    // Đối tượng đã nằm trong mục cần đặt\r\n    if (this.SupItem === supRow) return;\r\n\r\n    // Undo\r\n    var undoFuncs = []\r\n    var undo = () => {\r\n      undoFuncs.forEach(x => x());\r\n    }\r\n\r\n    // Init OriginalSupRow && IsReplaced\r\n    // Undo\r\n    var old_IsReplaced = this.IsReplaced;\r\n    undoFuncs.push(() => this.IsReplaced = old_IsReplaced)\r\n\r\n    this.IsReplaced = true;\r\n\r\n    //var newMgi = supRow ? supRow.SubMassGroupItem : this.Table.MainMGI;\r\n    var newMgi = supRow ?\r\n      (supRow.Replace_SubMassGroupItem ? supRow.Replace_SubMassGroupItem :\r\n        util.CreateSubMassGroupItem(supRow))\r\n      : this.Table.MainMGI;\r\n\r\n    //pmData().IsDebug = true;\r\n    var mgi_i = oldMgi.GetItem(this.FullValue, (undo) => {\r\n      undoFuncs.push(undo)\r\n    });\r\n\r\n    var oldNewMgi = mgi_i.NewMGI;\r\n    var oldSupValue = mgi_i.SupValue;\r\n    undoFuncs.push(() => {\r\n      mgi_i.NewMGI = oldNewMgi;\r\n      mgi_i.SupValue = oldSupValue;\r\n    })\r\n\r\n    mgi_i.NewMGI = newMgi;\r\n    mgi_i.SupValue = supRow?.Name;\r\n\r\n    var oldReplaceMGI = this.ReplaceMGI;\r\n    undoFuncs.push(() => {\r\n      this.ReplaceMGI = oldReplaceMGI\r\n    });\r\n\r\n    this.ReplaceMGI = newMgi;\r\n\r\n    // Delete Row trong tập hợp cũ\r\n    this.Update.Run({\r\n      Section: u_sn._delete,\r\n      Data: { DeleteType: delType._default }\r\n    }, u_dt.upper, true, (undo) => undoFuncs.push(undo))\r\n\r\n    // Add Row trong tập hợp mới\r\n    // Undo\r\n    if (handleUndo) {\r\n      var oldSupItem = this.SupItem;\r\n      undoFuncs.push(() => this.SupItem = oldSupItem);\r\n    }\r\n    // Do\r\n    this.SupItem = supRow;\r\n\r\n    supRow.Update.Run({\r\n      Section: u_sn.addsub,\r\n      Data: { Item: this }\r\n    }, u_dt.none, true, (undo) => undoFuncs.push(undo))\r\n\r\n    var oldIsShowSubFieldSelect = this.IsShowSubFieldSelect;\r\n    undoFuncs.push(() => {\r\n      this.IsShowSubFieldSelect = oldIsShowSubFieldSelect\r\n    });\r\n\r\n    this.IsShowSubFieldSelect = false;\r\n\r\n    if (handleUndo) {\r\n      handleUndo(undo)\r\n    }\r\n  }\r\n\r\n  IsModalVisible = false\r\n\r\n  OpenModal = () => {\r\n    this.IsModalVisible = true\r\n    var list\r\n\r\n    // Set tiêu đề hiện tại\r\n    this.TitleVM.Content = this.Title;\r\n\r\n    // Set giá trị nhóm hiện tại\r\n    this.FieldInputVM.Content = this.Field\r\n\r\n    //this.FieldSelectVM.InitialItem = this.Field;\r\n    var fieldSelectVM = this.FieldSelectVM\r\n    list = fieldSelectVM.Items;\r\n    var index = list.findIndex(x => x.Value === this.Field);\r\n    fieldSelectVM.InitialItem = index !== -1 ? list[index] : undefined\r\n\r\n    this.TempField = this.Field;\r\n\r\n    // Set giá trị phân nhóm hiện tại\r\n    var subFieldSelectVM = this.SubFieldSelectVM;\r\n    //subFieldSelectVM.InitialItems = this.SubFields;\r\n    list = subFieldSelectVM.Items;\r\n    subFieldSelectVM.InitialItems =\r\n      list.filter(x => this.SubFields.indexOf(x.Value) !== -1);\r\n\r\n    // Reset lại giá trị Select SubItems\r\n    this.Temp_SelectSubItems = undefined\r\n    this.SelectSubItemsVM.Items = this.LocationStorageList;\r\n\r\n    var locSelectVM = this.LocationSelectVM;\r\n    locSelectVM.Items = this.LocationStorageList\r\n    locSelectVM.InitialItem = undefined;\r\n  }\r\n\r\n  ModalOK = () => {\r\n    this.IsModalVisible = false;\r\n\r\n    // Undo\r\n    var undoFuncs = []\r\n    var undo = () => {\r\n      undoFuncs.forEach(x => x());\r\n    };\r\n    this.Table.CommandDict.Add({\r\n      Key: 'rowmodalok',\r\n      Undo: undo\r\n    })\r\n\r\n    // Thiết lập tiêu đề\r\n    var title = this.TitleVM.Content;\r\n    this.Title = title;\r\n    this.MassGroupItem.GetItem(this.FullValue).Title = title;\r\n\r\n    // Thiết lập nhóm hiện tại\r\n    if (this.Field !== this.TempField) {\r\n      // Undo\r\n      var oldField = this.Field;\r\n      undoFuncs.push(() => {\r\n        this.Field = oldField;\r\n      })\r\n      // Do\r\n      this.Field = this.TempField;\r\n    }\r\n\r\n    // Thiết lập phân nhóm hiện tại\r\n    // chỉ áp dụng cho Row tự sinh\r\n    if (!this.IsCreatedByUser) {\r\n      this.SetSubFields((undo) => {\r\n        undoFuncs.push(undo)\r\n      });\r\n    }\r\n\r\n    var subItems = this.Temp_SelectSubItems;\r\n    if (subItems) {\r\n      // Dịch chuyển tập hợp con\r\n      this.Replace_SubItems((undo) => {\r\n        undoFuncs.push(undo)\r\n      });\r\n    } else {\r\n      // Dịch chuyển vị trí\r\n      this.ReplaceOK((undo) => {\r\n        undoFuncs.push(undo)\r\n      });\r\n    }\r\n  }\r\n\r\n  ModalCancel = () => {\r\n    this.IsModalVisible = false;\r\n  }\r\n\r\n  PMS_WorkPackages = [\r\n    'THI CÔNG CHÍNH (HBC)',\r\n    'CÔNG TÁC CHUẨN BỊ PHẦN NGẦM',\r\n    'CÔNG TÁC CHUẨN BỊ PHẦN NGẦM (PHƯƠNG ...)',\r\n    'Kết thúc thô - Bàn giao'\r\n  ]\r\n\r\n  pms_WorkPackages_SelectVM\r\n  get PMS_WorkPackages_SelectVM() {\r\n    if (!this.pms_WorkPackages_SelectVM) {\r\n      this.pms_WorkPackages_SelectVM = selectUtil.get(this.PMS_WorkPackages);\r\n    }\r\n    return this.pms_WorkPackages_SelectVM;\r\n  }\r\n\r\n  get ModalElement() {\r\n    var factory = this.ReplaceFactory;\r\n    var titleWidth = '180px';\r\n\r\n    return <Modal title={this.Title} visible={this.IsModalVisible}\r\n      width={700}\r\n      onOk={this.ModalOK} onCancel={this.ModalCancel}>\r\n      {/* Tiêu đề */}\r\n      <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex={titleWidth}>\r\n          <b> Tiêu đề:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <b>{this.TitleVM.Content}</b>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Thiết lập nhóm hiện tại */}\r\n      <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex={titleWidth}>\r\n          <b> Nhóm hiện tại:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          {this.FieldInputElement}\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Thiết lập phân nhóm */}\r\n      {!this.IsCreatedByUser ? <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex={titleWidth}>\r\n          <b> Thiết lập phân nhóm:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <MultiSelectView store={this.SubFieldSelectVM} />\r\n        </Col>\r\n      </Row> : ''}\r\n\r\n      {/* Đổi vị trí */}\r\n      <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex={titleWidth} className='mass__modal__title__wrapper'>\r\n          <b>Đổi vị trí /</b>\r\n          <Button type='primary' size='small'\r\n            className={this.Temp_SelectSubItems ?\r\n              'mass__modal__title__selectsubitems__button' : ''}\r\n            onClick={this.Open_SelectSubItems_Modal}>chọn tập con</Button>\r\n          {this.SelectSubItems_ModalElement}\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <Row>\r\n            <Col flex='auto'>\r\n              <SelectView store={this.LocationSelectVM} />\r\n            </Col>\r\n            <Col>\r\n              <Button type='primary' size='small'\r\n                style={factory.ButtonStyle} onClick={factory.ToggleLocation}\r\n              >{factory.Location}</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Hiển thị 1 Project và ko phải Phase */}\r\n      {this.Table.Dict.Dict.ViewItem.CanEdit_Site ?\r\n        <Row gutter={15} style={{ marginTop: 10 }}>\r\n          <Col flex={titleWidth}>\r\n            <b>Thông tin công trường:</b>\r\n          </Col>\r\n          <Col flex=\"auto\">\r\n            <Button type='primary' size='small'\r\n              className='btn-warning'\r\n              onClick={this.Site.OpenModal}>...</Button>\r\n            {this.Site.ModalView}\r\n          </Col>\r\n        </Row>\r\n        : ''}\r\n\r\n      {/* Gói công việc PMS */}\r\n      {/* <Row gutter={15} style={{ marginTop: 10 }}>\r\n        <Col flex={titleWidth}>\r\n          <b> Gói công việc PMS:</b>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <SelectView store={this.PMS_WorkPackages_SelectVM} />\r\n        </Col>\r\n      </Row> */}\r\n    </Modal>\r\n  }\r\n\r\n  hoverData\r\n  get HoverData() {\r\n    if (!this.hoverData) {\r\n      this.hoverData = util.GetHoverData(this)\r\n    } return this.hoverData\r\n  }\r\n\r\n  ShowHover = () => {\r\n    if (this.Editable_TitleVM.RenderState === trs.edit) {\r\n      return\r\n    }\r\n    this.HoverData.Show();\r\n  }\r\n\r\n  HideHover = () => {\r\n    this.HoverData.Hide();\r\n  }\r\n\r\n  get HoverToolElement() {\r\n    var obj = new EntHoverVM();\r\n    obj.Element = this.ToolElement.View;\r\n    return <EntHoverView className='mass__row__hovertool' store={obj} />\r\n  }\r\n\r\n  toolElement\r\n  get ToolElement() {\r\n    if (!this.toolElement) {\r\n      this.toolElement = util.Get_ToolElement(this);\r\n    }\r\n    return this.toolElement;\r\n  }\r\n\r\n  get AdditionInfomation_Element() {\r\n    return <>\r\n      {this.IsHaveAdditionInformation ?\r\n        <Popover trigger='hover'\r\n          content={\r\n            <span className='info'>\r\n              {this.AdditionInformation}\r\n            </span>\r\n          } >\r\n          <InfoCircleOutlined className='info' />\r\n        </Popover>\r\n        : ''}\r\n    </>\r\n  }\r\n\r\n  // Excel Export\r\n  get ExportInfo() {\r\n    var key = this.Field;\r\n    var info = {\r\n      Key: key,\r\n      Value: this.Title\r\n    }\r\n\r\n    var list\r\n    if (!this.SupItem) {\r\n      list = [info]\r\n    } else {\r\n      list = [...this.SupItem.ExportInfo]\r\n      list.push(info);\r\n    }\r\n\r\n    return list;\r\n  }\r\n\r\n  get ExportValue() {\r\n    var list = []\r\n    this.Cells.forEach(x => {\r\n      list.push({\r\n        Key: x.Column.Name,\r\n        Value: x.TotalValue\r\n      })\r\n    })\r\n\r\n    return list;\r\n  }\r\n\r\n  get ExportData() {\r\n    return {\r\n      Infos: this.ExportInfo,\r\n      Values: this.ExportValue\r\n    }\r\n  }\r\n\r\n  // HandleTotal_Cells\r\n  On_HandleTotal_Cells_Done_Dict_Funcs = []\r\n\r\n  set Is_HandleTotal_Cells_Done(v) {\r\n    this.On_HandleTotal_Cells_Done_Dict_Funcs\r\n      .forEach(x => x.Value())\r\n  }\r\n\r\n  HandleTotal_Cells\r\n\r\n  AddHandleTotal_Cell = (cell) => {\r\n    if (!this.HandleTotal_Cells) {\r\n      this.HandleTotal_Cells = []\r\n    };\r\n\r\n    var list = this.HandleTotal_Cells\r\n\r\n    list.push(cell);\r\n    if (list.length === this.Cells.length) {\r\n      this.HandleTotal_Cells = undefined\r\n      this.Is_HandleTotal_Cells_Done = true;\r\n\r\n      // nếu IsCreatedByUser \r\n      // => thêm thông tin vào danh sách Handled_CreatedByUser_Rows \r\n      // đối tượng Table\r\n      if (this.IsCreatedByUser) {\r\n        this.Table.Add_Handled_CreatedByUser_Row(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  On_HandleTotalData_Cells_Func = []\r\n\r\n  is_HandleTotalData_Cells\r\n  get Is_HandleTotalData_Cells() {\r\n    return this.is_HandleTotalData_Cells\r\n  }\r\n  set Is_HandleTotalData_Cells(v) {\r\n    genUtil.Handle(this.On_HandleTotalData_Cells_Func,\r\n      (v) => this.On_HandleTotalData_Cells_Func = v)\r\n\r\n    this.is_HandleTotalData_Cells = v;\r\n  }\r\n\r\n  HandleTotalData_Cells = undefined\r\n\r\n  AddHandleTotalData_Cell = (cell) => {\r\n    if (!this.HandleTotalData_Cells) {\r\n      this.HandleTotalData_Cells = []\r\n    }\r\n\r\n    var list = this.HandleTotalData_Cells\r\n\r\n    list.push(cell);\r\n    if (list.length === this.Cells.length) {\r\n      this.HandleTotalData_Cells = undefined\r\n\r\n      this.Is_HandleTotalData_Cells = true;\r\n\r\n      // nếu IsCreatedByUser \r\n      // => thêm thông tin vào danh sách Handled_CreatedByUser_Rows \r\n      // đối tượng Table\r\n      if (this.IsCreatedByUser) {\r\n        this.Table.Add_Handled_CreatedByUser_Row(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  // AdditionInformation\r\n  IsHaveAdditionInformation = false\r\n\r\n  get IsHave_Addition_Wrapper() {\r\n    return this.IsHaveAdditionInformation || this.IsShow_RawValue\r\n  }\r\n\r\n  AdditionInformation = undefined\r\n\r\n  // Tùy chọn SelectSubItems\r\n  Is_SelectSubItems_ModalOpen = false\r\n\r\n  get SelectSubItems_ModalElement() {\r\n    return <Modal\r\n      title='Chọn tập hợp đầu mục con'\r\n      visible={this.Is_SelectSubItems_ModalOpen}\r\n      onOk={this.SelectSubItems_ModalOK}\r\n      onCancel={this.SelectSubItems_ModalCancel}>\r\n      <div className='mass__subitemmodal__wrapper'>\r\n        <TwoCol_SelectView store={this.SelectSubItemsVM} />\r\n      </div>\r\n    </Modal>\r\n  }\r\n\r\n  Open_SelectSubItems_Modal = () => {\r\n    this.Is_SelectSubItems_ModalOpen = true;\r\n  }\r\n\r\n  SelectSubItems_ModalCancel = () => {\r\n    this.Is_SelectSubItems_ModalOpen = false;\r\n  }\r\n\r\n  SelectSubItems_ModalOK = () => {\r\n    this.Is_SelectSubItems_ModalOpen = false;\r\n  }\r\n\r\n  selectSubItemsVM\r\n  get SelectSubItemsVM() {\r\n    if (!this.selectSubItemsVM) {\r\n      var obj = this.selectSubItemsVM = tc_selectUtil.get(\r\n        [],\r\n        (item) => {\r\n          var marginLeft = item.Rank * 15;\r\n          return <div\r\n            style={{ marginLeft }}>\r\n            {item.Title}\r\n          </div>\r\n        },\r\n        'Tập hợp vị trí',\r\n        'Vị trí được chọn'\r\n      )\r\n      obj.OnSelectedItemChanged = (v) => this.Temp_SelectSubItems = v;\r\n    }\r\n    return this.selectSubItemsVM;\r\n  }\r\n\r\n  Temp_SelectSubItems = undefined\r\n\r\n  isShow_RawValue = undefined\r\n  get IsShow_RawValue() {\r\n    if (!this.isShow_RawValue) {\r\n      this.isShow_RawValue = util.GetIsShow_RawValue(this);\r\n    }\r\n    return this.isShow_RawValue;\r\n  } set IsShow_RawValue(v) {\r\n    this.isShow_RawValue = v;\r\n  }\r\n\r\n  get RawValue_Element() {\r\n    return <>\r\n      {this.IsShow_RawValue ?\r\n        <Popover trigger='hover'\r\n          content={\r\n            <span className='success'>\r\n              {this.RawValue}\r\n            </span>\r\n          }\r\n        >\r\n          <InfoCircleOutlined className='success' />\r\n        </Popover>\r\n        : ''}\r\n    </>\r\n  }\r\n\r\n  IsCreatedByUser\r\n\r\n  // Unit\r\n  unit_SetType\r\n  get Unit_SetType() {\r\n    if (!this.unit_SetType) {\r\n      this.unit_SetType = this.SubItems.length === 0\r\n        ? u_st.upper : u_st.both\r\n    }\r\n    return this.unit_SetType\r\n  } set Unit_SetType(v) {\r\n    this.unit_SetType = v;\r\n  }\r\n\r\n  get Unit() {\r\n    return this.UnitData.CurrentUnit\r\n  }\r\n\r\n  unitData\r\n  get UnitData() {\r\n    if (!this.unitData) {\r\n      this.unitData = util.GetUnitData(this)\r\n    } return this.unitData\r\n  }\r\n\r\n  // Site\r\n  site\r\n  get Site() {\r\n    if (!this.site) {\r\n      this.site = util.GetSite(this)\r\n    } return this.site;\r\n  }\r\n\r\n  // MassType\r\n  get MassType() {\r\n    return this.Cells[0].MassType\r\n  }\r\n}","export const addrow = 'addrow'\r\nexport const renamerow = 'renamerow'\r\nexport const deleterow = 'deleterow'\r\nexport const moveuprow = 'moveuprow'\r\nexport const movedownrow = 'movedownrow'\r\nexport const setsubfieldsrow = 'setsubfieldsrow'\r\nexport const replacerow = 'replacerow'\r\nexport const replacerows = 'replacerows'\r\nexport const changeunitrow = 'changeunitrow'","export const lower = 'lower'\r\nexport const upper = 'upper'\r\nexport const both = 'both'\r\nexport const none = 'none'","export const alt = 'alt'\r\nexport const alt_enter = 'alt_enter'\r\n\r\nexport const ctrl = 'ctrl'\r\nexport const ctrl_b = 'ctrl_b'\r\nexport const ctrl_i = 'ctrl_i'\r\n\r\nexport const enter = 'enter'\r\nexport const tab = 'tab'\r\nexport const backspace = 'backspace'\r\nexport const del = 'del'\r\nexport const esc = 'esc'\r\n\r\nexport const Get_Shortcut = (e) => {\r\n  var key ;\r\n  if (e.altKey && e.keyCode == 13) {\r\n      key = alt_enter\r\n  } else if (e.ctrlKey && e.which == 66) {\r\n    key = ctrl_b\r\n  } else if (e.ctrlKey && e.which == 73) {\r\n    key = ctrl_i\r\n  } else if (e.ctrlKey){\r\n    key = ctrl\r\n  } else if (e.altKey){\r\n    key = alt\r\n  } else if (e.keyCode == 13) {\r\n    key = enter\r\n  } else if (e.keyCode == 9){\r\n    key = tab\r\n  } else if (e.keyCode == 8){\r\n    key = backspace\r\n  } else if (e.keyCode == 46){\r\n    key = del\r\n  } else if (e.keyCode == 27){\r\n    key = esc\r\n  }\r\n\r\n  return {\r\n    key,\r\n    value : e.key\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport MassRow_ToolElement from \"./MassRow_ToolElement\";\r\nimport { Button } from \"antd\";\r\nimport { DownCircleOutlined, ReloadOutlined, UpCircleOutlined } from \"@ant-design/icons\";\r\nimport * as trs from '../../../../../text/TextRenderState';\r\n\r\n\r\nclass MassRow_ToolElementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassRow_ToolElement();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Button size='small' type='primary'\r\n          className='btn-success'\r\n          onClick={data.Method('MoveUp')}>\r\n          <UpCircleOutlined />\r\n        </Button>\r\n        <Button size='small' type='primary'\r\n          className='btn-success'\r\n          onClick={data.Method('MoveDown')}>\r\n          <DownCircleOutlined />\r\n        </Button>\r\n\r\n        <Button type='primary' size='small'\r\n          className='btn-warning'\r\n          onClick={data.Method('OpenModal')}>...</Button>\r\n\r\n        <Button size='small' type='primary'\r\n          className='btn-success'\r\n          onClick={data.Method('AddSub')}>+</Button>\r\n        <Button type='primary' size='small' danger\r\n          onClick={data.Method('Delete')}>x</Button>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassRow_ToolElementView)","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassRow_ToolElementUtil'\r\nimport MassRow_ToolElementView from './MassRow_ToolElementView';\r\n\r\nexport default class MassRow_ToolElement {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      editable_TitleVM_RenderState: observable\r\n    })\r\n  }\r\n\r\n  get Editable_TitleVM() {\r\n    return this.Dict.Editable_TitleVM;\r\n  }\r\n\r\n  editable_TitleVM_RenderState = undefined\r\n  get Editable_TitleVM_RenderState() {\r\n    if (this.editable_TitleVM_RenderState === undefined) {\r\n      this.editable_TitleVM_RenderState =\r\n        util.GetEditable_TitleVM_RenderState(this);\r\n    }\r\n    return this.editable_TitleVM_RenderState;\r\n  } set Editable_TitleVM_RenderState(v) {\r\n    this.editable_TitleVM_RenderState = v;\r\n\r\n    this.Editable_TitleVM.RenderState = v;\r\n  }\r\n\r\n  Method = (name) => {\r\n    return this.Dict[name];\r\n  }\r\n\r\n  get View() {\r\n    return <MassRow_ToolElementView store={this} />\r\n  }\r\n}","\r\n// Property\r\nexport const GetEditable_TitleVM_RenderState = (q) => {\r\n  return q.Editable_TitleVM.RenderState;\r\n}","export class MI_ValueItem {\r\n  Unit\r\n\r\n  Value = 0\r\n\r\n  get ValueString() {\r\n    var roundingFactor = 2;\r\n    var unit = this.Unit;\r\n    switch (unit) {\r\n      case 'each':\r\n        roundingFactor = 0;\r\n        break;\r\n      default:\r\n        roundingFactor = 2;\r\n        break;\r\n    }\r\n\r\n    var formatValue = this.Value.toLocaleString('en-US', { maximumFractionDigits: roundingFactor });\r\n    return `${formatValue}`;\r\n  }\r\n\r\n  get ApiData(){\r\n    return {\r\n      unit : this.Unit,\r\n      value : this.Value\r\n    }\r\n  }\r\n}","import * as sn from './MCU_SectionName'\r\nimport * as u_dt from '../../../../update/Update_DirectionType'\r\nimport { message } from 'antd'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as hUtil from '../MassCellUtil'\r\n\r\nexport class MC_Update {\r\n  Update_SubCells = (data, dirType) => {\r\n    var q = this.Host;\r\n    q.SubCells = hUtil.Get_SubCells(q);\r\n\r\n    this.Update_TotalValueData(undefined, dirType)\r\n  }\r\n\r\n  Update_TotalValueData = (data, dirType) => {\r\n    hUtil.ReHandle_TotalValueData(this.Host);\r\n  }\r\n\r\n  Update_Unit = (data, dirType) => {\r\n    var host = this.Host;\r\n\r\n    this.Update_ValueCurrent(undefined, dirType);\r\n  }\r\n\r\n  Update_ValueCurrent = (data, dirType) => {\r\n    var host = this.Host\r\n    var unit = host.Unit\r\n\r\n\r\n    const setObj = () => {\r\n      host.CurrentTotalValueItem =\r\n        genUtil.SingleFilter(host.TotalValueData,\r\n          (x) => x.Unit === unit)\r\n    }\r\n\r\n    if (host.TotalValueData) {\r\n      setObj()\r\n    } else {\r\n      genUtil.Add_2(\r\n        host.OnGet_TotalValueData_Func,\r\n        setObj\r\n      )\r\n    }\r\n  }\r\n\r\n  Run = (sections, dirType = u_dt.none, isHostApplied = true) => {\r\n    if (!Array.isArray(sections)) {\r\n      sections = [sections]\r\n    }\r\n\r\n    if (isHostApplied) {\r\n      sections.forEach(x => {\r\n        this.RunItem(x, dirType)\r\n      })\r\n    }\r\n\r\n    switch (dirType) {\r\n      case u_dt.none:\r\n        break;\r\n      case u_dt.lower:\r\n        this.SubItems.forEach(x => {\r\n          x.Update.Run(sections, dirType)\r\n        })\r\n        break;\r\n      case u_dt.upper:\r\n        this.SupItem?.Update.Run(sections, dirType)\r\n        break;\r\n      case u_dt.both:\r\n        // Update Sub trước sau đó đến Sub\r\n        this.SubItems.forEach(x => {\r\n          x.Update.Run(sections, u_dt.lower)\r\n        })\r\n        this.SupItem?.Update.Run(sections, u_dt.upper)\r\n        break;\r\n    }\r\n  }\r\n\r\n  RunItem = (secData, dirType) => {\r\n    var section = typeof secData === 'string' ?\r\n      secData : secData.Section\r\n    var data = secData.Data\r\n\r\n    switch (section) {\r\n      case sn.subcells:\r\n        this.Update_SubCells(data, dirType);\r\n        break;\r\n      case sn.valuelist:\r\n        this.Update_TotalValueData(data, dirType);\r\n        break;\r\n      case sn.unit:\r\n        this.Update_Unit(data, dirType);\r\n        break;\r\n      case sn.valuecurrent:\r\n        this.Update_ValueCurrent(data, dirType);\r\n        break;\r\n    }\r\n  }\r\n}","import Column from \"antd/lib/table/Column\";\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\nimport MassCell from \"./MassCell\"\r\nimport * as mif from '../../field/MassItemField'\r\nimport * as filterUtil from '../../../filter/EntFilterUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { MI_ValueItem } from \"../../item/value/MI_ValueItem\";\r\nimport * as m_ut from '../../unit/MassUnitType'\r\nimport { MC_Update } from \"./update/MC_Update\"\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (col, row, dict) => {\r\n  var qI = genUtil.SingleFilter(row.Cells, (x) => x.Column === col)\r\n  col.Cells.push(qI)\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetIsHaveVCS_Item = (q) => {\r\n  return q.Dict.ColumnField === mif.Phase\r\n    && pmData().MassResultComp.Phases.length === 2\r\n    && q.ColumnIndex === 1;\r\n}\r\n\r\nexport const GetValueColor = (q) => {\r\n  if (q.IsHaveVCS_Item && q.VCS_Item) {\r\n    return '#FFFFFF';\r\n  } else {\r\n    return '#1890ff';\r\n  }\r\n}\r\n\r\nexport const GetTDBgColor = (q) => {\r\n  if (q.IsHaveVCS_Item && q.VCS_Item) {\r\n    return q.VCS_Item.Color;\r\n  } else {\r\n    return '#FFFFFF';\r\n  }\r\n}\r\n\r\n// Liên quan tới việc lấy TotalValue\r\nexport const Handle_VCS_Item = (q) => {\r\n  var list = pmData().VersionCompareSetting.Items;\r\n\r\n  var cells = q.Row.Cells;\r\n  var compareIndex = cells.findIndex(x => x.ColumnIndex === 0);\r\n  if (compareIndex === -1) {\r\n    q.VCS_Item = undefined;\r\n    return\r\n  }\r\n  var compareItem = cells[compareIndex];\r\n\r\n  const getItem = () => {\r\n    var ratio = q.TotalValue / compareItem.TotalValue;\r\n    var index = list\r\n      .findIndex(x => filterUtil.IsValid(x.Filter, ratio));\r\n    return index !== -1 ? list[index] : undefined;\r\n  }\r\n\r\n  if (compareItem.TotalValue !== undefined) {\r\n    q.VCS_Item = getItem();\r\n  } else {\r\n    genUtil.Add(compareItem.OnGet_TotalValue_Func_Dict, () =>\r\n      q.VCS_Item = getItem())\r\n  }\r\n}\r\n\r\nexport const GetMassType = (q) => {\r\n  var massType = undefined\r\n  if (q.SubCells) {\r\n    var isPending = true;\r\n    q.SubCells.forEach(x => {\r\n      if (isPending && x.MassType) {\r\n        massType = x.MassType;\r\n        isPending = false;\r\n      }\r\n    })\r\n  } else {\r\n    if (q.Items && q.Items.length > 0) {\r\n      massType = q.Items[0].MassType;\r\n    }\r\n  }\r\n  return massType;\r\n}\r\n\r\nexport const Handle_TLS_LevelGroups = (q) => {\r\n  if (q.IsGet_TLS_LevelGroups) return undefined;\r\n  q.IsGet_TLS_LevelGroups = true;\r\n\r\n  var list = [];\r\n  var handledCount = 0;\r\n  var count = q.SubCells ?\r\n    q.SubCells.length : q.Items.length;\r\n\r\n  const checkadd_Val = (val, list) => {\r\n    if (list.findIndex(x => x.id === val.id) === -1) {\r\n      list.push(val);\r\n    }\r\n  }\r\n\r\n  const handle_Val = (val) => {\r\n    handledCount++;\r\n    if (val) {\r\n      if (Array.isArray(val)) {\r\n        val.forEach(x => checkadd_Val(x, list));\r\n      } else {\r\n        checkadd_Val(val, list)\r\n      }\r\n    }\r\n    if (handledCount === count) {\r\n      q.TLS_LevelGroups = list;\r\n    }\r\n  }\r\n\r\n  if (q.SubCells) {\r\n    // Tồn tại sub cells\r\n    q.SubCells.forEach(x => {\r\n      if (x.TLS_LevelGroups) {\r\n        handle_Val(x.TLS_LevelGroups);\r\n      } else {\r\n        genUtil.Add(x.OnGet_TLS_LevelGroups_Func_Dict,\r\n          () => handle_Val(x.TLS_LevelGroup));\r\n      }\r\n    })\r\n  } else {\r\n    // Không có sub cells\r\n    q.Items.forEach(x => {\r\n      var targetObj = x;\r\n\r\n      // Kiểm tra value theo Phase hay theo Property khác (Project ...)\r\n      var table = q.Dict;\r\n      var colField = table.ColumnField;\r\n      if (colField === mif.Phase) {\r\n        // Khối lượng theo Phase\r\n        targetObj = x.GetPhaseItem(q.Column.Name);\r\n      } else {\r\n        // Khối lượng theo các thuộc tính khác\r\n      }\r\n\r\n      if (targetObj.TLS_LevelGroup || targetObj.Get_TLS_LevelGroup) {\r\n        handle_Val(targetObj.TLS_LevelGroup);\r\n      } else {\r\n        genUtil.Add(targetObj.OnGet_TLS_LevelGroup_Func_Dict,\r\n          () => handle_Val(targetObj.TLS_LevelGroup));\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n// Unit\r\n// TotalValue\r\nexport const ReHandle_TotalValueData = (q) => {\r\n  q.IsGet_TotalValueData = false;\r\n  Handle_TotalValueData(q);\r\n}\r\n\r\nexport const Handle_TotalValueData = (q) => {\r\n  if (q.IsGet_TotalValueData) return undefined;\r\n  q.IsGet_TotalValueData = true;\r\n\r\n  var totalVal_Data = m_ut.GetList().map(x => {\r\n    var obj = new MI_ValueItem();\r\n    obj.Unit = x;\r\n    return obj;\r\n  })\r\n\r\n  var handledCount = 0;\r\n  var list = q.SubCells ? q.SubCells : q.Items\r\n  var count = list.length\r\n\r\n  const handle_Val = (valData, item) => {\r\n    handledCount++;\r\n\r\n    var deleteIds = []\r\n    totalVal_Data.forEach((x, i) => {\r\n      var unit = x.Unit;\r\n      var item = genUtil.SingleFilter(valData,\r\n        (a) => a.Unit === unit);\r\n\r\n      if (item === undefined) {\r\n        deleteIds.push(i);\r\n      } else {\r\n        x.Value += item.Value;\r\n      }\r\n    })\r\n\r\n    deleteIds.forEach((x, i) => {\r\n      totalVal_Data.splice(x - i, 1);\r\n    })\r\n\r\n    if (handledCount === count) {\r\n      q.TotalValueData = totalVal_Data;\r\n    }\r\n  }\r\n\r\n  if (q.SubCells) {\r\n    // Tồn tại sub cells\r\n    q.SubCells.forEach(x => {\r\n      if (x.TotalValueData) {\r\n        handle_Val(x.TotalValueData, x)\r\n      } else {\r\n        genUtil.Add_2(x.OnGet_TotalValueData_Func,\r\n          () => {\r\n            handle_Val(x.TotalValueData, x)\r\n          });\r\n      }\r\n    })\r\n  } else {\r\n    // Không có sub cells\r\n    q.Items.forEach(x => {\r\n      var targetObj = x.ValueDict;\r\n\r\n      // Kiểm tra value theo Phase hay theo Property khác (Project ...)\r\n      var table = q.Dict;\r\n      var colField = table.ColumnField;\r\n      if (colField === mif.Phase) {\r\n        // Khối lượng theo Phase\r\n        targetObj = x.GetPhaseItem(q.Column.Name);\r\n      } else {\r\n        // Khối lượng theo các thuộc tính khác\r\n      }\r\n\r\n      if (targetObj.FullData !== undefined) {\r\n        handle_Val(targetObj.FullData, x)\r\n      } else {\r\n        genUtil.Add_2(targetObj.OnGet_FullData_Func_Dict,\r\n          () => {\r\n            handle_Val(targetObj.FullData, x)\r\n          });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const Set_TotalValueData = (q, v) => {\r\n  q.Row.AddHandleTotalData_Cell(q);\r\n}\r\n\r\nexport const Handle_CurrentTotalValueItem = (q) => {\r\n  var unit = q.Unit;\r\n  if (!unit) return;\r\n\r\n  const setObj = () => {\r\n    q.CurrentTotalValueItem =\r\n      genUtil.SingleFilter(q.TotalValueData,\r\n        (x) => x.Unit === unit)\r\n  }\r\n\r\n  if (q.TotalValueData) {\r\n    setObj()\r\n  } else {\r\n    genUtil.Add_2(\r\n      q.OnGet_TotalValueData_Func,\r\n      setObj\r\n    )\r\n  }\r\n}\r\n\r\n// Warning\r\nexport const GetIsHaveWarning = (q) => {\r\n  if (q.Row.Field !== mif.level) {\r\n    return false\r\n  } else {\r\n    const getWarningFunc = (levelGroups) => {\r\n      return levelGroups.length !== 0;\r\n    }\r\n\r\n    if (q.TLS_LevelGroups) {\r\n      return getWarningFunc(q.TLS_LevelGroups);\r\n    } else {\r\n      genUtil.Add(q.OnGet_TLS_LevelGroups_Func_Dict,\r\n        () => {\r\n          q.IsHaveWarning = getWarningFunc(q.TLS_LevelGroups)\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nexport const Handle_TLS_LevelGroup_Descriptions = (q) => {\r\n  if (q.IsGet_TLS_LevelGroup_Descriptions) return undefined;\r\n  q.IsGet_TLS_LevelGroup_Descriptions = true;\r\n\r\n  const handle_Val = (val, list, handledCount, count) => {\r\n    handledCount++;\r\n    if (list.indexOf(val) === -1) {\r\n      list.push(val);\r\n    }\r\n    if (handledCount === count) {\r\n      q.TLS_LevelGroup_Descriptions = list;\r\n    }\r\n  }\r\n\r\n  const getDescFunc = (levelGroups) => {\r\n    var list = [];\r\n    var handledCount = 0;\r\n    var count = levelGroups.length\r\n\r\n    levelGroups.forEach(x => {\r\n      if (x.FullDescription) {\r\n        handle_Val(x.FullDescription, list, handledCount, count);\r\n      } else {\r\n        // Để false, xử lý nhiều Funcs hơn, nhưng thực thi thành công :v\r\n        genUtil.Add(x.OnGetLevelStorageList_Func_Dict, () => {\r\n          handle_Val(x.FullDescription, list, handledCount, count)\r\n        }, false)\r\n      }\r\n    })\r\n  }\r\n\r\n  if (q.TLS_LevelGroups) {\r\n    getDescFunc(q.TLS_LevelGroups)\r\n  } else {\r\n    q.OnGet_TLS_LevelGroups_Funcs.push(() => {\r\n      getDescFunc(q.TLS_LevelGroups)\r\n    })\r\n  }\r\n}\r\n\r\n// Sup - Sub\r\nexport const Get_SupItem = (q) => {\r\n  if (q.IsGet_SupItem) return undefined;\r\n  q.IsGet_SupItem = true;\r\n\r\n  var supRow = q.Row.SupItem;\r\n  if (!supRow) return undefined;\r\n\r\n  var list = supRow.Cells;\r\n  var index = list.findIndex(x => x.Column === q.Column);\r\n  return index !== -1 ? list[index] : undefined\r\n}\r\n\r\nexport const Get_SubCells = (q) => {\r\n  var subRows = q.Row.SubItems;\r\n  if (subRows && subRows.length !== 0) {\r\n    var col = q.Column;\r\n    var list = subRows.map((x, i, a) => {\r\n      var obj = x.GetCellByColumn(col)\r\n      return obj;\r\n    }).filter(x => x !== undefined);\r\n\r\n    return list;\r\n  }\r\n}\r\n\r\n// ValueString\r\nexport const Get_ValueString = (q) => {\r\n  if (!q.CanHave_TotalValue) return '';\r\n\r\n  var totalValue = q.TotalValue;\r\n  if (!totalValue) return '';\r\n\r\n  var roundingFactor = 2;\r\n  var unit = q.Unit;\r\n  switch (unit) {\r\n    case 'each':\r\n      unit = 'cái';\r\n      roundingFactor = 0;\r\n      break;\r\n    default:\r\n      roundingFactor = 2;\r\n      break;\r\n  }\r\n\r\n  var formatValue = totalValue.toLocaleString('en-US', { maximumFractionDigits: roundingFactor });\r\n  return `${formatValue} ${unit}`;\r\n}\r\n\r\n// Update\r\nexport const GetUpdate = (q) => {\r\n  var qI = new MC_Update();\r\n  qI.Host = q;\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../../text/TextVMUtil'\r\nimport * as api from '../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as mif from '../../field/MassItemField'\r\nimport { PMData } from '../../../../single/model/PMData';\r\nimport * as util from './MassCellUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassCell {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueColor: observable,\r\n      tdBgColor: observable,\r\n      isHaveWarning: observable,\r\n      tls_LevelGroup_Descriptions: observable,\r\n      vcs_Item: observable,\r\n      CurrentTotalValueItem: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Table() {\r\n    return this.Dict\r\n  }\r\n\r\n  get ColumnIndex() {\r\n    return this.Column.Index;\r\n  }\r\n\r\n  items = []\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  get Unit(){\r\n    return this.Row.Unit\r\n  }\r\n\r\n  // TotalValue\r\n  OnGet_TotalValueData_Func = []\r\n\r\n  totalValueData = undefined\r\n  get TotalValueData() {\r\n    if (!this.totalValueData === undefined) {\r\n      util.Handle_TotalValueData(this)\r\n    } return this.totalValueData\r\n  } set TotalValueData(v) {\r\n    this.totalValueData = v;\r\n\r\n    util.Set_TotalValueData(this, v)\r\n\r\n    genUtil.Handle(this.OnGet_TotalValueData_Func,\r\n      (v) => this.OnGet_TotalValueData_Func = v);\r\n  }\r\n\r\n  CurrentTotalValueItem = undefined\r\n\r\n  contentVM\r\n  get ContentVM() {\r\n    if (!this.contentVM) {\r\n      this.contentVM = textVMUtil.get(this.ValueString);\r\n    }\r\n    return this.contentVM;\r\n  }\r\n\r\n  get ValueString() {\r\n    return util.Get_ValueString(this);\r\n  }\r\n\r\n  // Sup - Sub\r\n  supItem\r\n  get SupItem() {\r\n    if (!this.supItem) {\r\n      this.supItem = util.Get_SupItem(this);\r\n    }\r\n    return this.supItem;\r\n  } set SupItem(v) {\r\n    this.supItem = v;\r\n  }\r\n\r\n  subCells\r\n  get SubCells() {\r\n    if (!this.subCells) {\r\n      this.subCells = util.Get_SubCells(this);\r\n    }\r\n    return this.subCells;\r\n  }\r\n  set SubCells(v) {\r\n    this.subCells = v;\r\n  }\r\n\r\n  get MassType() {\r\n    return util.GetMassType(this);\r\n  }\r\n\r\n  AsString = () => {\r\n    console.log(`${this.Column.Name} - ${this.Row.Name} - ${this.TotalValue}`)\r\n  }\r\n\r\n  // Update\r\n  update\r\n  get Update(){\r\n    if (!this.update){\r\n      this.update = util.GetUpdate(this)\r\n    } return this.update\r\n  }\r\n\r\n  ShowDetail = () => {\r\n    var isHash = true;\r\n    var url = `${process.env.PUBLIC_URL}${isHash ? '/#' : ''}/massdetail`;\r\n    var getUrl = (v) => `${url}/${v}`;\r\n    var openTabFunc = (v) =>\r\n      window.open(getUrl(v), \"_blank\");\r\n\r\n    if (!this.viewDetailId) {\r\n      this.GetViewDetailId(data => {\r\n        var _id = this.viewDetailId = data._id;\r\n        openTabFunc(_id);\r\n      })\r\n    } else {\r\n      openTabFunc(this.viewDetailId);\r\n    }\r\n  }\r\n\r\n  viewDetailId\r\n\r\n  get AllItems() {\r\n    if (this.SubCells) {\r\n      return this.SubCells.map(x => x.Items).reduce((a, b) => a.concat(b), []);\r\n    }\r\n    return this.Items;\r\n  }\r\n\r\n  isHaveVCS_Item\r\n  get IsHaveVCS_Item() {\r\n    if (!this.isHaveVCS_Item) {\r\n      this.isHaveVCS_Item = util.GetIsHaveVCS_Item(this);\r\n    }\r\n    return this.isHaveVCS_Item;\r\n  }\r\n  set IsHaveVCS_Item(v) {\r\n    this.isHaveVCS_Item = v;\r\n  }\r\n\r\n  vcs_Item = undefined\r\n  get VCS_Item() {\r\n    return this.vcs_Item;\r\n  }\r\n  set VCS_Item(v) {\r\n    this.vcs_Item = v;\r\n\r\n    this.ValueColor = util.GetValueColor(this);\r\n    this.TDBgColor = util.GetTDBgColor(this)\r\n  }\r\n\r\n  valueColor = '#1890ff'\r\n  get ValueColor() {\r\n    return this.valueColor;\r\n  }\r\n  set ValueColor(v) {\r\n    this.valueColor = v\r\n  }\r\n\r\n  tdBgColor = undefined\r\n  get TDBgColor() {\r\n    return this.tdBgColor;\r\n  }\r\n  set TDBgColor(v) {\r\n    this.tdBgColor = v;\r\n  }\r\n\r\n  get AStyle() {\r\n    return {\r\n      color: this.ValueColor,\r\n      fontWeight: 'bold'\r\n    }\r\n  }\r\n\r\n  get TDStyle() {\r\n    return {\r\n      backgroundColor: this.TDBgColor\r\n    }\r\n  }\r\n\r\n  ApiData = () => {\r\n    var phaseId\r\n    if (this.Table.ColumnField === mif.Phase) {\r\n      phaseId = this.Column.Data._id;\r\n    }\r\n\r\n    var massIds = this.AllItems.map(x => x._id);\r\n    return {\r\n      massType: this.MassType,\r\n      massIds,\r\n      phaseId\r\n    };\r\n  }\r\n\r\n  GetViewDetailId = (handle) => {\r\n    var apiData = this.ApiData();\r\n    var url = \"https://api.bimdev.vn/api/hbdv/updatemass\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => handle(data))\r\n  }\r\n\r\n  OnGet_TLS_LevelGroups_Func_Dict = []\r\n  set Get_TLS_LevelGroups(v) {\r\n    this.OnGet_TLS_LevelGroups_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  tls_LevelGroups\r\n  get TLS_LevelGroups() {\r\n    if (!this.tls_LevelGroups) {\r\n      util.Handle_TLS_LevelGroups(this);\r\n    }\r\n    return this.tls_LevelGroups;\r\n  } set TLS_LevelGroups(v) {\r\n    this.tls_LevelGroups = v;\r\n    this.Get_TLS_LevelGroups = true;\r\n  }\r\n\r\n  isHaveWarning = undefined\r\n  get IsHaveWarning() {\r\n    if (this.isHaveWarning === undefined) {\r\n      this.isHaveWarning = util.GetIsHaveWarning(this);\r\n    }\r\n    return this.isHaveWarning;\r\n  } set IsHaveWarning(v) {\r\n    this.isHaveWarning = v;\r\n  }\r\n\r\n  tls_LevelGroup_Descriptions = undefined\r\n  get TLS_LevelGroup_Descriptions() {\r\n    if (!this.tls_LevelGroup_Descriptions) {\r\n      util.Handle_TLS_LevelGroup_Descriptions(this);\r\n    }\r\n    return this.tls_LevelGroup_Descriptions;\r\n  } set TLS_LevelGroup_Descriptions(v) {\r\n    this.tls_LevelGroup_Descriptions = v;\r\n  }\r\n}","export const text = 'text'\r\nexport const select = 'select'","import { SelectVM } from \"../../../../../../select/SelectVM\";\r\nimport * as textUtil from \"../../../../../../text/TextVMUtil\";\r\nimport * as genUtil from '../../../../../../../util/generalUtil';\r\nimport * as rs from './MR_Unit_RenderState'\r\nimport * as rUtil from '../base/MassRowUtil'\r\nimport * as u_sn from '../update/MRU_SectionName'\r\nimport * as u_dt from '../../../../update/Update_DirectionType'\r\nimport * as uc_sn from '../../cell/update/MCU_SectionName'\r\nimport * as tct from '../../command/CommandType'\r\n\r\n// Instance\r\n\r\n\r\n// Property\r\nexport const GetUpdate_DirectionType = (q) => {\r\n  return q.Dict.SubItems.length === 0 ? u_dt.upper\r\n    : u_dt.none\r\n}\r\n\r\nexport const GetUnit_SelectVM = (q) => {\r\n  var qI = new SelectVM();\r\n  qI.Placeholder = '...'\r\n\r\n  const setObj = () => {\r\n    var data = q.Units\r\n    qI.Items = data;\r\n\r\n    // Chỉ làm việc này khi khởi tạo SelectVM\r\n    if (!q.Is_Unit_Select_Created) {\r\n      var host = q.Dict;\r\n      q.Is_Unit_Select_Created = true;\r\n\r\n      if (q.Update_DirectionType === u_dt.upper) {\r\n        q.SetUnit_FromHost(rUtil.Get_DefaultUnit(host));\r\n      }\r\n    }\r\n  }\r\n\r\n  if (q.Units) {\r\n    setObj()\r\n  }\r\n\r\n  // Khi cập nhập Units, tự động cập nhập List ở trên\r\n  genUtil.Add_2(\r\n    q.OnSet_Unit_Func,\r\n    setObj, false)\r\n\r\n  qI.OnSelectedItemChanged = (v) => {\r\n    if (!q.IsUndo) {\r\n      q.IsUndo = true;\r\n    } else {\r\n      var table = q.Table\r\n      SetUndo(q, (undo) => {\r\n      table.CommandDict.Add(\r\n        {\r\n          Key: tct.changeunitrow,\r\n          Undo: undo\r\n        })\r\n      });\r\n    }\r\n    q.CurrentUnit = v;\r\n  }\r\n  qI.OnSetOpen = (v) => {\r\n    if (!v) {\r\n      q.RenderState = rs.text\r\n    }\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetUnit_RenderVM = (q) => {\r\n  var qI = textUtil.get(q.CurrentUnit)\r\n  return qI;\r\n}\r\n\r\n// Units\r\nexport const ReHandle_Units = (q) => {\r\n  q.IsGet_Units = false\r\n  Handle_Units(q);\r\n}\r\n\r\nexport const Handle_Units = (q) => {\r\n  if (q.IsGet_Units) return undefined;\r\n  q.IsGet_Units = true;\r\n\r\n  var host = q.Dict;\r\n\r\n  const setObj = () => {\r\n    var list = host.Cells.map(x => x.TotalValueData);\r\n    var units\r\n\r\n    list.forEach((x, i) => {\r\n      if (i === 0) {\r\n        units = x.map(y => y.Unit);\r\n      } else {\r\n        var deleteIndexs = []\r\n        units.forEach((y, j) => {\r\n          var item = genUtil.SingleFilter(x, (a) => y === a.Unit);\r\n          if (!item) {\r\n            deleteIndexs.push(j);\r\n          }\r\n        })\r\n\r\n        deleteIndexs.forEach((y, j) => {\r\n          units.splice(y - j, 1);\r\n        })\r\n      }\r\n    })\r\n\r\n    q.Units = units;\r\n  }\r\n\r\n  if (host.Is_HandleTotalData_Cells) {\r\n    setObj()\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.On_HandleTotalData_Cells_Func,\r\n      setObj\r\n    )\r\n  }\r\n}\r\n\r\nexport const Set_CurrentUnit = (q, v) => {\r\n  var dirType = q.Update_DirectionType\r\n  var qI = q.Dict;\r\n\r\n  // Update Data hiện tại\r\n  qI.Update.Run({\r\n    Section: u_sn.celldata,\r\n    Data: { Sections: uc_sn.unit }\r\n  }, u_dt.none)\r\n\r\n  if (dirType !== u_dt.none) {\r\n    qI.Update.Run(u_sn.unit, dirType, false)\r\n  }\r\n\r\n  q.Update_DirectionType = u_dt.both\r\n}\r\n\r\n// Method\r\nexport const SetUndo = (q, handleUndo) => {\r\n  var oldUnit = q.CurrentUnit;\r\n\r\n  var undo\r\n  if (oldUnit) {\r\n    undo = () => {\r\n      q.SetUnit_FromHost(oldUnit);\r\n    }\r\n  } else {\r\n    // Lưu các ô có Unit bên trong\r\n    var dict = []\r\n    var row = q.Dict;\r\n    const getRows = (r) => {\r\n      var unit = r.UnitData.CurrentUnit;\r\n      if (r !== row && r.UnitData.CurrentUnit) {\r\n        dict.push({\r\n          Row: r,\r\n          Unit: unit,\r\n          DirectionType: u_dt.lower\r\n        })\r\n      } else {\r\n        dict.push({\r\n          Row: r,\r\n          Unit: undefined,\r\n          DirectionType: r === row ? u_dt.upper : u_dt.none\r\n        })\r\n        r.SubItems.forEach(x => getRows(x));\r\n      }\r\n    }\r\n\r\n    getRows(row);\r\n\r\n    undo = () => {\r\n      dict.forEach(x => {\r\n        x.Row.Update.Run({\r\n          Section: u_sn.unit,\r\n          Data: { Unit: x.Unit }\r\n        }, x.DirectionType)\r\n      })\r\n    }\r\n  }\r\n\r\n  handleUndo(undo);\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MR_UnitUtil'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as rs from './MR_Unit_RenderState'\r\nimport SelectView from '../../../../../../select/SelectView';\r\nimport * as u_dt from '../../../../update/Update_DirectionType'\r\n\r\nexport class MR_Unit {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      units: observable,\r\n      RenderState: observable\r\n    })\r\n  }\r\n\r\n  // Update\r\n  update_DirectionType\r\n  get Update_DirectionType() {\r\n    if (!this.update_DirectionType) {\r\n      this.update_DirectionType =\r\n        util.GetUpdate_DirectionType(this)\r\n    } return this.update_DirectionType\r\n  } set Update_DirectionType(v) {\r\n    this.update_DirectionType = v\r\n  }\r\n\r\n  // Unit\r\n  OnSet_Unit_Func = []\r\n\r\n  units = undefined\r\n  get Units() {\r\n    if (!this.units) {\r\n      util.Handle_Units(this)\r\n    } return this.units\r\n  } set Units(v) {\r\n    this.units = v;\r\n\r\n    genUtil.Handle(this.OnSet_Unit_Func,\r\n      (v) => this.OnSet_Unit_Func = v)\r\n  }\r\n\r\n  Reset_Units = () => {\r\n    util.ReHandle_Units(this);\r\n  }\r\n\r\n  currentUnit\r\n  get CurrentUnit() {\r\n    return this.currentUnit\r\n  } set CurrentUnit(v) {\r\n    if (this.currentUnit === v) {\r\n      this.Update_DirectionType = u_dt.none\r\n      // return\r\n    }\r\n\r\n    this.currentUnit = v\r\n    this.Unit_RenderVM.Content = v\r\n    util.Set_CurrentUnit(this, v);\r\n  }\r\n\r\n  SetUnit_FromHost = (v) => {\r\n    const setObj = () => {\r\n      this.IsUndo = false;\r\n      if (!v || this.Units.includes(v)) {\r\n        this.Unit_SelectVM.SetValue(v);\r\n      }\r\n    }\r\n\r\n    if (this.Units) {\r\n      setObj()\r\n    } else {\r\n      genUtil.Add_2(\r\n        this.OnSet_Unit_Func,\r\n        setObj\r\n      )\r\n    }\r\n  }\r\n\r\n  Is_Unit_Select_Created\r\n\r\n  unit_SelectVM\r\n  get Unit_SelectVM() {\r\n    if (!this.unit_SelectVM) {\r\n      this.unit_SelectVM = util.GetUnit_SelectVM(this)\r\n    } return this.unit_SelectVM;\r\n  }\r\n\r\n  unit_RenderVM\r\n  get Unit_RenderVM() {\r\n    if (!this.unit_RenderVM) {\r\n      this.unit_RenderVM = util.GetUnit_RenderVM(this)\r\n    } return this.unit_RenderVM\r\n  }\r\n\r\n  RenderState = rs.text\r\n\r\n  OnMouseEnter = () => {\r\n    this.RenderState = rs.select\r\n  }\r\n\r\n  OnMouseLeave = () => {\r\n    if (this.Unit_SelectVM.Open) {\r\n      return\r\n    }\r\n    this.RenderState = rs.text\r\n  }\r\n\r\n  get MainView() {\r\n    var obj = this.Unit_SelectVM;\r\n\r\n    switch (this.RenderState) {\r\n      case rs.select:\r\n        return <SelectView className='massrow__unit__select'\r\n          store={this.Unit_SelectVM} />\r\n      case rs.text:\r\n        return this.Unit_RenderVM.Content\r\n    }\r\n  }\r\n\r\n  get Update(){\r\n    return this.Dict.Update\r\n  }\r\n\r\n  get Table(){\r\n    return this.Dict.Table\r\n  }\r\n\r\n  IsUndo = true;\r\n\r\n  SetUndo = (handleUndo) => {\r\n    util.SetUndo(this, handleUndo)\r\n  }\r\n}","import * as u_dt from '../../../../update/Update_DirectionType'\r\nimport * as u_sn from '../update/MRU_SectionName'\r\nimport * as uc_sn from '../../cell/update/MCU_SectionName'\r\nimport * as dt from './MR_DeleteType'\r\nimport * as tct from '../../command/CommandType'\r\n\r\nexport class MR_Delete {\r\n  Run = (data, handleUndo) => {\r\n    // undo\r\n    undoFuncs = undefined\r\n    if (handleUndo) {\r\n      var undoFuncs = []\r\n      handleUndo(() => {\r\n        undoFuncs.forEach(x => x())\r\n      });\r\n    }\r\n\r\n    var deleteType = data.DeleteType\r\n    var q = this.Host\r\n    var table = q.Table\r\n\r\n    var supItem = q.SupItem;\r\n    var list = q.CurrentList;\r\n\r\n    if (deleteType === dt.removedata) {\r\n      if (q.IsCreatedByUser) {\r\n        q.MassGroupItem.GetItem(q.FullValue).Delete(\r\n          // undo\r\n          (undo) => {\r\n            if (handleUndo) {\r\n              undoFuncs.push(undo)\r\n            }\r\n          });\r\n      } else {\r\n        q.MassGroupItem.AddNotIncludeValue(q.FullValue,\r\n          // undo\r\n          (undo) => {\r\n            if (handleUndo) {\r\n              undoFuncs.push(undo)\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    if (supItem && list.length === 1) {\r\n      data.IsContinue = true\r\n    } else {\r\n      data.IsContinue = false\r\n\r\n      var index = q.Index\r\n\r\n      // Undo\r\n      if (handleUndo) {\r\n        undoFuncs.push(() => {\r\n          list.splice(index, 0, q)\r\n        });\r\n      }\r\n      // Do\r\n      list.splice(index, 1);\r\n\r\n      if (supItem) {\r\n        // Undo\r\n        if (handleUndo) {\r\n          undoFuncs.push(() => {\r\n            supItem.Update.Run(\r\n              [\r\n                { Section: u_sn.celldata, Data: { Sections: uc_sn.subcells } },\r\n                u_sn.unitlist\r\n              ],\r\n              u_dt.both\r\n            )\r\n          })\r\n\r\n          // Thực hiện undo\r\n          supItem.UnitData.SetUndo((undo) => {\r\n              undoFuncs.push(undo);\r\n            });\r\n        }\r\n        // Do\r\n        supItem.Update.Run(\r\n          [\r\n            { Section: u_sn.celldata, Data: { Sections: uc_sn.subcells } },\r\n            u_sn.unitlist, u_sn.unit],\r\n          u_dt.upper\r\n        )\r\n      }\r\n    }\r\n  }\r\n}","import * as u_dt from '../../../../update/Update_DirectionType'\r\nimport * as sn from './MRU_SectionName'\r\nimport * as uc_sn from '../../cell/update/MCU_SectionName'\r\nimport * as hUtil from '../base/MassRowUtil'\r\nimport { message } from 'antd'\r\n\r\nexport class MR_Update {\r\n  get UnitData() {\r\n    return this.Host.UnitData\r\n  }\r\n\r\n  get Cells() {\r\n    return this.Host.Cells\r\n  }\r\n\r\n  get SupItem() {\r\n    return this.Host.SupItem\r\n  }\r\n\r\n  get SubItems() {\r\n    return this.Host.SubItems\r\n  }\r\n\r\n  Update_Units = (data, dirType) => {\r\n    this.UnitData.Reset_Units();\r\n  }\r\n\r\n  // *Set vào phần UnitData\r\n  Update_Unit = (data, dirType) => {\r\n    var unit\r\n    if (data) {\r\n      //unit = data.Unit ? data.Unit : ut.each\r\n      unit = data.Unit;\r\n    } else {\r\n      switch (dirType) {\r\n        case u_dt.upper:\r\n          unit = hUtil.Get_DefaultUnit(this.Host)\r\n          break;\r\n        case u_dt.lower:\r\n          unit = this.Host.SupItem.Unit\r\n          break;\r\n      }\r\n    }\r\n\r\n    var ud = this.UnitData\r\n    ud.Update_DirectionType = u_dt.none\r\n    ud.SetUnit_FromHost(unit);\r\n  }\r\n\r\n  Update_CellData = (data, dirType) => {\r\n    if (data && data.Unit_SetType) {\r\n      this.Host.Unit_SetType = data.Unit_SetType\r\n    }\r\n\r\n    if (data && data.Sections) {\r\n      this.Cells.forEach(x => x.Update.Run(data.Sections));\r\n    } else {\r\n      throw 'invalid'\r\n    }\r\n  }\r\n\r\n  Update_Delete = (data, dirType, handleUndo) => {\r\n    this.Host.DeleteData.Run(data, handleUndo);\r\n    this.IsContinue = data.IsContinue;\r\n  }\r\n\r\n  Update_AddSub = (data, dirType, handleUndo) => {\r\n    var q = this.Host;\r\n    var list = q.SubItems;\r\n\r\n    var undoFuncs\r\n    if (handleUndo) {\r\n      undoFuncs = []\r\n      handleUndo(() => {\r\n        undoFuncs.forEach(x => x())\r\n      })\r\n\r\n      undoFuncs.push(() => {\r\n        list.splice(list.length - 1, 1);\r\n\r\n        q.Update.Run(\r\n          [{ Section: sn.celldata, Data: { Sections: uc_sn.subcells } },\r\n          sn.unitlist\r\n          ],\r\n          u_dt.upper\r\n        )\r\n      })\r\n\r\n      q.UnitData.SetUndo((undo) => {\r\n        undoFuncs.push(undo)\r\n      })\r\n    }\r\n\r\n    list.push(data.Item);\r\n\r\n    q.Update.Run(\r\n      [{ Section: sn.celldata, Data: { Sections: uc_sn.subcells } },\r\n      sn.unitlist, sn.unit\r\n      ],\r\n      u_dt.upper\r\n    )\r\n\r\n    this.IsContinue = false;\r\n  }\r\n\r\n  Run = (sections, dirType, isHostApplied = true, handleUndo) => {\r\n    if (!dirType) {\r\n      message.error(\"dirType is undefined!\");\r\n      return\r\n    }\r\n\r\n    // Undo\r\n    var undoFuncs = []\r\n    var undo = () => {\r\n      undoFuncs.forEach(x => x());\r\n    }\r\n\r\n    if (!Array.isArray(sections)) {\r\n      sections = [sections]\r\n    }\r\n\r\n    if (isHostApplied) {\r\n      sections.forEach(x => {\r\n        this.RunItem(x, dirType, (undo) => {\r\n          undoFuncs.push(undo)\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n\r\n    if (!this.IsContinue) {\r\n      this.IsContinue = true\r\n    }\r\n    else {\r\n      switch (dirType) {\r\n        case u_dt.none:\r\n          break;\r\n        case u_dt.lower:\r\n          this.SubItems.forEach(x => {\r\n            x.Update.Run(sections, dirType)\r\n          })\r\n          break;\r\n        case u_dt.upper:\r\n          this.SupItem?.Update.Run(sections, dirType)\r\n          break;\r\n        case u_dt.both:\r\n          // Update Sub trước sau đó đến Sub\r\n          this.SubItems.forEach(x => {\r\n            x.Update.Run(sections, u_dt.lower)\r\n          })\r\n          this.SupItem?.Update.Run(sections, u_dt.upper)\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (handleUndo) {\r\n      handleUndo(undo)\r\n    }\r\n  }\r\n\r\n  RunItem = (secData, dirType, handleUndo) => {\r\n    var section = typeof secData === 'string' ?\r\n      secData : secData.Section\r\n    var data = secData.Data\r\n\r\n    switch (section) {\r\n      case sn.unitlist:\r\n        this.Update_Units(data, dirType, handleUndo);\r\n        break;\r\n      case sn.unit:\r\n        this.Update_Unit(data, dirType, handleUndo);\r\n        break;\r\n      case sn.celldata:\r\n        this.Update_CellData(data, dirType, handleUndo);\r\n        break;\r\n      case sn._delete:\r\n        this.Update_Delete(data, dirType, handleUndo);\r\n        break;\r\n      case sn.addsub:\r\n        this.Update_AddSub(data, dirType, handleUndo);\r\n        break;\r\n    }\r\n  }\r\n\r\n  IsContinue = true\r\n}","import * as util from './SiteVMUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\n\r\n\r\nexport class SiteVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_Modal_Visible: observable,\r\n    })\r\n  }\r\n\r\n  GetValue = (field) => {\r\n    return this.ModelItem[field]\r\n  }\r\n  SetValue = (field, v) => {\r\n    this.ModelItem[field] = v;\r\n  }\r\n\r\n  inputVMs\r\n  get InputVMs() {\r\n    if (!this.inputVMs) {\r\n      this.inputVMs = util.GetInputVMs(this)\r\n    } return this.inputVMs;\r\n  }\r\n\r\n  Initial = () => {\r\n    util.Initial(this)\r\n  }\r\n\r\n  Run_SetValue = () => {\r\n    util.Run_SetValue(this)\r\n  }\r\n\r\n  OpenModal = () => {\r\n    this.Initial();\r\n    this.Is_Modal_Visible = true;\r\n    this.Is_Run_Valid = false;\r\n  }\r\n\r\n  ModalCancel = () => {\r\n    this.Is_Modal_Visible = false\r\n  }\r\n\r\n  ModalOK = () => {\r\n    this.Run_SetValue();\r\n\r\n    if (this.Is_OK_Valid) {\r\n      this.Is_Modal_Visible = false\r\n      this.Is_Run_Valid = true;\r\n\r\n      this.Run();\r\n    } else {\r\n      message.warn('Bạn phải điền đủ các trường thông tin!');\r\n    }\r\n  }\r\n\r\n  Run = () => {\r\n    if (this.Is_Run_Valid) {\r\n      this.ModelItem.Run();\r\n    }\r\n  }\r\n\r\n  // Database\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle);\r\n  }\r\n\r\n  // View\r\n  get InputView() {\r\n    return util.GetInputView(this)\r\n  }\r\n\r\n  Is_Modal_Visible = false\r\n\r\n  get ModalView() {\r\n    return util.GetModalView(this)\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport * as ts from '../text/TextState'\r\n\r\nclass InputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    var { value } = e.target;\r\n    this.state.Content = value;\r\n  }\r\n\r\n  OnKeyDown = (e) => {\r\n    var data = this.state;\r\n    if (data.OnKeyDown) {\r\n      data.OnKeyDown(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var { content, placeholder } = data;\r\n    var style = this.props.style\r\n    var className = this.props.className\r\n    var onFocus = this.props.onFocus ?\r\n      this.props.onFocus : data.OnFocus\r\n    var onBlur = this.props.onBlur ?\r\n      this.props.onBlur : data.OnBlur\r\n    var onPaste = this.props.onPaste ?\r\n      this.props.onPaste : data.OnPaste\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <Input ref={data.Ref} style={style} className={className}\r\n            value={content} onChange={this.onChange}\r\n            onKeyDown={this.OnKeyDown}\r\n            onFocus={onFocus} onBlur={onBlur}\r\n            onPaste={onPaste}\r\n            placeholder={placeholder} /> : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password ref={data.Ref} style={style} className={className}\r\n            value={content} onChange={this.onChange}\r\n            onFocus={onFocus} onBlur={onBlur}\r\n            onPaste={onPaste}\r\n            onKeyDown={this.OnKeyDown} /> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(InputView)","export const RemoveTime = (dateTime) => {\r\n  var year = dateTime.getFullYear()\r\n  var month = dateTime.getMonth()\r\n  var date = dateTime.getDate()\r\n\r\n  return new Date(year, month, date)\r\n}\r\n\r\nexport const ConvertToDate = (dateString, format) => {\r\n  if (!dateString) return undefined;\r\n\r\n  var refinedString\r\n  switch (format) {\r\n    case 'dd/MM/yyyy':\r\n      var q1 = dateString.split('/')\r\n      if (q1.length !== 3) {\r\n        return undefined;\r\n      }\r\n\r\n      if (!Is_DayString_Valid(q1[0])\r\n      || !Is_MonthString_Valid(q1[1])\r\n      || !Is_YearString_Valid(q1[2])){\r\n        return undefined\r\n      }\r\n      \r\n      refinedString = q1.reverse().join('-')\r\n      break;\r\n    default:\r\n      refinedString = dateString;\r\n      break;\r\n  }\r\n\r\n  return new Date(refinedString)\r\n}\r\n\r\nconst Is_DayString_Valid = (dayS) => {\r\n  if (dayS.length < 1 || dayS.length > 2) return false;\r\n  if (isNaN(dayS)) return false\r\n\r\n  var day = parseInt(dayS)\r\n  if (day < 1 || day > 31) return false;\r\n  return true;\r\n}\r\n\r\nconst Is_MonthString_Valid = (monthS) => {\r\n  if (monthS.length < 1 || monthS.length > 2) return false;\r\n  if (isNaN(monthS)) return false\r\n\r\n  var month = parseInt(monthS)\r\n  if (month < 1 || month > 12) return false;\r\n  return true;\r\n}\r\n\r\nconst Is_YearString_Valid = (yearS) => {\r\n  if (yearS.length !== 4) return false;\r\n  if (isNaN(yearS)) return false\r\n\r\n  return true;\r\n}\r\n\r\nexport const ConvertToString = (date, format) => {\r\n  if (!date) return undefined\r\n\r\n  var weekday = date.toLocaleDateString(\"en-US\", { weekday: 'short' })\r\n  var day = date.toLocaleDateString(\"en-US\", { day: 'numeric' })\r\n  var month = date.toLocaleDateString(\"en-US\", { month: '2-digit' })\r\n  var year = date.toLocaleDateString(\"en-US\", { year: 'numeric' })\r\n\r\n  switch(format){\r\n    case 'dd/MM/yyyy':\r\n    default:\r\n      return `${day}/${month}/${year}`;\r\n  }\r\n}","import * as dateUtil from '../../util/dateUtil'\r\n\r\n// Property\r\nexport const GetDate = (q) => {\r\n  return dateUtil.ConvertToDate(q.Content, 'dd/MM/yyyy')\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DatePickerUtil'\r\nimport * as dateUtil from '../../util/dateUtil'\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { Button } from \"antd\";\r\nimport './DatePicker.css'\r\n\r\nexport class DatePicker {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder: observable,\r\n      dateOnPicker: observable,\r\n      Is_Popover_Visible: observable\r\n    })\r\n  }\r\n\r\n  GetContentFunc\r\n\r\n  content = undefined\r\n  get Content() {\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    this.Date = util.GetDate(this)\r\n  }\r\n\r\n  date = undefined\r\n  get Date() {\r\n    if (!this.date) {\r\n      this.date = util.GetDate(this)\r\n    } return this.date\r\n  } set Date(v) {\r\n    this.date = v;\r\n    this.DateOnPicker = v;\r\n  }\r\n\r\n  dateOnPicker = undefined\r\n  get DateOnPicker() {\r\n    if (!this.dateOnPicker) {\r\n      this.dateOnPicker = this.Date\r\n    } return this.dateOnPicker\r\n  } set DateOnPicker(v) {\r\n    if (v) {\r\n      this.dateOnPicker = v\r\n    }\r\n  }\r\n\r\n  SetDate = (v) => {\r\n    this.Date = v;\r\n    this.content = dateUtil.ConvertToString(v, 'dd/MM/yyyy');\r\n  }\r\n\r\n  Set_DateOnPicker = (v) => {\r\n    this.HidePopover();\r\n    this.SetDate(v);\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  State = 'text'\r\n\r\n  get DatePickerView() {\r\n    return <div className='datepicker__popover__wrapper'>\r\n      <ReactDatePicker selected={this.DateOnPicker} inline\r\n        value={this.DateOnPicker}\r\n        // onChange={this.Set_DateOnPicker}\r\n        onSelect={this.Set_DateOnPicker}\r\n      />\r\n      <Button type='primary' size='small'\r\n        className='btn-danger' onClick={this.HidePopover}>x</Button>\r\n    </div>\r\n  }\r\n\r\n  Is_Popover_Visible = false\r\n\r\n  ShowPopover = () => {\r\n    this.Is_Popover_Visible = true\r\n  }\r\n\r\n  HidePopover = () => {\r\n    this.Is_Popover_Visible = false\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { DatePicker } from \"./DatePicker\";\r\nimport InputView from \"../input/InputView\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { Popover } from \"antd\";\r\n\r\nclass DatePickerView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DatePicker();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state\r\n\r\n    return (\r\n      <>\r\n        <Popover content={data.DatePickerView}\r\n          visible={data.Is_Popover_Visible} >\r\n          <InputView store={data} \r\n            onFocus={data.ShowPopover} />\r\n        </Popover>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(DatePickerView)","import { TextVM } from \"../../../../text/TextVM\";\r\nimport { SiteVM } from \"./SiteVM\"\r\nimport * as ft from './Site_FieldType'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport InputView from \"../../../../input/InputView\";\r\nimport { Button } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport './Site.css'\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as dateUtil from '../../../../../util/dateUtil'\r\nimport DatePickerView from \"../../../../datepicker/DatePickerView\";\r\nimport { DatePicker } from \"../../../../datepicker/DatePicker\";\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new SiteVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetInputVMs = (q) => {\r\n  return ft.GetList().map(x => {\r\n    var qI\r\n    switch (x) {\r\n      case ft.AcceptanceDate:\r\n        qI = new DatePicker();\r\n        break;\r\n      default:\r\n        qI = new TextVM();\r\n        break;\r\n    }\r\n\r\n    qI.Placeholder = ''\r\n    qI.Field = x;\r\n\r\n    return qI;\r\n  })\r\n}\r\n\r\n// View\r\nconst GetInputItem_Render = (q, x) => {\r\n  switch (x.Field) {\r\n    case ft.AcceptanceDate:\r\n      x.Initial = () => x.SetDate(q.GetValue(x.Field))\r\n      x.GetValue = () => x.Date\r\n      return <DatePickerView store={x} />\r\n    default:\r\n      x.Initial = () => x.Content = q.GetValue(x.Field)\r\n      x.GetValue = () => x.Content\r\n      return <InputView store={x} />\r\n  }\r\n}\r\n\r\nconst GetInputItem_Wrapper_Render = (q, x) => {\r\n  var item = GetInputItem_Render(q, x);\r\n  var field = x.Field;\r\n\r\n  switch (field) {\r\n    case ft.SupervisorContractor:\r\n    case ft.SupervisorConsultant:\r\n    case ft.SupervisorClient:\r\n    case ft.SubContractor:\r\n      var qI = pmDataVM().SG_Dict_Dict;\r\n\r\n      var func = []\r\n      var funcWrapper = () => func[0]();\r\n\r\n      var button = <Button type='primary' size='small'\r\n        className='btn-warning'\r\n        onClick={funcWrapper}>\r\n        ...\r\n      </Button>\r\n\r\n      var popover = qI.Popover_Render(button);\r\n\r\n      func.push(() => {\r\n        qI.CurrentField = field\r\n        qI.CurrentMassType = q.Dict.MassType\r\n        qI.SetValue = (v) => x.Content = v;\r\n        qI.CurrentPopover = popover\r\n      })\r\n\r\n      return <div className='f-ac'>\r\n        <div className='f1'>\r\n          {item}\r\n        </div>\r\n        {popover.View}\r\n      </div>\r\n    default:\r\n      return item\r\n  }\r\n}\r\n\r\nexport const GetInputView = (q) => {\r\n  var obj = <table className='siteinput__table'>\r\n    <tbody>\r\n      {q.InputVMs.map(x => {\r\n        return <tr className='siteinput__tr' key={genUtil.randomId()}>\r\n          <th className='siteinput__title'>{ft.GetTitle(x.Field) + ':'}</th>\r\n          <td className='siteinput__input'>\r\n            {/* <InputView store={x} /> */}\r\n            {GetInputItem_Wrapper_Render(q, x)}\r\n          </td>\r\n        </tr>\r\n      })}\r\n    </tbody>\r\n  </table>\r\n\r\n  return obj;\r\n}\r\n\r\nexport const GetModalView = (q) => {\r\n  return <Modal title='Thông tin công trường' visible={q.Is_Modal_Visible}\r\n    footer={\r\n      <>\r\n        <Button type='primary' size='small' onClick={q.ModalOK}>run</Button>\r\n        <Button type='text' size='small' onClick={q.ModalCancel}>cancel</Button>\r\n      </>\r\n    }>\r\n    {q.InputView}\r\n  </Modal>\r\n}\r\n\r\n// Method\r\nexport const Initial = (q) => {\r\n  q.InputVMs.forEach(x => {\r\n    // x.Content = q.GetValue(x.Field)\r\n    x.Initial();\r\n  })\r\n}\r\n\r\nexport const Run_SetValue = (q) => {\r\n  var isValid = q.Is_OK_Valid = true;\r\n  q.InputVMs.forEach(x => {\r\n    if (isValid) {\r\n      // var content = x.Content;\r\n      var content = x.GetValue();\r\n      if (content && (typeof content !== 'string' || content.length !== 0)) {\r\n        q.SetValue(x.Field, content);\r\n      } else {\r\n        q.Is_OK_Valid = false\r\n      }\r\n    }\r\n  })\r\n}","import * as util from './MIPh_ItemUtil'\r\n\r\nexport default class MIPh_Item {\r\n  Phase\r\n\r\n  get Project(){\r\n    return this.Phase.Project\r\n  }\r\n\r\n  get MassItem(){\r\n    return this.Dict;\r\n  }\r\n\r\n  IsGet_TLS_LevelGroup = false\r\n  OnGet_TLS_LevelGroup_Func_Dict = []\r\n\r\n  get Get_TLS_LevelGroup(){\r\n    return this.get_TLS_LevelGroup\r\n  }\r\n  set Get_TLS_LevelGroup(v) {\r\n    this.OnGet_TLS_LevelGroup_Func_Dict.forEach(x => x.Value());\r\n    this.get_TLS_LevelGroup = v\r\n  }\r\n\r\n  tls_LevelGroup\r\n  get TLS_LevelGroup() {\r\n    if (!this.tls_LevelGroup) {\r\n      util.Handle_TLS_LevelGroup(this);\r\n    }\r\n    return this.tls_LevelGroup;\r\n  } set TLS_LevelGroup(v) {\r\n    this.tls_LevelGroup = v;\r\n    this.Get_TLS_LevelGroup = true;\r\n  }\r\n\r\n  OnGet_FullValue_Func_Dict = []\r\n  set Get_FullValue(v) {\r\n    this.OnGet_FullValue_Func_Dict.forEach(x => x.Value())\r\n  }\r\n\r\n  // bao gồm giá trị tầng điển hình\r\n  fullValue\r\n  get FullValue() {\r\n    if (!this.fullValue) {\r\n      util.Handle_FullValue(this);\r\n    }\r\n    return this.fullValue;\r\n  } set FullValue(v) {\r\n    this.fullValue = v;\r\n    this.Get_FullValue = true;\r\n  }\r\n\r\n  // Level\r\n  levelItem\r\n  get LevelItem() {\r\n    if (!this.levelItem) {\r\n      this.levelItem = util.GetLevelItem(this);\r\n    }\r\n    return this.levelItem;\r\n  }\r\n}","import * as util from './Level_ItemUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class Level_Item {\r\n  originValue\r\n  get Origin_Value(){\r\n    if (!this.originValue){\r\n      this.originValue = util.GetOrigin_Value(this);\r\n    }\r\n    return this.originValue;\r\n  }\r\n\r\n  OnSet_Replace_Value_Func_Dict = []\r\n\r\n  replace_Value\r\n  get Replace_Value(){\r\n    if (!this.replace_Value){\r\n      util.Handle_Replace_Value(this);\r\n    }\r\n    return this.replace_Value;\r\n  } set Replace_Value(v){\r\n    this.replace_Value = v;\r\n\r\n    genUtil.Handle(\r\n      this.OnSet_Replace_Value_Func_Dict,\r\n      (v) => this.OnSet_Replace_Value_Func_Dict = v\r\n    )\r\n  }\r\n\r\n  get Project(){\r\n    return this.MassItem.Project\r\n  }\r\n\r\n  get Phase(){\r\n    return this.MassPhase_Item?.Phase\r\n  }\r\n\r\n  OnSet_Value_Func_Dict = []\r\n\r\n  value\r\n  get Value(){\r\n    if (!this.value){\r\n      util.Handle_Value(this);\r\n    }\r\n    return this.value;\r\n  } set Value(v){\r\n    this.value = v;\r\n\r\n    genUtil.Handle(\r\n      this.OnSet_Value_Func_Dict,\r\n      (v) => this.OnSet_Value_Func_Dict = v\r\n    )\r\n  }\r\n}","import { Level_Item } from \"./Level_Item\"\r\nimport * as mif from '../../field/MassItemField'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (mi, miPh_Item) => {\r\n  var qI = new Level_Item();\r\n  qI.MassItem = mi;\r\n  qI.MassPhase_Item = miPh_Item;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetOrigin_Value = (q) => {\r\n  var massItem = q.MassItem;\r\n\r\n  return massItem.GetValue_Mas(mif.level);\r\n}\r\n\r\nexport const Handle_Replace_Value = (q) => {\r\n  if (q.IsGet_Replace_Value) return undefined;\r\n  q.IsGet_Replace_Value = true;\r\n\r\n  // Truy xuất từ dự án hoặc phase\r\n  //var project = q.Project\r\n\r\n  var source = q.Phase ? q.Phase : q.Project\r\n  var originVal = q.Origin_Value;\r\n\r\n  const setObj = (tls) => {\r\n    var list = tls.Data.Binding.Items;\r\n    var isValid = false;\r\n    var replaceVal\r\n\r\n    list.forEach((x) => {\r\n      if (!isValid && x.Values.includes(originVal)) {\r\n        isValid = true;\r\n        replaceVal = x.Name;\r\n      }\r\n    })\r\n\r\n    q.Replace_Value = replaceVal ? replaceVal : originVal;\r\n  }\r\n\r\n  if (source.TypicalLevelSetting) {\r\n    setObj(source.TypicalLevelSetting);\r\n  } else {\r\n    genUtil.Add_2(\r\n      source.OnGetTypicalLevelSetting_Func_Dict,\r\n      () => setObj(source.TypicalLevelSetting),\r\n      false\r\n    )\r\n  }\r\n}\r\n\r\nexport const Handle_Value = (q) => {\r\n  if (q.IsGet_Value) return undefined;\r\n  q.IsGet_Value = true;\r\n\r\n  const setObj = (reVal) => {\r\n    q.Value = reVal;\r\n  }\r\n\r\n  if (q.Replace_Value){\r\n    setObj(q.Replace_Value);\r\n  } else {\r\n    // Thiết lập trước bằng Origin, không dùng thuộc tính để bỏ qua Func\r\n    //setObj(q.Origin_Value);\r\n    q.value = q.Origin_Value;\r\n\r\n    // Sau khi truy xuất xong Replace => thay đổi thông tin\r\n    genUtil.Add_2(\r\n      q.OnSet_Replace_Value_Func_Dict,\r\n      () => setObj(q.Replace_Value),\r\n      false\r\n    )\r\n  }\r\n}","import MIPh_Item from \"./MIPh_Item\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as mif from '../../field/MassItemField'\r\nimport * as levelItemUtil from '../levelValue/Level_ItemUtil'\r\n\r\n// Instance\r\nexport const get = (phase, dict) => {\r\n  var qI = new MIPh_Item();\r\n  qI.Phase = phase;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_TLS_LevelGroup = (q) => {\r\n  if (q.IsGet_TLS_LevelGroup) return undefined;\r\n  q.IsGet_TLS_LevelGroup = true;\r\n\r\n  var phase = q.Phase;\r\n\r\n  const getLevelGroup_Func = (tls) => {\r\n    // var pi = GetValidTLS_PageItem(q, tls.Data);\r\n    // return GetValidTLS_LevelGroup(q, pi);\r\n\r\n    var data = tls.Data.Typical\r\n\r\n    var pi = GetValidTLS_PageItem(q, data);\r\n    var obj = GetValidTLS_LevelGroup(q, pi);\r\n    return obj;\r\n  }\r\n\r\n  var tls = phase.TypicalLevelSetting;\r\n  if (tls) {\r\n    q.TLS_LevelGroup = getLevelGroup_Func(tls);\r\n  } else {\r\n    // phase.OnGetTypicalLevelSetting_Funcs.push(() => {\r\n    //   q.TLS_LevelGroup = getLevelGroup_Func(phase.TypicalLevelSetting);\r\n    // })\r\n\r\n    genUtil.Add_2(\r\n      phase.OnGetTypicalLevelSetting_Func_Dict,\r\n      () => q.TLS_LevelGroup = getLevelGroup_Func(phase.TypicalLevelSetting)\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetValidTLS_PageItem = (q, tls) => {\r\n  if (!tls) return undefined;\r\n  var validPi = undefined\r\n  tls.PageItems.forEach(x => {\r\n    if (!validPi && IsValidTLS_PageItem(q, x)) {\r\n      validPi = x;\r\n    }\r\n  })\r\n\r\n  return validPi;\r\n}\r\n\r\nexport const IsValidTLS_PageItem = (q, pageItem) => {\r\n  var filters = pageItem.Filters;\r\n  var isValid = true;\r\n  filters.forEach(x => {\r\n    if (isValid) {\r\n      var field = x.Field;\r\n      var qVal = q.MassItem.GetValue_Mas(field);\r\n      isValid = x.Values.includes(qVal);\r\n    }\r\n  })\r\n  return isValid;\r\n}\r\n\r\nexport const GetValidTLS_LevelGroup = (q, pageItem) => {\r\n  if (!pageItem) return undefined;\r\n  var validLg = undefined\r\n  pageItem.LevelGroups.forEach(x => {\r\n    var primary_Values = x.Primary_Values\r\n    var qVal = q.MassItem.GetValue_Mas(mif.level);\r\n    if (!validLg && primary_Values.includes(qVal)) {\r\n      validLg = x;\r\n    }\r\n  })\r\n  return validLg;\r\n}\r\n\r\nexport const Handle_FullValue = (q) => {\r\n  if (q.IsGet_FullValue) return undefined;\r\n  q.IsGet_FullValue = true;\r\n\r\n  const getFullValue_Func = (lg) => {\r\n    var count = lg ? lg.Count : 1\r\n    var obj = q.MassItem.Value * count;\r\n    return obj;\r\n  }\r\n\r\n  if (q.TLS_LevelGroup || q.Get_TLS_LevelGroup) {\r\n    q.FullValue = getFullValue_Func(q.TLS_LevelGroup)\r\n  } else {\r\n    genUtil.Add(q.OnGet_TLS_LevelGroup_Func_Dict,\r\n      () => {\r\n        q.FullValue = getFullValue_Func(q.TLS_LevelGroup)\r\n      });\r\n  }\r\n}\r\n\r\n// LevelItem\r\nexport const GetLevelItem = (q) => {\r\n  return levelItemUtil.get(q.Dict, q);\r\n}","import { MI_ValueItem } from \"./MI_ValueItem\"\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new MI_ValueItem();\r\n\r\n  qI.Value = data.value\r\n  qI.Unit = data.unit\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, dict) => {\r\n  if (!dict){\r\n    dict = q.Dict;\r\n  }\r\n\r\n  var qI = new MI_ValueItem();\r\n\r\n  qI.Value = q.Value\r\n  qI.Unit = q.Unit\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n","import * as valueItemUtil from './MI_ValueItemUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Property\r\nexport const Handle_FullData = (q) => {\r\n  if (q.IsGet_FullData) return undefined;\r\n  q.IsGet_FullData = true;\r\n\r\n  const setObj = (lg) => {\r\n    var count = lg ? lg.Count : 1\r\n    q.FullData = q.Data.map(x => {\r\n      var obj = valueItemUtil.Clone(x);\r\n      obj.Value *= count;\r\n      return obj;\r\n    });\r\n    q.IsGet_FullData = false;\r\n  }\r\n\r\n  var host = q.Dict;\r\n  if (host.TLS_LevelGroup || host.Get_TLS_LevelGroup) {\r\n    setObj(host.TLS_LevelGroup)\r\n  } else {\r\n    genUtil.Add_2(host.OnGet_TLS_LevelGroup_Func_Dict,\r\n      () => {\r\n        setObj(host.TLS_LevelGroup)\r\n      });\r\n  }\r\n}","export const raw = 'raw'\r\nexport const full = 'full'","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './MI_ValueDictUtil'\r\nimport * as gt from './MI_ValueDict_GroupType'\r\nimport { MI_ValueItem } from './MI_ValueItem'\r\n\r\nexport class MI_ValueDict {\r\n  Data = []\r\n\r\n  // NewVersion\r\n  OnGet_FullData_Func_Dict = []\r\n\r\n  fullData\r\n  get FullData() {\r\n    if (!this.fullData) {\r\n      util.Handle_FullData(this)\r\n    }\r\n    return this.fullData;\r\n  } set FullData(v) {\r\n    this.fullData = v;\r\n\r\n    genUtil.Handle(this.OnGet_FullData_Func_Dict,\r\n      (v) => this.OnGet_FullData_Func_Dict = v);\r\n  }\r\n\r\n  GetItem = (field, group = gt.raw, handle) => {\r\n    const getObj = () => {\r\n      var list = group === gt.raw ? this.Data : this.FullData\r\n      var qI = genUtil.SingleFilter(list, x => x.Unit === field);\r\n      if (!qI && group === gt.raw) {\r\n        qI = new MI_ValueItem();\r\n        qI.Unit = field;\r\n        list.push(qI);\r\n      }\r\n      return qI;\r\n    }\r\n\r\n    if (group === gt.raw || !this.FullData) {\r\n      return getObj();\r\n    } else {\r\n      genUtil.Add_2(\r\n        this.OnGet_FullData_Func_Dict,\r\n        () => {\r\n          var obj = getObj();\r\n          if (handle) {\r\n            handle(obj)\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  GetValue = (field, group = gt.raw, handle, isFormat = false) => {\r\n    const getObj = () => {\r\n      var list = group === gt.raw ? this.Data : this.FullData\r\n      var qI = genUtil.SingleFilter(list, x => x.Unit === field);\r\n      var value = qI ? (isFormat ? qI.ValueString : qI.Value) : undefined;\r\n      return value;\r\n    }\r\n\r\n    if (group === gt.raw || !this.FullData) {\r\n      return getObj();\r\n    } else {\r\n      genUtil.Add_2(\r\n        this.OnGet_FullData_Func_Dict,\r\n        () => {\r\n          var obj = getObj();\r\n          if (handle) {\r\n            handle(obj)\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n}","import * as api from '../../../../../../util/apiUtil'\r\nimport { PMData } from '../../../../single/model/PMData';\r\nimport MassItem from './MassItem';\r\nimport * as elementUtil from '../../../element/ElementUtil'\r\nimport * as mt from '../../MassType'\r\nimport * as ut from '../../../value/ValueUnit'\r\nimport * as mif from '../../field/MassItemField'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as phaseItemUtil from '../phaseValue/MIPh_ItemUtil'\r\nimport * as levelItemUtil from '../levelValue/Level_ItemUtil'\r\nimport * as valueItemUtil from '../value/MI_ValueItemUtil'\r\nimport * as siteUtil from '../../site/SiteUtil'\r\nimport { url as resultUrl } from './MassItemResult_Url'\r\nimport { MI_ValueDict } from '../value/MI_ValueDict';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const get = (q, isDetailView, phase) => {\r\n  var qI = new MassItem();\r\n\r\n  qI._id = q._id;\r\n\r\n  // ValueData\r\n  if (q.valueData) {\r\n    qI.ValueDict.Data = q.valueData.map\r\n      (x => valueItemUtil.GetFromDb(x, qI))\r\n  } else {\r\n    qI.ValueDict.Data = [\r\n      valueItemUtil.GetFromDb(q, qI)\r\n    ]\r\n  }\r\n\r\n  if (q.massType) {\r\n    qI.MassType = q.massType;\r\n  } else {\r\n    qI.MassType = q.ExportSets && q.ExportSets.length !== 0 ?\r\n      q.ExportSets[0].massType : undefined\r\n  }\r\n\r\n  qI.Info = q.info;\r\n  qI.projectId = q.projectId;\r\n  qI.workpackageId = q.workpackageId;\r\n  qI.exportSetId = q.exportSetId;\r\n  qI.exportSetVersionId = q.exportSetVersionId;\r\n  qI.Element = q.Elements && q.Elements.length !== 0 ? q.Elements[0] : undefined;\r\n  qI.Site = q.SiteInfos.length !== 0 ?\r\n    siteUtil.GetFromDb(q.SiteInfos[0], qI) : undefined\r\n\r\n  var project\r\n  var projectData = q.Projects && q.Projects.length !== 0 ? q.Projects[0] : undefined;\r\n  if (projectData) {\r\n    var dict = pmData().Project_Dict_ForMassDetail\r\n    // Cập nhập hoặc lọc thông tin dự án\r\n    project = qI.Project = dict.Get_Project(projectData);\r\n  }\r\n\r\n  if (isDetailView) {\r\n    qI.IsDetailView = true;\r\n\r\n    if (phase) {\r\n      qI.IsHavePhase = true;\r\n      var dict = pmData().Phase_Dict_ForMassDetail\r\n      var phase = dict.Get_Phase(phase)\r\n\r\n      phase.Project = project;\r\n      qI.Phases = [phase]\r\n    }\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefaultRebarMass = (project) => {\r\n  var qI = new MassItem();\r\n\r\n  qI.Unit = ut.kg;\r\n  qI.MassType = mt.Rebar;\r\n  qI.Info = {}\r\n  qI.projectId = project._id;\r\n\r\n  const setExportSetData = (exportSet) => {\r\n    qI.exportSetId = exportSet._id;\r\n\r\n    var currentVersion = exportSet.CurrentVersion;\r\n    if (!currentVersion) {\r\n      exportSet.OnGetCurrentVersionDone_Func.push(() => {\r\n        currentVersion = exportSet.CurrentVersion;\r\n        qI.exportSetVersionId = currentVersion._id;\r\n      })\r\n    } else {\r\n      qI.exportSetVersionId = currentVersion._id;\r\n    }\r\n  }\r\n\r\n  var inputExportSet = project.InputExportSet;\r\n  if (!inputExportSet) {\r\n    project.OnGetInputExportSetDone_Funcs\r\n      .push(() => {\r\n        inputExportSet = project.InputExportSet;\r\n        setExportSetData(inputExportSet);\r\n      })\r\n  } else {\r\n    setExportSetData(inputExportSet);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetProject = (q) => {\r\n  var list = pmData().Project_Dict.Items;\r\n  var { projectId } = q;\r\n  var index = list.findIndex(x => x._id === projectId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const getAll = (apiData, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbmr/newlist\";\r\n\r\n  //var start = window.performance.now();\r\n\r\n  api.post(url, apiData, undefined, 2000000)\r\n    .then(response => response.data)\r\n    .then(data => {\r\n      //var end = window.performance.now();\r\n      //console.log(`Execution time: ${(end - start)/1000} s`);\r\n\r\n      if (!data) {\r\n        console.log('mass result undefined');\r\n        return;\r\n      }\r\n\r\n      var items = data.map(x => {\r\n        return get(x)\r\n      })\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getRebars = (projectId, handle) => {\r\n  if (!projectId) return;\r\n  var url = `https://api.bimdev.vn/api/hbmr/rebar?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = undefined;\r\n      if (!data) {\r\n        items = [];\r\n      } else {\r\n        var items = data.map(x => get(x))\r\n      }\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getByViewDetail = (_id, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbdv/massdetail?id=${_id}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var { viewDetail, masses, phase } = data;\r\n      var items = masses.map(x => {\r\n        // Viết ra _id của mass đang xét, để test\r\n        // console.log(x._id); \r\n\r\n        return get(x, true, phase)\r\n      });\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\n// Property\r\nexport const GetWorkpackage = (q) => {\r\n  var list = pmData().Workpackage_Dict.Workpackages;\r\n  var { workpackageId } = q;\r\n  var index = list.findIndex(x => x._id === workpackageId);\r\n  return index !== -1 ? list[index] : undefined;\r\n}\r\n\r\nexport const GetPhases = (q) => {\r\n  var dict = pmData().Phase_Dict;\r\n  var list = [];\r\n  if (!dict) return list;\r\n\r\n  var phases = dict.Items;\r\n  var exportSetVersionId = q.exportSetVersionId;\r\n  phases.forEach(x => {\r\n    if (x.exportSetVersionIds.includes(exportSetVersionId)) {\r\n      list.push(x);\r\n    }\r\n  })\r\n  return list;\r\n}\r\n\r\nexport const GetValidPhasesByInput = (q) => {\r\n  // Nếu ViewDetail thì lấy tất cả các Phase sẵn có\r\n  if (q.IsDetailView) {\r\n    return q.Phases;\r\n  } else {\r\n    var inputPhases = pmData().MassResultComp.Phases;\r\n    var phases = q.Phases;\r\n    var list = [];\r\n    phases.forEach(x => {\r\n      if (inputPhases.includes(x)) {\r\n        list.push(x);\r\n      }\r\n    })\r\n    return list;\r\n  }\r\n}\r\n\r\nexport const GetElementAsync = (q) => {\r\n  var elemId = q.elementId\r\n  if (elemId) {\r\n    elementUtil.GetById(elemId, (data) => {\r\n      q.Element = data\r\n      q.IsGetElement = true;\r\n      q.GetElementDone = true;\r\n    });\r\n  } else {\r\n    q.IsGetElement = true;\r\n  }\r\n}\r\n\r\nexport const Handle_TLS_LevelGroup = (q) => {\r\n  if (q.IsGet_TLS_LevelGroup) return undefined;\r\n  q.IsGet_TLS_LevelGroup = true;\r\n\r\n  var project = q.Project;\r\n\r\n  const setObj = (data) => {\r\n    q.TLS_LevelGroup = data;\r\n    q.IsGet_TLS_LevelGroup = false\r\n  }\r\n\r\n  const getLevelGroup_Func = (tls) => {\r\n    // Thiết lập tầng điển hình mới nằm trong data.Typical\r\n    var data = tls.Data.Typical\r\n\r\n    var pi = GetValidTLS_PageItem(q, data);\r\n    var obj = GetValidTLS_LevelGroup(q, pi);\r\n    return obj;\r\n  }\r\n\r\n  var tls = project.TypicalLevelSetting;\r\n  if (project.GetTypicalLevelSetting || tls) {\r\n    setObj(getLevelGroup_Func(tls));\r\n  } else {\r\n    genUtil.Add_2(\r\n      project.OnGetTypicalLevelSetting_Func_Dict,\r\n      () => setObj(getLevelGroup_Func(project.TypicalLevelSetting))\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetValidTLS_PageItem = (q, tls) => {\r\n  if (!tls) return undefined;\r\n  var validPi = undefined\r\n  tls.PageItems.forEach(x => {\r\n    if (!validPi && IsValidTLS_PageItem(q, x)) {\r\n      validPi = x;\r\n    }\r\n  })\r\n\r\n  return validPi;\r\n}\r\n\r\nexport const IsValidTLS_PageItem = (q, pageItem) => {\r\n  var filters = pageItem.Filters;\r\n  var isValid = true;\r\n  filters.forEach(x => {\r\n    if (isValid) {\r\n      var field = x.Field;\r\n      var qVal = q.GetValue_Mas(field);\r\n      isValid = x.Values.includes(qVal);\r\n    }\r\n  })\r\n  return isValid;\r\n}\r\n\r\nexport const GetValidTLS_LevelGroup = (q, pageItem) => {\r\n  if (!pageItem) return undefined;\r\n  var validLg = undefined\r\n  pageItem.LevelGroups.forEach(x => {\r\n    // New Version\r\n    var primary_Values = x.Primary_Values\r\n    var qVal = q.GetValue_Mas(mif.level);\r\n    if (!validLg && primary_Values.includes(qVal)) {\r\n      validLg = x;\r\n    }\r\n  })\r\n  return validLg;\r\n}\r\n\r\n// ValueDict\r\nexport const GetValueDict = (q) => {\r\n  var qI = new MI_ValueDict();\r\n  qI.Dict = q;\r\n  return qI;\r\n}\r\n\r\n// PhaseItem\r\nexport const GetPhaseItems = (q) => {\r\n  return q.ValidPhasesByInput.map(x => phaseItemUtil.get(x, q));\r\n}\r\n\r\nexport const Get_Lastest_PhaseItem = (q) => {\r\n  if (q.IsGet_Lastest_PhaseItem) return undefined;\r\n  q.IsGet_Lastest_PhaseItem = true;\r\n\r\n  var list = q.PhaseItems;\r\n  if (!list || list.length === 0) return undefined;\r\n\r\n  if (list.length === 1) return list[0];\r\n\r\n  list.sort((a, b) =>\r\n    b.Phase.CreatedDate - a.Phase.CreatedDate);\r\n\r\n  return list[0];\r\n}\r\n\r\n// LevelItem\r\nexport const GetLevelItem = (q) => {\r\n  if (!pmData().CurrentProject) {\r\n    return q.OriginLevelItem\r\n  }\r\n\r\n  if (q.IsDetailView && !q.IsHavePhase) {\r\n    return q.OriginLevelItem\r\n  }\r\n  var phaseItem = q.Lastest_PhaseItem;\r\n  return phaseItem ? phaseItem.LevelItem : q.OriginLevelItem\r\n}\r\n\r\nexport const GetOriginLevelItem = (q) => {\r\n  return levelItemUtil.get(q);\r\n}\r\n\r\n// Api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${resultUrl}/newlist`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as util from './MassItemUtil'\r\nimport * as mif from '../../field/MassItemField'\r\nimport { message } from 'antd'\r\nimport * as api from '../../../../../../util/apiUtil'\r\nimport { PMData } from '../../../../single/model/PMData'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport default class MassItem {\r\n  projectId\r\n\r\n  project\r\n  get Project() {\r\n    if (!this.project) {\r\n      this.project = util.GetProject(this);\r\n    }\r\n    return this.project;\r\n  } set Project(v) {\r\n    this.project = v;\r\n  }\r\n\r\n  workpackageId\r\n\r\n  workpackage\r\n  get Workpackage() {\r\n    if (!this.workpackage) {\r\n      this.workpackage = util.GetWorkpackage(this);\r\n    }\r\n    return this.workpackage;\r\n  }\r\n\r\n  phases\r\n  get Phases() {\r\n    if (!this.phases) {\r\n      this.phases = util.GetPhases(this);\r\n    }\r\n    return this.phases;\r\n  } set Phases(v){\r\n    this.phases = v;\r\n  }\r\n\r\n  get ValidPhasesByInput() {\r\n    return util.GetValidPhasesByInput(this);\r\n  }\r\n\r\n  IsGetElement = false\r\n\r\n  OnGetElementDone_Funcs = []\r\n\r\n  set GetElementDone(v) {\r\n    this.OnGetElementDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  GetValue = (field, handle) => {\r\n    if (!field) {\r\n      return;\r\n    }\r\n\r\n    var isHandle\r\n    if (field === mif.level) {\r\n      var obj = this.LevelItem;\r\n\r\n      // Chưa truy xuất Value\r\n      if (!obj.IsGet_Value && handle) {\r\n        isHandle = true;\r\n\r\n        genUtil.Add_2(\r\n          obj.OnSet_Value_Func_Dict,\r\n          () => {\r\n            handle(obj.Value)\r\n          }\r\n        );\r\n      }\r\n\r\n      // return obj.Value;\r\n      return {\r\n        Value: obj.Value,\r\n        IsHandle: isHandle\r\n      }\r\n    }\r\n\r\n    // return this.GetValue_Mas(field);\r\n    return {\r\n      Value: this.GetValue_Mas(field),\r\n      IsHandle: isHandle\r\n    }\r\n  }\r\n\r\n  GetValue_Mas = (field) => {\r\n    if (!field) {\r\n      return;\r\n    }\r\n\r\n    var data = mif.GetFullFields(this, field);\r\n    var { fields, isFromElement } = data;\r\n\r\n    var getValFunc = () => {\r\n      var obj = this;\r\n      var isValid = true;\r\n\r\n      fields.forEach(x => {\r\n        if (isValid) {\r\n          var temp = obj[x];\r\n\r\n          obj = temp;\r\n          if (obj === undefined) {\r\n            isValid = false;\r\n          }\r\n        }\r\n      })\r\n\r\n      if (field === mif.Value) {\r\n        var roundingFactor = 2;\r\n\r\n        if (this.Unit === 'each') {\r\n          roundingFactor = 0;\r\n        }\r\n\r\n        obj = obj.toLocaleString('en-US', { maximumFractionDigits: roundingFactor });\r\n      }\r\n\r\n      return obj;\r\n    }\r\n\r\n    if (!isFromElement || this.Element) {\r\n      var val = getValFunc();\r\n      return val;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      _id: this._id,\r\n      projectId: this.projectId,\r\n      elementId: this.elementId,\r\n      workpackageId: this.workpackageId,\r\n      exportSetId: this.exportSetId,\r\n      exportSetVersionId: this.exportSetVersionId,\r\n      value: this.Value,\r\n      unit: this.Unit,\r\n      massType: this.MassType,\r\n      info: this.Info\r\n    }\r\n  }\r\n\r\n  get ApiData_ForInput(){\r\n    return {\r\n      valueData : this.ValueDict.Data.map(x => x.ApiData),\r\n      info : this.Info\r\n    }\r\n  }\r\n\r\n  AddDatabase = (handle) => {\r\n    var apiData = this.ApiData;\r\n    var { _id } = apiData;\r\n    var url = `https://api.bimdev.vn/api/hbm`;\r\n\r\n    var command = _id ? 'edit' : 'add';\r\n    const apiFunc = () => _id ?\r\n      api.put(`${url}/${command}`, apiData) : api.post(`${url}/${command}`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        if (command === 'add') {\r\n          this._id = data._id;\r\n        }\r\n        if (handle) {\r\n          handle(data);\r\n        }\r\n        message.success(`${command} mass successfully`);\r\n      })\r\n  }\r\n\r\n  DeleteDatabase = (handle) => {\r\n    var apiData = {\r\n      _id: this._id\r\n    };\r\n    var url = `https://api.bimdev.vn/api/hbm`;\r\n    const apiFunc = () => api.put(`${url}/delete`, apiData);\r\n\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        if (handle) {\r\n          handle(data);\r\n        }\r\n        message.success(`delete mass successfully`);\r\n      })\r\n  }\r\n\r\n  // LevelGroup\r\n  OnGet_TLS_LevelGroup_Func_Dict = []\r\n\r\n  get_TLS_LevelGroup\r\n  get Get_TLS_LevelGroup(){\r\n    return this.get_TLS_LevelGroup\r\n  } set Get_TLS_LevelGroup(v){\r\n    this.get_TLS_LevelGroup = v;\r\n  }\r\n\r\n  tls_LevelGroup\r\n  get TLS_LevelGroup() {\r\n    if (!this.tls_LevelGroup) {\r\n      util.Handle_TLS_LevelGroup(this);\r\n    } return this.tls_LevelGroup;\r\n  } set TLS_LevelGroup(v) {\r\n    this.tls_LevelGroup = v;\r\n    this.Get_TLS_LevelGroup = true\r\n\r\n    this.OnGet_TLS_LevelGroup_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  OnGet_FullValue_Func_Dict = []\r\n  set Get_FullValue(v) {\r\n    genUtil.Handle(this.OnGet_FullValue_Func_Dict,\r\n      (v) => this.OnGet_FullValue_Func_Dict = v);\r\n\r\n    this.get_FullValue = v;\r\n  }\r\n\r\n  // ValueDict\r\n  valueDict\r\n  get ValueDict(){\r\n    if (!this.valueDict){\r\n      this.valueDict = util.GetValueDict(this)\r\n    } return this.valueDict\r\n  }\r\n\r\n  // Phase\r\n  phaseItems\r\n  get PhaseItems() {\r\n    if (!this.phaseItems) {\r\n      this.phaseItems = util.GetPhaseItems(this);\r\n    }\r\n    return this.phaseItems;\r\n  }\r\n\r\n  GetPhaseItem = (phaseName) => {\r\n    var list = this.PhaseItems;\r\n    var index = list.findIndex(x => x.Phase.Name === phaseName);\r\n    return list[index];\r\n  }\r\n\r\n  lastest_PhaseItem\r\n  get Lastest_PhaseItem() {\r\n    if (!this.lastest_PhaseItem) {\r\n      this.lastest_PhaseItem = util.Get_Lastest_PhaseItem(this);\r\n    }\r\n    return this.lastest_PhaseItem;\r\n  }\r\n\r\n  // Level\r\n  levelItem\r\n  get LevelItem() {\r\n    if (!this.levelItem) {\r\n      this.levelItem = util.GetLevelItem(this);\r\n    }\r\n    return this.levelItem;\r\n  }\r\n\r\n  // LevelItem của phiên bản mới nhất\r\n  originLevelItem\r\n  get OriginLevelItem() {\r\n    if (!this.originLevelItem) {\r\n      this.originLevelItem = util.GetOriginLevelItem(this);\r\n    }\r\n    return this.originLevelItem;\r\n  }\r\n\r\n  // Site\r\n  site\r\n  get Site(){\r\n    return this.site\r\n  } set Site(v){\r\n    this.site = v;\r\n  }\r\n}","import * as ft from './Site_FieldType'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { message } from 'antd';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as util from './SiteUtil'\r\n\r\nconst pmData = () => PMData.Instance;\r\n\r\nexport class Site {\r\n  _id\r\n\r\n  Row\r\n\r\n  MassItem\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      _id : this._id\r\n    }\r\n\r\n    var info\r\n\r\n    if (this.Row) {\r\n      // projectId\r\n      obj.projectId = pmData().CurrentProject._id\r\n\r\n      const getFilter = (x) => {\r\n        return {\r\n          field: x.Field,\r\n          value: x.RawValue\r\n        }\r\n      }\r\n\r\n      var r = this.Row;\r\n      // Filter\r\n      var filter = obj.filter = [\r\n        getFilter(r)\r\n      ]\r\n      \r\n      r.Original_Full_SupRows.forEach(x => {\r\n        filter.push(getFilter(x))\r\n      })\r\n\r\n      info = obj.input = {}\r\n    } else {\r\n      obj.massId = this.MassItem._id;\r\n      info = obj;\r\n    }\r\n\r\n    ft.GetList().forEach(x => {\r\n      info[ft.GetKey(x)] = this[x]\r\n    })\r\n\r\n    return obj;\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, this.Url,\r\n      () => {\r\n        if (this.Row){\r\n          this._id = undefined;\r\n        }\r\n\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Run Input Row\r\n  Run = () => {\r\n    util.Run(this)\r\n  }\r\n}","import { message } from \"antd\";\r\nimport MassItem from \"../item/base/MassItem\";\r\nimport MassRow from \"../table/row/base/MassRow\";\r\nimport { Site } from \"./Site\"\r\nimport * as urlUtil from './SiteUrl'\r\nimport * as ft from './Site_FieldType'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict);\r\n\r\n  qI._id = data._id;\r\n  ft.GetList().forEach(x => {\r\n    qI[x] = data[ft.GetKey(x)]\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Site();\r\n\r\n  if (dict instanceof MassRow){\r\n    qI.Url = urlUtil.siteexport_url;\r\n    qI.Row = dict;\r\n  } else if (dict instanceof MassItem){\r\n    qI.Url = urlUtil.siteinfo_url;\r\n    qI.MassItem = dict;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q, dict) => {\r\n  var qI = get(dict);\r\n\r\n  ft.GetList().forEach(x => {\r\n    qI[x] = q[x]\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\n// Method\r\nexport const Run = (q) => {\r\n  q.SaveDatabase(false);\r\n\r\n  var list = q.Row.Items;\r\n  var length = list.length\r\n  var i = 0;\r\n  const handleSave = () => {\r\n    i++;\r\n    if (i === length){\r\n      message.success('save successfully!');\r\n    }\r\n  }\r\n\r\n  list.forEach(x => {\r\n    var _id = x.Site?._id;\r\n\r\n    var qI = x.Site = Clone(q, x);\r\n    qI._id = _id;\r\n\r\n    qI.SaveDatabase(false, handleSave);\r\n  })\r\n}","export const siteexport_url = \"https://api.bimdev.vn/api/hb_se\"\r\nexport const siteinfo_url = \"https://api.bimdev.vn/api/hb_si\"","import * as util from './TextRenderItemUtil'\r\n\r\nexport class TextRenderItem {\r\n  render\r\n  get Render(){\r\n    if (!this.render){\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v){\r\n    this.render = v;\r\n  }\r\n}","import InputView from \"../input/InputView\";\r\nimport * as rs from './TextRenderState'\r\nimport { TextRenderItem } from \"./TextRenderItem\";\r\nimport { Button } from \"antd\";\r\n\r\nexport const get = (state, render) => {\r\n  var qI = new TextRenderItem();\r\n  qI.State = state;\r\n  qI.Render = render;\r\n  return qI;\r\n}\r\n\r\nexport const GetRender = (q) => {\r\n  switch (q.State) {\r\n    case rs._default:\r\n      return (content, context) => {\r\n        var className = context.ClassName;\r\n        var style = context.Style;\r\n        var onDoubleClick = context.OnDoubleClick\r\n        var onClick = context.OnClick\r\n\r\n        return <>\r\n          <span className={className} style={style}\r\n            onDoubleClick={onDoubleClick}\r\n            onClick={onClick}>\r\n            {content}\r\n          </span>\r\n          { context.Is_Tool_Visible && context.Is_Edit_Visible ?\r\n            <Button type='primary' size='small'\r\n              className='left10 btn-warning' onClick={context.Edit}\r\n            >e</Button>\r\n            : ''}\r\n        </>\r\n      }\r\n    case rs.edit:\r\n      return (content, context) => {\r\n        var className = context.ClassName;\r\n        var style = context.Style;\r\n        var onFocus = context.OnFocus\r\n        \r\n        return <>\r\n          <div className={`input__wrapper ${className}`}>\r\n            <InputView ref={context.Ref}\r\n              className='input__main'\r\n              style={style}\r\n              store={context}\r\n              ref={context.Ref}\r\n              onFocus={onFocus} />\r\n            {context.Is_Tool_Visible && context.Is_OK_Visible ?\r\n              <Button type='primary' size='small'\r\n                onClick={context.EditOK}>ok</Button>\r\n              : ''}\r\n          </div>\r\n        </>\r\n      }\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import * as renderUtil from './TextRenderItemUtil'\r\n\r\nexport default class TextRender_Dict {\r\n  Items = []\r\n\r\n  GetRender = (state) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x.State === state);\r\n    if (index === -1){\r\n      var item = renderUtil.get(state);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport NewInputView from '../input/NewInputView';\r\nimport TextRender_Dict from './TextRender_Dict';\r\nimport * as ts from './TextState'\r\nimport * as rs from './TextRenderState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport class EditableTextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder: observable,\r\n      State: observable,\r\n      IsEditing: observable,\r\n      renderState: observable,\r\n      Is_Tool_Visible: observable,\r\n      Is_Edit_Visible : observable,\r\n      Is_OK_Visible: observable,\r\n      CanChange_RenderState : observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  get Content() {\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  State = ts.text\r\n\r\n  IsEditing = false\r\n\r\n  titleFunc\r\n  get TitleFunc() {\r\n    if (!this.titleFunc) {\r\n      this.titleFunc = () => this.Content;\r\n    }\r\n    return this.titleFunc;\r\n  } set TitleFunc(v) {\r\n    this.titleFunc = v;\r\n  }\r\n\r\n  render_Dict\r\n  get Render_Dict() {\r\n    if (!this.render_Dict) {\r\n      this.render_Dict = new TextRender_Dict();\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n  set Render_Dict(v) {\r\n    this.render_Dict = v;\r\n  }\r\n\r\n  OnSet_RenderState_Func_Dict = []\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState;\r\n  } set RenderState(v) {\r\n    if (!this.CanChange_RenderState) {\r\n      return;\r\n    }\r\n\r\n    this.renderState = v;\r\n    this.OnSet_RenderState_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  CanChange_RenderState = true\r\n\r\n  Is_Tool_Visible = true\r\n  Is_Edit_Visible = true\r\n  Is_OK_Visible = true;\r\n\r\n  Edit = () => {\r\n    this.RenderState = rs.edit\r\n  }\r\n\r\n  EditOK = () => {\r\n    this.RenderState = rs._default\r\n  }\r\n\r\n  Render = () => {\r\n    var render = this.Render_Dict.GetRender(this.RenderState);\r\n    return render.Render(this.Content, this);\r\n  }\r\n\r\n  OnSet_Ref_Func_Dict = []\r\n\r\n  ref\r\n  get Ref(){\r\n    return this.ref\r\n  } set Ref(v){\r\n    this.ref = v;\r\n\r\n    genUtil.Handle(this.OnSet_Ref_Func_Dict,\r\n      (v) => this.OnSet_Ref_Func_Dict = v)\r\n  }\r\n\r\n  ref_Element\r\n  get Ref_Element(){\r\n    if (!this.ref_Element){\r\n      var obj = this.Ref.current\r\n      if (obj && obj.getEl){\r\n        obj = obj.getEl(); \r\n      }\r\n\r\n      this.ref_Element = obj;\r\n    }\r\n    return this.ref_Element;\r\n  }\r\n\r\n  Focus = () => {\r\n    const setFocus = () => {\r\n      this.Ref_Element?.focus();\r\n    }\r\n\r\n    if (this.Ref){\r\n      setFocus()\r\n    } else {\r\n      genUtil.Add_2(\r\n        this.OnSet_Ref_Func_Dict,\r\n        () => setFocus()\r\n      )\r\n    }\r\n  }\r\n}","import { EditableTextVM } from \"./EditableTextVM\"\r\n\r\nexport const get = (content, canEdit = true, isToolVisible) => {\r\n  var qI = new EditableTextVM();\r\n  \r\n  qI.Content = content;\r\n  qI.CanChange_RenderState = canEdit;\r\n\r\n  if (isToolVisible === undefined){\r\n    isToolVisible = canEdit;\r\n  }\r\n\r\n  qI.Is_Tool_Visible = isToolVisible;\r\n\r\n  return qI;\r\n}","export const manual = 'manual'\r\nexport const mouseEvent = 'mouseEvent'","export const collapse = 'collapse'\r\nexport const hidden = 'hidden'","export const mobx = 'mobx'\r\nexport const style = 'style'","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { EntDelete } from './EntDelete';\r\nimport { Button, Popover } from 'antd';\r\nimport './EntDelete.css'\r\nimport * as vt from './EntDelete_VisibleType'\r\nimport * as ut from './EntDelete_UseType'\r\n\r\nclass EntDeleteView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntDelete()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    data.ClassName = data.ClassName ? data.ClassName :\r\n      (this.props.className ? this.props.className : '')\r\n    data.Style = data.Style ? data.Style : this.props.style\r\n\r\n    return (\r\n      <>\r\n        {data.UseType === ut.style || data.Is_Visible ?\r\n          <>\r\n            <div style={data.WrapperStyle}>\r\n              {/* Popover */}\r\n              {data.WrapperView}\r\n\r\n              {/* Addition Element */}\r\n              {data.AdditionElement}\r\n            </div>\r\n          </>\r\n          : (data.VisibleType === vt.hidden ?\r\n            <div className={data.BlankStyle} />\r\n            :\r\n            '')\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(EntDeleteView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as tt from './EntDelete_ToggleType'\r\nimport * as vt from './EntDelete_VisibleType'\r\nimport * as ut from './EntDelete_UseType'\r\nimport * as util from './EntDeleteUtil'\r\nimport EntDeleteView from './EntDeleteView';\r\nimport { TextVM } from '../text/TextVM';\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport class EntDelete {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      is_Visible: observable,\r\n      is_Hover_Visible: observable,\r\n      VisibleType: observable,\r\n      UseType: observable,\r\n      ClassName: observable,\r\n      Style: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    } return this._id;\r\n  } set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  is_Visible = undefined\r\n  get Is_Visible() {\r\n    if (!this.is_Visible) {\r\n      this.is_Visible = util.GetDefault_Is_Visible(this)\r\n    } return this.is_Visible\r\n  } set Is_Visible(v) {\r\n    this.is_Visible = v;\r\n  }\r\n\r\n  ToggleType = tt.manual\r\n\r\n  VisibleType = vt.collapse\r\n\r\n  is_Hover_Visible = undefined\r\n  get Is_Hover_Visible() {\r\n    return this.is_Hover_Visible\r\n  } set Is_Hover_Visible(v) {\r\n    this.is_Hover_Visible = v;\r\n\r\n    if (this.ToggleType === tt.mouseEvent) {\r\n      if (!v) {\r\n        this.Is_Visible = false\r\n      }\r\n    }\r\n\r\n    if (this.OnSet_Is_Hover_Visible) {\r\n      this.OnSet_Is_Hover_Visible(v);\r\n    }\r\n  }\r\n\r\n  Show_Hover = (e) => {\r\n    e.stopPropagation();\r\n\r\n    if (this.OnPre_ShowHover) {\r\n      this.OnPre_ShowHover();\r\n    }\r\n\r\n    this.Is_Hover_Visible = true;\r\n  }\r\n\r\n  Toggle_Hover = (v) => {\r\n    this.Is_Hover_Visible = v\r\n  }\r\n\r\n  // Run\r\n  IsRun_Cancel\r\n\r\n  PreRun = (e) => {\r\n    e.stopPropagation();\r\n\r\n    this.IsRun_Cancel = false\r\n    if (this.OnPreRun) {\r\n      this.OnPreRun()\r\n    }\r\n\r\n    if (!this.IsRun_Cancel) {\r\n      this.Run();\r\n    }\r\n  }\r\n\r\n  run\r\n  get Run() {\r\n    if (!this.run) {\r\n      this.run = util.GetDefault_Run(this)\r\n    } return this.run\r\n  } set Run(v) {\r\n    this.run = v;\r\n  }\r\n\r\n  PreCancel = (e) => {\r\n    e.stopPropagation();\r\n    this.Cancel();\r\n  }\r\n\r\n  cancel\r\n  get Cancel() {\r\n    if (!this.cancel) {\r\n      this.cancel = util.GetDefault_Cancel(this)\r\n    } return this.cancel\r\n  } set Cancel(v) {\r\n    this.cancel = v;\r\n  }\r\n\r\n  Show = () => {\r\n    this.Is_Visible = true\r\n  }\r\n\r\n  // Hide\r\n  Hide = () => {\r\n    this.IsRun_Cancel = false\r\n    if (this.OnPreHide) {\r\n      this.OnPreHide()\r\n    }\r\n\r\n    if (this.IsRun_Cancel) return\r\n\r\n    if (!this.Is_Hover_Visible) {\r\n      this.Is_Visible = false\r\n    }\r\n  }\r\n\r\n  // Style\r\n  ClassName = undefined\r\n\r\n  Style = undefined\r\n\r\n  AdditionElement = ''\r\n\r\n  BlankStyle = 'delete__blank'\r\n\r\n  Title = \"Xác nhận lệnh?\"\r\n\r\n  showHover_Button\r\n  get ShowHover_Button() {\r\n    return this.showHover_Button ? this.showHover_Button\r\n      : this.Retrieve_ShowHover_Button();\r\n  } set ShowHover_Button(v) {\r\n    this.showHover_Button = v;\r\n  }\r\n\r\n  retrieve_ShowHover_Button\r\n  get Retrieve_ShowHover_Button() {\r\n    if (!this.retrieve_ShowHover_Button) {\r\n      this.retrieve_ShowHover_Button =\r\n        util.GetDefault_Retrieve_ShowHover_Button(this)\r\n    } return this.retrieve_ShowHover_Button\r\n  } set Retrieve_ShowHover_Button(v) {\r\n    this.retrieve_ShowHover_Button = v;\r\n  }\r\n\r\n  get View() {\r\n    return <EntDeleteView key={this.id} store={this} />\r\n  }\r\n\r\n  // Modal\r\n  get WrapperView() {\r\n    return this.Retrieve_WrapperView();\r\n  }\r\n\r\n  retrieve_WrapperView\r\n  get Retrieve_WrapperView() {\r\n    if (!this.retrieve_WrapperView) {\r\n      this.retrieve_WrapperView = util.GetDefault_Retrieve_WrapperView(this)\r\n    } return this.retrieve_WrapperView\r\n  } set Retrieve_WrapperView(v) {\r\n    this.retrieve_WrapperView = v;\r\n  }\r\n\r\n  modal_ButtonView\r\n  get Modal_ButtonView() {\r\n    if (!this.modal_ButtonView) {\r\n      this.modal_ButtonView = util.GetDefault_Modal_ButtonView(this)\r\n    }\r\n    return this.modal_ButtonView\r\n  } set Modal_ButtonView(v) {\r\n    this.modal_ButtonView = v;\r\n  }\r\n\r\n  modal_InfoView\r\n  get Modal_InfoView() {\r\n    if (!this.modal_InfoView) {\r\n      this.modal_InfoView = util.GetDefault_Modal_InfoView(this)\r\n    }\r\n    return this.modal_InfoView\r\n  } set Modal_InfoView(v) {\r\n    this.modal_InfoView = v;\r\n  }\r\n\r\n  modal_ContentView\r\n  get Modal_ContentView() {\r\n    if (!this.modal_ContentView) {\r\n      this.modal_ContentView = util.GetDefault_Modal_ContentView(this)\r\n    } return this.modal_ContentView\r\n  } set Modal_ContentView(v) {\r\n    this.modal_ContentView = v;\r\n  }\r\n\r\n  // UseStyle\r\n  UseType = ut.mobx\r\n\r\n  get WrapperStyle() {\r\n    switch (this.UseType) {\r\n      case ut.mobx:\r\n        return undefined\r\n      case ut.style:\r\n        return this.Is_Visible ? undefined : { display:'none' }\r\n    }\r\n  }\r\n}","import { Button, Popover } from 'antd'\r\nimport * as tt from './EntDelete_ToggleType'\r\n\r\n// Property\r\nexport const GetDefault_Is_Visible = (q) => {\r\n  return q.ToggleType === tt.manual ?\r\n    true : false\r\n}\r\n\r\nexport const GetDefault_Retrieve_ShowHover_Button = (q) => {\r\n  return () => <Button type='primary' size='small'\r\n    className={`btn_delete ${q.ClassName}`}\r\n    style={q.Style}\r\n    onClick={q.Show_Hover}\r\n  >x</Button>\r\n}\r\n\r\nexport const GetDefault_Run = (q) => {\r\n  return () => {\r\n    q.Is_Hover_Visible = false;\r\n    if (q.OnRun) {\r\n      q.OnRun();\r\n    }\r\n  }\r\n}\r\n\r\nexport const GetDefault_Cancel = (q) => {\r\n  return () => {\r\n    q.Is_Hover_Visible = false;\r\n    if (q.OnCancel) {\r\n      q.OnCancel();\r\n    }\r\n  }\r\n}\r\n\r\nexport const GetDefault_Retrieve_WrapperView = (q) => {\r\n  return () => <Popover\r\n    content={\r\n      <>\r\n        {q.Modal_ContentView}\r\n      </>\r\n    }\r\n    title={q.Title}\r\n    trigger=\"click\"\r\n    visible={q.Is_Hover_Visible}\r\n    onVisibleChange={q.Toggle_Hover}\r\n  >\r\n    {q.ShowHover_Button}\r\n  </Popover>\r\n}\r\n\r\nexport const GetDefault_Modal_ButtonView = (q) => {\r\n  return <div className='delete__btn-group'>\r\n    <Button type='primary' size='small'\r\n      onClick={q.PreRun}>ok</Button>\r\n    <Button type='text' size='small'\r\n      className='btn_blank'\r\n      onClick={q.PreCancel}>cancel</Button>\r\n  </div>\r\n}\r\n\r\nexport const GetDefault_Modal_InfoView = (q) => {\r\n  return ''\r\n}\r\n\r\nexport const GetDefault_Modal_ContentView = (q) => {\r\n  return <>\r\n    {q.Modal_InfoView}\r\n    {q.Modal_ButtonView}\r\n  </>\r\n}","import { PMData } from \"../../../../../single/model/PMData\";\r\nimport MassRow from \"./MassRow\";\r\nimport * as multiSelectUtil from '../../../../../../select/MultiSelectVMUtil';\r\nimport * as selectUtil from '../../../../../../select/SelectVMUtil';\r\nimport * as mgiUtil from '../../rowgroup/MassGroupItemUtil'\r\nimport * as mgi_iUtil from '../../rowgroup/MGI_ItemUtil'\r\nimport * as mgii_ct from '../../rowgroup/MGI_I_CreateType'\r\nimport * as genUtil from '../../../../../../../util/generalUtil';\r\nimport * as inputUtil from '../../../../../../../util/inputUtil';\r\nimport { EntFilter } from \"../../../../filter/EntFilter\";\r\nimport MassGroupComponent from \"../../rowgroup/MassGroupComponent\";\r\nimport * as fvt from '../../../../filter/FilterValueType'\r\nimport * as sft from '../../../../filter/StringFilterType'\r\nimport * as mif from '../../../field/MassItemField'\r\nimport MassRow_ToolElement from \"../../tool/MassRow_ToolElement\";\r\nimport * as trs from '../../../../../../text/TextRenderState';\r\nimport MassCell from \"../../cell/MassCell\";\r\nimport { MR_Unit } from \"../unit/MR_Unit\";\r\nimport * as ut from '../../../unit/MassUnitType'\r\nimport { MR_Delete } from \"../delete/MR_Delete\";\r\nimport { MR_Update } from \"../update/MR_Update\";\r\nimport * as siteVMUtil from '../../../site/SiteVMUtil'\r\nimport * as siteUtil from '../../../site/SiteUtil'\r\nimport * as tct from '../../command/CommandType'\r\nimport * as editTextUtil from '../../../../../../text/EditableTextVMUtil';\r\nimport { EntDelete } from \"../../../../../../delete/EntDelete\";\r\nimport * as d_tt from '../../../../../../delete/EntDelete_ToggleType'\r\nimport * as d_vt from '../../../../../../delete/EntDelete_VisibleType'\r\n\r\nconst pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new MassRow();\r\n  qI.Name = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const Clone = (q) => {\r\n  var qI = new MassRow();\r\n  qI._id = q._id;\r\n\r\n}\r\n\r\n// Property\r\nexport const GetRank = (q) => {\r\n  return q.SupItem ? q.SupItem.Rank + 1 : 0;\r\n}\r\n\r\nexport const GetStyle = (q) => {\r\n  return {\r\n    marginLeft: q.Rank * 20\r\n  }\r\n}\r\n\r\nexport const GetIsHaveSub = (q) => {\r\n  return q.SubItems.length !== 0;\r\n}\r\n\r\nexport const GetToggleButtonContent = (q) => {\r\n  return q.IsShowSub ? '-' : '+';\r\n}\r\n\r\nexport const GetFieldSelectVM = (q) => {\r\n  var dict = q.Table.Dict.Dict;\r\n  var storageList = dict.MassItemField_Dict;\r\n\r\n  var obj = selectUtil.get(storageList, q.Field);\r\n\r\n  obj.TitleRender = (v) => v.Name;\r\n  obj.Placeholder = 'chọn nhóm'\r\n  obj.IsDisabled = !q.IsCreatedByUser\r\n\r\n  obj.OnSelectedItemChanged = (v) => q.TempField = v?.Value;\r\n  return obj;\r\n}\r\n\r\nexport const GetSubFieldSelectVM = (q) => {\r\n  var dict = q.Table.Dict.Dict;\r\n  var storageList = dict.MassItemField_Dict;\r\n  \r\n  var obj = multiSelectUtil.get(storageList, undefined);\r\n  obj.TitleRender = (v) => v.Name;\r\n  obj.Placeholder = 'chọn phân nhóm'\r\n  obj.OnSelectedItemChanged = (v) =>\r\n    q.TempSubFields = v.map(x => x.Value);\r\n  return obj;\r\n}\r\n\r\nexport const Order = (list) => {\r\n  if (list.length === 0) return list;\r\n\r\n  var firstRow = list[0]\r\n  var mgi = firstRow.OrderMGI;\r\n  if (!mgi.IsHaveValueOrder) return list;\r\n\r\n  var orderValues = mgi.OrderValues;\r\n  return list.sort((a, b) => {\r\n    return orderValues.indexOf(a.FullValue) - orderValues.indexOf(b.FullValue);\r\n  });\r\n}\r\n\r\nexport const Handle_Title = (q) => {\r\n  var field = q.MassGroupItem.Field;\r\n  if (field !== mif.level) {\r\n    q.Title = q.Name;\r\n  } else {\r\n    // Xử lý phần tiêu đề của Row dựa trên Name và thông tin Tầng điển hình\r\n    var list = [];\r\n    var handledCount = 0;\r\n    var count = q.Cells.length;\r\n\r\n    const handle_LS = (ls) => {\r\n      if (ls.Description) {\r\n        q.Title = ls.Description;\r\n      } else {\r\n        ls.OnGetLevelStorageList_Funcs.push(() => {\r\n          q.Title = ls.Description;\r\n        })\r\n      }\r\n    }\r\n\r\n    const handle_Val = (val) => {\r\n      handledCount++;\r\n      list.push.apply(list, val);\r\n      if (handledCount === count) {\r\n        if (list.length === 1) {\r\n          handle_LS(list[0]);\r\n        } else {\r\n          q.Title = q.Name;\r\n        }\r\n      }\r\n    }\r\n\r\n    q.Cells.forEach(x => {\r\n      if (x.TLS_LevelGroups) {\r\n        handle_Val(x.TLS_LevelGroups);\r\n      } else {\r\n        x.OnGet_TLS_LevelGroups_Funcs.push(() => {\r\n          handle_Val(x.TLS_LevelGroups);\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const GetLocationSelectVM = (q) => {\r\n  var obj = selectUtil.get([], undefined);\r\n  obj.Placeholder = 'chọn vị trí'\r\n  obj.TitleRender = (item) => {\r\n    var marginLeft = item.Rank * 15;\r\n    return <div\r\n      style={{ marginLeft }}>\r\n      {item.Title}\r\n    </div>\r\n  }\r\n  obj.OnSelectedItemChanged = (v) => {\r\n    var factory = q.ReplaceFactory;\r\n    factory.ReferenceRow = v;\r\n  }\r\n  return obj;\r\n}\r\n\r\nexport const GetOriginal_SubMassGroupItem = (q) => {\r\n  var subItems = q.SubItems;\r\n  if (subItems.length === 0) return undefined;\r\n  return subItems[0].MassGroupItem;\r\n}\r\n\r\nexport const GetReplace_SubMassGroupItem = (q) => {\r\n  var subItems = q.SubItems;\r\n  if (subItems.length === 0) return undefined;\r\n  return subItems[0].ReplaceMGI;\r\n}\r\n\r\nexport const GetSubFields = (q) => {\r\n  var subMGI = q.SubMassGroupItem;\r\n  if (!subMGI) return [];\r\n  var mgis = subMGI.SupComponent.Items;\r\n\r\n  var lastValidIndex = -1;\r\n  var isValidHandle = true\r\n  mgis.forEach((x, i) => {\r\n    if (isValidHandle && x.HaveMassItemSubComponents.length === 0) {\r\n      lastValidIndex = i;\r\n    } else {\r\n      isValidHandle = false;\r\n    }\r\n  })\r\n\r\n  var currentIndex = mgis.indexOf(q.MassGroupItem);\r\n  if (lastValidIndex === -1) return [subMGI.Field];\r\n  var fields = mgis.filter((x, i) =>\r\n    (currentIndex === -1 || currentIndex < i) &&\r\n    i <= lastValidIndex)\r\n    .map(x => x.Field);\r\n  return fields;\r\n}\r\n\r\n// MassGroupItem phụ để đặt đầu mục được tạo mới\r\nexport const CreateSubMassGroupItem = (q, handleUndo) => {\r\n  // Undo setup\r\n  var undoFuncs\r\n  if (handleUndo) {\r\n    undoFuncs = []\r\n    handleUndo(() => {\r\n      undoFuncs.forEach(x => x())\r\n    })\r\n  }\r\n\r\n  var filter = new EntFilter();\r\n  filter.ValueType = fvt.bystring;\r\n  filter.StringFilterType = sft.byequal;\r\n  filter.Values = [q.FullValue];\r\n\r\n  var supMgi = q.MassGroupItem;\r\n\r\n  var mgc = undefined;\r\n  var mgcIndex = supMgi.SubComponents\r\n    .findIndex(x => genUtil.IsSameValues(x.Filter.Values, filter.Values));\r\n\r\n  if (mgcIndex !== -1) {\r\n    mgc = supMgi.SubComponents[mgcIndex]\r\n  } else {\r\n    mgc = new MassGroupComponent();\r\n    mgc.SubItem = supMgi;\r\n    mgc.Filter = filter;\r\n\r\n    // Undo\r\n    if (undoFuncs) {\r\n      var list = supMgi.SubComponents\r\n      undoFuncs.push(() => {\r\n        list.splice(list.length - 1, 1);\r\n      })\r\n    }\r\n    // Do\r\n    supMgi.SubComponents.push(mgc);\r\n  }\r\n\r\n  var mgi = mgiUtil.get(null, null, mgc);\r\n  mgc.Items = [mgi];\r\n\r\n  // Undo\r\n  if (undoFuncs) {\r\n    var oldSubMassGroupItem = q.SubMassGroupItem;\r\n    undoFuncs.push(() => {\r\n      q.SubMassGroupItem = oldSubMassGroupItem\r\n    })\r\n  }\r\n  // Do\r\n  q.SubMassGroupItem = mgi;\r\n  return mgi;\r\n}\r\n\r\nexport const Add = (supRow, table) => {\r\n  var undoFuncs = []\r\n  var undo = () => {\r\n    undoFuncs.forEach(x => x())\r\n  }\r\n\r\n  var mgi = supRow ?\r\n    (supRow.SubMassGroupItem ? supRow.SubMassGroupItem :\r\n      CreateSubMassGroupItem(supRow, (undo) => {\r\n        undoFuncs.push(undo)\r\n      }))\r\n    : table.MainMGI;\r\n\r\n  var mgi_I = mgi_iUtil.create(mgi, mgii_ct.byuser);\r\n\r\n  // Thêm trường SupValue để xác định SupRow \r\n  // trong trường hợp SupRow.CurrentList.length !== 0\r\n  mgi_I.SupValue = supRow?.Name;\r\n\r\n  // Undo\r\n  undoFuncs.push(() => {\r\n    mgi.Items.splice(mgi.Items.length - 1, 1);\r\n  })\r\n  // Do\r\n  mgi.Items.push(mgi_I);\r\n\r\n  var row = get(mgi_I.Value, table);\r\n  row.FullValue = mgi_I.Value;\r\n  row.IsCreatedByUser = true;\r\n\r\n  // Lấy thông tin Cell vì hiện tại đang bị lỗi khi render\r\n  var obj = row.Cells\r\n\r\n  row.MassGroupItem = mgi;\r\n  row.SupItem = supRow;\r\n\r\n  // Undo\r\n  undoFuncs.push(() => {\r\n    row.CurrentList.splice(row.CurrentList.length - 1, 1);\r\n  })\r\n  // Do\r\n  row.CurrentList.push(row);\r\n\r\n  row.Editable_TitleVM.RenderState = trs.edit;\r\n\r\n  // CommandDict for Undo\r\n  table.CommandDict.Add({\r\n    Key: tct.addrow,\r\n    Undo: undo\r\n  })\r\n\r\n  return row;\r\n}\r\n\r\nexport const Get_Original_SupRow = (q) => {\r\n  if (q.IsGet_Original_SupRow) return undefined;\r\n  q.IsGet_Original_SupRow = true;\r\n\r\n  return q.SupItem;\r\n}\r\n\r\nexport const Get_Original_Full_SupRows = (q) => {\r\n  var list = [];\r\n  var supItem = q.Original_SupRow;\r\n\r\n  while (supItem) {\r\n    list.push(supItem);\r\n    supItem = supItem.Original_SupRow;\r\n  }\r\n\r\n  list.reverse();\r\n  return list;\r\n}\r\n\r\n// Aditional Infomation\r\nexport const Get_IsHaveAdditionInformation = (q) => {\r\n  return q.IsReplaced ? true : false\r\n}\r\n\r\nexport const Get_AdditionInformation = (q) => {\r\n  var obj = q.Original_Full_SupRows.reduce((a, x, i) => {\r\n    if (i != 0) {\r\n      a += ' > '\r\n    }\r\n    a += x.Title;\r\n    return a;\r\n  }, '')\r\n\r\n  return obj;\r\n}\r\n\r\nexport const GetHoverData = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n  qI.VisibleType = d_vt.hidden\r\n  qI.BlankStyle = 'massrow__hover__blank'\r\n  qI.Retrieve_WrapperView = () => q.ToolElement.View\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Get_ToolElement = (q) => {\r\n  var qI = new MassRow_ToolElement();\r\n\r\n  qI.Dict = q;\r\n\r\n  return qI;\r\n}\r\n\r\n// Cells\r\nexport const Get_Cells = (q) => {\r\n  // if (!q.IsCreatedByUser) return [];\r\n  var table = q.Table;\r\n\r\n  var list = table.Columns.map(x => {\r\n    var qI = new MassCell();\r\n    qI.Column = x;\r\n    qI.Row = q;\r\n    qI.Dict = table;\r\n\r\n    table.Cells.push(qI);\r\n\r\n    return qI;\r\n  });\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetIsShow_RawValue = (q) => {\r\n  return !q.IsCreatedByUser && q.RawValue !== q.Title;\r\n}\r\n\r\n// Unit\r\nexport const Get_DefaultUnit = (q) => {\r\n  var unit\r\n  var isDone = false\r\n\r\n  if (q.SubItems.length !== 0) {\r\n    q.SubItems.forEach(x => {\r\n      if (!isDone) {\r\n        if (unit === undefined) {\r\n          unit = x.Unit;\r\n        }\r\n\r\n        if (!unit || unit !== x.Unit) {\r\n          unit = undefined\r\n          isDone = true;\r\n        }\r\n      }\r\n    })\r\n  } else {\r\n    unit = ut.each;\r\n  }\r\n\r\n  return unit;\r\n}\r\n\r\nexport const GetUnitData = (q) => {\r\n  var qI = new MR_Unit();\r\n  qI.Dict = q;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDeleteData = (q) => {\r\n  var qI = new MR_Delete();\r\n  qI.Host = q;\r\n  return qI;\r\n}\r\n\r\nexport const GetUpdate = (q) => {\r\n  var qI = new MR_Update();\r\n  qI.Host = q\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSite = (q) => {\r\n  return siteVMUtil.get(siteUtil.get(q), q);\r\n}\r\n\r\nexport const GetEditable_TitleVM = (q) => {\r\n  var qI = editTextUtil.get(q.Title);\r\n\r\n  qI.Is_Tool_Visible = false\r\n  qI.OnKeyDown = (e) => {\r\n    var { key, value } = inputUtil.Get_Shortcut(e);\r\n    switch (key) {\r\n      case inputUtil.enter:\r\n        qI.RenderState = trs._default\r\n        break\r\n      case inputUtil.esc:\r\n        qI.IsEscape = true;\r\n        qI.RenderState = trs._default\r\n        break;\r\n    }\r\n  }\r\n\r\n  genUtil.Add(\r\n    qI.OnSet_RenderState_Func_Dict,\r\n    () => {\r\n      if (qI.RenderState === trs._default) {\r\n        if (qI.IsEscape){\r\n          qI.Content = q.Title\r\n          qI.IsEscape = false\r\n          return;\r\n        }\r\n\r\n        if (qI.Content === q.Title) return;\r\n\r\n        // Undo\r\n        var undoFuncs = []\r\n        q.Table.CommandDict.Add({\r\n          Key: tct.renamerow,\r\n          Undo: () => {\r\n            undoFuncs.forEach(x => x())\r\n          }\r\n        })\r\n\r\n        var oldIsShow_RawValue = q.IsShow_RawValue\r\n\r\n        // Lưu thông tin Title\r\n        // Undo\r\n        var oldTitle = q.Title;\r\n        undoFuncs.push(() => q.Title = oldTitle);\r\n        // Do\r\n        var title = q.title = qI.Content;\r\n\r\n        // Undo\r\n        undoFuncs.push(() => {\r\n          q.IsShow_RawValue = oldIsShow_RawValue\r\n        });\r\n        // Do\r\n        q.IsShow_RawValue = GetIsShow_RawValue(q);\r\n\r\n        var mgii = q.MassGroupItem.GetItem(q.FullValue, (undo) =>\r\n          undoFuncs.push(undo))\r\n        // Undo\r\n        var oldMgii_Title = mgii.Title;\r\n        undoFuncs.push(() => {\r\n          mgii.Title = oldMgii_Title\r\n        })\r\n        // Do\r\n        mgii.Title = title;\r\n\r\n        q.ToolElement.editable_TitleVM_RenderState = qI.RenderState\r\n      }\r\n    },\r\n    false\r\n  )\r\n\r\n  return qI;\r\n}","import * as util from './CommandDictUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class CommandDict {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Data: observable,\r\n    })\r\n  }\r\n\r\n  Data = []\r\n\r\n  MaxLength = 15\r\n\r\n  Add = (data) => {\r\n    var list = this.Data;\r\n    if (list.length === this.MaxLength) {\r\n      list.splice(0, 1);\r\n    }\r\n    list.push(data)\r\n  }\r\n\r\n  Undo = () => {\r\n    var list = this.Data;\r\n    if (list.length === 0) return;\r\n    var length = list.length;\r\n    var q = list.splice(length - 1, 1)[0];\r\n    q.Undo();\r\n  }\r\n\r\n  get ButtonView(){\r\n    return util.GetButtonView(this)\r\n  }\r\n\r\n  get Disabled(){\r\n    return this.Data.length === 0\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nclass UndoView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      //this.state = new UserFormVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var width = this.props.width ? this.props.width : 512\r\n    var height = this.props.height ? this.props.height : 512\r\n    var className = this.props.className\r\n\r\n    return (\r\n      <>\r\n        <svg className={className} width={width} height={height}\r\n          viewBox=\"0 0 25.64 25.64\" >\r\n          <path d=\"M10.385,1.499C10.096,1.378,9.76,1.446,9.537,1.667L0.228,8.98c-0.304,0.302-0.304,0.797,0,1.1\r\n\t\t\tl9.309,7.278c0.148,0.15,0.348,0.229,0.549,0.229c0.102,0,0.203-0.021,0.299-0.059c0.291-0.121,0.465-0.404,0.465-0.719V12.45\r\n\t\t\tc9.955,0,14.309,2.808,13.646,11.751C28.713,9.893,20.619,6.659,10.85,6.659V2.217C10.849,1.902,10.676,1.619,10.385,1.499z\"/>\r\n        </svg>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(UndoView);\r\n","import { CommandDict } from \"./CommandDict\"\r\nimport { Button } from 'antd';\r\nimport UndoView from \"../../../svg/UndoView\";\r\nimport './CommandDict.css'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new CommandDict();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetButtonView = (q) => {\r\n  var size = 12\r\n  return <Button type='primary' size='small'\r\n    className='commanddict__button btn-warning' onClick={q.Undo}\r\n      disabled={q.Disabled}>\r\n      <UndoView width={size} height={size}/>\r\n    </Button>\r\n}","import * as mif from '../../field/MassItemField'\r\nimport MassGroupComponent from '../rowgroup/MassGroupComponent'\r\nimport * as mgiUtil from '../rowgroup/MassGroupItemUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as commandDictUtil from '../command/CommandDictUtil'\r\n\r\nexport const GetMainMGC = (q) => {\r\n  var qI = new MassGroupComponent();\r\n\r\n  var mgi1 = mgiUtil.get(mif.MassType);\r\n  qI.Items = [mgi1];\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetMassGroupName = (q) => {\r\n  return q.MassGroupSetting ? q.MassGroupSetting.Name\r\n    : '';\r\n}\r\n\r\nexport const GetAllRows = (q) => {\r\n  var list = [];\r\n  q.MainRows.forEach(x => {\r\n    list.push.apply(list, x.AllItems)\r\n  });\r\n  return list;\r\n}\r\n\r\nexport const Handle_MainMGI = (q) => {\r\n  if (q.IsGet_MainMGI) return undefined\r\n  q.IsGet_MainMGI = true;\r\n\r\n  const setObj = (data) => {\r\n    var qI = data\r\n    qI.Table = q\r\n    q.MainMGI = qI\r\n  }\r\n\r\n  var host = q.Mgs_Dict_Dict\r\n  if (host.Used_MassGroupItem){\r\n    setObj(host.Used_MassGroupItem)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Used_MassGroupItem_Func,\r\n      () => setObj(host.Used_MassGroupItem)\r\n    )\r\n  }\r\n}\r\n\r\n// backup\r\nexport const GetCommandDict = (q) => {\r\n  return commandDictUtil.get(q)\r\n}","import * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport class ExcelExport {\r\n  workbook\r\n  get Workbook(){\r\n    if (this.Override_Get_Workbook){\r\n      return this.Override_Get_Workbook()\r\n    }\r\n    return this.workbook;\r\n  } set Workbook(v){\r\n    this.workbook = v;\r\n  }\r\n\r\n  fileName\r\n  get FileName() {\r\n    if (this.Override_Get_FileName) {\r\n      return this.Override_Get_FileName();\r\n    }\r\n    return this.fileName;\r\n  } set FileName(v) {\r\n    this.fileName = v;\r\n  }\r\n\r\n  Export = () => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    \r\n    const excelBuffer = XLSX.write(this.Workbook, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, this.FileName + fileExtension);\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './MT_CellUtil'\r\n\r\nexport class MT_Cell {\r\n  // Lấy thứ tự trong lập trình\r\n  row = 0\r\n  get Row(){\r\n    if (this.Override_Get_Row){\r\n      return this.Override_Get_Row();\r\n    }\r\n    return this.row;\r\n  } set Row(v){\r\n    this.row = v;\r\n    this.Override_Get_Row = undefined;\r\n  }\r\n\r\n  // Lấy thứ tự trong lập trình\r\n  column = 0\r\n  get Column(){\r\n    if (this.Override_Get_Column){\r\n      return this.Override_Get_Column();\r\n    }\r\n    return this.column\r\n  } set Column(v){\r\n    this.column = v;\r\n    this.Override_Get_Column = undefined;\r\n  }\r\n\r\n  Type \r\n  Value\r\n\r\n  formula\r\n  get Formula(){\r\n    if (this.Override_Get_Formula){\r\n      return this.Override_Get_Formula();\r\n    }\r\n    return this.formula;\r\n  } set Formula(v){\r\n    this.formula = v;\r\n    this.Override_Get_Formula = undefined;\r\n  }\r\n\r\n  get Address(){\r\n    var obj = genUtil.ExcelCellName(this.Row, this.Column);\r\n    return obj;\r\n  }\r\n\r\n  subItems\r\n  get SubItems(){\r\n    if (!this.subItems){\r\n      this.subItems = util.GetSubItems(this);\r\n    }\r\n    return this.subItems;\r\n  }\r\n\r\n  isContinueSubRows\r\n  get IsContinueSubRows(){\r\n    if (this.isContinueSubRows === undefined){\r\n      this.isContinueSubRows = util.GetIsContinueSubRows(this);\r\n    }\r\n    return this.isContinueSubRows;\r\n  }\r\n\r\n  get ResultData(){\r\n    var obj = {\r\n      t : this.Type,\r\n      v : this.Value,\r\n      f : this.Formula,\r\n      z : this.Format,\r\n      s : this.Style\r\n    }\r\n    return obj;\r\n  }\r\n}","// Property\r\nexport const GetSubItems = (q) => {\r\n  var column = q.Column;\r\n  return q.Dict.SubItems.map(x => {\r\n    var list = x.Cells;\r\n    var index = list.findIndex(y => y.Column === column);\r\n    return index !== -1 ? list[index] : undefined;\r\n  }).filter(x => x !== undefined);\r\n}\r\n\r\nexport const GetIsContinueSubRows = (q) => {\r\n  var isValid = true;\r\n\r\n  q.SubItems.forEach(x => {\r\n    if (isValid && x.SubItems.length !== 0){\r\n      isValid = false;\r\n    }\r\n  })\r\n\r\n  return isValid;\r\n}","import * as util from './MT_Data_RowUtil'\r\n\r\nexport class MT_Data_Row {\r\n  Worksheet\r\n\r\n  Row\r\n\r\n  get Rank(){\r\n    return this.Row.Rank;\r\n  }\r\n\r\n  subItems\r\n  get SubItems(){\r\n    if (!this.subItems){\r\n      this.subItems = util.GetSubItems(this);\r\n    }\r\n    return this.subItems;\r\n  }\r\n\r\n  get FullItems(){\r\n    return util.GetFullItems(this);\r\n  }\r\n\r\n  cells\r\n  get Cells(){\r\n    if (!this.cells){\r\n      this.cells = util.GetCells(this);\r\n    }\r\n    return this.cells;\r\n  }\r\n\r\n  get FullIndex() {\r\n    return this.Worksheet.FullRows.indexOf(this);\r\n  }\r\n\r\n  title\r\n  get Title(){\r\n    if (!this.title){\r\n      this.title = util.GetTitle(this);\r\n    }\r\n    return this.title;\r\n  }\r\n}","export const string = 's'\r\nexport const number = 'n'","import { MT_Cell } from \"./MT_Cell\";\r\nimport { MT_Data_Row } from \"./MT_Data_Row\";\r\nimport * as c_vt from './MT_Cell_ValueType'\r\n\r\n// Instance\r\nexport const get = (row, ws, supItem) => {\r\n  var qI = new MT_Data_Row();\r\n\r\n  qI.Row = row;\r\n  qI.Worksheet = ws;\r\n  qI.SupItem = supItem;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetSubItems = (q) => {\r\n  return q.Row.SubItems.map(x => get(x, q.Worksheet, q));\r\n}\r\n\r\nexport const GetTitle = (q) => {\r\n  var row = q.Row;\r\n  var title = '';\r\n\r\n  for (var i = 0; i < row.Rank; i++) {\r\n    title += '  ';\r\n  }\r\n\r\n  title += row.Title;\r\n\r\n  return title;\r\n}\r\n\r\nexport const GetCells = (q) => {\r\n  var vc_dict = q.ValueCell_Dict = [];\r\n\r\n  var firstCol = q.Worksheet.First_ValueColumn;\r\n  var firstRow = q.Worksheet.First_ValueRow;\r\n\r\n  var row = q.Row;\r\n  var list = []\r\n  var getRowFunc = () => q.FullIndex + firstRow;\r\n\r\n  var titleCell = new MT_Cell();\r\n  titleCell.Dict = q;\r\n  titleCell.Type = c_vt.string;\r\n\r\n  titleCell.Value = q.Title;\r\n  titleCell.Column = 0 + firstCol;\r\n  titleCell.Override_Get_Row = getRowFunc\r\n  list.push(titleCell);\r\n\r\n  var columns = row.Table.Columns\r\n  row.Cells.forEach(x => {\r\n    var valueCell = new MT_Cell()\r\n    valueCell.Dict = q;\r\n    valueCell.Type = c_vt.number;\r\n    valueCell.Value = x.TotalValue\r\n    valueCell.Format = '0.00'\r\n    valueCell.Column = \r\n      columns.indexOf(x.Column) + 1 + firstCol\r\n    valueCell.Override_Get_Row = getRowFunc\r\n\r\n    valueCell.Override_Get_Formula = () => {\r\n      var subItems = valueCell.SubItems;\r\n      var length = subItems.length;\r\n      if (length === 0) return undefined;\r\n\r\n      var formula\r\n      if (!valueCell.IsContinueSubRows) {\r\n        formula = subItems.reduce((a, x, i) => {\r\n          if (i !== 0) {\r\n            a += ','\r\n          };\r\n          a += x.Address\r\n          return a\r\n        }, 'SUM(');\r\n\r\n        formula += ')';\r\n      } else {\r\n        formula = `SUM(${subItems[0].Address}:${subItems[length-1].Address})`\r\n      }\r\n\r\n      return formula;\r\n    }\r\n\r\n    var key = x.Column.Name\r\n    list.push(valueCell);\r\n    vc_dict.push({\r\n      Key: key,\r\n      Value: valueCell\r\n    })\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetFullItems = (q) => {\r\n  var list = [q];\r\n\r\n  q.SubItems.forEach(x => {\r\n    list.push.apply(list, x.FullItems);\r\n  });\r\n\r\n  return list;\r\n}","import * as util from './MT_Data_WorksheetUtil'\r\n\r\nexport class MT_Data_Worksheet {\r\n  get Table(){\r\n    return this.Workbook.Table;\r\n  }\r\n\r\n  Title\r\n\r\n  mainRows\r\n  get MainRows(){\r\n    if (!this.mainRows){\r\n      this.mainRows = util.GetMainRows(this)\r\n    }\r\n    return this.mainRows;\r\n  }\r\n\r\n  fullRows\r\n  get FullRows(){\r\n    if (!this.fullRows){\r\n      this.fullRows = util.GetFullRows(this);\r\n    }\r\n    return this.fullRows;\r\n  }\r\n\r\n  valueCells\r\n  get ValueCells(){\r\n    if (!this.valueCells){\r\n      this.valueCells = util.GetValueCells(this);\r\n    }\r\n    return this.valueCells;\r\n  }\r\n\r\n  titleCells\r\n  get TitleCells(){\r\n    if (!this.titleCells){\r\n      this.titleCells = util.GetTitleCells(this);\r\n    }\r\n    return this.titleCells;\r\n  }\r\n\r\n  allCells\r\n  get AllCells(){\r\n    if (!this.allCells){\r\n      this.allCells = this.TitleCells.concat(this.ValueCells);\r\n    }\r\n    return this.allCells;\r\n  }\r\n\r\n  get RangeName(){\r\n    return util.GetRangeName(this); \r\n  }\r\n\r\n  First_TitleColumn = 0\r\n  First_TitleRow = 0\r\n\r\n  First_ValueColumn = 0;\r\n  First_ValueRow = 1;\r\n\r\n  get ResultData(){\r\n    var obj = {\r\n      '!ref' : this.RangeName\r\n    };\r\n\r\n    this.AllCells.forEach(x => {\r\n      obj[x.Address] = x.ResultData;\r\n    })\r\n\r\n    return obj;\r\n  }\r\n}","import * as rowUtil from './MT_Data_RowUtil'\r\nimport * as c_vt from './MT_Cell_ValueType'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { MT_Cell } from './MT_Cell';\r\n\r\n// Property\r\nexport const GetMainRows = (q) => {\r\n  return q.Table.MainRows.map(x => rowUtil.get(x, q));\r\n}\r\n\r\nexport const GetFullRows = (q) => {\r\n  var list = [];\r\n\r\n  q.MainRows.forEach(x => {\r\n    list.push.apply(list, x.FullItems);\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetValueCells = (q) => {\r\n  var list = [];\r\n\r\n  q.FullRows.forEach(x => {\r\n    list.push.apply(list, x.Cells);\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetTitleCells = (q) => {\r\n  var fc = q.First_TitleColumn;\r\n  var fr = q.First_TitleRow;\r\n\r\n  var list = [];\r\n  q.Table.Columns.forEach((x, i) => {\r\n    var cell = new MT_Cell();\r\n    cell.Type = c_vt.string;\r\n    cell.Value = x.Name;\r\n    cell.Column = i + fc + 1;\r\n    cell.Row = fr\r\n    cell.Style = {\r\n      font : {\r\n        bold : true\r\n      }\r\n    }\r\n\r\n    list.push(cell);\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetRangeName = (q) => {\r\n  var listCells = q.AllCells;\r\n\r\n  var range = listCells.reduce(\r\n    ({ minRow, minCol, maxRow, maxCol }, x) => ({\r\n      minRow: minRow < x.Row ? minRow : x.Row,\r\n      minCol: minCol < x.Column ? minCol : x.Column,\r\n      maxRow: maxRow > x.Row ? maxRow : x.Row,\r\n      maxCol: maxCol > x.Column ? maxCol : x.Column,\r\n    }), {\r\n    minRow: listCells[0].Row, minCol: listCells[0].Column,\r\n    maxRow: listCells[0].Row, maxRow: listCells[0].Column\r\n  });\r\n\r\n  return genUtil.ExcelRangeName\r\n    (range.minRow, range.minCol, range.maxRow, range.maxCol);\r\n}","import * as util from './MT_RawData_WorksheetUtil'\r\n\r\nexport class MT_RawData_Worksheet {\r\n  Workbook\r\n\r\n  get Table() {\r\n    return this.Workbook.Table;\r\n  }\r\n\r\n  Title\r\n\r\n  dataRows\r\n  get DataRows(){\r\n    if (!this.dataRows){\r\n      this.dataRows = util.GetDataRows(this);\r\n    }\r\n    return this.dataRows;\r\n  }\r\n\r\n  tableRows\r\n  get TableRows() {\r\n    if (!this.tableRows) {\r\n      this.tableRows = util.GetTableRows(this);\r\n    }\r\n    return this.tableRows;\r\n  }\r\n\r\n  records\r\n  get Records() {\r\n    if (!this.records) {\r\n      this.records = util.GetRecords(this);\r\n    }\r\n    return this.records\r\n  }\r\n\r\n  InfoFields = []\r\n\r\n  valueFields\r\n  get ValueFields() {\r\n    if (!this.valueFields) {\r\n      this.valueFields = util.GetValueFields(this);\r\n    }\r\n    return this.valueFields;\r\n  }\r\n\r\n  valueCells\r\n  get ValueCells() {\r\n    if (!this.valueCells) {\r\n      this.valueCells = util.GetValueCells(this);\r\n    }\r\n    return this.valueCells\r\n  }\r\n\r\n  titleCells\r\n  get TitleCells(){\r\n    if (!this.titleCells){\r\n      this.titleCells = util.GetTitleCells(this);\r\n    }\r\n    return this.titleCells;\r\n  }\r\n\r\n  allCells\r\n  get AllCells(){\r\n    if (!this.allCells){\r\n      this.allCells = this.TitleCells.concat(this.ValueCells);\r\n    }\r\n    return this.allCells;\r\n  }\r\n\r\n  get RangeName() {\r\n    return util.GetRangeName(this);\r\n  }\r\n\r\n  First_TitleColumn = 0\r\n  First_TitleRow = 0\r\n\r\n  First_ValueColumn = 0;\r\n  First_ValueRow = 1;\r\n\r\n  get ResultData() {\r\n    var obj = {\r\n      '!ref': this.RangeName\r\n    };\r\n\r\n    this.AllCells.forEach(x => {\r\n      obj[x.Address] = x.ResultData;\r\n    })\r\n\r\n    return obj;\r\n  }\r\n}","import { MT_Cell } from \"./MT_Cell\";\r\nimport * as c_vt from './MT_Cell_ValueType'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Property\r\nexport const GetDataRows = (q) => {\r\n  return q.Workbook.Data_WS.FullRows\r\n    .filter(x => x.SubItems.length === 0)\r\n}\r\n\r\nexport const GetTableRows = (q) => {\r\n  return q.DataRows.map(x => x.Row)\r\n}\r\n\r\nexport const GetValueFields = (q) => {\r\n  return q.Table.Columns.map(x => x.Name);\r\n}\r\n\r\nexport const GetRecords = (q) => {\r\n  return q.DataRows.map(x => {\r\n    // Init Cells\r\n    var cells = x.Cells;\r\n\r\n    var obj = x.Row.ExportData;\r\n\r\n    // Xử lý phần sắp xếp  Info Fields\r\n    var infoFields = q.InfoFields;\r\n    obj.Infos.map(x => x.Key).forEach(y => {\r\n      if (!infoFields.includes(y)) {\r\n        infoFields.push(y);\r\n      }\r\n    });\r\n\r\n    return {\r\n      Binding_DataRow: x,\r\n      Value: obj\r\n    }\r\n  })\r\n}\r\n\r\nexport const GetValueCells = (q) => {\r\n  var fc = q.First_ValueColumn;\r\n  var fr = q.First_ValueRow;\r\n\r\n  // Init InfoFiels\r\n  var records = q.Records;\r\n\r\n  var list = [];\r\n  var ifs = q.InfoFields;\r\n  var ifl = ifs.length\r\n  var vfs = q.ValueFields;\r\n\r\n  records.forEach((x, i) => {\r\n    // Truy xuất phần binding\r\n    var vc_dict = x.Binding_DataRow.ValueCell_Dict\r\n\r\n    // Xử lý phần Value Object\r\n    var value = x.Value;\r\n    var cell\r\n    var row = i + fr;\r\n\r\n    // Xử lý Info\r\n    value.Infos.forEach(y => {\r\n      cell = new MT_Cell();\r\n      cell.Type = c_vt.string;\r\n      cell.Value = y.Value;\r\n      cell.Column = ifs.indexOf(y.Key) + fc;\r\n      cell.Row = row\r\n\r\n      list.push(cell);\r\n    })\r\n\r\n    // Xử lý Value\r\n    value.Values.forEach(y => {\r\n      var key = y.Key;\r\n      var cell_val = y.Value;\r\n\r\n      cell = new MT_Cell();\r\n      cell.Type = c_vt.number;\r\n      cell.Value = cell_val;\r\n      cell.Format = '0.00'\r\n      cell.Column = vfs.indexOf(key) + fc + ifl;\r\n      cell.Row = row\r\n\r\n      list.push(cell);\r\n\r\n      // Xử lý phần Binding\r\n      //debugger\r\n      var index = vc_dict.findIndex(z => z.Key === key);\r\n      var data_cell = vc_dict[index].Value;\r\n\r\n      if (cell_val) {\r\n        data_cell.Formula = `raw_data!${cell.Address}`;\r\n      }\r\n    })\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetTitleCells = (q) => {\r\n  // Init InfoFiels\r\n  var records = q.Records;\r\n\r\n  var fc = q.First_TitleColumn;\r\n  var fr = q.First_TitleRow;\r\n\r\n  var fields = q.InfoFields.concat(q.ValueFields)\r\n\r\n  var list = [];\r\n  fields.forEach((x, i) => {\r\n    var cell = new MT_Cell();\r\n    cell.Type = c_vt.string;\r\n    cell.Value = x;\r\n    cell.Column = i + fc;\r\n    cell.Row = fr\r\n    list.push(cell);\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetRangeName = (q) => {\r\n  var listCells = q.AllCells;\r\n\r\n  var range = listCells.reduce(\r\n    ({ minRow, minCol, maxRow, maxCol }, x) => ({\r\n      minRow: minRow < x.Row ? minRow : x.Row,\r\n      minCol: minCol < x.Column ? minCol : x.Column,\r\n      maxRow: maxRow > x.Row ? maxRow : x.Row,\r\n      maxCol: maxCol > x.Column ? maxCol : x.Column,\r\n    }), {\r\n    minRow: listCells[0].Row, minCol: listCells[0].Column,\r\n    maxRow: listCells[0].Row, maxRow: listCells[0].Column\r\n  });\r\n\r\n  return genUtil.ExcelRangeName\r\n    (range.minRow, range.minCol, range.maxRow, range.maxCol);\r\n}","import * as util from './MT_WorkbookUtil'\r\n\r\nexport class MT_Workbook {\r\n  Table\r\n\r\n  get All_WS(){\r\n    return [ this.RawData_WS, this.Data_WS]\r\n    //return [ this.Data_WS, this.RawData_WS]\r\n    //return [ this.Data_WS ]\r\n  }\r\n\r\n  data_WS\r\n  get Data_WS(){\r\n    if (!this.data_WS){\r\n      this.data_WS = util.GetData_WS(this);\r\n    }\r\n    return this.data_WS;\r\n  }\r\n\r\n  rawData_WS\r\n  get RawData_WS(){\r\n    if (!this.rawData_WS){\r\n      this.rawData_WS = util.GetRawData_WS(this);\r\n    }\r\n    return this.rawData_WS;\r\n  }\r\n\r\n  get ResultData (){\r\n    var obj = {\r\n      Sheets : { },\r\n      SheetNames : []\r\n    }\r\n\r\n    this.All_WS.forEach(x => {\r\n      obj.Sheets[x.Title] = x.ResultData\r\n      obj.SheetNames.push(x.Title);\r\n    })\r\n\r\n    return obj;\r\n  }\r\n}","import { MT_Data_Worksheet } from \"./MT_Data_Worksheet\";\r\nimport { MT_RawData_Worksheet } from \"./MT_RawData_Worksheet\";\r\nimport { MT_Workbook } from \"./MT_Workbook\"\r\n\r\n// Instance\r\nexport const get = (table) => {\r\n  var qI = new MT_Workbook();\r\n\r\n  qI.Table = table;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetData_WS = (q) =>{\r\n  var qI = new MT_Data_Worksheet();\r\n\r\n  qI.Workbook = q;\r\n  qI.Title = 'data'\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetRawData_WS = (q) => {\r\n  var qI = new MT_RawData_Worksheet();\r\n\r\n  qI.Workbook = q;\r\n  qI.Title = 'raw_data'\r\n\r\n  return qI;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from \"antd\";\r\n\r\nclass TextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = {\r\n        content: `Nội dung`\r\n      }\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var { content } = this.state;\r\n    var className = this.props.className\r\n    var style = this.props.style\r\n\r\n    return (\r\n      <>\r\n        <span className={className} style={style}>{content}</span>\r\n        {this.getWrapperContent()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TextView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Popover, Row, Select } from \"antd\";\r\nimport MassCell from \"./MassCell\";\r\nimport './MassCell.css'\r\nimport Icon, { InfoCircleOutlined, LinkOutlined } from '@ant-design/icons';\r\n// import MassCell_ValueView from \"./value/MassCell_ValueView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassCellView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassCell();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {/* Đối tượng ẩn để cập nhập màu sắc Cell */}\r\n        {/* <span className='d-none'>\r\n          {data.ContentVM.Content}\r\n        </span> */}\r\n\r\n        <td style={data.TDStyle}>\r\n          <div className='masscell__div'>\r\n            <div className='masscell__value'>\r\n              {data.IsHaveWarning ?\r\n                <Popover trigger='hover'\r\n                  content={<div>\r\n                    {data.TLS_LevelGroup_Descriptions ?\r\n                      data.TLS_LevelGroup_Descriptions.map(x => {\r\n                        return <span key={x}>{x}</span>\r\n                      })\r\n                      : ''}\r\n                  </div>}>\r\n                  <InfoCircleOutlined className='masscell__warningicon' />\r\n                </Popover>\r\n                : ''}\r\n              <div style={data.AStyle}>\r\n                {data.CurrentTotalValueItem?.ValueString}\r\n              </div>\r\n\r\n              <a className='masscell__linkdetail' onClick={data.ShowDetail}>\r\n                <LinkOutlined />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassCellView)","import React, { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from \"antd\";\r\nimport { EditableTextVM } from \"./EditableTextVM\";\r\nimport './Text.css'\r\n\r\nclass EditableTextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EditableTextVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    data.ClassName = this.props.className ? this.props.className : ''\r\n    data.Style = this.props.style\r\n\r\n    data.OnFocus = data.OnFocus ?\r\n      data.OnFocus : this.props.onFocus\r\n\r\n    data.OnDoubleClick = data.OnDoubleClick ?\r\n      data.OnDoubleClick : this.props.onDoubleClick\r\n\r\n    data.OnClick = data.OnClick ?\r\n      data.OnClick : this.props.onClick\r\n\r\n    return (\r\n      <>\r\n        {data.Render()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EditableTextView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select, Space } from \"antd\";\r\nimport SelectView from \"../../../../../../select/SelectView\";\r\nimport { MR_Unit } from \"./MR_Unit\";\r\nimport './MR_Unit.css'\r\n\r\nconst { Option } = Select;\r\n\r\nclass MR_UnitView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MR_Unit();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <td className='massrow__unit__td'\r\n          onMouseEnter={data.OnMouseEnter}\r\n          onMouseLeave={data.OnMouseLeave}>\r\n          {data.MainView}\r\n        </td>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MR_UnitView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select, Space } from \"antd\";\r\nimport TextView from \"../../../../../../text/TextView\";\r\nimport MassRow from \"./MassRow\";\r\nimport MassCellView from \"../../cell/MassCellView\";\r\nimport EditableTextView from \"../../../../../../text/EditableTextView\";\r\nimport './MassRow.css'\r\nimport MR_UnitView from \"../unit/MR_UnitView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassRowView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassRow();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var toggleButton = data.IsHaveSub ?\r\n      <Button size='small' style={{ marginRight: 5, minWidth: 25 }} type='primary'\r\n        onClick={data.ToggleSub}>\r\n        <TextView store={data.ToggleButtonContentVM} />\r\n      </Button>\r\n      : <div style={{ padding: '0 15.5px' }} />;\r\n\r\n    return (\r\n      <>\r\n        <tr>\r\n          <th scope=\"row\" >\r\n            <div className='massrow__title__wrapper'\r\n              style={data.Style}\r\n              onMouseEnter={data.ShowHover}\r\n              onMouseLeave={data.HideHover}>\r\n              {toggleButton}\r\n\r\n              <div className='f1 f-ac'>\r\n                <span onDoubleClick={data.EditTitle}>\r\n                  <EditableTextView store={data.Editable_TitleVM} />\r\n                </span>\r\n\r\n                {data.IsHave_Addition_Wrapper ?\r\n                  <div className='massrow__addition__wrapper'>\r\n                    {data.AdditionInfomation_Element}\r\n                    {data.RawValue_Element}\r\n                  </div>\r\n                  : ''}\r\n              </div>\r\n\r\n              <div className='massrow__hover__wrapper'>\r\n                {data.HoverData.View}\r\n                {data.ModalElement}\r\n              </div>\r\n            </div>\r\n          </th>\r\n          {data.Cells.map(x => {\r\n            return <MassCellView key={x.id} store={x} />\r\n          })}\r\n\r\n          <MR_UnitView store={data.UnitData} />\r\n        </tr>\r\n\r\n        {data.IsShowSub ? data.SubItems.map((x, i) => {\r\n          return <MassRowView store={x} key={x.id} />\r\n        }) : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassRowView)","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport MassRowView from '../row/base/MassRowView';\r\n\r\nexport class MassTBody {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      rows : observable\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  rows = []\r\n  get Rows() {\r\n    return this.rows\r\n  } set Rows(v){\r\n    this.rows = v;\r\n  }\r\n\r\n  get View() {\r\n    return <tbody>\r\n      {this.Rows ? this.Rows.map((x, i) => {\r\n        return <MassRowView key={x.id} store={x} />\r\n      }) : <tr/>}\r\n    </tbody>\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as mif from '../../field/MassItemField'\r\nimport * as colUtil from '../column/MassColumnUtil'\r\nimport * as rowUtil from '../row/base/MassRowUtil'\r\nimport * as cellUtil from '../cell/MassCellUtil'\r\nimport * as util from './MassTableUtil'\r\nimport { PMData } from '../../../../single/model/PMData';\r\nimport * as filterUtil from '../../../filter/EntFilterUtil'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\nimport dayjs from 'dayjs';\r\nimport * as eeUtil from '../../../../../export/excel/ExcelExportUtil';\r\nimport * as wbUtil from '../export/MT_WorkbookUtil';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as u_sn from '../row/update/MRU_SectionName'\r\nimport * as uc_sn from '../cell/update/MCU_SectionName'\r\nimport * as u_dt from '../../../update/Update_DirectionType'\r\nimport { MassTBody } from '../tbody/MassTBody'\r\n\r\n\r\nexport const pmData = () => PMData.Instance;\r\nexport const pmDataVM = () => PMDataVM.Instance;\r\n\r\nexport default class MassTable {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsValidTable: observable,\r\n      Columns: observable,\r\n      MainRows: observable,\r\n      Cells: observable,\r\n      columnField: observable,\r\n      tbody : observable\r\n    })\r\n  }\r\n\r\n  // id\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  items\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    if (v && v.length !== 0) {\r\n      this.Init();\r\n      this.Build();\r\n      this.IsValidTable = true;\r\n    }\r\n    else {\r\n      this.IsValidTable = false;\r\n    }\r\n  }\r\n\r\n  IsValidTable = false\r\n\r\n  columnField = mif.Project\r\n  get ColumnField() {\r\n    return this.columnField;\r\n  }\r\n  set ColumnField(v) {\r\n    this.columnField = v;\r\n  }\r\n\r\n  Columns = undefined\r\n  FullRows = undefined\r\n  MainRows = undefined\r\n  Cells = undefined\r\n\r\n  Init = () => {\r\n    this.Columns = [];\r\n    this.MainRows = [];\r\n\r\n    this.FullRows = [];\r\n    this.Cells = [];\r\n\r\n    // Reset các dòng tạo bởi người dùng\r\n    this.CreatedByUser_Rows = []\r\n    this.Handled_CreatedByUser_Rows = []\r\n  }\r\n\r\n  get AllRows() {\r\n    return util.GetAllRows(this);\r\n  }\r\n\r\n  GetColumn = (name, data) => {\r\n    var list = this.Columns;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Name === name);\r\n    if (index === -1) {\r\n      item = colUtil.get(name, this, data);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  GetRow = (v, supItem) => {\r\n    var list = undefined;\r\n    if (supItem) {\r\n      list = supItem.SubItems;\r\n    } else {\r\n      list = this.MainRows;\r\n    }\r\n\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Name === v);\r\n    if (index === -1) {\r\n      item = rowUtil.get(v, this);\r\n      item.SupItem = supItem;\r\n\r\n      list.push(item);\r\n      this.FullRows.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  GetCell = (col, row, canAdd = true) => {\r\n    var list = this.Cells;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Column === col && x.Row === row);\r\n    if (index === -1) {\r\n      if (!canAdd) return undefined;\r\n\r\n      item = cellUtil.get(col, row, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  Build = () => {\r\n    const setObj = () => {\r\n      var colField = this.ColumnField;\r\n      if (colField === mif.Phase) {\r\n        pmData().MassResultComp.Phases.forEach(x => {\r\n          var name = mif.GetValueString(x, colField);\r\n          var data = x;\r\n          var col = this.GetColumn(name, data);\r\n        })\r\n      }\r\n\r\n      this.Items.forEach(x => {\r\n        switch (colField) {\r\n          case mif.Phase:\r\n            x.ValidPhasesByInput.forEach(y => {\r\n              this.HandleItem(x, y);\r\n            })\r\n            break;\r\n          default:\r\n            var val = x.GetValue(colField).Value;\r\n            this.HandleItem(x, val);\r\n            break;\r\n        }\r\n      })\r\n    }\r\n\r\n    if (this.MainMGI){\r\n      setObj();\r\n    } else {\r\n      genUtil.Add_2(\r\n        this.OnSet_MainMGI_Func,\r\n        setObj\r\n      )\r\n    }\r\n  }\r\n\r\n  IsOnSaveMassGroup = false;\r\n\r\n  HandledItems = []\r\n  HandledItemPhases = []\r\n\r\n  OnSetHandledRatio_Funcs = []\r\n\r\n  handledRatio\r\n  get HandledRatio() {\r\n    return this.handledRatio;\r\n  } set HandledRatio(v) {\r\n    this.handledRatio = v;\r\n    this.OnSetHandledRatio_Funcs.forEach(x => x(v));\r\n  }\r\n\r\n  AddHandledItems = (item) => {\r\n    if (this.ColumnField !== mif.Phase) {\r\n      this.HandledItems.push(item);\r\n    } else {\r\n      var list = this.HandledItemPhases;\r\n      var index = list.findIndex(x => x.Item === item);\r\n      var obj = undefined;\r\n      if (index === -1) {\r\n        obj = {\r\n          Item: item,\r\n          Count: 0\r\n        };\r\n        list.push(obj);\r\n      } else {\r\n        obj = list[index];\r\n      }\r\n      obj.Count++;\r\n\r\n      if (obj.Count === item.ValidPhasesByInput.length) {\r\n        this.HandledItems.push(item);\r\n      }\r\n    }\r\n\r\n    this.HandledRatio = this.HandledItems.length / this.Items.length;\r\n\r\n    if (this.HandledItems.length === this.Items.length) {\r\n      this.UpdateData();\r\n      this.HandledItems = [];\r\n    }\r\n  }\r\n\r\n  UpdateData = () => {\r\n    // this.MainRows.forEach(x => x.UpdateData());\r\n    this.MainRows = rowUtil.Order(this.MainRows);\r\n\r\n    this.MainRows.forEach(x => {\r\n      x.Update.Run(\r\n        {\r\n          Section: u_sn.celldata,\r\n          Data: { Sections: uc_sn.subcells }\r\n        },\r\n        u_dt.lower\r\n      )\r\n    })\r\n\r\n    this.TBody.Rows = this.MainRows;\r\n    this.IsUpdateDataDone = true;\r\n  }\r\n\r\n  OnIsUpdateDataDone_Funcs = []\r\n\r\n  set IsUpdateDataDone(v) {\r\n    this.OnIsUpdateDataDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  HandleItem = (item, colFieldValue, mgc, initialRow) => {\r\n    var name = mif.GetValueString(colFieldValue, this.ColumnField);\r\n    var data = colFieldValue;\r\n\r\n    var col = this.GetColumn(name, data);\r\n\r\n    var rows = initialRow ? [initialRow] : [];\r\n    var mgc = mgc ? mgc : this.MainMGC;\r\n\r\n    this.HandleRowFieldIndex(item, col, rows, mgc, 0);\r\n  }\r\n\r\n  // Xử lý tạo Row với giá trị tương ứng và Cell bên trong\r\n  GetRow_Value_FieldIndex = (item, col, rows, val, mgc, rowFieldIndex) => {\r\n    var mgis = mgc.Items;\r\n    var itemCount = mgis.length;\r\n    var mgi = mgis[rowFieldIndex];\r\n\r\n    // Sup Row của dòng khối lượng đang xét\r\n    var lastRow = rows.length !== 0 ? rows[rows.length - 1] : undefined\r\n    // mgi.SupRow = lastRow;\r\n    mgi.AddSupRow(lastRow);\r\n\r\n    var rowField = mgi.Field;\r\n    if (!rowField) {\r\n      this.AddHandledItems(item);\r\n      return;\r\n    }\r\n\r\n    var valueString = mif.GetValueString(val, rowField);\r\n    var fullValue = lastRow ? `${lastRow.FullValue}__${valueString}` : valueString;\r\n\r\n    if (mgi.NotIncludeValues.includes(fullValue)) {\r\n      this.AddHandledItems(item);\r\n      return;\r\n    }\r\n\r\n    var row = undefined;\r\n    const addRow = (supRow) => {\r\n      return this.Handle_AddRow(fullValue, supRow);\r\n    }\r\n\r\n    const handleRow = (row) => {\r\n      // Gắn thông tin gốc vào Row\r\n      row.RawValue = valueString;\r\n      row.MassGroupItem = mgi;\r\n      rows.push(row);\r\n\r\n      var subMgcs = mgi.SubComponents;\r\n      var subIndex = subMgcs.findIndex(x =>\r\n        filterUtil.IsValid(x.Filter, fullValue));\r\n      if (subIndex !== -1) {\r\n        mgc = subMgcs[subIndex];\r\n        mgc.IsHaveMassItem = true;\r\n\r\n        rowFieldIndex = -1;\r\n        itemCount = mgc.Items.length;\r\n\r\n        row.SubMassGroupComponent = mgc;\r\n      }\r\n\r\n      var cell = this.GetCell(col, row);\r\n      cell.Items.push(item);\r\n\r\n      if (rowFieldIndex === itemCount - 1) {\r\n        this.AddHandledItems(item);\r\n      } else {\r\n        this.HandleRowFieldIndex(item, col, rows, mgc, rowFieldIndex + 1);\r\n      }\r\n    }\r\n\r\n    var mgiItem = mgi.GetItem(fullValue, valueString);\r\n    var replaceMgi = mgiItem.NewMGI;\r\n    if (replaceMgi) {\r\n      // Lấy thông tin SupName\r\n      var supName = mgiItem.SupValue;\r\n\r\n      // Thêm Value-Title cho MassGroupItem\r\n      replaceMgi.GetItem(fullValue, valueString);\r\n\r\n      // Đính thông tin OriginSupRow cũ\r\n      if (lastRow) {\r\n        lastRow.Is_Original_SupRow = true;\r\n      }\r\n\r\n      this.Handle_ReplaceMGI(replaceMgi, supName, addRow, handleRow, lastRow, item);\r\n    } else {\r\n      row = addRow(lastRow);\r\n      handleRow(row);\r\n    }\r\n  }\r\n\r\n  Handle_AddRow = (fullValue, supRow) => {\r\n    var r1 = this.GetRow(fullValue, supRow);\r\n    r1.FullValue = fullValue;\r\n    return r1;\r\n  }\r\n\r\n  Handle_ReplaceMGI = (replaceMgi, supName, addRow, handleRow, originalSupRow, massItem) => {\r\n    var isGet_SupRow_Done\r\n\r\n    // Lấy SupRow phù hợp có trong ReplaceMGI\r\n    const getSupRow = () => {\r\n      var list = replaceMgi.SupRows;\r\n      var index = list.findIndex(x => x.Name === supName);\r\n      if (index !== -1) {\r\n        isGet_SupRow_Done = true;\r\n        return list[index]\r\n      }\r\n      return undefined;\r\n    }\r\n\r\n    // Thêm Row vào SupRow\r\n    const awaitGetSupRowForAdd = (supRow) => {\r\n      var r2 = addRow(supRow);\r\n      r2.ReplaceMGI = replaceMgi;\r\n\r\n      return r2;\r\n    }\r\n\r\n    // Đính thông tin OriginSupRow\r\n    const setOriginal_SupRow = (row) => {\r\n      row.Original_SupRow = originalSupRow;\r\n      row.IsReplaced = true;\r\n    }\r\n\r\n    // Tổn hợp các Phương thức ở trên\r\n    const fullFunc = () => {\r\n      var sr = getSupRow();\r\n      if (sr) {\r\n        var r = awaitGetSupRowForAdd(sr);\r\n        setOriginal_SupRow(r);\r\n        handleRow(r);\r\n      }\r\n    }\r\n\r\n    fullFunc();\r\n    genUtil.Add_2(\r\n      replaceMgi.On_AddSupRow_Func_Dict,\r\n      () => {\r\n        if (!isGet_SupRow_Done && replaceMgi.NewRow?.Name === supName) {\r\n          fullFunc();\r\n        }\r\n      },\r\n      false);\r\n  }\r\n\r\n  HandleRowFieldIndex = (item, col, rows, mgc, rowFieldIndex) => {\r\n    var rowField = mgc.Items[rowFieldIndex].Field;\r\n\r\n    // NewVersion: trả về data và có xử lý sau đó ko (isHandle ?)\r\n    // Đầu mục từ tạo không có field\r\n    if (!rowField) {\r\n      this.GetRow_Value_FieldIndex(item, col, rows, undefined, mgc, rowFieldIndex);\r\n    } else {\r\n      var data = item.GetValue(rowField, (val) =>\r\n        this.GetRow_Value_FieldIndex(item, col, rows, val, mgc, rowFieldIndex, true));\r\n\r\n      if (!data.IsHandle) {\r\n        var val = data.Value;\r\n        this.GetRow_Value_FieldIndex(item, col, rows, val, mgc, rowFieldIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  // MassGroupSetting\r\n  get MassGroupSetting_DictVM() {\r\n    return pmDataVM().MassGroupSetting_Dict\r\n  }\r\n\r\n  get Mgs_Dict_Dict() {\r\n    return pmData().Mgs_Dict_Dict\r\n  }\r\n\r\n  get MainMGC() {\r\n    return this.Mgs_Dict_Dict.Used_MassGroupComponent\r\n  }\r\n\r\n  OnSet_MainMGI_Func = []\r\n\r\n  mainMGI\r\n  get MainMGI() {\r\n    if (!this.mainMGI){\r\n      util.Handle_MainMGI(this)\r\n    } return this.mainMGI\r\n  } set MainMGI(v){\r\n    this.mainMGI = v\r\n    genUtil.Handle(this.OnSet_MainMGI_Func,\r\n      (v) => this.OnSet_MainMGI_Func = v)\r\n  }\r\n\r\n  AddMainRow = () => {\r\n    return rowUtil.Add(undefined, this);\r\n  }\r\n\r\n  // Excel Export\r\n  get ExportTitle() {\r\n    var text = pmData().CurrentProject?.Name;\r\n    text = text ? text + '_' : '';\r\n\r\n    if (this.ColumnField === mif.Phase) {\r\n      text += 'phase_'\r\n    }\r\n\r\n    const formatedDate = dayjs(Date.now()).format(\"YYMMDD\");\r\n    text += `masstable_${formatedDate}`\r\n    return text;\r\n  }\r\n\r\n  get ExcelWorkbook() {\r\n    return wbUtil.get(this).ResultData;\r\n  }\r\n\r\n  excelExport\r\n  get ExcelExport() {\r\n    if (!this.excelExport) {\r\n      this.excelExport = eeUtil.get(\r\n        undefined, undefined,\r\n        () => this.ExportTitle,\r\n        () => this.ExcelWorkbook);\r\n    }\r\n    return this.excelExport;\r\n  }\r\n\r\n  Export = () => {\r\n    this.ExcelExport.Export();\r\n  }\r\n\r\n  // Lưu trữ các Row tạo bởi người dùng\r\n  // Trước mặt dùng để xử lý lỗi không update TotalValue\r\n  // trong lần đầu tiên truy xuất bảng khối lượng\r\n  CreatedByUser_Rows\r\n  Handled_CreatedByUser_Rows\r\n\r\n  Add_Handled_CreatedByUser_Row = (row) => {\r\n    this.Handled_CreatedByUser_Rows.push(row);\r\n\r\n    if (this.CreatedByUser_Rows.length === this.Handled_CreatedByUser_Rows.length) {\r\n      // Xử lý TotalValue thành công với tất cả các CreatedByUser_Row\r\n    }\r\n  }\r\n\r\n  // Body\r\n  tbody = undefined\r\n  get TBody(){\r\n    if (!this.tbody){\r\n      var obj = this.tbody = new MassTBody();\r\n      obj.Dict = this\r\n    } return this.tbody\r\n  }\r\n\r\n  // Backup\r\n  commandDict\r\n  get CommandDict(){\r\n    if (!this.commandDict){\r\n      this.commandDict = util.GetCommandDict(this)\r\n    } return this.commandDict;\r\n  }\r\n}","import MassColumn from \"./MassColumn\"\r\n\r\nexport const get = (q, dict, data) => {\r\n  var qI = new MassColumn();\r\n\r\n  qI.Name = q;\r\n  qI.Dict = dict;\r\n  qI.Data = data;\r\n  \r\n  return qI;\r\n}","import {ExcelExport} from './ExcelExport'\r\n\r\nexport const get = (fileName, wb, ovrgFileName, ovrgWb) => {\r\n  var qI = new ExcelExport();\r\n\r\n  qI.FileName = fileName;\r\n  qI.Override_Get_FileName = ovrgFileName;\r\n  qI.Workbook = wb;\r\n  qI.Override_Get_Workbook = ovrgWb;\r\n\r\n  return qI;\r\n}","import MassTable from \"../../table/base/MassTable\";\r\n\r\n// Property\r\nexport const GetMassTable = (q) => {\r\n  var qI = new MassTable();\r\n\r\n  qI.OnIsUpdateDataDone_Funcs.push(() => {\r\n    q.IsDataPending = false\r\n  })\r\n  qI.OnSetHandledRatio_Funcs.push((v) => {\r\n    // q1.HandledRatio = v;\r\n    q.HandledRatio = v;\r\n  })\r\n\r\n  qI.Dict = q;\r\n  qI.Items = q.Items;\r\n\r\n  return qI;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { MassTBody } from \"./MassTBody\";\r\n\r\nclass MassTBody_View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassTBody();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.View}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassTBody_View)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport MassTable from \"./MassTable\";\r\nimport './MassTable.css'\r\nimport { DownloadOutlined, SaveFilled } from \"@ant-design/icons\";\r\nimport { PMDataVM } from \"../../../../single/form/PMDataVM\";\r\nimport MassTBody_View from \"../tbody/MassTBody_View\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nclass MassTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassTable();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var columns = data.Columns\r\n    var thElems = columns ? columns.map((x, i) => {\r\n      return <th scope=\"col\" key={x.id} className='text-center masscell_th'>{x.Name}</th>\r\n    }) : '';\r\n\r\n    return (\r\n      <>\r\n        {data.IsValidTable ?\r\n          <>\r\n            <div className=\"masstable__title__wrapper\">\r\n              <h4 className=\"masstable__title\">\r\n                BẢNG TỔNG HỢP KHỐI LƯỢNG\r\n              </h4>\r\n              <div className='masstable__title__tool'>\r\n                {/* Save MassGroupSetting */}\r\n                {pmDataVM().Mgs_Dict_Dict.Save_MGS_View}\r\n\r\n                <Button type='primary' size='small' onClick={data.Export}\r\n                  className='masstable__export'>\r\n                  <DownloadOutlined />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='f-jc'>\r\n              <div className='f'>\r\n                <div className='masstable__undo'>\r\n                  {/* Undo */}\r\n                  {data.CommandDict.ButtonView}\r\n                </div>\r\n\r\n                {/* Table */}\r\n                <table className=\"table table-bordered table-sm masstable\">\r\n                  <thead className=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className='masstitle__th'>\r\n                        <Button onClick={data.AddMainRow} type='primary' size='small'\r\n                          style={{ backgroundColor: '#52c41a', border: 'none' }}>+</Button>\r\n                      </th>\r\n                      {thElems}\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  {/* {data.TBody.View} */}\r\n                  <MassTBody_View key={data.TBody.id} store={data.TBody} />\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </> : ''\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassTableView)","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textUtil from '../../../../../text/TextVMUtil'\r\nimport * as util from './MassItem_DictUtil'\r\nimport MassTableView from \"../../table/base/MassTableView\";\r\n\r\nexport default class MassItem_Dict {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      massTable: observable,\r\n      IsDataPending: observable\r\n    })\r\n  }\r\n\r\n  items\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    this.IsDataPending = true;\r\n    this.MassTable = util.GetMassTable(this)\r\n  }\r\n\r\n  // Table\r\n  massTable = undefined\r\n  get MassTable() {\r\n    if (!this.massTable) {\r\n      this.massTable = util.GetMassTable(this);\r\n    } return this.massTable;\r\n  } set MassTable(v) {\r\n    this.massTable = v\r\n  }\r\n\r\n  get MassTableView() {\r\n    return <MassTableView\r\n      key={this.MassTable?.id}\r\n      store={this.MassTable} />\r\n  }\r\n\r\n  // Loading\r\n  IsDataPending = false;\r\n\r\n  get LoadingSpinTip() {\r\n    return `loading data ... (${(this.HandledRatio * 100).toFixed(1)}%)`;\r\n  }\r\n\r\n  loadingSpinTipVM\r\n  get LoadingSpinTipVM() {\r\n    if (!this.loadingSpinTipVM) {\r\n      this.loadingSpinTipVM = textUtil.get(this.LoadingSpinTip);\r\n    }\r\n    return this.loadingSpinTipVM;\r\n  }\r\n\r\n  handledRatio = 0\r\n  get HandledRatio() {\r\n    return this.handledRatio;\r\n  }\r\n  set HandledRatio(v) {\r\n    this.handledRatio = v;\r\n    this.LoadingSpinTipVM.Content = this.LoadingSpinTip;\r\n  }\r\n}","import { PMData } from \"../../../single/model/PMData\";\r\nimport MassItem_Dict from \"../item/base/MassItem_Dict\"\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Property\r\nexport const GetMassItem_Dict = (q) => {\r\n  var qI = new MassItem_Dict();\r\n  qI.Dict = q;\r\n  return qI;\r\n}\r\n\r\nexport const GetMassGroupField_Dict = (q) => {\r\n  return q.Projects.length === 0 && !q.IsHavePhase ?\r\n    pmData().MIF_Dict_ForMassGroup : pmData().MIF_Dict_ForInput\r\n}\r\n\r\n// Method\r\nexport const GetApiData = (q) => {\r\n  var skip;\r\n  var take;\r\n\r\n  // skip = 0;\r\n  // take = 10;\r\n\r\n  var obj = {\r\n    projectIds :  pmData().CurrentProject ? \r\n      [ pmData().CurrentProject._id ] : q.Projects.map(x => x._id),\r\n    phaseIds : q.IsHavePhase ? q.Phases.map(x => x._id) : undefined,\r\n    skip : skip,\r\n    take : take\r\n  }\r\n  \r\n  return obj;\r\n}","import * as util from './MassResultCompUtil'\r\nimport * as massItemUtil from '../item/base/MassItemUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as mif from '../field/MassItemField'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassResultComp {\r\n  Projects = []\r\n\r\n  Phases = []\r\n\r\n  get ApiData() {\r\n    return util.GetApiData(this);\r\n  }\r\n\r\n  massItem_Dict\r\n  get MassItem_Dict(){\r\n    if (!this.massItem_Dict){\r\n      this.massItem_Dict = util.GetMassItem_Dict(this);\r\n    }\r\n    return this.massItem_Dict;\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  isHavePhase = false\r\n  get IsHavePhase(){\r\n    return this.isHavePhase;\r\n  }\r\n  set IsHavePhase(v){\r\n    this.isHavePhase = v;\r\n    if (v){\r\n    this.MassItem_Dict.MassTable.ColumnField = mif.Phase\r\n    }else{\r\n      this.MassItem_Dict.MassTable.ColumnField = mif.Project\r\n    }\r\n  }\r\n\r\n  MassItemField_Dict\r\n\r\n  GetMassData = () => {\r\n    // Refresh MGC và MGI\r\n    var q1 = pmData().Mgs_Dict_Dict\r\n    q1.Used_MassGroupComponent = undefined\r\n    q1.Used_MassGroupItem = undefined\r\n\r\n    var dict = this.MassItem_Dict;\r\n    dict.IsDataPending = true;\r\n\r\n     // Gắn thông tin truy xuất lần đầu hay không\r\n     if (pmData().Is_First_Get_MassTable === undefined){\r\n      // undefined => truy xuất lần đầu\r\n      pmData().Is_First_Get_MassTable = true;\r\n    } else {\r\n      // có giá trị => không phải lần đầu\r\n      pmData().Is_First_Get_MassTable = false;\r\n    }\r\n\r\n    massItemUtil.getAll(this.ApiData, (items) => {\r\n      // Setup MassItemField\r\n      this.MassItemField_Dict = util.GetMassGroupField_Dict(this)\r\n\r\n      // Setup Table Data\r\n      var dict = this.MassItem_Dict;\r\n\r\n      dict.MassGroupSetting = this.MassGroupSetting ? \r\n        this.MassGroupSetting : undefined;\r\n      dict.Items = items;\r\n      \r\n      this.GetItemsDone = true;\r\n    })\r\n  }\r\n}","\r\nexport default class VCS_Item{\r\n  Color\r\n  Filter\r\n}","import * as util from './VersionCompareSettingUtil'\r\n\r\nexport default class VersionCompareSetting{\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems();\r\n    }\r\n    return this.items;\r\n  }\r\n}","import { EntFilter } from '../../filter/EntFilter'\r\nimport * as fvt from '../../filter/FilterValueType'\r\nimport * as nft from '../../filter/NumberFilterType'\r\nimport VCS_Item from \"./VCS_Item\";\r\n\r\nexport const GetItems = (q) => {\r\n  var list = [];\r\n\r\n  // < 80\r\n  var item = new VCS_Item();\r\n  item.Color = '#1956c9';\r\n\r\n  var filter = new EntFilter();\r\n  filter.ValueType = fvt.bynumber;\r\n  filter.NumberFilterType = nft.bysmaller;\r\n  filter.Values = [ 0.80 ];\r\n  item.Filter = filter;\r\n\r\n  list.push(item);\r\n\r\n  // 80 -85\r\n  item = new VCS_Item();\r\n  item.Color = '#3f79d6';\r\n\r\n  filter = new EntFilter();\r\n  filter.ValueType = fvt.bynumber;\r\n  filter.NumberFilterType = nft.bybetween;\r\n  filter.IsEqualLeft = true;\r\n  filter.Values = [ 0.80, 0.85 ];\r\n  item.Filter = filter;\r\n\r\n  list.push(item);\r\n\r\n   // 85 -90\r\n   item = new VCS_Item();\r\n   item.Color = '#6f9fe9';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.85, 0.90 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 90 -95\r\n   item = new VCS_Item();\r\n   item.Color = '#a5c2f2';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.9, 0.95 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 95 -100\r\n   item = new VCS_Item();\r\n   item.Color = '#c9d9f6';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualLeft = true;\r\n   filter.Values = [ 0.95, 1 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 100 -105\r\n   item = new VCS_Item();\r\n   item.Color = '#f3cccc';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualRight = true;\r\n   filter.Values = [ 1, 1.05 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n   // 105 -110\r\n   item = new VCS_Item();\r\n   item.Color = '#e9999a';\r\n \r\n   filter = new EntFilter();\r\n   filter.ValueType = fvt.bynumber;\r\n   filter.NumberFilterType = nft.bybetween;\r\n   filter.IsEqualRight = true;\r\n   filter.Values = [ 1.05, 1.10 ];\r\n   item.Filter = filter;\r\n \r\n   list.push(item);\r\n\r\n    // 110 -115\r\n    item = new VCS_Item();\r\n    item.Color = '#de6568';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybetween;\r\n    filter.IsEqualRight = true;\r\n    filter.Values = [ 1.10, 1.15 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    // 110 -115\r\n    item = new VCS_Item();\r\n    item.Color = '#c90010';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybetween;\r\n    filter.IsEqualRight = true;\r\n    filter.Values = [ 1.15, 1.20 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    // 115 -120\r\n    item = new VCS_Item();\r\n    item.Color = '#980009';\r\n  \r\n    filter = new EntFilter();\r\n    filter.ValueType = fvt.bynumber;\r\n    filter.NumberFilterType = nft.bybigger;\r\n    filter.Values = [ 1.20 ];\r\n    item.Filter = filter;\r\n  \r\n    list.push(item);\r\n\r\n    return list;\r\n}","export class TrackingItem{\r\n  Values = []\r\n\r\n  Count = 0\r\n}","import * as genUtil from '../../../../util/generalUtil'\r\nimport { TrackingItem } from './TrackingItem';\r\n\r\nexport class Tracking{\r\n  Items = []\r\n\r\n  AddItem = (values) => {\r\n    var list = this.Items;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => genUtil.IsSameValues(x.Values, values));\r\n    if (index === -1){\r\n      item = new TrackingItem();\r\n      item.Values = values;\r\n      list.push(item);\r\n    } else {\r\n      item = list[index];\r\n    }\r\n\r\n    item.Count ++;\r\n    return item;\r\n  }\r\n}","import * as mif from './MassItemField'\r\nimport * as sft from '../site/Site_FieldType'\r\n\r\nexport const GetForMassGroup = () => {\r\n  return mif.GetForMassGroup().map(x => {\r\n    return {\r\n      _id: x,\r\n      Name: mif.GetName(x),\r\n      Value: x\r\n    }\r\n  })\r\n}\r\n\r\nexport const GetForDetail = () => {\r\n  return mif.GetForDetail().map(x => {\r\n    return {\r\n      _id: x,\r\n      Name: mif.GetName(x),\r\n      Value: x\r\n    }\r\n  })\r\n}\r\n\r\nexport const GetForInput = () => {\r\n  return mif.GetForInput().map(x => {\r\n    return {\r\n      _id: x,\r\n      Name: mif.GetName(x),\r\n      Value: x\r\n    }\r\n  })\r\n}","import { message } from 'antd'\r\nimport * as api from '../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport default class Setting{\r\n  name\r\n  get Name(){\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    if (this.OnNameChanged){\r\n      this.OnNameChanged(v);\r\n    }\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    return this.description;\r\n  }\r\n  set Description(v){\r\n    this.description = v;\r\n    if (this.OnDescriptionChanged){\r\n      this.OnDescriptionChanged(v);\r\n    }\r\n  }\r\n\r\n  SettingType\r\n\r\n  data\r\n  get Data(){\r\n    return this.data;\r\n  }\r\n  set Data(v){\r\n    this.data = v;\r\n    if (this.OnDataChanged){\r\n      this.OnDataChanged(v);\r\n    }\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.Name;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    var {_id} = this;\r\n    var apiData = {_id};\r\n\r\n    var  url = \"https://api.bimdev.vn/api/hbs/delete\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => message.success('Delete setting successfully'))\r\n\r\n    this.Dict.Items.splice(this.Index, 1);\r\n\r\n    if (this.OnDelete){\r\n      this.OnDelete();\r\n    }\r\n\r\n    this.Dict.Input.EditItemId = undefined;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      _id : this._id,\r\n      projectId : this.Project?._id,\r\n      settingType : this.SettingType,\r\n      name : this.Name,\r\n      description : this.Description,\r\n      data : this.Data.ApiData\r\n    }\r\n  }\r\n\r\n  SaveDatabase = (handle) => {\r\n    genUtil.SaveDatabase(this, this.Url, (data, isNew) => {\r\n      var list = this.Dict.Items;\r\n      if (isNew) {\r\n        list.push(this);\r\n      } else {\r\n        var index = list.indexOf(x => x._id === this._id);\r\n        list[index] = this;\r\n      }\r\n\r\n      if (handle){\r\n        handle(data, isNew);\r\n      }\r\n    });\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './LevelGroupUtil'\r\n\r\nexport class LevelGroup {\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.LevelGroups.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.LevelGroups.splice(this.Index, 1);\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      levels : this.Levels ? this.Levels : [],\r\n      primary: this.Primary\r\n    }\r\n  }\r\n\r\n  get Count(){\r\n    return this.Levels.length\r\n  }\r\n\r\n\r\n  OnGetLevelStorageList_Func_Dict = []\r\n  get GetLevelStorageList(){\r\n    return this.getLevelStorageList;\r\n  }\r\n  set GetLevelStorageList(v){\r\n    this.getLevelStorageList = v;\r\n    this.OnGetLevelStorageList_Func_Dict.forEach(x => x.Value())\r\n  }\r\n\r\n  IsGet_LevelStorageList\r\n\r\n  get LevelStorageList (){\r\n    var obj = this.Dict.LevelStorageList;\r\n    if (!obj && !this.IsGet_LevelStorageList){\r\n      this.IsGet_LevelStorageList = true;\r\n      this.Setting.OnGetLevelStorageList_Funcs.push(() => {\r\n        this.GetLevelStorageList = true\r\n      });\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  get Setting (){\r\n    return this.Dict.Setting;\r\n  }\r\n\r\n  get LevelIndexs(){\r\n    return this.Levels.map(x => this.LevelStorageList.indexOf(x));\r\n  }\r\n\r\n  get MinLevel(){\r\n    var list = this.LevelStorageList;\r\n    return list[Math.min.apply(Math, this.LevelIndexs)]\r\n  }\r\n\r\n  get MaxLevel(){\r\n    var list = this.LevelStorageList;\r\n    return list[Math.max.apply(Math, this.LevelIndexs)]\r\n  }\r\n\r\n  get Description(){\r\n    if (!this.LevelStorageList) return undefined;\r\n    return `Typ: ${this.MinLevel} - ${this.MaxLevel} (${this.Count})`;\r\n  }\r\n\r\n  get FullDescription() {\r\n    if (!this.Description) return undefined;\r\n    return `${this.Dict.FilterDescription} (${this.Description})`;\r\n  }\r\n\r\n  primary\r\n  get Primary(){\r\n    if (!this.primary){\r\n      this.primary = util.GetDefaultPrimary(this);\r\n    }\r\n    return this.primary\r\n  } set Primary(v){\r\n    this.primary = v;\r\n  }\r\n\r\n  get Primary_Values(){\r\n    return util.GetPrimary_Values(this);\r\n  }\r\n}","import { LevelGroup } from \"./LevelGroup\"\r\n\r\n// Instance\r\nexport const get = (data, dict) => {\r\n  var qI = new LevelGroup();\r\n\r\n  if (Array.isArray(data)) {\r\n    qI.Levels = data;\r\n  } else {\r\n    qI.Levels = data.levels;\r\n    qI.Primary = data.primary\r\n  }\r\n\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new LevelGroup();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefaultPrimary = (q) => {\r\n  if (q.Levels && q.Levels.length !== 0) {\r\n    return q.Levels[0];\r\n  }\r\n}\r\n\r\nexport const GetPrimary_Values = (q) => {\r\n  var primary = q.Primary;\r\n  var list = q.Setting.Binding.Items;\r\n\r\n  var index = list.findIndex(x => x.Name === primary);\r\n  return index !== -1 ? list[index].Values : []\r\n}","export const input = 'input'\r\nexport const select = 'select'","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as it from './TLS_FilterValue_InputType'\r\n\r\nexport class TLS_FilterValue {\r\n  value\r\n  get Value(){\r\n    return this.value;\r\n  } set Value(v) {\r\n    this.value = v;\r\n  }\r\n  \r\n  InputType = it.select\r\n\r\n  get ApiData(){\r\n    var obj = {\r\n      value: this.Value,\r\n      inputType : this.InputType\r\n    }\r\n\r\n    return obj;\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { TLS_FilterValue } from './TLS_FilterValue';\r\n\r\nexport class TLS_Filter {\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index (){\r\n    return this.Dict.Filters.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.Filters.splice(this.Index, 1);\r\n  }\r\n\r\n  //Values = [ 'Cột' ]\r\n  get Values(){\r\n    return this.Items.filter(x => x.Value).map(x => x.Value);\r\n  }\r\n\r\n  Items = []\r\n\r\n  AddItem = () => {\r\n    var item = new TLS_FilterValue();\r\n    this.Items.push(item);\r\n    return item;\r\n  }\r\n\r\n  field\r\n  get Field(){\r\n    if (!this.field){\r\n      this.field = this.FieldStorageList[0]\r\n    }\r\n    return this.field;\r\n  } set Field(v){\r\n    this.field = v;\r\n  }\r\n\r\n  get FieldStorageList(){\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      field : this.Field,\r\n      items : this.Items.filter(x => x.Value).map(x => x.ApiData)\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  get Description() {\r\n    var obj =  this.Values.reduce((a,b,i,arr) => {\r\n      if (arr.indexOf(b) !== 0){\r\n        a += ', ';\r\n      }\r\n      a += b;\r\n      return a;\r\n    }, '')\r\n\r\n    return `${this.Field}: ${obj}`;\r\n  }\r\n}","import { TLS_Filter } from \"./TLS_Filter\";\r\nimport { TLS_FilterValue } from \"./TLS_FilterValue\";\r\n\r\nexport const get = (data, dict) => {\r\n  var qI = new TLS_Filter();\r\n  qI.Field = data.field;\r\n\r\n  if (data.items){\r\n    qI.Items = data.items.map(x => {\r\n      var obj = new TLS_FilterValue();\r\n      obj.Value = x.value;\r\n      obj.InputType = x.inputType\r\n      return obj;\r\n    })\r\n  } else {\r\n    qI.Items = data.values.map(x => {\r\n      var obj = new TLS_FilterValue();\r\n      obj.Value = x;\r\n      return obj;\r\n    })\r\n  }\r\n\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new TLS_Filter();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterUtil'\r\nimport * as util from './TLS_PageItemUtil'\r\n\r\nexport class TLS_PageItem {\r\n  _id\r\n  get id(){\r\n    if (!this._id){\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  Name = 'tên setting'\r\n\r\n  get Index (){\r\n    return this.Dict.PageItems.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.PageItems.splice(this.Index, 1);\r\n  }\r\n\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  // Setting\r\n  get Setting() {\r\n    return this.Dict.Setting;\r\n  }\r\n\r\n  // Level Groups\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n\r\n  levelGroups\r\n  get LevelGroups(){\r\n    if (!this.levelGroups){\r\n      this.levelGroups = util.GetLevelGroups(this);\r\n    }\r\n    return this.levelGroups;\r\n  } set LevelGroups(v){\r\n    this.levelGroups = v;\r\n  }\r\n\r\n  AddLevelGroup = () => {\r\n    var item = levelGroupUtil.GetDefault(this);\r\n    this.LevelGroups.push(item);\r\n    return item;\r\n  }\r\n\r\n  // Filter\r\n  filters\r\n  get Filters(){\r\n    if (!this.filters){\r\n      this.filters = util.GetFilters(this);\r\n    }\r\n    return this.filters;\r\n  } set Filters(v){\r\n    this.filters = v;\r\n  }\r\n\r\n  AddFilter = () => {\r\n    var item = filterUtil.GetDefault(this);\r\n    this.Filters.push(item);\r\n    return item;\r\n  }\r\n\r\n  get FilterDescription() {\r\n    var obj = this.Filters.reduce((a,b,i,arr) => {\r\n      if (arr.indexOf(b) !== 0){\r\n        a += '; ';\r\n      }\r\n      a += b.Description;\r\n      return a;\r\n    }, '')\r\n    return obj;\r\n  }\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      name: this.Name,\r\n      levelGroups : this.LevelGroups.map(x => x.ApiData).filter(x => x.levels.length !== 0),\r\n      filters : this.Filters.map(x => x.ApiData)\r\n    }\r\n    return obj;\r\n  }\r\n}","import { TLS_PageItem } from \"./TLS_PageItem\"\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterUtil'\r\n\r\n// Instance\r\nexport const get = (data, dict) => {\r\n  var qI = new TLS_PageItem();\r\n  qI.Name = data.name;\r\n  qI.Filters = data.filters.map(x => filterUtil.get(x, qI));\r\n  qI.LevelGroups = data.levelGroups ? data.levelGroups.map(x => levelGroupUtil.get(x, qI))\r\n     : data.levels.map(x => levelGroupUtil.get(x, qI))\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new TLS_PageItem();\r\n  qI.Name = 'setting 1';\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetLevelGroups = (q) => {\r\n  return [ levelGroupUtil.GetDefault(q) ]\r\n}\r\n\r\nexport const GetFilters = (q) => {\r\n  return [ filterUtil.GetDefault(q) ]\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './TypicalLevelSettingDataUtil'\r\nimport { reaction } from \"mobx\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport class TypicalLevelSettingData {\r\n  // Setting\r\n  get Setting() {\r\n    return this.Dict;\r\n  }\r\n\r\n  get LevelStorageList() {\r\n    return this.Dict.LevelStorageList;\r\n  }\r\n  \r\n  // Page Item\r\n  pageItems\r\n  get PageItems(){\r\n    if (!this.pageItems){\r\n      this.pageItems = util.GetPageItems(this);\r\n    }\r\n    return this.pageItems;\r\n  } set PageItems(v){\r\n    this.pageItems = v;\r\n  }\r\n\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  AddPageItem = () => {\r\n    var item = pageItemUtil.GetDefault(this);\r\n    this.PageItems.push(item);\r\n    item.Name = `setting ${item.Index +1}`\r\n    return item;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      pageItems : this.PageItems.map(x => x.ApiData)\r\n    }\r\n  }\r\n}","import { PMData } from '../../../single/model/PMData';\r\nimport { TypicalLevelSettingData } from './TypicalLevelSettingData';\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemUtil'\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (data, dict) => {\r\n  var qI = new TypicalLevelSettingData();\r\n  qI.PageItems = data.pageItems.map(x => pageItemUtil.get(x, qI));\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (dict) => {\r\n  var qI = new TypicalLevelSettingData();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetPageItems = (q) => {\r\n  return [ pageItemUtil.GetDefault(q) ]\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './LS_ItemUtil'\r\n\r\nexport class LS_Item {\r\n  _id\r\n\r\n  tempId\r\n  get TempId(){\r\n    if (!this.tempId){\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  get Index (){\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.Items.splice(this.Index, 1);\r\n  }\r\n\r\n  // Data\r\n  Name = ''\r\n\r\n  Values = []\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      name: this.Name,\r\n      values: this.Values\r\n    }\r\n    return obj;\r\n  }\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './LevelSettingDataUtil'\r\nimport { reaction } from \"mobx\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport * as itemUtil from './item/LS_ItemUtil'\r\nimport * as genUtil from \"../../../../../util/generalUtil\";\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport class LevelSettingData {\r\n  // Items\r\n  Items = []\r\n\r\n  AddItem = () => {\r\n    var item = itemUtil.GetDefault(this);\r\n    this.Items.push(item);\r\n    return item;\r\n  }\r\n\r\n  Update_LevelData = () => {\r\n    this.LevelStorageList = util.GetLevelStorageList(this);\r\n  }\r\n\r\n  OnSet_LevelStorageList_Func_Dict = []\r\n\r\n  levelStorageList\r\n  get LevelStorageList(){\r\n    if (!this.levelStorageList){\r\n      this.levelStorageList = util.GetLevelStorageList(this);\r\n    }\r\n    return this.levelStorageList;\r\n  } set LevelStorageList(v){\r\n    this.levelStorageList = v;\r\n\r\n    genUtil.Handle(this.OnSet_LevelStorageList_Func_Dict,\r\n      (v) => this.OnSet_LevelStorageList_Func_Dict = v)\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      items : this.Items.map(x => x.ApiData)\r\n    }\r\n  }\r\n}","import { LS_Item } from \"./LS_Item\"\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new LS_Item();\r\n\r\n  qI.Name = data.name;\r\n  qI.Values = data.values\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new LS_Item();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n","import { PMData } from '../../../single/model/PMData';\r\nimport { LevelSettingData } from './LevelSettingData';\r\nimport * as itemUtil from './item/LS_ItemUtil';\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new LevelSettingData();\r\n  \r\n  qI.Items = data.items.map(x => itemUtil.GetFromDb(x, qI));\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new LevelSettingData();\r\n\r\n  qI.Items = []\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetLevelStorageList = (q) => {\r\n  return q.Items.map(x => x.Name);\r\n}","import { PMData } from \"../../../../single/model/PMData\";\r\nimport * as util from './TLS_Data_WrapperUtil'\r\nimport * as genUtil from \"../../../../../../util/generalUtil\";\r\n\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport class TLS_Data_Wrapper {\r\n  // Ràng buộc Name với Values (F1 - Tầng 1, Tầng 1_SSL)\r\n  Binding\r\n\r\n  Typical\r\n\r\n  // Level StorageList\r\n  OnSet_LevelStorageList_Func_Dict = []\r\n\r\n  levelStorageList\r\n  get LevelStorageList(){\r\n    if (!this.levelStorageList){\r\n      this.levelStorageList = util.GetLevelStorageList(this);\r\n    }\r\n    return this.levelStorageList;\r\n  } set LevelStorageList(v){\r\n    this.levelStorageList = v;\r\n\r\n    genUtil.Handle(this.OnSet_LevelStorageList_Func_Dict,\r\n      (v) => this.OnSet_LevelStorageList_Func_Dict = v)\r\n  }\r\n\r\n  get FieldFilterStorageList(){\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  get ApiData() {\r\n    return {\r\n      binding: this.Binding.ApiData,\r\n      typical: this.Typical.ApiData\r\n    }\r\n  }\r\n}","import * as tls_dataUtil from '../TypicalLevelSettingDataUtil'\r\nimport * as ls_dataUtil from '../../level/LevelSettingDataUtil'\r\nimport { TLS_Data_Wrapper } from './TLS_Data_Wrapper'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = new TLS_Data_Wrapper();\r\n\r\n  var binding\r\n  // Setting mới: data phân ra thành binding và typical\r\n  if (data.typical){\r\n    binding = qI.Binding = ls_dataUtil.GetFromDb(data.binding, qI)\r\n    qI.Typical = tls_dataUtil.get(data.typical, qI);\r\n  }\r\n  // Setting cũ: data chính là typicallevelsetting\r\n  else {\r\n    binding = qI.Binding = ls_dataUtil.GetDefault(qI);\r\n    qI.Typical = tls_dataUtil.get(data, qI);\r\n  }\r\n  qI.Dict = dict;\r\n\r\n  // Gán sự kiện update Level cho Binding\r\n  genUtil.Add_2(\r\n    binding.OnSet_LevelStorageList_Func_Dict,\r\n    () => qI.LevelStorageList = GetLevelStorageList(qI),\r\n    false\r\n  );\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new TLS_Data_Wrapper();\r\n\r\n  var binding = qI.Binding = ls_dataUtil.GetDefault(qI);\r\n  qI.Typical = tls_dataUtil.GetTest(qI);\r\n  qI.Dict = dict;\r\n\r\n  // Gán sự kiện update Level cho Binding\r\n  genUtil.Add_2(\r\n    binding.OnSet_LevelStorageList_Func_Dict,\r\n    () => qI.LevelStorageList = GetLevelStorageList(qI),\r\n    false\r\n  );\r\n\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (dict) => {\r\n  var qI = new TLS_Data_Wrapper();\r\n\r\n  var binding = qI.Binding = ls_dataUtil.GetDefault(qI);\r\n  qI.Typical = tls_dataUtil.GetTest(qI);\r\n  qI.Dict = dict;\r\n\r\n  // Gán sự kiện update Level cho Binding\r\n  genUtil.Add_2(\r\n    binding.OnSet_LevelStorageList_Func_Dict,\r\n    () => qI.LevelStorageList = GetLevelStorageList(qI),\r\n    false\r\n  );\r\n\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetLevelStorageList = (q) => {\r\n  return q.Binding.LevelStorageList\r\n}","import Setting from \"../base/Setting\";\r\nimport * as util from './TypicalLevelSettingUtil'\r\n\r\nexport class TypicalLevelSetting extends Setting {\r\n  fieldFilterStorageList\r\n  get FieldFilterStorageList(){\r\n    if (!this.fieldFilterStorageList){\r\n      this.fieldFilterStorageList = util.GetFieldFilterStorageList();\r\n    }\r\n    return this.fieldFilterStorageList;\r\n  }\r\n\r\n  Save = () => {\r\n    util.SaveDatabase(this)\r\n  }\r\n\r\n  levelStorageList\r\n  get LevelStorageList(){\r\n    if (!this.levelStorageList){\r\n      this.levelStorageList = util.GetLevelStorageList(this);\r\n    }\r\n    return this.levelStorageList;\r\n  } set LevelStorageList(v){\r\n    this.levelStorageList = v;\r\n    this.GetLevelStorageList = true;\r\n  }\r\n\r\n  OnGetLevelStorageList_Funcs = []\r\n\r\n  set GetLevelStorageList(v){\r\n    this.OnGetLevelStorageList_Funcs.forEach(x => x());\r\n  }\r\n}","export const elementfilter = \"elementfilter\";\r\nexport const massexport = \"massexport\";\r\nexport const massgroup = \"massgroup\";\r\nexport const level = \"level\"\r\nexport const typicallevel = \"typicallevel\";\r\nexport const massdetail = \"massdetail\";\r\nexport const masstype = \"masstype\";","import * as api from '../../../../../util/apiUtil'\r\n//import * as dataUtil from './TypicalLevelSettingDataUtil'\r\nimport * as dataUtil from './wrapper/TLS_Data_WrapperUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport { TypicalLevelSetting } from './TypicalLevelSetting';\r\nimport * as st from '../base/SettingType'\r\nimport * as fieldUtil from '../../mass/field/MassItemField'\r\nimport { message } from 'antd';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const get = (data, project, phase) => {\r\n  var qI = new TypicalLevelSetting();\r\n\r\n  qI._id = data._id;\r\n  qI.Name = data.name;\r\n  qI.Description = data.description;\r\n  qI.SettingType = data.settingType;\r\n\r\n  qI.Data = dataUtil.GetFromData(data.data, qI);\r\n\r\n  qI.Project = project;\r\n  qI.Phase = phase;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = (project) => {\r\n  var qI = new TypicalLevelSetting();\r\n\r\n  qI.Name = 'thiết lập ...';\r\n  qI.Description = 'Mô tả thiết lập ...';\r\n  qI.SettingType = st.typicallevel\r\n  qI.Data = dataUtil.GetTest(qI);\r\n  qI.Project = project;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetFromDb_Async = (project, phase, handle) => {\r\n  var apiData = {\r\n    projectId: project._id,\r\n    phaseId: phase?._id\r\n  }\r\n\r\n  var prefix = 'tl';\r\n  var url = `https://api.bimdev.vn/api/hbs/${prefix}`;\r\n\r\n  const apiFunc = () => api.post(`${url}/get`, apiData)\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      var resData = data ? get(data, project, phase) : undefined;\r\n      var editData = resData ? resData : GetTest(project);\r\n      handle(resData, editData);\r\n    })\r\n}\r\n\r\n// Property\r\nexport const GetFieldFilterStorageList = () => {\r\n  return fieldUtil.GetListForTypicalLevelFilter();\r\n}\r\n\r\n// Method\r\nexport const SaveDatabase = (q) => {\r\n  var _id = q._id;\r\n  var apiData = q.ApiData;\r\n\r\n  var prefix = 'tl';\r\n  var url = `https://api.bimdev.vn/api/hbs/${prefix}`;\r\n\r\n  var isNew = _id ? true : false\r\n  const apiFunc = () => isNew ?\r\n    api.put(`${url}/edit`, apiData) : api.post(`${url}/add`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (isNew) q._id = data._id\r\n      message.success('add setting successfully!');\r\n    })\r\n}\r\n\r\nexport const GetLevelStorageList = (q) => {\r\n  var level_Dict = q.Project.Level_Dict;\r\n\r\n  const getLevelsFunc = (items) => {\r\n    return items.map(x => x.Name);\r\n  }\r\n\r\n  if (level_Dict.Items) {\r\n    return getLevelsFunc(level_Dict.Items);\r\n  } else {\r\n    level_Dict.OnGetItemsDone_Funcs.push(() => {\r\n      q.LevelStorageList = getLevelsFunc(level_Dict.Items);\r\n    });\r\n  }\r\n}\r\n","import * as typicalLevelUtil from '../setting/typicallevel/TypicalLevelSettingUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport default class Phase {\r\n  exportSetVersions\r\n  get ExportSetVersions(){\r\n    return this.exportSetVersions;\r\n  }\r\n  set ExportSetVersions(v){\r\n    this.exportSetVersions = v;\r\n    this.exportSetVersionIds = v.map(x => x._id);\r\n  }\r\n\r\n  OnGetExportSetVersions_Func = [];\r\n\r\n  set GetExportSetVersions(v){\r\n    this.OnGetExportSetVersions_Func.forEach(x => x());\r\n  }\r\n\r\n  exportSetVersionIds\r\n\r\n  project\r\n  get Project(){\r\n    if (!this.project){\r\n      this.project = this.Dict.Dict\r\n    }\r\n    return this.project;\r\n  } set Project(v){\r\n    this.project = v;\r\n  }\r\n\r\n  OnGetTypicalLevelSetting_Func_Dict = []\r\n\r\n  set GetTypicalLevelSetting(v) {\r\n    genUtil.Handle(this.OnGetTypicalLevelSetting_Func_Dict,\r\n      (v) => this.OnGetTypicalLevelSetting_Func_Dict = v)\r\n  }\r\n\r\n  typicalLevelSetting\r\n  get TypicalLevelSetting() {\r\n    if (!this.typicalLevelSetting) {\r\n      if (!this.IsOnGetDb_Async) {\r\n        this.IsOnGetDb_Async = true;\r\n        typicalLevelUtil.GetFromDb_Async(this.Project, this, \r\n          (resData, editData) => {\r\n          this.TypicalLevelSetting = resData;\r\n          this.GetTypicalLevelSetting = true\r\n        })\r\n      }\r\n    }\r\n    return this.typicalLevelSetting;\r\n  }\r\n  set TypicalLevelSetting(v) {\r\n    this.typicalLevelSetting = v;\r\n  }\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport Phase from './Phase';\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n\r\n  var qI = new Phase();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Description = q.description;\r\n  qI.Dict = dict;\r\n  qI.CreatedDate = new Date(q.createdDate);\r\n\r\n  GetExportSetVersionData(q._id, (data) => {\r\n    qI.ExportSetVersions = data;\r\n    qI.GetExportSetVersions = true;\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getByProject = (projectId, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbphase/list?projectId=${projectId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data);\r\n      }\r\n    });\r\n}\r\n\r\nexport const GetExportSetVersionData = (phaseId, handle) => {\r\n  var url = `https://api.bimdev.vn/api/hbesv/byphase?phaseId=${phaseId}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data);\r\n      }\r\n    });\r\n}","import { message } from 'antd';\r\nimport * as util from './Phase_DictUtil'\r\nimport * as api from '../../../../util/apiUtil'\r\nimport * as itemUtil from './PhaseUtil'\r\nimport * as settingUtil from '../setting/base/SettingUtil'\r\n\r\nexport class Phase_Dict {\r\n  get Project() {\r\n    return this.Dict;\r\n  }\r\n\r\n  Items\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n    if (this.OnAdd){\r\n      this.OnAdd(item);\r\n    }\r\n  }\r\n  \r\n  AddMassVersion = () => {\r\n    var apiData = this.Input.ApiData;\r\n    var url = `https://api.bimdev.vn/api/hbphase`;\r\n\r\n    const apiFunc = () => api.put(`${url}/mass/add`, apiData);\r\n    var project = this.Project;\r\n    \r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        var item = itemUtil.get(data, this);\r\n        this.Add(item);\r\n        message.success(\"create version successfully!\");\r\n\r\n        settingUtil.AddPhase(project._id, data._id);\r\n      })\r\n\r\n    // Thêm version mới cho InputExportSet sau khi lưu version\r\n    var addVersionFunc = (exportSet) => exportSet.AddVersion();\r\n\r\n    var inputExportSet = project.InputExportSet;\r\n    if (!inputExportSet){\r\n      project.OnGetInputExportSetDone_Funcs.push(() => {\r\n        inputExportSet = project.InputExportSet;\r\n        addVersionFunc(inputExportSet);\r\n      })\r\n    }else{\r\n      addVersionFunc(inputExportSet);\r\n    }\r\n  }\r\n\r\n  Get_Phase = (data) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x._id === data._id);\r\n    if (index === -1){\r\n      var item = itemUtil.get(data, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import { message } from 'antd';\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\nexport const AddPhase = (projectId, phaseId) => {\r\n  var apiData = {\r\n    projectId, phaseId\r\n  }\r\n  var url = `https://api.bimdev.vn/api/hbs`;\r\n\r\n  const apiFunc = () => api.post(`${url}/addphase`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      message.success(\"attach phase to settings successfully!\");\r\n    })\r\n}","export default class PhaseInput {\r\n  get ApiData(){\r\n    var projectId = this.Dict.Dict._id;\r\n    var name = this.Name;\r\n    var description = this.Description;\r\n\r\n    return {\r\n      projectId, name, description\r\n    }\r\n  }\r\n}","import { Phase_Dict } from \"./Phase_Dict\";\r\nimport * as phaseUtil from './PhaseUtil'\r\nimport * as inputUtil from './PhaseInputUtil'\r\n\r\nexport const get = (project) => {\r\n  var qI = new Phase_Dict();\r\n\r\n  if (project) {\r\n    qI.Dict = project;\r\n\r\n    phaseUtil.getByProject(project._id, (data) => {\r\n      qI.Items = data.map(x => phaseUtil.get(x, qI));\r\n      qI.GetItemsDone = true;\r\n    })\r\n  } else {\r\n    qI.Items = [];\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetInput = (q) => {\r\n  return inputUtil.get(q);\r\n}","import PhaseInput from './PhaseInput';\r\n\r\nexport const get = (dict) => {\r\n  var qI = new PhaseInput();\r\n  qI.Dict = dict;\r\n  qI.Name = 'Version 1';\r\n  qI.Description = 'mô tả phiên bản';\r\n\r\n  return qI;\r\n}","import * as phaseDictUtil from '../../phase/Phase_DictUtil'\r\nimport * as util from './ProjectUtil'\r\nimport * as typicalLevelUtil from '../../setting/typicallevel/TypicalLevelSettingUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport default class Project {\r\n  phase_Dict\r\n  get Phase_Dict() {\r\n    if (!this.phase_Dict) {\r\n      this.phase_Dict = phaseDictUtil.get(this);\r\n    }\r\n    return this.phase_Dict;\r\n  }\r\n\r\n  exportSet_Dict\r\n  get ExportSet_Dict(){\r\n    if (!this.exportSet_Dict){\r\n      this.exportSet_Dict = util.GetExportSet_Dict(this)\r\n    } return this.exportSet_Dict;\r\n  }\r\n\r\n  // Level\r\n  // New Version\r\n  OnSet_LevelDict_Func_Dict = []\r\n\r\n  levelDict\r\n  get LevelDict(){\r\n    if (!this.levelDict){\r\n      util.Handle_LevelDict(this);\r\n    }\r\n    return this.levelDict;\r\n  } set LevelDict(v){\r\n    this.levelDict = v;\r\n\r\n    genUtil.Handle(\r\n      this.OnSet_LevelDict_Func_Dict,\r\n      (v) => this.OnSet_LevelDict_Func_Dict = v)\r\n  }\r\n\r\n  // LevelSetting\r\n  OnSet_LevelSetting_Func_Dict = []\r\n\r\n  levelSetting\r\n  get LevelSetting() {\r\n    if (!this.levelSetting) {\r\n      util.Handle_LevelSetting(this)\r\n    }\r\n    return this.levelSetting\r\n  } set LevelSetting(v) {\r\n    this.levelSetting = v;\r\n\r\n    genUtil.Handle(\r\n      this.OnSet_LevelSetting_Func_Dict,\r\n      (v) => this.OnSet_LevelSetting_Func_Dict = v)\r\n  }\r\n\r\n  // TypicalLevelSetting\r\n  OnGetTypicalLevelSetting_Func_Dict = []\r\n\r\n  getTypicalLevelSetting\r\n  get GetTypicalLevelSetting(){\r\n    return this.getTypicalLevelSetting\r\n  }\r\n  set GetTypicalLevelSetting(v) {\r\n    this.getTypicalLevelSetting = v;\r\n    genUtil.Handle(this.OnGetTypicalLevelSetting_Func_Dict,\r\n      (v) => this.OnGetTypicalLevelSetting_Func_Dict = v)\r\n  }\r\n\r\n  IsOnGetDb_Async\r\n\r\n  typicalLevelSetting\r\n  get TypicalLevelSetting() {\r\n    if (!this.typicalLevelSetting) {\r\n      if (!this.IsOnGetDb_Async) {\r\n        this.IsOnGetDb_Async = true;\r\n        typicalLevelUtil.GetFromDb_Async(this, null,\r\n          (resData, editData) => {\r\n            this.TypicalLevelSetting = resData;\r\n            this.TypicalLevelSetting_ForEdit = editData;\r\n            this.GetTypicalLevelSetting = true\r\n          })\r\n      }\r\n    }\r\n    return this.typicalLevelSetting;\r\n  }\r\n  set TypicalLevelSetting(v) {\r\n    this.typicalLevelSetting = v;\r\n  }\r\n\r\n  typicalLevelSetting_ForEdit\r\n  get TypicalLevelSetting_ForEdit() {\r\n    if (!this.typicalLevelSetting_ForEdit) {\r\n      this.typicalLevelSetting_ForEdit = this.TypicalLevelSetting;\r\n    }\r\n    return this.typicalLevelSetting_ForEdit;\r\n  } set TypicalLevelSetting_ForEdit(v) {\r\n    this.typicalLevelSetting_ForEdit = v;\r\n  }\r\n\r\n  url\r\n  get Url() {\r\n    if (!this.url) {\r\n      var isHash = true;\r\n      var obj = `${process.env.PUBLIC_URL}${isHash ? '/#' : ''}/project`;\r\n      obj = `${obj}/${this._id}`;\r\n\r\n      this.url = obj;\r\n    }\r\n    return this.url;\r\n  }\r\n\r\n  // Commands\r\n  OnSet_Commands_Func = []\r\n\r\n  Reset_Commands = () => {\r\n    this.Commands = undefined;\r\n    util.Handle_Commands(this)\r\n  }\r\n\r\n  commands\r\n  get Commands(){\r\n    if (!this.commands){\r\n      util.Handle_Commands(this)\r\n    } return this.commands;\r\n  } set Commands(v){\r\n    this.commands = v\r\n\r\n    genUtil.Handle(this.OnSet_Commands_Func,\r\n      (v) => this.OnSet_Commands_Func = v)\r\n  }\r\n}","import { PMData } from \"../../../single/model/PMData\"\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport class LevelDict {\r\n  \r\n}","export class LevelItem {\r\n  Name\r\n\r\n  Elevation\r\n}","import { PMData } from \"../../../single/model/PMData\";\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport const baseurl = () => `${pmData().ApiUrl}/hbld`","import { LevelDict } from \"./LevelDict\"\r\nimport * as itemUtil from './LevelItemUtil'\r\nimport { baseurl } from './LevelDict_Url'\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\n// Instance\r\nexport const GetFromData = (data, project) => {\r\n  var qI = new LevelDict();\r\n\r\n  qI.Project = project;\r\n\r\n  var items = data.data.items;\r\n  qI.Items = items ? items.map(x => itemUtil.GetFromData(x, qI)) : []\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetApi = (projectId, handle) => {\r\n  var data = {\r\n    projectId\r\n  }\r\n\r\n  var url = `${baseurl()}/get`;\r\n  api.post(url, data).then(response => response.data)\r\n  .then(data => {\r\n    if (handle){\r\n      handle(data);\r\n    }\r\n  });\r\n}","import { LevelItem } from \"./LevelItem\"\r\n\r\n// Instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = new LevelItem();\r\n\r\n  qI.Name = data.name;\r\n  qI.Elevation = data.elevation\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}","export const url = 'https://api.bimdev.vn/api/hbs/lv'","import Setting from \"../base/Setting\";\r\nimport { url } from './LevelSetting_Url'\r\nimport * as st from '../base/SettingType'\r\n\r\nexport class LevelSetting extends Setting {\r\n  SettingType = st.level\r\n\r\n  Url = url\r\n}","export const url = \"https://api.bimdev.vn/api/hbes\"","export const model = 'model'\r\nexport const input = 'input'","import { message } from 'antd';\r\nimport { url } from './ExportSet_Url'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './ExportSetUtil'\r\nimport * as rf from './ExportSet_RetrieveFrom'\r\n\r\nexport class ExportSet {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Name\r\n\r\n  Description\r\n\r\n  massType\r\n  get MassType(){\r\n    if (!this.massType){\r\n      this.massType = 'Concrete'\r\n    } return this.massType\r\n  } set MassType(v){\r\n    this.massType = v;\r\n  }\r\n\r\n  // Project\r\n  get Project(){\r\n    return this.Dict.Project;\r\n  }\r\n\r\n  get ApiData() {\r\n    var dict = this.Dict;\r\n\r\n    var obj = {\r\n      _id: this._id,\r\n      projectId: dict.Project?._id,\r\n      name: this.Name,\r\n      description: this.Description,\r\n      massType : this.MassType,\r\n      retrieveFrom : rf.input,\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle, isSaveData = true) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(true)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage){\r\n        message.success('delete successflly!');\r\n      }\r\n      if (handle){\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n\r\n  // Version\r\n  NewVersion = (handle) => {\r\n    return util.NewVersion(this, handle)\r\n  }\r\n\r\n  // Save MassItems\r\n  SaveMassItems = () => {\r\n    util.SaveMassItems(this)\r\n  }\r\n  \r\n  // MassItem\r\n  OnSet_MassItems_Func = []\r\n\r\n  massItems\r\n  get MassItems(){\r\n    if (!this.massItems){\r\n      util.Handle_MassItems(this)\r\n    } return this.massItems\r\n  } set MassItems(v){\r\n    this.massItems = v;\r\n\r\n    genUtil.Handle(this.OnSet_MassItems_Func,\r\n      (v) => this.OnSet_MassItems_Func = v);\r\n  }\r\n}","import * as api from '../../../../../../util/apiUtil'\r\nimport { url } from './ExportSet_Url'\r\nimport { url as versionUrl } from './ExportSetVersion_Url'\r\nimport { url as massUrl } from '../../../mass/item/base/MassItemUrl'\r\nimport { ExportSet } from './ExportSet'\r\nimport { message } from 'antd'\r\nimport * as massItemUtil from '../../../mass/item/base/MassItemUtil'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new ExportSet();\r\n\r\n  qI._id = data._id\r\n  qI.projectId = data.projectId\r\n  qI.Name = data.name;\r\n  qI.Description = data.description\r\n  qI.MassType = data.massType\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new ExportSet();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_MassItems = (q) => {\r\n  if (q.IsGet_MassItems) return undefined;\r\n  q.IsGet_MassItems = true;\r\n\r\n  const setObj = (data) => {\r\n    q.MassItems = data ? \r\n      data.map(x => massItemUtil.get(x)) : []\r\n    q.IsGet_MassItems = false\r\n  }\r\n\r\n  if (q._id) {\r\n    var apiData = {\r\n      otherData: {\r\n        exportSetId: q._id\r\n      }\r\n    }\r\n\r\n    massItemUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    });\r\n  } else {\r\n    setObj();\r\n  }\r\n}\r\n\r\n// Method\r\nexport const NewVersion = (q, handle) => {\r\n  var apiData = {\r\n    exportSetId: q._id\r\n  }\r\n\r\n  const apiFunc = () => api.post(`${versionUrl}/add`, apiData);\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}\r\n\r\nexport const SaveMassItems = (q) => {\r\n  var data = q.MassItems;\r\n\r\n  const addDataFunc = (versionId) => {\r\n    var apiData = {\r\n      projectId: q.Project._id,\r\n      exportSetId: q._id,\r\n      exportSetVersionId: versionId,\r\n      items: data.map(x => x.ApiData_ForInput)\r\n    }\r\n\r\n    const apiFunc = () => api.post(`${massUrl}/addlist`, apiData);\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        message.success('import data successfully!')\r\n      })\r\n  }\r\n\r\n  q.NewVersion((v) => {\r\n    addDataFunc(v._id);\r\n  })\r\n}\r\n\r\n// Api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","export const url = \"https://api.bimdev.vn/api/hbmr\"","export const url = \"https://api.bimdev.vn/api/hbesv\"","export const url = \"https://api.bimdev.vn/api/hbm\"","import * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './ExportSet_DictUtil'\r\nimport * as iUtil from '../item/base/ExportSetUtil'\r\n\r\nexport class ExportSet_Dict {\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Project\r\n  Project\r\n\r\n  UseType\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n    \r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = (v) => {\r\n    this.Items.push(v);\r\n    if (this.OnAddItem){\r\n      this.OnAddItem(v)\r\n    }\r\n  }\r\n\r\n  NewItem = (name) => {\r\n    var item = iUtil.get(this);\r\n    item.Name = name;\r\n\r\n    this.AddItem(item);\r\n    item.SaveDatabase();\r\n  }\r\n\r\n  CurrentItem\r\n}","import { ExportSet_Dict } from \"./ExportSet_Dict\"\r\nimport * as iUtil from '../item/base/ExportSetUtil'\r\nimport Project from \"../../project/base/Project\";\r\nimport * as rf from '../item/base/ExportSet_RetrieveFrom'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new ExportSet_Dict();\r\n\r\n  if (dict instanceof Project) {\r\n    qI.Project = dict;\r\n  }\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => iUtil.GetFromDb(x, q))\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n      projectId: q.Project?._id,\r\n      retrieveFrom : rf.input\r\n    }\r\n\r\n    iUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\n\r\n// Method\r\n","import * as api from '../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport Project from './Project';\r\nimport * as level_DictUtil from '../../level/Level_DictUtil'\r\nimport * as levelDictUtil from '../../level/new/LevelDictUtil'\r\nimport * as levelTypicalUtil from '../../setting/typicallevel/TypicalLevelSettingUtil'\r\nimport * as levelUtil from '../../setting/level/LevelSettingUtil'\r\nimport * as exportSetDictUtil from '../../exportset/dict/ExportSet_DictUtil'\r\nimport { url } from './Project_Url'\r\nimport { url as pc_url } from './ProjectCommand_Url'\r\nimport { PMData } from '../../../single/model/PMData';\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  if (!data) return undefined;\r\n\r\n  var qI = new Project();\r\n\r\n  qI._id = data._id;\r\n  qI.Name = data.name;\r\n  qI.Code = data.code;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n\r\n  var qI = new Project();\r\n\r\n  qI._id = q._id;\r\n  qI.Name = q.name;\r\n  qI.Code = q.code;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const getAll = (dict, handle) => {\r\n  var url = \"https://api.bimdev.vn/api/hbp/list\";\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var items = data.map(x => get(x, dict))\r\n      if (handle) {\r\n        handle(items);\r\n      }\r\n    });\r\n}\r\n\r\nexport const getById = (_id, handle) => {\r\n  if (!_id) return undefined;\r\n  var url = `https://api.bimdev.vn/api/hbp/get?id=${_id}`;\r\n  api.get(url).then(response => response.data)\r\n    .then(data => {\r\n      var item = get(data);\r\n      if (handle) {\r\n        handle(item);\r\n      }\r\n    });\r\n}\r\n\r\n// Property\r\nexport const GetExportSet_Dict = (q) => {\r\n  return exportSetDictUtil.get(q)\r\n}\r\n\r\n// Level\r\nexport const Handle_LevelDict = (q) => {\r\n  if (q.IsGet_LevelDict) return undefined;\r\n  q.IsGet_LevelDict = true;\r\n\r\n  const setLevelDict = (data) =>\r\n    q.LevelDict = levelDictUtil.GetFromData(data, q);\r\n\r\n  levelDictUtil.GetApi(q._id, setLevelDict);\r\n}\r\n\r\n// LevelSetting\r\nexport const Handle_LevelSetting = (q) => {\r\n  if (q.IsGet_LevelSetting) return undefined\r\n  q.IsGet_LevelSetting = true;\r\n\r\n  q.LevelSetting = levelUtil.GetDefault(q);\r\n}\r\n\r\n// TypicalLevelSetting\r\nexport const GetTypicalLevelSetting = (q) => {\r\n  return levelTypicalUtil.GetTest(q);\r\n}\r\n\r\n// Commands\r\nexport const Handle_Commands = (q) => {\r\n  if (q.IsGet_Commands) return undefined;\r\n  q.IsGet_Commands = true;\r\n\r\n  const setObj = (data, type) => {\r\n    if (type === 'invalid' && q.Commands){\r\n      return;\r\n    }\r\n\r\n    q.Commands = data && data.length !== 0 ? data[0].commands : []\r\n    q.IsGet_Commands = false;\r\n  }\r\n\r\n  var host = pmData().UserDict.LoginUser;\r\n  if (!host) {\r\n    setObj(undefined, 'invalid')\r\n  } else {\r\n    var apiData = {\r\n      userId: host._id,\r\n      projectId: q._id\r\n    }\r\n\r\n    const apiFunc = () => api.post(`${pc_url}/list`, apiData);\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        setObj(data)\r\n      })\r\n  }\r\n}\r\n\r\n// Api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as api from '../../../../../util/apiUtil'\r\nimport * as dataUtil from './LevelSettingDataUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport { LevelSetting } from './LevelSetting';\r\nimport { message } from 'antd';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const GetFromDb = (data, project, phase) => {\r\n  var qI = new LevelSetting();\r\n\r\n  qI._id = data._id;\r\n  qI.Name = data.name;\r\n  qI.Description = data.description;\r\n  qI.Data = dataUtil.GetFromDb(data.data, qI);\r\n  qI.Project = project;\r\n  qI.Phase = phase;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (project) => {\r\n  var qI = new LevelSetting();\r\n\r\n  qI.Name = 'thiết lập level';\r\n  qI.Description = 'Mô tả thiết lập';\r\n  qI.Data = dataUtil.GetDefault(qI);\r\n  qI.Project = project;\r\n\r\n  return qI;\r\n}","export const url = \"https://api.bimdev.vn/api/hb_upc\";","import * as itemUtil from './ProjectUtil'\r\n\r\nexport class Project_Dict {\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = []\r\n    }\r\n    return this.items;\r\n  } set Items(v){\r\n    this.items = v;\r\n\r\n    this.GetItemsDone = true;\r\n  }\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  Get_Project = (data) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x._id === data._id);\r\n    if (index === -1){\r\n      var item = itemUtil.get(data, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import { Project_Dict } from \"./Project_Dict\"\r\nimport * as itemUtil from './ProjectUtil'\r\n\r\n// Instance\r\nexport const get = (isAuto_GetData = true) => {\r\n  var qI = new Project_Dict();\r\n\r\n  if (isAuto_GetData) {\r\n    itemUtil.getAll(qI, (items) => {\r\n      qI.Items = items;\r\n    })\r\n  }\r\n\r\n  return qI;\r\n}","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as util from './MGS_Dict_DictUtil'\r\n\r\nexport class MGS_Dict_Dict {\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this)\r\n    } return this.items;\r\n  }\r\n\r\n  current_MGS\r\n  get Current_MGS(){\r\n    return this.current_MGS\r\n  } set Current_MGS(v){\r\n    this.current_MGS = v;\r\n\r\n    this.Used_MassGroupComponent = undefined\r\n    this.Used_MassGroupItem = undefined\r\n  }\r\n\r\n  // MassGroupComponent - Item\r\n  OnSet_Used_MassGroupComponent_Func = []\r\n\r\n  used_MassGroupComponent\r\n  get Used_MassGroupComponent() {\r\n    if (!this.used_MassGroupComponent) {\r\n      util.Handle_Used_MassGroupComponent(this)\r\n    }\r\n    return this.used_MassGroupComponent\r\n  } set Used_MassGroupComponent(v) {\r\n    this.used_MassGroupComponent = v;\r\n    genUtil.Handle(this.OnSet_Used_MassGroupComponent_Func,\r\n      (v) => this.OnSet_Used_MassGroupComponent_Func = v)\r\n  }\r\n\r\n  OnSet_Used_MassGroupItem_Func = []\r\n\r\n  used_MassGroupItem\r\n  get Used_MassGroupItem() {\r\n    if (!this.used_MassGroupItem) {\r\n      util.Handle_Used_MassGroupItem(this)\r\n    }\r\n    return this.used_MassGroupItem\r\n  } set Used_MassGroupItem(v) {\r\n    this.used_MassGroupItem = v;\r\n\r\n    genUtil.Handle(this.OnSet_Used_MassGroupItem_Func,\r\n      (v) => this.OnSet_Used_MassGroupItem_Func = v)\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './MassGroupSetting_DictUtil'\r\n\r\nexport class MassGroupSetting_Dict {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Project\r\n  project\r\n  get Project() {\r\n    return this.project\r\n  } set Project(v) {\r\n    if (this.project === v) return;\r\n    this.project = v;\r\n    util.ReHandle_Items(this);\r\n  }\r\n\r\n  UseType\r\n\r\n  get Category(){\r\n    return util.GetCategory(this)\r\n  }\r\n\r\n  get CategoryName(){\r\n    return util.GetCategoryName(this)\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n    \r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = (v) => {\r\n    this.Items.push(v);\r\n    if (this.OnAddItem){\r\n      this.OnAddItem(v)\r\n    }\r\n  }\r\n\r\n  main_CurrentItem\r\n  get Main_CurrentItem() {\r\n    return this.main_CurrentItem\r\n  } set Main_CurrentItem(v) {\r\n    this.main_CurrentItem = v;\r\n    this.Used_MassGroupComponent = undefined\r\n    this.Used_MassGroupItem = undefined\r\n  }\r\n\r\n  save\r\n  get Save() {\r\n    if (!this.save) {\r\n      this.save = util.GetSave(this)\r\n    } return this.save\r\n  }\r\n}","export const url = \"https://api.bimdev.vn/api/hb_mgs\"","import { message } from 'antd';\r\nimport { url } from './MassGroupSetting_Url'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './MassGroupSettingUtil'\r\n\r\nexport class MassGroupSetting {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Name\r\n\r\n  Description\r\n\r\n  // Data\r\n  OnSet_Data_Func = []\r\n\r\n  data\r\n  get Data() {\r\n    if (!this.data) {\r\n      util.Handle_Data(this)\r\n    } return this.data\r\n  } set Data(v) {\r\n    this.data = v;\r\n    genUtil.Handle(this.OnSet_Data_Func,\r\n      (v) => this.OnSet_Data_Func = v)\r\n  }\r\n\r\n  // AddTemplate\r\n  addTemplate\r\n  get AddTemplate(){\r\n    if (!this.addTemplate){\r\n      this.addTemplate = util.GetAddTemplate(this)\r\n    } return this.addTemplate\r\n  }\r\n\r\n  get ApiData() {\r\n    var dict = this.Dict;\r\n\r\n    var obj = {\r\n      _id: this._id,\r\n      projectId: dict.Project?._id,\r\n      useType : dict.UseType,\r\n      name: this.Name,\r\n      description: this.Description\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle, isSaveData = true) => {\r\n    if (isSaveData) {\r\n      const saveData = () => this.Data.SaveDatabase(false);\r\n      if (this._id) {\r\n        saveData();\r\n      } else {\r\n        genUtil.Add_2(\r\n          this.OnSet_id_Func_Dict,\r\n          saveData\r\n        )\r\n      }\r\n    }\r\n\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(true)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage){\r\n        message.success('delete successfully!');\r\n      }\r\n      if (handle){\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","export const project = 'project'\r\nexport const template = 'template'","import { PMData } from \"../../../../../single/model/PMData\";\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as mgsd_ut from '../../dict/MGS_Dict_UseType'\r\n\r\nexport const pmData = () => PMData.Instance\r\n\r\nexport const Run = (q) => {\r\n  var mgs = q.Dict;\r\n\r\n  var mgsd = genUtil.SingleFilter(pmData().Mgs_Dict_Dict.Items, \r\n    (x) => x.UseType === mgsd_ut.template)\r\n  var save = mgsd.Save;\r\n  save.MassGroupSetting = mgs;\r\n  save.Name = q.InputName\r\n\r\n  save.Run();\r\n}","import * as util from './AddTemplateUtil'\r\n\r\nexport class AddTemplate {\r\n  InputName\r\n\r\n  Run = () => {\r\n    util.Run(this)\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as api from '../../../../../../util/apiUtil'\r\nimport * as dataUtil from '../data/DataUtil'\r\nimport { url } from './MassGroupSetting_Url'\r\nimport { MassGroupSetting } from './MassGroupSetting'\r\nimport { AddTemplate } from './addtemplate/AddTemplate'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new MassGroupSetting();\r\n\r\n  qI._id = data._id\r\n  qI.projectId = data.projectId\r\n  qI.Name = data.name;\r\n  qI.Description = data.description\r\n  //qI.Data = dataUtil.GetFromDb(data.data[0], qI);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new MassGroupSetting();\r\n\r\n  qI.Dict = dict;\r\n  \r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Data = (q) => {\r\n  if (q.IsGet_Data) return undefined;\r\n  q.IsGet_Data = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Data = dataUtil.GetFromDb(data[0], q)\r\n  }\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n      dictId : q._id\r\n    }\r\n\r\n    dataUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\nexport const GetAddTemplate = (q) => {\r\n  var qI = new AddTemplate();\r\n  qI.Dict = q;\r\n  return qI;\r\n}\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as api from '../../../../../../util/apiUtil'\r\nimport * as mgcUtil from \r\n  '../../../mass/table/rowgroup/MassGroupComponentUtil'\r\nimport { url } from './Data_Url'\r\nimport { Data } from './Data';\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new Data();\r\n\r\n  qI.MainMassGroupComponent = \r\n    mgcUtil.get(data.mainMassGroupComponent, qI);\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Data();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './SaveUtil'\r\n\r\nexport class Save {\r\n  Name\r\n\r\n  Run = () => {\r\n    util.Run(this);\r\n  }\r\n\r\n  // MassGroupSettingForSave\r\n  massGroupSetting\r\n  get MassGroupSetting(){\r\n    return this.massGroupSetting\r\n  } set MassGroupSetting(v){\r\n    this.massGroupSetting =v\r\n  }\r\n\r\n  // MassGroupComponent\r\n  OnSet_MassGroupComponent_Func = []\r\n\r\n  massGroupComponent = undefined\r\n  get MassGroupComponent(){\r\n    if (!this.massGroupComponent){\r\n      util.Handle_MassGroupComponent(this)\r\n    } return this.massGroupComponent\r\n  } set MassGroupComponent(v){\r\n    this.massGroupComponent = v;\r\n    genUtil.Handle(this.OnSet_MassGroupComponent_Func,\r\n      (v) => this.OnSet_MassGroupComponent_Func = v)\r\n  }\r\n\r\n  OnSet_Retrieve_MassGroupComponent_Func = []\r\n\r\n  retrieve_MassGroupComponent\r\n  get Retrieve_MassGroupComponent(){\r\n    if (!this.retrieve_MassGroupComponent){\r\n      util.Handle_Retrieve_MassGroupComponent(this)\r\n    } return this.retrieve_MassGroupComponent;\r\n  } set Retrieve_MassGroupComponent(v){\r\n    this.retrieve_MassGroupComponent = v;\r\n    genUtil.Handle(this.OnSet_Retrieve_MassGroupComponent_Func,\r\n      (v) => this.OnSet_Retrieve_MassGroupComponent_Func = v)\r\n  }\r\n\r\n  // Refresh\r\n  Refresh = () => {\r\n    util.Refresh(this)\r\n  }\r\n}","import { Save } from \"./Save\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as mgsUtil from \"../item/MassGroupSettingUtil\";\r\nimport * as dataUtil from \"../data/DataUtil\";\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\nimport * as mgsd_ut from '../dict/MGS_Dict_UseType'\r\nimport * as mgcUtil from\r\n  '../../../mass/table/rowgroup/MassGroupComponentUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Save();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_MassGroupComponent = (q) => {\r\n  if (q.IsGet_MassGroupComponent) return undefined\r\n  q.IsGet_MassGroupComponent = true\r\n\r\n  const setObj = () => {\r\n    var funcObj = q.Retrieve_MassGroupComponent\r\n    const setObj2 = () => {\r\n      q.MassGroupComponent = funcObj.Get()\r\n      q.IsGet_MassGroupComponent = false\r\n    }\r\n\r\n    if (funcObj.Get()) {\r\n      setObj2();\r\n    } else {\r\n      genUtil.Add_2(\r\n        funcObj.Func,\r\n        setObj2\r\n      )\r\n    }\r\n  }\r\n\r\n  if (q.Retrieve_MassGroupComponent) {\r\n    setObj();\r\n  } else {\r\n    genUtil.Add_2(\r\n      q.OnSet_Retrieve_MassGroupComponent_Func,\r\n      setObj\r\n    )\r\n  }\r\n}\r\n\r\nexport const Handle_Retrieve_MassGroupComponent = (q) => {\r\n  if (q.IsGet_Retrieve_MassGroupComponent) return undefined;\r\n  q.IsGet_Retrieve_MassGroupComponent = true\r\n\r\n  var dict = q.Dict;\r\n  var mgs = q.MassGroupSetting\r\n\r\n  const setObj = () => {\r\n    var Get\r\n    var Func\r\n    var q1\r\n\r\n    switch (dict.UseType) {\r\n      case mgsd_ut.project:\r\n        q1 = pmData().Mgs_Dict_Dict;\r\n        Get = () => q1.Used_MassGroupComponent\r\n        Func = q1.OnSet_Used_MassGroupComponent_Func\r\n        break;\r\n      case mgsd_ut.template:\r\n        q1 = mgs\r\n        Get = () => mgcUtil.Clone(q1.Data?.MainMassGroupComponent, undefined, true)\r\n        Func = q1.OnSet_Data_Func\r\n        break;\r\n    }\r\n\r\n    q.Retrieve_MassGroupComponent = {\r\n      Get, Func\r\n    }\r\n    q.IsGet_Retrieve_MassGroupComponent = false\r\n  }\r\n\r\n  setObj();\r\n}\r\n\r\n// Method\r\nexport const Run = (q) => {\r\n  var host = q.Dict;\r\n\r\n  var setObj = () => {\r\n    var items = host.Items\r\n    var name = q.Name\r\n\r\n    var setObj2 = () => {\r\n      var mgc = q.MassGroupComponent\r\n\r\n      var item = genUtil.SingleFilter(items, (x) => x.Name === name);\r\n      if (!item) {\r\n        item = mgsUtil.get(host);\r\n        item.Name = name;\r\n        // items.push(item);\r\n        host.AddItem(item);\r\n      }\r\n\r\n      var q1 = item.Data = dataUtil.get(item)\r\n      q1.MainMassGroupComponent = mgc\r\n      item.SaveDatabase(true);\r\n\r\n      // Refresh Data\r\n      Refresh(q);\r\n    }\r\n\r\n    // var mgc = host.Used_MassGroupComponent\r\n    if (q.MassGroupComponent) {\r\n      setObj2()\r\n    } else {\r\n      genUtil.Add_2(\r\n        q.OnSet_MassGroupComponent_Func,\r\n        setObj2\r\n      )\r\n    }\r\n  }\r\n\r\n  if (host.Items) {\r\n    setObj()\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Items_Func,\r\n      setObj\r\n    )\r\n  }\r\n}\r\n\r\n// Refresh\r\nexport const Refresh = (q) => {\r\n  q.Retrieve_MassGroupComponent = undefined;\r\n  q.MassGroupComponent = undefined\r\n}","export const main = 'main'\r\nexport const template = 'template'","import { MassGroupSetting_Dict } from \"./MassGroupSetting_Dict\"\r\nimport * as iUtil from '../item/MassGroupSettingUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as mgcUtil from '../../../mass/table/rowgroup/MassGroupComponentUtil'\r\nimport * as saveUtil from '../save/SaveUtil'\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\nimport * as mgsd_ut from './MGS_Dict_UseType'\r\nimport * as mgsd_c from './MGS_Dict_Category'\r\n\r\nexport const pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (useType, dict) => {\r\n  var qI = new MassGroupSetting_Dict();\r\n\r\n  qI.UseType = useType\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const ReHandle_Items = (q) => {\r\n  q.IsGet_Items = false;\r\n  Handle_Items(q);\r\n}\r\n\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    // Ưu tiên data có projectId\r\n    var isValid = true;\r\n\r\n    if (q.UseType === mgsd_ut.project) {\r\n      var pId = pmData().CurrentProject?._id;\r\n      if (pId) {\r\n        if (data.length !== 0) {\r\n          isValid = data[0].projectId === pId\r\n        } else {\r\n          var oldData = q.Items;\r\n          if (oldData && oldData.length !== 0) {\r\n            isValid = oldData[0].projectId !== pId\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (isValid) {\r\n      q.Items = data.map(x => iUtil.GetFromDb(x, q))\r\n      q.IsGet_Items = false;\r\n    }\r\n  }\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n      projectId: q.Project?._id,\r\n      useType: q.UseType\r\n    }\r\n\r\n    iUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\nexport const GetSave = (q) => {\r\n  return saveUtil.get(q);\r\n}\r\n\r\nexport const GetCategory = (q) => {\r\n  switch (q.UseType) {\r\n    case mgsd_ut.project:\r\n      return mgsd_c.main;\r\n    case mgsd_ut.template:\r\n      return mgsd_c.template;\r\n  }\r\n}\r\n\r\nexport const GetCategoryName = (q) => {\r\n  switch (q.Category) {\r\n    case mgsd_c.main:\r\n      return 'Main'\r\n    case mgsd_c.template:\r\n      return 'Template'\r\n  }\r\n}\r\n\r\n// Method\r\n","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport { MGS_Dict_Dict } from './MGS_Dict_Dict'\r\nimport * as mgsdUtil from '../MassGroupSetting_DictUtil'\r\nimport * as mgsd_ut from '../MGS_Dict_UseType'\r\nimport * as mgcUtil from \r\n  '../../../../mass/table/rowgroup/MassGroupComponentUtil'\r\n\r\n// Instance\r\nexport const get = () => {\r\n  return new MGS_Dict_Dict();\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return [\r\n    mgsdUtil.get(mgsd_ut.project, q),\r\n    mgsdUtil.get(mgsd_ut.template, q),\r\n  ]\r\n}\r\n\r\nexport const Handle_Used_MassGroupComponent = (q) => {\r\n  if (q.IsGet_Used_MassGroupComponent) return undefined\r\n  q.IsGet_Used_MassGroupComponent = true\r\n\r\n  const setObj = (data) => {\r\n    q.Used_MassGroupComponent = data ?\r\n      mgcUtil.Clone(data.MainMassGroupComponent)\r\n      : mgcUtil.GetDefault()\r\n    q.IsGet_Used_MassGroupComponent = false;\r\n  }\r\n\r\n  var host = q.Current_MGS\r\n  if (host) {\r\n    if (host.Data) {\r\n      setObj(host.Data)\r\n    } else {\r\n      genUtil.Add_2(\r\n        host.OnSet_Data_Func,\r\n        () => setObj(host.Data)\r\n      )\r\n    }\r\n  } else {\r\n    setObj()\r\n  }\r\n}\r\n\r\nexport const Handle_Used_MassGroupItem = (q) => {\r\n  if (q.IsGet_Used_MassGroupItem) return undefined\r\n  q.IsGet_Used_MassGroupItem = true\r\n\r\n  const setObj = (data) => {\r\n    q.Used_MassGroupItem = data.Items[0]\r\n    q.IsGet_Used_MassGroupItem = false\r\n  }\r\n\r\n  var host = q;\r\n  if (host.Used_MassGroupComponent) {\r\n    setObj(host.Used_MassGroupComponent)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Used_MassGroupComponent_Func,\r\n      () => setObj(host.Used_MassGroupComponent)\r\n    )\r\n  }\r\n}","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport { PMData } from '../../../../../single/model/PMData'\r\nimport * as util from './MDS_Dict_DictUtil'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\nexport class MDS_Dict_Dict {\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this)\r\n    } return this.items;\r\n  }\r\n\r\n  current_MDS\r\n  get Current_MDS(){\r\n    return this.current_MDS\r\n  } set Current_MDS(v){\r\n    this.current_MDS = v;\r\n\r\n    if (v){\r\n      var data = v.Data;\r\n      this.Table.Refresh_Columns(data.infos, data.values);\r\n    }\r\n  }\r\n\r\n  // Table\r\n  get Table(){\r\n    return pmData().MassDetail_Table\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './MassDetailSetting_DictUtil'\r\n\r\nexport class MassDetailSetting_Dict {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Project\r\n  project\r\n  get Project() {\r\n    return this.project\r\n  } set Project(v) {\r\n    if (this.project === v) return;\r\n    this.project = v;\r\n    util.ReHandle_Items(this);\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n    \r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = (v) => {\r\n    this.Items.push(v);\r\n    if (this.OnAddItem){\r\n      this.OnAddItem(v)\r\n    }\r\n  }\r\n\r\n  save\r\n  get Save() {\r\n    if (!this.save) {\r\n      this.save = util.GetSave(this)\r\n    } return this.save\r\n  }\r\n}","export const url = \"https://api.bimdev.vn/api/hb_mds\"","import { message } from 'antd';\r\nimport { url } from './MassDetailSetting_Url'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './MassDetailSettingUtil'\r\n\r\nexport class MassDetailSetting {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Name\r\n\r\n  Description\r\n\r\n  // Data\r\n  OnSet_Data_Func = []\r\n\r\n  Data\r\n\r\n  get ApiData() {\r\n    var dict = this.Dict;\r\n\r\n    var obj = {\r\n      _id: this._id,\r\n      name: this.Name,\r\n      description: this.Description,\r\n      data : this.Data\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(true)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage){\r\n        message.success('delete successfully!');\r\n      }\r\n      if (handle){\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as api from '../../../../../../util/apiUtil'\r\nimport { url } from './MassDetailSetting_Url'\r\nimport { MassDetailSetting } from './MassDetailSetting'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id\r\n  qI.Name = data.name;\r\n  qI.Description = data.description\r\n  qI.Data = data.data\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new MassDetailSetting();\r\n\r\n  qI.Dict = dict;\r\n  \r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './SaveUtil'\r\n\r\nexport class Save {\r\n  Name\r\n\r\n  Run = () => {\r\n    util.Run(this);\r\n  }\r\n\r\n  // MassGroupSettingForSave\r\n  massGroupSetting\r\n  get MassGroupSetting(){\r\n    return this.massGroupSetting\r\n  } set MassGroupSetting(v){\r\n    this.massGroupSetting =v\r\n  }\r\n}","import { Save } from \"./Save\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as mdsUtil from \"../item/MassDetailSettingUtil\";\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\nimport { PMDataVM } from \"../../../../single/form/PMDataVM\";\r\n\r\nexport const pmData = () => PMData.Instance;\r\nexport const pmDataVM = () => PMDataVM.Instance;\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Save();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// Method\r\nexport const Run = (q) => {\r\n  var host = q.Dict;\r\n\r\n  var setObj = () => {\r\n    var items = host.Items\r\n    var name = q.Name\r\n\r\n    var item = genUtil.SingleFilter(items, (x) => x.Name === name);\r\n    if (!item) {\r\n      item = mdsUtil.get(host);\r\n      item.Name = name;\r\n      // items.push(item);\r\n      host.AddItem(item);\r\n    }\r\n\r\n    item.Data = item.Dict.Dict.Table.ApiData\r\n    item.SaveDatabase(true);\r\n  }\r\n\r\n  if (host.Items) {\r\n    setObj()\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Items_Func,\r\n      setObj\r\n    )\r\n  }\r\n}","import { MassDetailSetting_Dict } from \"./MassDetailSetting_Dict\"\r\nimport * as iUtil from '../item/MassDetailSettingUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as saveUtil from '../save/SaveUtil'\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\n\r\nexport const pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new MassDetailSetting_Dict();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const ReHandle_Items = (q) => {\r\n  q.IsGet_Items = false;\r\n  Handle_Items(q);\r\n}\r\n\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => iUtil.GetFromDb(x, q))\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n\r\n    }\r\n\r\n    iUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\nexport const GetSave = (q) => {\r\n  return saveUtil.get(q);\r\n}\r\n\r\n// Method\r\n","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport { MDS_Dict_Dict } from './MDS_Dict_Dict'\r\nimport * as mdsdUtil from '../MassDetailSetting_DictUtil'\r\n\r\n// Instance\r\nexport const get = () => {\r\n  return new MDS_Dict_Dict();\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return [\r\n    mdsdUtil.get(q),\r\n  ]\r\n}","export const url = \"https://api.bimdev.vn/api/hb_sg\"","import { message } from 'antd';\r\nimport { url } from './Item_Url'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './ItemUtil'\r\n\r\nexport class Item {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Name\r\n\r\n  MassType\r\n\r\n  Field\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      name: this.Name,\r\n      massType : this.MassType,\r\n      field : this.Field\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    // genUtil.SaveDatabase(this, url,\r\n    //   () => {\r\n    //     if (showMessage) {\r\n    //       message.success('save successfully!')\r\n    //     }\r\n    //     if (handle) {\r\n    //       handle();\r\n    //     }\r\n    //   });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Data\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.Dict.Items.forEach(x => {\r\n      x.Items.splice(x.Items.indexOf(this), 1)\r\n    })\r\n\r\n    \r\n    this.DeleteDatabase(true)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    // genUtil.DeleteDatabase(this, url, () => {\r\n    //   if (showMessage){\r\n    //     message.success('delete successfully!');\r\n    //   }\r\n    //   if (handle){\r\n    //     handle()\r\n    //   }\r\n    // });\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as api from '../../../../../../util/apiUtil'\r\nimport { url } from './Item_Url'\r\nimport { Item } from './Item'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict)\r\n  \r\n  qI.Name = data.name;\r\n  qI.MassType = data.massType\r\n  qI.Field = data.field;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Item();\r\n\r\n  qI.Dict = dict;\r\n  \r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as util from './Dict_DictUtil'\r\nimport * as dataItemUtil from '../../item/ItemUtil'\r\nimport { PMData } from '../../../../../single/model/PMData'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport {url } from '../../item/Item_Url'\r\nimport { message } from 'antd'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\nexport class Dict_Dict {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this)\r\n    } return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    return this.currentItem\r\n  } set CurrentItem(v){\r\n    this.currentItem = v;\r\n  }\r\n\r\n  CurrentField\r\n\r\n  CurrentMassType\r\n\r\n  data = []\r\n  get Data(){\r\n    return this.data;\r\n  } set Data(v){\r\n    this.data = v;\r\n    if (this.OnSet_Data){\r\n      this.OnSet_Data(v)\r\n    }\r\n  }\r\n\r\n  AddData = () => {\r\n    var qI = dataItemUtil.get(this);\r\n    qI.MassType = this.CurrentMassType;\r\n    qI.Field = this.CurrentField\r\n    this.Data.push(qI)\r\n    \r\n    this.Items.forEach(x => {\r\n      x.Items.push(qI)\r\n    })\r\n\r\n    if (this.OnAddData){\r\n      this.OnAddData(qI)\r\n    }\r\n  }\r\n\r\n  Initial = () => {\r\n    util.Initial(this)\r\n  }\r\n\r\n  get ApiData() {\r\n    var project = pmData().CurrentProject;\r\n\r\n    var obj = {\r\n      _id : this._id,\r\n      projectId : project._id,\r\n      data : this.Data.map(x => x.ApiData)\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n}","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport { PMData } from '../../../../../single/model/PMData'\r\nimport * as util from './DictUtil'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\nexport class Dict {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Project\r\n  get Project() {\r\n    return pmData().CurrentProject\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  Refresh_Items = () => {\r\n    this.Items = util.GetItems(this);\r\n  }\r\n\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this)\r\n    }\r\n    return this.items;\r\n  } set Items(v){\r\n    this.items = v;\r\n    if (this.OnSet_Items){\r\n      this.OnSet_Items(v)\r\n    }\r\n  }\r\n}","export const partial = \"partial\"\r\nexport const all = \"all\"\r\n\r\nexport const GetName = (v) => {\r\n  switch (v) {\r\n    case partial:\r\n      return 'Công tác'\r\n    case all:\r\n      return 'All'\r\n  }\r\n}","import { Dict } from \"./Dict\"\r\nimport { PMData } from \"../../../../../single/model/PMData\";\r\nimport * as ut from './Dict_UseType'\r\n\r\nexport const pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (useType, dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict\r\n  qI.UseType = useType;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  var list = q.Dict.Data;\r\n  var field = q.Dict.CurrentField\r\n  \r\n  switch (q.UseType) {\r\n    case ut.partial:\r\n      var massType = q.Dict.CurrentMassType;\r\n      return list.filter(x => x.MassType === massType && \r\n        x.Field === field);\r\n    case ut.all:\r\n      return list.filter(x => x.Field === field);\r\n  }\r\n}\r\n\r\n// Method\r\n","import { Dict_Dict } from './Dict_Dict'\r\nimport * as iUtil from '../base/DictUtil'\r\nimport * as i_ut from '../base/Dict_UseType'\r\nimport * as dataUtil from '../../item/ItemUtil'\r\nimport * as api from '../../../../../../../util/apiUtil'\r\nimport {url} from '../../item/Item_Url'\r\n\r\n// Instance\r\nexport const GetFromDb = (data) => {\r\n  var qI = get();\r\n  \r\n  qI._id = data._id\r\n  qI.Data = data.data.map(x => dataUtil.GetFromDb(x, qI))\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = () => {\r\n  var qI = new Dict_Dict();\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return [\r\n    iUtil.get(i_ut.partial, q), iUtil.get(i_ut.all, q)\r\n  ]\r\n}\r\n\r\n// Method\r\nexport const Initial = (q) => {\r\n  q.Items.forEach(x => {\r\n    x.Refresh_Items()\r\n  })\r\n}\r\n\r\n// Api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as util from './User_DictUtil'\r\nimport * as genUtil from '../../../util/generalUtil'\r\n\r\nconst userToken = 'userToken'\r\n\r\nexport class User_Dict {\r\n  Url\r\n\r\n  token\r\n  get Token(){\r\n    if (!this.token){\r\n      this.token = localStorage.getItem(userToken);\r\n    } return this.token\r\n  } set Token(v){\r\n    this.token = v\r\n    if (!v){\r\n      localStorage.removeItem(userToken)\r\n    } else {\r\n      localStorage.setItem(userToken,v)\r\n    }\r\n  }\r\n  \r\n  // LoginUser\r\n  OnSet_LoginUser_Func =[]\r\n\r\n  loginUser\r\n  get LoginUser(){\r\n    if (!this.loginUser){\r\n      util.Handle_LoginUser(this)\r\n    } return this.loginUser;\r\n  } set LoginUser(v){\r\n    this.loginUser = v;\r\n\r\n    if (!v){\r\n      this.Token = v;\r\n    }\r\n\r\n    if (this.OnSet_LoginUser){\r\n      this.OnSet_LoginUser(v);\r\n    }\r\n\r\n    genUtil.Handle(this.OnSet_LoginUser_Func,\r\n      (v) => this.OnSet_LoginUser_Func = v)\r\n  }\r\n\r\n  get Config(){\r\n    return {\r\n      headers : {\r\n        'Authorization': 'Bearer ' + this.Token\r\n      }\r\n    }\r\n  }\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../util/generalUtil'\r\n\r\nexport class User {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Username\r\n\r\n  Name\r\n\r\n  get ApiData() {\r\n    if (this.GetApiData_Func) {\r\n      return this.GetApiData_Func();\r\n    }\r\n\r\n    var obj = {\r\n      _id: this._id,\r\n      username : this.Username,\r\n      name : this.Name\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  GetUrl_Func\r\n\r\n  get Url() {\r\n    return this.GetUrl_Func();\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, this.Url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n\r\n    if (this._id) {\r\n      this.DeleteDatabase(false)\r\n    }\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, this.Url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successflly!');\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","import { User } from \"./User\"\r\nimport * as api from '../../../util/apiUtil'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict);\r\n  qI._id = data._id\r\n  qI.Username = data.username;\r\n  qI.Name = data.name;\r\n\r\n  if (data.userToken){\r\n    dict.Token = data.userToken\r\n  }\r\n  \r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new User();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Api\r\nexport const GetData = (url, apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import { User_Dict } from \"./User_Dict\"\r\nimport * as api from '../../../util/apiUtil'\r\nimport * as userUtil from '../item/UserUtil'\r\n\r\n// Instance\r\nexport const get = (url, dict) => {\r\n  var qI = new User_Dict();\r\n  qI.Url = url\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_LoginUser = (q) => {\r\n  if (q.IsGet_LoginUser) return undefined;\r\n  q.IsGet_LoginUser = true;\r\n\r\n  const setObj = (data) => {\r\n    q.LoginUser = data ? userUtil.GetFromDb(data, q) : undefined;\r\n    q.IsGet_LoginUser = true;\r\n  }\r\n\r\n  if (q.Token) {\r\n    const apiFunc = () => api.post(`${q.Url}/token`, {}, q.Config);\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        setObj(data)\r\n      })\r\n  } else {\r\n    setObj();\r\n  }\r\n}","import * as util from './AdminUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class Admin {\r\n  // Users\r\n  OnSet_Users_Func = []\r\n\r\n  users\r\n  get Users(){\r\n    if (!this.users){\r\n      util.Handle_Users(this)\r\n    } return this.users\r\n  } set Users(v){\r\n    this.users = v;\r\n    genUtil.Handle(this.OnSet_Users_Func,\r\n      (v) => this.OnSet_Users_Func = v)\r\n  }\r\n\r\n  getUser_Func\r\n  get GetUser_Func(){\r\n    if (!this.getUser_Func){\r\n      this.getUser_Func = util.GetGetUser_Func(this)\r\n    } return this.getUser_Func;\r\n  }\r\n\r\n  // Projects\r\n  OnSet_Projects_Func = []\r\n\r\n  projects\r\n  get Projects(){\r\n    if (!this.projects){\r\n      util.Handle_Projects(this)\r\n    } return this.projects\r\n  } set Projects(v){\r\n    this.projects = v;\r\n    genUtil.Handle(this.OnSet_Projects_Func,\r\n      (v) => this.OnSet_Projects_Func = v)\r\n  }\r\n\r\n  // Dict\r\n  userManager_Dict\r\n  get UserManager_Dict(){\r\n    if (!this.userManager_Dict){\r\n      this.userManager_Dict = util.GetUserManager_Dict(this)\r\n    } return this.userManager_Dict;\r\n  }\r\n\r\n  projectCommand_Dict\r\n  get ProjectCommand_Dict(){\r\n    if (!this.projectCommand_Dict){\r\n      this.projectCommand_Dict = util.GetProjectCommand_Dict(this)\r\n    } return this.projectCommand_Dict\r\n  }\r\n\r\n  projectGroupCommand_Dict\r\n  get ProjectGroupCommand_Dict(){\r\n    if (!this.projectGroupCommand_Dict){\r\n      this.projectGroupCommand_Dict = \r\n        util.GetProjectGroupCommand_Dict(this)\r\n    } return this.projectGroupCommand_Dict\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './DictUtil'\r\nimport { message } from 'antd'\r\n\r\nexport class Dict {\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n    \r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = (v) => {\r\n    this.Items.push(v);\r\n    if (this.OnAddItem){\r\n      this.OnAddItem(v)\r\n    }\r\n  }\r\n\r\n  // Save\r\n  Save = () => {\r\n    var items = this.Items;\r\n    var count = items.length\r\n    if (count === 0){\r\n      message.success('update data successfully!');\r\n    } else {\r\n      var i = -1;\r\n      const func = () => {\r\n        i++;\r\n        if (i === count-1){\r\n          message.success('update data successfully!');\r\n        }\r\n      }\r\n      \r\n      items.forEach(x => {\r\n        x.SaveDatabase(false, func)\r\n      })\r\n    }\r\n  }\r\n}","import { Dict, ExportSet_Dict } from \"./Dict\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.Dict;\r\n  if (host.Users){\r\n    setObj(host.Users)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Users_Func,\r\n      () => setObj(host.Users)\r\n    )\r\n  }\r\n}\r\n\r\n\r\n// Method\r\n","export const url = \"https://api.bimdev.vn/api/hb_upc\"","import { message } from 'antd';\r\nimport { url } from './Item_Url'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './ItemUtil'\r\n\r\nexport class Item {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // User\r\n  userId\r\n\r\n  OnSet_User_Func = []\r\n\r\n  user\r\n  get User() {\r\n    if (this.user === undefined){\r\n      util.Handle_User(this)\r\n    }\r\n    return this.user;\r\n  } set User(v) {\r\n    this.user = v;\r\n    this.userId = v?._id\r\n\r\n    genUtil.Handle(this.OnSet_User_Func,\r\n      (v) => this.OnSet_User_Func = v)\r\n  }\r\n\r\n  //Project\r\n  projectId\r\n\r\n  OnSet_Project_Func = []\r\n\r\n  project\r\n  get Project() {\r\n    if (this.project === undefined){\r\n      util.Handle_Project(this)\r\n    }\r\n    return this.project;\r\n  } set Project(v) {\r\n    this.project = v;\r\n    this.projectId = v?._id\r\n\r\n    genUtil.Handle(this.OnSet_Project_Func,\r\n      (v) => this.OnSet_Project_Func = v)\r\n  }\r\n\r\n  Commands = []\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      _id: this._id,\r\n      userId: this.userId,\r\n      projectId: this.projectId,\r\n      commands: this.Commands\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n\r\n    if (this._id) {\r\n      this.DeleteDatabase(false)\r\n    }\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successflly!');\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","import * as api from '../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { url } from './Item_Url'\r\nimport { Item } from './Item'\r\nimport { message } from 'antd'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id\r\n  qI.projectId = data.projectId\r\n  qI.userId = data.userId\r\n  qI.Commands = data.commands\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Item();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_User = (q) => {\r\n  if (q.IsGet_User) return undefined;\r\n  q.IsGet_User = true;\r\n\r\n  const setObj = (data) => {\r\n    if (data) {\r\n      q.User = genUtil.SingleFilter(data, x => x._id === q.userId)\r\n    } else {\r\n      q.User = null\r\n    }\r\n    q.IsGet_User = false;\r\n  }\r\n\r\n  if (!q.userId){\r\n    setObj();\r\n  } else {\r\n    var host = q.Dict.Dict\r\n    if (host.Users){\r\n      setObj(host.Users)\r\n    } else {\r\n      genUtil.Add_2(\r\n        host.OnSet_Users_Func,\r\n        () => setObj(host.Users)\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport const Handle_Project = (q) => {\r\n  if (q.IsGet_Project) return undefined;\r\n  q.IsGet_Project = true;\r\n\r\n  const setObj = (data) => {\r\n    if (data) {\r\n      q.Project = genUtil.SingleFilter(data, x => x._id === q.projectId)\r\n    } else {\r\n      q.Project = null\r\n    }\r\n    q.IsGet_Project = false;\r\n  }\r\n\r\n  if (!q.projectId){\r\n    setObj();\r\n  } else {\r\n    var host = q.Dict.Dict\r\n    if (host.Projects){\r\n      setObj(host.Projects)\r\n    } else {\r\n      genUtil.Add_2(\r\n        host.OnSet_Projects_Func,\r\n        () => setObj(host.Projects)\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n// Method\r\n\r\n\r\n// Api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './DictUtil'\r\nimport * as iUtil from '../item/ItemUtil'\r\nimport { message } from 'antd'\r\n\r\nexport class Dict {\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n    \r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = (v) => {\r\n    this.Items.push(v);\r\n    if (this.OnAddItem){\r\n      this.OnAddItem(v)\r\n    }\r\n  }\r\n\r\n  // Save\r\n  Save = () => {\r\n    var items = this.Items;\r\n    var count = items.length\r\n    if (count === 0){\r\n      message.success('update data successfully!');\r\n    } else {\r\n      var i = -1;\r\n      const func = () => {\r\n        i++;\r\n        if (i === count-1){\r\n          message.success('update data successfully!');\r\n        }\r\n      }\r\n      \r\n      items.forEach(x => {\r\n        x.SaveDatabase(false, func)\r\n      })\r\n    }\r\n  }\r\n}","import { Dict, ExportSet_Dict } from \"./Dict\"\r\nimport * as iUtil from '../item/ItemUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => iUtil.GetFromDb(x, q))\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n    }\r\n\r\n    iUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\n\r\n// Method\r\n","export const url = \"https://api.bimdev.vn/api/hb_upgc\"","import { message } from 'antd';\r\nimport { url } from './Item_Url'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './ItemUtil'\r\n\r\nexport class Item {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // User\r\n  userId\r\n\r\n  OnSet_User_Func = []\r\n\r\n  user\r\n  get User() {\r\n    if (this.user === undefined){\r\n      util.Handle_User(this)\r\n    }\r\n    return this.user;\r\n  } set User(v) {\r\n    this.user = v;\r\n    this.userId = v?._id\r\n\r\n    genUtil.Handle(this.OnSet_User_Func,\r\n      (v) => this.OnSet_User_Func = v)\r\n  }\r\n\r\n  Commands = []\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      _id: this._id,\r\n      userId: this.userId,\r\n      commands: this.Commands\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n\r\n    if (this._id) {\r\n      this.DeleteDatabase(false)\r\n    }\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successflly!');\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","import * as api from '../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { url } from './Item_Url'\r\nimport { Item } from './Item'\r\nimport { message } from 'antd'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id\r\n  qI.userId = data.userId\r\n  qI.Commands = data.commands\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Item();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_User = (q) => {\r\n  if (q.IsGet_User) return undefined;\r\n  q.IsGet_User = true;\r\n\r\n  const setObj = (data) => {\r\n    if (data) {\r\n      q.User = genUtil.SingleFilter(data, x => x._id === q.userId)\r\n    } else {\r\n      q.User = null\r\n    }\r\n    q.IsGet_User = false;\r\n  }\r\n\r\n  if (!q.userId){\r\n    setObj();\r\n  } else {\r\n    var host = q.Dict.Dict\r\n    if (host.Users){\r\n      setObj(host.Users)\r\n    } else {\r\n      genUtil.Add_2(\r\n        host.OnSet_Users_Func,\r\n        () => setObj(host.Users)\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n// Method\r\n\r\n\r\n// Api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './DictUtil'\r\nimport * as iUtil from '../item/ItemUtil'\r\nimport { message } from 'antd'\r\n\r\nexport class Dict {\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n    \r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = (v) => {\r\n    this.Items.push(v);\r\n    if (this.OnAddItem){\r\n      this.OnAddItem(v)\r\n    }\r\n  }\r\n\r\n  // Save\r\n  Save = () => {\r\n    var items = this.Items;\r\n    var count = items.length\r\n    if (count === 0){\r\n      message.success('update data successfully!');\r\n    } else {\r\n      var i = -1;\r\n      const func = () => {\r\n        i++;\r\n        if (i === count-1){\r\n          message.success('update data successfully!');\r\n        }\r\n      }\r\n      \r\n      items.forEach(x => {\r\n        x.SaveDatabase(false, func)\r\n      })\r\n    }\r\n  }\r\n}","import { Dict, ExportSet_Dict } from \"./Dict\"\r\nimport * as iUtil from '../item/ItemUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => iUtil.GetFromDb(x, q))\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n    }\r\n\r\n    iUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\n\r\n// Method\r\n","import { Admin } from \"./Admin\";\r\nimport * as userUtil from '../../../../user/item/UserUtil'\r\nimport * as projectUtil from '../../project/base/ProjectUtil'\r\n\r\nimport * as umDictUtil from '../usermanager/dict/DictUtil'\r\nimport * as pcDictUtil from '../project/dict/DictUtil'\r\nimport * as pgcDictUtil from '../projectgroup/dict/DictUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Admin();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetGetUser_Func = (q) => {\r\n  return (x) => {\r\n    var qI = x ? userUtil.GetFromDb(x) : userUtil.get()\r\n\r\n    qI.GetUrl_Func = () => \"https://api.bimdev.vn/api/hbu\"\r\n    qI.GetApiData_Func = () => {\r\n      return {\r\n        _id: qI._id,\r\n        username : qI.Username,\r\n        name : qI.Name,\r\n        password: qI.Password\r\n      }\r\n    }\r\n    qI.Dict = q.UserManager_Dict\r\n    \r\n    return qI;\r\n  }\r\n}\r\n\r\nexport const Handle_Users = (q) => {\r\n  if (q.IsGet_Users) return undefined\r\n  q.IsGet_Users = true;\r\n\r\n  var url = \"https://api.bimdev.vn/api/hbu\"\r\n\r\n  const setObj = (data) => {\r\n    q.Users = data.map(x => {\r\n      return q.GetUser_Func(x)\r\n    });\r\n    q.IsGet_Users = false;\r\n  }\r\n\r\n  var apiData = {}\r\n\r\n  userUtil.GetData(\r\n    url,\r\n    apiData, (data) => setObj(data)\r\n  )\r\n}\r\n\r\nexport const Handle_Projects = (q) => {\r\n  if (q.IsGet_Projects) return undefined\r\n  q.IsGet_Projects = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Projects = data.map(x => projectUtil.GetFromDb(x));\r\n    q.IsGet_Projects = false;\r\n  }\r\n\r\n  var apiData = {}\r\n\r\n  projectUtil.GetData(\r\n    apiData, (data) => setObj(data)\r\n  )\r\n}\r\n\r\nexport const GetUserManager_Dict = (q) => {\r\n  return umDictUtil.get(q);\r\n}\r\n\r\nexport const GetProjectCommand_Dict = (q) => {\r\n  return pcDictUtil.get(q)\r\n}\r\n\r\nexport const GetProjectGroupCommand_Dict = (q) => {\r\n  return pgcDictUtil.get(q)\r\n}\r\n\r\n// Method\r\n","export const url = \"https://api.bimdev.vn/api/hbp\";","import * as genUtil from '../../../../util/generalUtil'\r\nimport * as api from '../../../../util/apiUtil'\r\nimport * as mif from '../../entity/mass/field/MassItemField'\r\nimport * as mifd from '../../entity/mass/field/MassItemField_Dict'\r\nimport * as mutd from '../../entity/mass/unit/MassUnitType_Dict'\r\nimport * as projectDictUtil from '../../entity/project/base/Project_DictUtil'\r\nimport * as phaseDictUtil from '../../entity/phase/Phase_DictUtil'\r\n\r\n// MassGroup\r\nimport * as mgsddUtil from '../../entity/setting/massGroup/dict/dict/MGS_Dict_DictUtil'\r\nimport * as mgsdUtil from '../../entity/setting/massGroup/dict/MassGroupSetting_DictUtil'\r\nimport * as mgsd_ut from '../../entity/setting/massGroup/dict/MGS_Dict_UseType'\r\n\r\n// MassDetail\r\nimport * as mdsddUtil from '../../entity/setting/massDetail/dict/dict/MDS_Dict_DictUtil'\r\n\r\n// SiteSuggest\r\nimport * as sgddUtil from '../../entity/setting/sitesuggest/dict/dict/Dict_DictUtil'\r\n\r\nimport * as userDictUtil from '../../../user/dict/User_DictUtil'\r\nimport * as adminUtil from '../../entity/admin/main/AdminUtil'\r\nimport { url as pgc_url } from '../../entity/project/base/ProjectGroupCommand_Url'\r\nconst uc_url = \"https://api.bimdev.vn/api/hb_uc\"\r\n\r\nexport const GetMassItemFields = (data) => {\r\n  return mif.GetAll();\r\n}\r\n\r\nexport const GetMIFs_ForMassGroup = () => {\r\n  return mif.GetForMassGroup();\r\n}\r\n\r\n// Tên và Value của MassGroupField\r\nexport const GetMIF_Dict_ForMassGroup = () => {\r\n  return mifd.GetForMassGroup();\r\n}\r\n\r\n// Thêm Unit và Value\r\nexport const GetMIF_Dict_ForDetail = () => {\r\n  return mifd.GetForDetail();\r\n}\r\n\r\n// List cho Input\r\nexport const GetMIF_Dict_ForInput = () => {\r\n  return mifd.GetForInput();\r\n}\r\n\r\n// UnitType\r\nexport const GetMUT_Dict = () => {\r\n  return mutd.GetDict();\r\n}\r\n\r\nexport const Get_Project_Dict = (data) => {\r\n  return projectDictUtil.get(true);\r\n}\r\n\r\nexport const Get_Project_Dict_ForMassDetail = (data) => {\r\n  return projectDictUtil.get();\r\n}\r\n\r\nexport const Get_Phase_Dict_ForMassDetail = (data) => {\r\n  return phaseDictUtil.get();\r\n}\r\n\r\n// MassGroup\r\nexport const GetMgs_Dict_Dict = (data) => {\r\n  return mgsddUtil.get();\r\n}\r\n\r\nexport const GetMassGroupSetting_Dict = (data) => {\r\n  return genUtil.SingleFilter\r\n    (data.Mgs_Dict_Dict.Items, (x) => x.UseType === mgsd_ut.project);\r\n}\r\n\r\n// MassDetail\r\nexport const GetMds_Dict_Dict = (data) => {\r\n  return mdsddUtil.get();\r\n}\r\n\r\n// SiteDict\r\nexport const Handle_SG_Dict_Dict = (q) => {\r\n  if (q.IsGet_SG_Dict_Dict) return undefined;\r\n  q.IsGet_SG_Dict_Dict = true;\r\n\r\n  const setObj = (data) => {\r\n    if (data) {\r\n      q.SG_Dict_Dict = data.length !== 0 ?\r\n        sgddUtil.GetFromDb(data[0])\r\n        : sgddUtil.get()\r\n    }\r\n    q.IsGet_SG_Dict_Dict = false;\r\n  }\r\n\r\n  var host = q.CurrentProject;\r\n  if (!host) {\r\n    setObj();\r\n  } else {\r\n    var apiData = {\r\n      projectId: host._id,\r\n    }\r\n\r\n    sgddUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n}\r\n\r\n// UserDict\r\nexport const GetUserDict = (data) => {\r\n  var qI = userDictUtil.get(\r\n    \"https://api.bimdev.vn/api/hbu\",\r\n    data);\r\n\r\n  qI.OnSet_LoginUser = (v) => {\r\n    if (data.CurrentProject) {\r\n      data.CurrentProject.Reset_Commands();\r\n    }\r\n    data.Reset_Commands();\r\n    data.Reset_AdminCommands();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetAdmin = (data) => {\r\n  return adminUtil.get(data);\r\n}\r\n\r\n// Commands\r\nexport const Handle_Commands = (q) => {\r\n  if (q.IsGet_Commands) return undefined;\r\n  q.IsGet_Commands = true;\r\n\r\n  const setObj = (data, fromType) => {\r\n    // Ưu tiên data có projectId\r\n\r\n    if (fromType === 'api') {\r\n      // Nếu đã có data phần project, bỏ qua thiết lập này\r\n      if (q.Command_FromType === 'project') {\r\n        return\r\n      } else {\r\n        q.Commands = data && data.length !== 0 ? data[0].commands : []\r\n      }\r\n    } else {\r\n      q.Commands = data\r\n    }\r\n\r\n    q.Command_FromType = fromType;\r\n    q.IsGet_Commands = false;\r\n  }\r\n\r\n  var host = q.CurrentProject;\r\n  if (host) {\r\n    if (host.Commands) {\r\n      setObj(host.Commands)\r\n    } else {\r\n      genUtil.Add_2(host.OnSet_Commands_Func,\r\n        () => {\r\n          setObj(host.Commands, 'project')\r\n        })\r\n    }\r\n  } else {\r\n    var user = q.UserDict.LoginUser\r\n    if (!user) {\r\n      setObj(undefined, 'api');\r\n    } else {\r\n      var apiData = {\r\n        userId: user._id\r\n      }\r\n\r\n      const apiFunc = () => api.post(`${pgc_url}/list`, apiData);\r\n      apiFunc().then(response => response.data)\r\n        .then(data => {\r\n          setObj(data, 'api')\r\n        })\r\n    }\r\n  }\r\n}\r\n\r\n// Admin Command\r\nexport const Handle_AdminCommands = (q) => {\r\n  if (q.IsGet_AdminCommands) return undefined;\r\n  q.IsGet_AdminCommands = true;\r\n\r\n  const setObj = (data) => {\r\n    q.AdminCommands = data && data.length !== 0 ? data[0].commands : []\r\n    q.IsGet_AdminCommands = false;\r\n  }\r\n\r\n  var user = q.UserDict.LoginUser\r\n  if (!user) {\r\n    setObj();\r\n  } else {\r\n    var apiData = {\r\n      userId: user._id\r\n    }\r\n\r\n    const apiFunc = () => api.post(`${uc_url}/list`, apiData);\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        setObj(data)\r\n      })\r\n  }\r\n}","import * as mut from './MassUnitType'\r\n\r\nexport const GetDict = () => {\r\n  return mut.GetList().map(x => {\r\n    return {\r\n      _id: x,\r\n      Name: mut.GetName(x),\r\n      Value: x\r\n    }\r\n  })\r\n}","export const url = \"https://api.bimdev.vn/api/hb_upgc\";","\r\nimport MassResultComp from '../../entity/mass/result/MassResultComp';\r\nimport VersionCompareSetting from '../../entity/setting/versionCompare/VersionCompareSetting';\r\nimport { Tracking } from '../../entity/tracking/Tracking';\r\nimport * as util from './PMDataUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport class PMData {\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new PMData();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  project_Dict\r\n  get Project_Dict() {\r\n    if (!this.project_Dict){\r\n      this.project_Dict = util.Get_Project_Dict(this);\r\n    }\r\n    return this.project_Dict;\r\n  }\r\n\r\n  project_Dict_ForMassDetail\r\n  get Project_Dict_ForMassDetail() {\r\n    if (!this.project_Dict_ForMassDetail){\r\n      this.project_Dict_ForMassDetail = \r\n        util.Get_Project_Dict_ForMassDetail(this);\r\n    }\r\n    return this.project_Dict_ForMassDetail;\r\n  }\r\n\r\n  currentProject\r\n  get CurrentProject(){\r\n    return this.currentProject\r\n  } set CurrentProject(v){\r\n    this.currentProject = v;\r\n\r\n    this.Reset_Commands(this);\r\n    this.MassGroupSetting_Dict.Project = v;\r\n  }\r\n\r\n  // MassGroup\r\n  mgs_Dict_Dict\r\n  get Mgs_Dict_Dict(){\r\n    if (!this.mgs_Dict_Dict){\r\n      this.mgs_Dict_Dict = util.GetMgs_Dict_Dict(this)\r\n    } return this.mgs_Dict_Dict\r\n  }\r\n\r\n  massGroupSetting_Dict = undefined\r\n  get MassGroupSetting_Dict(){\r\n    if (!this.massGroupSetting_Dict){\r\n      this.massGroupSetting_Dict = util.GetMassGroupSetting_Dict(this)\r\n    }return this.massGroupSetting_Dict\r\n  }\r\n\r\n  // MassDetail\r\n  mds_Dict_Dict\r\n  get Mds_Dict_Dict(){\r\n    if (!this.mds_Dict_Dict){\r\n      this.mds_Dict_Dict = util.GetMds_Dict_Dict(this)\r\n    } return this.mds_Dict_Dict\r\n  }\r\n\r\n  // SiteSuggest\r\n  OnSet_SG_Dict_Dict_Funcs = []\r\n\r\n  sg_Dict_Dict\r\n  get SG_Dict_Dict(){\r\n    if (!this.sg_Dict_Dict){\r\n      util.Handle_SG_Dict_Dict(this)\r\n    } return this.sg_Dict_Dict\r\n  } set SG_Dict_Dict(v){\r\n    this.sg_Dict_Dict = v\r\n    genUtil.Handle(this.OnSet_SG_Dict_Dict_Funcs,\r\n      (v) => this.OnSet_SG_Dict_Dict_Funcs = v)\r\n  }\r\n\r\n  phase_Dict_ForMassDetail\r\n  get Phase_Dict_ForMassDetail() {\r\n    if (!this.phase_Dict_ForMassDetail){\r\n      this.phase_Dict_ForMassDetail = \r\n        util.Get_Phase_Dict_ForMassDetail(this);\r\n    }\r\n    return this.phase_Dict_ForMassDetail;\r\n  }\r\n\r\n  massResultComp\r\n  get MassResultComp(){\r\n    if (!this.massResultComp){\r\n      this.massResultComp = new MassResultComp();\r\n    }\r\n    return this.massResultComp;\r\n  }\r\n  set MassResultComp(v){\r\n    this.massResultComp = v;\r\n  }\r\n\r\n  massItemFields\r\n  get MassItemFields(){\r\n    if (!this.massItemFields){\r\n      this.massItemFields = util.GetMassItemFields();\r\n    }\r\n    return this.massItemFields;\r\n  }\r\n\r\n  mifs_ForMassGroup\r\n  get MIFs_ForMassGroup(){\r\n    if (!this.mifs_ForMassGroup){\r\n      this.mifs_ForMassGroup = util.GetMIFs_ForMassGroup();\r\n    }\r\n    return this.mifs_ForMassGroup;\r\n  }\r\n\r\n  // Tên và Value của MassGroupField\r\n  mif_Dict_ForMassGroup\r\n  get MIF_Dict_ForMassGroup(){\r\n    if (!this.mif_Dict_ForMassGroup){\r\n      this.mif_Dict_ForMassGroup = util.GetMIF_Dict_ForMassGroup();\r\n    }\r\n    return this.mif_Dict_ForMassGroup;\r\n  }\r\n\r\n  // Thêm Unit và Value\r\n  mif_Dict_ForDetail\r\n  get MIF_Dict_ForDetail(){\r\n    if (!this.mif_Dict_ForDetail){\r\n      this.mif_Dict_ForDetail = util.GetMIF_Dict_ForDetail();\r\n    }\r\n    return this.mif_Dict_ForDetail;\r\n  }\r\n\r\n  // List dành cho Input\r\n  mif_Dict_ForInput\r\n  get MIF_Dict_ForInput(){\r\n    if (!this.mif_Dict_ForInput){\r\n      this.mif_Dict_ForInput = util.GetMIF_Dict_ForInput();\r\n    }\r\n    return this.mif_Dict_ForInput;\r\n  }\r\n\r\n  // UnitType\r\n  mut_Dict\r\n  get MUT_Dict(){\r\n    if (!this.mut_Dict){\r\n      this.mut_Dict = util.GetMUT_Dict(this)\r\n    } return this.mut_Dict\r\n  }\r\n\r\n  versionCompareSetting\r\n  get VersionCompareSetting(){\r\n    if (!this.versionCompareSetting){\r\n      this.versionCompareSetting = new VersionCompareSetting();\r\n    }\r\n    return this.versionCompareSetting;\r\n  }\r\n\r\n  DebugPoints = []\r\n\r\n  tracking\r\n  get Tracking(){\r\n    if (!this.tracking){\r\n      this.tracking = new Tracking();\r\n    }\r\n    return this.tracking;\r\n  }\r\n\r\n  IsDebug = false\r\n\r\n  OnSet_CurrentProject_Func_Dict = []\r\n\r\n  ApiUrl = 'https://api.bimdev.vn/api'\r\n\r\n  UpdatedDate = '01/07/2021'\r\n\r\n  // Kiểm tra có phải lần đầu truy xuất bảng khối lượng\r\n  // sau khi mở trang web hay ko?\r\n  Is_First_Get_MassTable\r\n\r\n  // Đối tượng noted trong debug\r\n  LoggingItems = []\r\n\r\n  // UserDict\r\n  userDict\r\n  get UserDict(){\r\n    if (!this.userDict){\r\n      this.userDict = util.GetUserDict(this)\r\n    } return this.userDict;\r\n  }\r\n\r\n  // Admin\r\n  admin\r\n  get Admin(){\r\n    if(!this.admin){\r\n      this.admin = util.GetAdmin(this)\r\n    } return this.admin\r\n  }\r\n\r\n  // Commands\r\n  OnSet_Commands_Func = []\r\n\r\n  Reset_Commands = () => {\r\n    this.Commands = undefined;\r\n    this.IsGet_Commands = false\r\n    util.Handle_Commands(this)\r\n  }\r\n\r\n  commands\r\n  get Commands(){\r\n    if (!this.commands){\r\n      util.Handle_Commands(this)\r\n    } return this.commands\r\n  } set Commands(v){\r\n    this.commands = v;\r\n    genUtil.Handle(this.OnSet_Commands_Func,\r\n      (v) => this.OnSet_Commands_Func = v)\r\n  }\r\n\r\n  // Admin Command\r\n  OnSet_AdminCommands_Func = []\r\n\r\n  Reset_AdminCommands = () => {\r\n    this.AdminCommands = undefined;\r\n    this.IsGet_AdminCommands = false\r\n    util.Handle_AdminCommands(this)\r\n  }\r\n\r\n  adminCommands\r\n  get AdminCommands(){\r\n    if (!this.adminCommands){\r\n      util.Handle_AdminCommands(this)\r\n    } return this.adminCommands\r\n  } set AdminCommands(v){\r\n    this.adminCommands = v;\r\n    genUtil.Handle(this.OnSet_AdminCommands_Func,\r\n      (v) => this.OnSet_AdminCommands_Func = v)\r\n  }\r\n}","export const mass = 'mass'\r\nexport const typicallevel = 'typicallevel'\r\nexport const phase = 'phase'\r\nexport const inputdata = 'inputdata'\r\nexport const mepsetting = 'mepsetting'\r\nexport const document = 'document'\r\nexport const masstype = 'masstype'","\r\nexport default class PhaseVM {\r\n  get _id(){\r\n    return this.ModelItem._id;\r\n  }\r\n\r\n  name\r\n  get Name(){\r\n    if(!this.name){\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    if (!this.description){\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v){\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  get DisplayContent () {\r\n    return `${this.Name}`;\r\n  }\r\n}","import PhaseVM from \"./PhaseVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  var qI = new PhaseVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;  \r\n\r\n  return qI;\r\n}","export const addversion = 'addversion'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Phase_DictVMUtil'\r\nimport * as stateType from '../state/StateType'\r\nimport { message } from 'antd';\r\nimport { PMDataVM } from '../../single/form/PMDataVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class Phase_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable,\r\n      state : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  state = undefined\r\n  get State(){\r\n    return this.state;\r\n  }\r\n  set State(v){\r\n    this.state = v;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n\r\n  AddVersion = () => {\r\n    this.State = stateType.addversion;\r\n  }\r\n\r\n  Cancel = () => {\r\n    this.State = undefined;\r\n  }\r\n\r\n  OK = () => {\r\n    var name = this.Input.Name;\r\n    var index = this.Items.findIndex(x => x.Name === name);\r\n    if (index !== -1){\r\n      message.warning('version name already exists!');\r\n      return;\r\n    }\r\n\r\n    this.State = undefined;\r\n    this.ModelItem.AddMassVersion();\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import * as textVMUtil from '../../../text/TextVMUtil'\r\n\r\nexport default class PhaseInputVM {\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên version\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM){\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n}","import * as itemVMUtil from './PhaseVMUtil'\r\nimport { Phase_DictVM } from \"./Phase_DictVM\";\r\nimport * as inputVMUtil from './PhaseInputVMUtil'\r\n\r\nexport const get = (q) => {\r\n  var qI = new Phase_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone_Funcs.push((v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  });\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (q) => {\r\n  return inputVMUtil.get(q.ModelItem.Input, q);\r\n}","import PhaseInputVM from \"./PhaseInputVM\";\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new PhaseInputVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ProjectVMUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport default class ProjectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      typicalLevelSetting: observable,\r\n      typicalLevelSetting_ForEdit: observable,\r\n      commands : observable\r\n    })\r\n  }\r\n\r\n  get _id() {\r\n    return this.ModelItem._id;\r\n  }\r\n\r\n  name\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  code\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.ModelItem.Code;\r\n    }\r\n    return this.code;\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    this.ModelItem.Code = v;\r\n  }\r\n\r\n  phase_DictVM\r\n  get Phase_DictVM() {\r\n    if (!this.phase_DictVM) {\r\n      this.phase_DictVM = util.GetPhase_DictVM(this);\r\n    }\r\n    return this.phase_DictVM;\r\n  }\r\n\r\n  exportSet_Dict\r\n  get ExportSet_Dict(){\r\n    if (!this.exportSet_Dict){\r\n      this.exportSet_Dict = util.GetExportSet_Dict(this)\r\n    } return this.exportSet_Dict;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return `${this.Code} - ${this.Name}`;\r\n  }\r\n\r\n  // Old Version\r\n  get Level_Dict() {\r\n    return this.ModelItem.Level_Dict;\r\n  }\r\n\r\n  // LevelSetting\r\n  OnSet_LevelSetting_Func_Dict = []\r\n\r\n  levelSetting\r\n  get LevelSetting() {\r\n    if (!this.levelSetting) {\r\n      util.Handle_LevelSetting(this)\r\n    }\r\n    return this.levelSetting;\r\n  } set LevelSetting(v) {\r\n    this.levelSetting = v;\r\n\r\n    genUtil.Handle(\r\n      this.OnSet_LevelSetting_Func_Dict,\r\n      (v) => this.OnSet_LevelSetting_Func_Dict = v)\r\n  }\r\n\r\n  // TypicalLevelSetting\r\n  typicalLevelSetting = undefined\r\n  get TypicalLevelSetting() {\r\n    if (!this.typicalLevelSetting) {\r\n      this.typicalLevelSetting = util.GetTypicalLevelSetting(this);\r\n    }\r\n    return this.typicalLevelSetting;\r\n  } set TypicalLevelSetting(v) {\r\n    this.typicalLevelSetting = v;\r\n  }\r\n\r\n  typicalLevelSetting_ForEdit = undefined\r\n  get TypicalLevelSetting_ForEdit() {\r\n    if (!this.typicalLevelSetting_ForEdit) {\r\n      this.typicalLevelSetting_ForEdit = util.GetTypicalLevelSetting_ForEdit(this);\r\n    }\r\n    return this.typicalLevelSetting_ForEdit;\r\n  } set TypicalLevelSetting_ForEdit(v) {\r\n    this.typicalLevelSetting_ForEdit = v;\r\n  }\r\n\r\n  get Url(){\r\n    return this.ModelItem.Url;\r\n  }\r\n\r\n  // Commands\r\n  commands = undefined\r\n  get Commands(){\r\n    if (!this.commands){\r\n      util.Handle_Commands(this)\r\n    } return this.commands;\r\n  } set Commands(v){\r\n    this.commands = v\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textUtil from '../../../../text/TextVMUtil';\r\n\r\nexport class SettingVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      name: observable\r\n    })\r\n  }\r\n\r\n  get _id(){\r\n    return this.ModelItem._id;\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.ModelItem.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.ModelItem.M2VM = v;\r\n  }\r\n\r\n  ModelItem\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (!this.M2VM) {\r\n      this.ModelItem.Name = v;\r\n    }\r\n  }\r\n\r\n  nameVM\r\n  get NameVM(){\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM = textUtil.get(this.Name, 'tên thiết lập ...');\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  description\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (!this.M2VM) {\r\n      this.ModelItem.Description = v;\r\n    }\r\n  }\r\n\r\n  settingType\r\n  get SettingType() {\r\n    if (!this.settingType) {\r\n      this.settingType = this.ModelItem.SettingType;\r\n    }\r\n    return this.settingType;\r\n  }\r\n  set SettingType(v) {\r\n    this.settingType = v;\r\n    this.ModelItem.SettingType = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.Name;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.Name;\r\n  }\r\n\r\n  data\r\n  get Data(){\r\n    if (!this.data){\r\n      this.data = this.ModelItem.Data;\r\n    }\r\n    return this.data;\r\n  }\r\n  set Data(v) {\r\n    this.data = v;\r\n    if (!this.M2VM){\r\n      this.ModelItem.Data = v;\r\n    }\r\n  }\r\n\r\n  dataVM\r\n  get DataVM() {\r\n    if (!this.dataVM) {\r\n      this.dataVM = this.GetDataVM();\r\n    }\r\n    return this.dataVM;\r\n  }\r\n  set DataVM(v) {\r\n    this.dataVM = v;\r\n\r\n    // Gọi hàm để đổ dữ liệu về\r\n    if (v && this.OnInitialSetDataVM){\r\n      this.OnInitialSetDataVM(v);\r\n    }\r\n\r\n    if (!this.M2VM) {\r\n      if (!v) {\r\n        this.Data = v;\r\n      }\r\n      else {\r\n        this.Data = v.ModelItem;\r\n      }\r\n    }\r\n  }\r\n\r\n  GetDataVM = () => {\r\n    if (this.OnGetDataVM) {\r\n      return this.OnGetDataVM();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.Items.splice(this.Index, 1);\r\n  }\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\nimport * as util from './LevelSettingVMUtil'\r\n\r\nexport class LevelSettingVM extends SettingVM {\r\n\r\n}","export const view = 'view'\r\nexport const edit = 'edit'\r\n\r\nexport const GetList = () => {\r\n  return [\r\n    view, edit\r\n  ]\r\n}","import { Button, Popover } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as editTextUtil from '../../../../../text/EditableTextVMUtil';\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport * as genUtil from '../../../../../../util/generalUtil';\r\nimport * as util from './LS_ItemVMUtil'\r\nimport * as mulSelectUtil from '../../../../../select/MultiSelectVMUtil';\r\nimport EntHoverVM from '../../../../../hover/EntHoverVM';\r\nimport EntHoverView from '../../../../../hover/EntHoverView';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport * as pct from '../../../command/ProjectCommand'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class LS_ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_ShowValue_Delete: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Data\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  }\r\n  set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM = editTextUtil.get(this.Name);\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Name = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  get Values() {\r\n    return this.ModelItem.Values;\r\n  }\r\n  set Values(v) {\r\n    this.ModelItem.Values = v;\r\n  }\r\n\r\n  value_StorageList\r\n  get Value_StorageList() {\r\n    if (!this.value_StorageList) {\r\n      util.Handle_Value_StorageList(this);\r\n    }\r\n    return this.value_StorageList;\r\n  } set Value_StorageList(v) {\r\n    this.value_StorageList = v;\r\n\r\n    var obj = this.ValueVM;\r\n    obj.Items = v;\r\n    obj.InitialItems = this.Values;\r\n  }\r\n\r\n  valueVM\r\n  get ValueVM() {\r\n    if (!this.valueVM) {\r\n      var list = this.Value_StorageList ? this.Value_StorageList : []\r\n      var obj = this.valueVM = mulSelectUtil.get(list, this.Values);\r\n      obj.Placeholder = 'Chọn dữ liệu'\r\n      obj.OnSelectedItemChanged = (v) => this.Values = v;\r\n      obj.GetDisabled_Func = () => !this.Commands.includes(pct.edit)\r\n    }\r\n    return this.valueVM;\r\n  }\r\n\r\n  Is_ShowValue_Delete = undefined\r\n\r\n  ShowValue_Delete = () => {\r\n    if (this.Commands.includes(pct.edit)) {\r\n      this.Is_ShowValue_Delete = true;\r\n    }\r\n  }\r\n\r\n  HideValue_Delete = () => {\r\n    this.Is_ShowValue_Delete = false;\r\n  }\r\n\r\n  get Value_Element() {\r\n    return <>\r\n      <div className='ls_item__value__wrapper'\r\n        onMouseEnter={this.ShowValue_Delete}\r\n        onMouseLeave={this.HideValue_Delete}>\r\n        <MultiSelectView store={this.ValueVM} />\r\n\r\n        <div className='ls_item__value__delete'>\r\n          {this.Is_ShowValue_Delete ?\r\n            <Button type='primary' size='small'\r\n              onClick={this.Delete}>x</Button>\r\n            : <div />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  // Index\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  get IsLast() {\r\n    return this.Dict.Items.length - 1 === this.Index;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n\r\n    var dict = this.Dict;\r\n    dict.Items.splice(this.Index, 1);\r\n    dict.Table.DeleteItem(this);\r\n  }\r\n\r\n  get Project() {\r\n    return this.Dict.Project\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import { LS_ItemVM } from \"./LS_ItemVM\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new LS_ItemVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Proeprty\r\nexport const Handle_Value_StorageList = (q) => {\r\n  if (q.IsGet_Value_StorageList) return undefined;\r\n  q.IsGet_Value_StorageList = true;\r\n\r\n  var project = q.Project.ModelItem\r\n\r\n  var setObj = (levelDict) => {\r\n    q.Value_StorageList = levelDict.Items.map(x => x.Name);\r\n  }\r\n\r\n  if (project.LevelDict){\r\n    setObj(project.LevelDict)\r\n  } else {\r\n    genUtil.Add_2(\r\n    project.OnSet_LevelDict_Func_Dict,\r\n    () => {\r\n      setObj(project.LevelDict)\r\n    }, false);\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './LevelSettingDataVMUtil'\r\nimport { ControlOutlined } from '@ant-design/icons';\r\nimport { Button, message } from 'antd';\r\nimport * as itemUtil from './item/LS_ItemVMUtil'\r\nimport * as rs from '../../../../text/TextRenderState';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class LevelSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  } set Items(v){\r\n    this.items = v;\r\n  }\r\n\r\n  get Project(){\r\n    return this.Dict.Project\r\n  }\r\n\r\n  AddItem = () => {\r\n    var item = itemUtil.get(this.ModelItem.AddItem(), this);\r\n\r\n    item.NameVM.RenderState = rs.edit\r\n\r\n    this.Items.push(item);\r\n    this.Table.AddItem(item);\r\n    return item;\r\n  }\r\n\r\n  // Table\r\n  table\r\n  get Table(){\r\n    if (!this.table){\r\n      this.table = util.GetTable(this);\r\n    }\r\n    return this.table;\r\n  }\r\n\r\n  get Project(){\r\n    return this.Dict.Project\r\n  }\r\n\r\n  Update_LevelData = () => {\r\n    this.ModelItem.Update_LevelData();\r\n    message.success('save successfully!');\r\n  }\r\n\r\n  // Commands\r\n  get Commands(){\r\n    return pmDataVM().Commands;\r\n  }\r\n}","export const _default = \"default\";\r\nexport const edit = \"edit\";","import * as util from './RenderItemUtil'\r\n\r\nexport default class RenderItem {\r\n  render\r\n  get Render(){\r\n    if (!this.render){\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v){\r\n    this.render = v;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from './RenderState'\r\nimport * as textUtil from '../text/TextVMUtil'\r\nimport * as util from './TableCellUtil'\r\n\r\nexport default class TableCell {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      renderState: observable\r\n    })\r\n  }\r\n\r\n  get Key() {\r\n    return `${this.Column.Key}_${this.Row.Key}`;\r\n  }\r\n\r\n  get Item() {\r\n    return this.Row.Item;\r\n  }\r\n\r\n  get ColumnIndex() {\r\n    return this.Row.Cells.indexOf(this);\r\n  }\r\n\r\n  get RowIndex() {\r\n    return this.Row.Index;\r\n  }\r\n\r\n  renderState = undefined\r\n  get RenderState() {\r\n    if (!this.renderState) {\r\n      this.renderState = this.Column.RenderState;\r\n    }\r\n    return this.renderState;\r\n  }\r\n  set RenderState(v) {\r\n    this.renderState = v;\r\n  }\r\n\r\n  valueVM\r\n  get ValueVM(){\r\n    if (!this.valueVM){\r\n      var val = util.GetValue(this);\r\n      this.valueVM = textUtil.get(val);\r\n    }\r\n    return this.valueVM;\r\n  }\r\n\r\n  render_Dict\r\n  get Render_Dict() {\r\n    if (!this.render_Dict) {\r\n      this.render_Dict = this.Column.Render_Dict;\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n\r\n  get DataIndex() {\r\n    return this.Column.DataIndex;\r\n  }\r\n\r\n  Render = () => {\r\n    var dataIndex = this.DataIndex;\r\n    var item = this.Item;\r\n    var value  = util.GetValue(this);\r\n\r\n    if (this.Table.Override_Get_CellRender){\r\n      return this.Table.Override_Get_CellRender(value, item, dataIndex, this, this.Row, this.Column);\r\n    }\r\n\r\n    var render = this.Render_Dict.GetRender(this.RenderState);\r\n    return render.Render(value, item, dataIndex, this, this.Row, this.Column);\r\n  }\r\n}","import { PMData } from \"../main/single/model/PMData\";\r\nimport TableCell from \"./TableCell\"\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\n// Instance\r\nexport const get = (row, col) => {\r\n  var qI = new TableCell();\r\n  qI.Row = row;\r\n  qI.Column = col;\r\n  qI.Table = row.Table;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetValue = (q) => {\r\n  var dataIndex = q.DataIndex;\r\n  var item = q.Item;\r\n\r\n  if (q.Table.Override_Get_CellValue){\r\n    var val = q.Table.Override_Get_CellValue(item, q, q.Row, q.Column);\r\n    return val;\r\n  }\r\n\r\n  var value = undefined;\r\n\r\n  if (dataIndex) {\r\n    value = item;\r\n    dataIndex.forEach(x => {\r\n      value = value[x]\r\n    })\r\n  }\r\n\r\n  return value;\r\n}","import InputView from \"../input/InputView\";\r\nimport RenderItem from \"./RenderItem\"\r\nimport * as rs from './RenderState'\r\nimport * as textUtil from '../text/TextVMUtil'\r\nimport TextView from \"../text/TextView\";\r\nimport * as cellUtil from './TableCellUtil'\r\n\r\nexport const get = (state, render) => {\r\n  var qI = new RenderItem();\r\n  qI.State = state;\r\n  qI.Render = render;\r\n  return qI;\r\n}\r\n\r\nexport const GetRender = (q) => {\r\n  switch (q.State) {\r\n    case rs._default:\r\n      return (val, item, dataIndex, cell, row, col) => {\r\n        return cell.ValueVM.Content;\r\n      };\r\n    case rs.edit:\r\n      return (value, item, dataIndex, cell, row, col) => {\r\n        if (!dataIndex) return value;\r\n\r\n        var inputVM = cell.ValueVM;\r\n\r\n        var length = dataIndex.length;\r\n        var obj = item;\r\n        dataIndex.filter((x, i) => i < length - 1)\r\n          .forEach((x) => obj = obj[x]);\r\n\r\n        inputVM.onSetContent = (v) => {\r\n          obj[dataIndex[length - 1]] = v;\r\n        }\r\n        return <InputView store={inputVM} />\r\n      };\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import * as renderUtil from './RenderItemUtil'\r\n\r\nexport default class Render_Dict {\r\n  Items = []\r\n\r\n  GetRender = (state) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x.State === state);\r\n    if (index === -1){\r\n      var item = renderUtil.get(state);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import * as util from './TitleRenderItemUtil'\r\n\r\nexport default class TitleRenderItem {\r\n  render\r\n  get Render(){\r\n    if (!this.render){\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v){\r\n    this.render = v;\r\n  }\r\n}","import InputView from \"../input/InputView\";\r\nimport * as rs from './RenderState'\r\nimport * as textUtil from '../text/TextVMUtil'\r\nimport TitleRenderItem from \"./TitleRenderItem\";\r\nimport { Button } from \"antd\";\r\n\r\nexport const get = (state, render) => {\r\n  var qI = new TitleRenderItem();\r\n  qI.State = state;\r\n  qI.Render = render;\r\n  return qI;\r\n}\r\n\r\nexport const GetRender = (q) => {\r\n  switch (q.State) {\r\n    case rs._default:\r\n      return (title, column, table) => {\r\n        return <>\r\n          <div className='column__title__wrapper'>\r\n            {title}\r\n            {table.CanHandleColumn &&  column.IsShow_MoveCommand ?\r\n              <div className='column__title__tool'>\r\n                {table.CanEditColumn ?\r\n                  <Button type='primary' size='small'\r\n                    style={{ backgroundColor: '#faad14', border: 'none' }}\r\n                    onClick={column.Edit}>e</Button> : ''}\r\n                {table.CanDeleteColumn ? <Button type='primary' danger size='small'\r\n                  onClick={column.Delete}>x</Button> : ''}\r\n              </div>\r\n              : ''}\r\n          </div>\r\n        </>\r\n      };\r\n    case rs.edit:\r\n      return (title, column, table) => {\r\n        return <>\r\n          <div className='column__title__wrapper'>\r\n            {column.InputElement}\r\n            <Button type='primary' size='small'\r\n              onClick={column.OK}>ok</Button>\r\n          </div>\r\n        </>\r\n      };\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import * as renderUtil from './TitleRenderItemUtil'\r\n\r\nexport default class TitleRender_Dict {\r\n  Items = []\r\n\r\n  GetRender = (state) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x.State === state);\r\n    if (index === -1){\r\n      var item = renderUtil.get(state);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","export const select = 'select'\r\nexport const input = 'input'","import TableColumn from \"./TableColumn\"\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport { Button } from \"antd\";\r\nimport * as rs from './RenderState'\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport * as it from './TableColumn_InputType'\r\n\r\n// Instance\r\nexport const get = (title, dataIndex, renders, table) => {\r\n  var qI = new TableColumn();\r\n  qI.Title = title;\r\n\r\n  if (Array.isArray(dataIndex)) {\r\n    qI.DataIndex = dataIndex;\r\n  } else {\r\n    qI.DataIndex = [dataIndex];\r\n  }\r\n\r\n  qI.Key = genUtil.randomId();\r\n  qI.Table = table;\r\n\r\n  var dict = qI.Render_Dict;\r\n  if (renders) {\r\n    renders.forEach(x => {\r\n      dict.GetRender(x.State).Render = x.Render\r\n    });\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetByTitle = (title, table, dataIndex) => {\r\n  var qI = new TableColumn();\r\n  qI.Title = title;\r\n\r\n  // Nếu có dataIndex lấy bằng dataIndex, không lấy theo Title\r\n  qI.DataIndex = dataIndex ? [dataIndex] : [title];\r\n  qI.Key = genUtil.randomId();\r\n  qI.Table = table;\r\n\r\n\r\n  qI.OnSetTitleOK_Funcs.push(() => {\r\n    if (qI.InputType === it.input) {\r\n      qI.DataIndex = [qI.Title];\r\n    }\r\n    table.Update();\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetActionColumn = (table) => {\r\n  var title = undefined;\r\n\r\n  var renders = [\r\n    renderUtil.get(rs._default, (val, item, dataIndex, cell, row) => {\r\n      var editElem = '';\r\n      if (table.CanHandleItem && table.CanEditItem) {\r\n        var edit = () => row.Edit();\r\n        editElem = <Button type='primary' size='small'\r\n          style={{ backgroundColor: '#faad14', border: 'none' }}\r\n          onClick={edit}>edit</Button>\r\n      }\r\n\r\n      var delElem = '';\r\n      if (table.CanHandleItem && table.CanDeleteItem) {\r\n        var del = () => table.DeleteItem(item, row);\r\n\r\n        delElem = <Button type='primary' danger size='small'\r\n          onClick={del}>x</Button>\r\n      }\r\n      return <>\r\n        {editElem}{delElem}\r\n      </>\r\n    }),\r\n    renderUtil.get(rs.edit, (val, item, dataIndex, cell, row) => {\r\n      var ok = () => row.OK();\r\n      return <Button type='primary' size='small'\r\n        onClick={ok}>ok</Button>\r\n    })\r\n  ]\r\n\r\n  var col = get(title, null, renders, table);\r\n\r\n  // Đính thông tin là Action Column\r\n  col.IsAction = true;\r\n\r\n  col.TitleRender_Dict.GetRender(rs._default).Render = () =>\r\n    <div style={{ display: 'flex' }}>\r\n      <Button type='primary' size='small'\r\n        onClick={table.AddColumn}>\r\n        (+) c\r\n        </Button>\r\n      {table.CanHandleItem && table.CanAddItem ?\r\n        <Button type='primary' size='small'\r\n          onClick={table.AddItem}>\r\n          (+) r\r\n        </Button>\r\n        : ''}\r\n    </div>\r\n\r\n  return col;\r\n}\r\n\r\n// Property\r\nexport const GetTitle = (q) => {\r\n  switch (q.InputType) {\r\n    case it.input:\r\n      return undefined;\r\n    case it.select:\r\n      return q.AllNames[0];\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from './RenderState'\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport Render_Dict from './Render_Dict';\r\nimport TitleRender_Dict from './TitleRender_Dict';\r\nimport * as it from './TableColumn_InputType'\r\nimport * as selectUtil from '../select/SelectVMUtil';\r\nimport * as textUtil from '../text/TextVMUtil';\r\nimport InputView from '../input/InputView';\r\nimport SelectView from '../select/SelectView';\r\nimport { PMData } from '../main/single/model/PMData';\r\nimport * as util from './TableColumnUtil'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport default class TableColumn {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      title: observable,\r\n      TitleRenderState: observable,\r\n      inputType: observable,\r\n      IsShow_MoveCommand: observable\r\n    })\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this);\r\n  }\r\n\r\n  get CurrentList() {\r\n    return this.Table.Columns;\r\n  } set CurrentList(v) {\r\n    this.Table.Columns = v;\r\n  }\r\n\r\n  TitleRenderState = rs._default\r\n  RenderState = rs._default;\r\n\r\n  title = undefined\r\n  get Title() {\r\n    // Bỏ việc khởi tạo sẵn đối tượng\r\n    // if (!this.title) {\r\n    //   this.title = util.GetTitle(this);\r\n    // }\r\n    return this.title;\r\n  } set Title(v) {\r\n    this.title = v;\r\n  }\r\n\r\n  dataIndex = undefined\r\n  get DataIndex(){\r\n    return this.dataIndex;\r\n  } set DataIndex(v){\r\n    this.dataIndex = v;\r\n  }\r\n\r\n  key\r\n  get Key(){\r\n    if (!this.key){\r\n      this.key = genUtil.newGUID();\r\n    }\r\n    return this.key;\r\n  } set Key(v){\r\n    this.key = v;\r\n  }\r\n\r\n  OnSetTitleOK_Funcs = []\r\n\r\n  titleRender_Dict\r\n  get TitleRender_Dict() {\r\n    if (!this.titleRender_Dict) {\r\n      this.titleRender_Dict = new TitleRender_Dict();\r\n    }\r\n    return this.titleRender_Dict;\r\n  }\r\n\r\n  render_Dict\r\n  get Render_Dict() {\r\n    if (!this.render_Dict) {\r\n      this.render_Dict = new Render_Dict();\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n  set Render_Dict(v) {\r\n    this.render_Dict = v;\r\n  }\r\n\r\n  Edit = () => {\r\n    var table = this.Table;\r\n    if (table.CanHandleColumn && table.CanEditColumn) {\r\n      this.TitleRenderState = rs.edit;\r\n    }\r\n  }\r\n\r\n  OK = () => {\r\n    this.TitleRenderState = rs._default;\r\n    this.OnSetTitleOK_Funcs.forEach(x => x(this));\r\n  }\r\n\r\n  Delete = () => {\r\n    var table = this.Table;\r\n    if (table.CanHandleColumn && table.CanDeleteColumn) {\r\n      table.Columns.splice(this.Index, 1);\r\n      table.Update();\r\n    }\r\n  }\r\n\r\n  TitleRender = () => {\r\n    var title = this.Title;\r\n    var table = this.Table;\r\n\r\n    var render = this.TitleRender_Dict.GetRender(this.TitleRenderState);\r\n    return render.Render(title, this, table);\r\n  }\r\n\r\n  inputType = undefined\r\n  get InputType() {\r\n    if (!this.inputType) {\r\n      this.inputType = this.Table.Column_InputType\r\n    }\r\n    return this.inputType;\r\n  }\r\n\r\n  // Thuộc tính sử dụng khi select đầu mục cột\r\n  get AllNames() {\r\n    return this.Table.AllColumnNames\r\n  }\r\n\r\n  inputVM\r\n  get InputVM() {\r\n    if (!this.inputVM) {\r\n      var obj = this.inputVM = textUtil.get(this.Title);\r\n      obj.onSetContent = (v) => this.Title = v;\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  selectVM\r\n  get SelectVM() {\r\n    if (!this.selectVM) {\r\n      var list = this.AllNames;\r\n      var obj = this.selectVM = selectUtil.get(this.AllNames);\r\n      obj.TitleRender = (x) => x.Name\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.Title = v.Name;\r\n        this.DataIndex = [ v.Value ];\r\n      }\r\n\r\n      // Nếu không có thông tin Title\r\n      if (!this.Title) {\r\n        var firstItem = list[0]\r\n        this.Title = firstItem.Name;\r\n        this.DataIndex = [firstItem.Value]\r\n\r\n        obj.InitialItem = firstItem;\r\n      } else {\r\n        // Có Title mà chưa có InitialItem\r\n        if (!obj.InitialItem) {\r\n          var index = list.findIndex(x => x.Name === this.Title);\r\n          obj.InitialItem = list[index];\r\n        }\r\n      }\r\n    }\r\n    return this.selectVM;\r\n  }\r\n\r\n  get InputElement() {\r\n    switch (this.InputType) {\r\n      case it.input:\r\n        return <InputView store={this.InputVM} />\r\n      case it.select:\r\n        var width = this.Table.Column_Title_SelectWidth\r\n        return <div style={{ width }}>\r\n          <SelectView store={this.SelectVM} />\r\n        </div>\r\n    }\r\n  }\r\n\r\n  IsShow_MoveCommand = false\r\n\r\n  get CanShow_MoveCommand() {\r\n    return this.Table.CanShow_MoveCommand;\r\n  }\r\n\r\n  Show_MoveCommand = () => {\r\n    this.IsShow_MoveCommand = true;\r\n  }\r\n\r\n  Collapse_MoveCommand = () => {\r\n    this.IsShow_MoveCommand = false;\r\n  }\r\n\r\n  MoveLeft = () => {\r\n    var index = this.Index;\r\n    if (index === 0) return;\r\n\r\n    var list = this.CurrentList;\r\n    var l1 = list.filter(x => !x.IsActive);\r\n    if (l1.length === 1) return;\r\n\r\n    genUtil.MoveItem(list, index, index - 1);\r\n    this.Table.Update();\r\n  }\r\n\r\n  MoveRight = () => {\r\n    var index = this.Index;\r\n\r\n    var list = this.CurrentList;\r\n    var l1 = list.filter(x => !x.IsActive);\r\n\r\n    if (l1.length === 1 || index === l1.length) {\r\n      return\r\n    }\r\n\r\n    genUtil.MoveItem(list, index, index + 1);\r\n    this.Table.Update();\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './TableRowUtil'\r\nimport * as rs from './RenderState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport default class TableRow {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Item: observable\r\n    })\r\n  }\r\n\r\n  key\r\n  get Key() {\r\n    if (!this.key) {\r\n      this.key = this.Item._id ? this.Item._id : this.Item.id;\r\n      if (!this.key) {\r\n        this.key = genUtil.randomId();\r\n      }\r\n    }\r\n    return this.key;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Table.Rows.indexOf(this);\r\n  }\r\n\r\n  Item = undefined;\r\n\r\n  cells\r\n  get Cells() {\r\n    if (!this.cells) {\r\n      this.cells = util.GetCells(this);\r\n    }\r\n    return this.cells;\r\n  }\r\n\r\n  Edit = () => {\r\n    var table = this.Table;\r\n    if (table.CanHandleItem && table.CanEditItem) {\r\n      this.Cells.forEach(x => x.RenderState = rs.edit);\r\n    }\r\n  }\r\n\r\n  OK = () => {\r\n    this.Cells.forEach(x => x.RenderState = rs._default);\r\n    this.Table.EditItem(this.Item);\r\n  }\r\n}","import TableRow from \"./TableRow\"\r\nimport * as cellUtil from './TableCellUtil'\r\nimport { PMData } from \"../main/single/model/PMData\";\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport const get = (item, table) => {\r\n  var qI = new TableRow();\r\n  qI.Item = item;\r\n  qI.Table = table;\r\n  return qI;\r\n}\r\n\r\nexport const GetCells = (q) => {\r\n  var columns = q.Table.Columns;\r\n  return columns.map(x => cellUtil.get(q, x));\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport TableColumn from './TableColumn';\r\nimport * as colUtil from './TableColumnUtil'\r\nimport * as renderUtil from './RenderItemUtil'\r\nimport * as rs from './RenderState'\r\nimport * as util from './TableVMUtil'\r\nimport * as textUtil from '../text/TextVMUtil'\r\nimport InputView from '../input/InputView'\r\nimport { Button } from 'antd';\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport * as rowUtil from './TableRowUtil'\r\nimport * as cit from './TableColumn_InputType'\r\n\r\nexport default class TableVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      columns: observable,\r\n      dataSource: observable,\r\n      rows: observable,\r\n\r\n      AllColumnNames: observable,\r\n      Column_InputType: observable,\r\n\r\n      CanHandleItem: observable,\r\n      CanAddItem: observable,\r\n      CanDeleteItem: observable,\r\n      CanEditItem: observable,\r\n\r\n      CanHandleItem: observable,\r\n      CanAddItem: observable,\r\n      CanDeleteItem: observable,\r\n      CanEditItem: observable,\r\n      IsShowActionColumn: observable,\r\n    })\r\n  }\r\n\r\n  // Có thể xử lý dữ liệu 1 dòng (bao gồm Xóa, Thêm, Sửa)\r\n  CanHandleItem = true\r\n\r\n  // Thêm 1 dòng\r\n  CanAddItem = true\r\n\r\n  // Xóa 1 dòng\r\n  CanDeleteItem = true\r\n\r\n  // Dùng để chỉnh sửa thông tin 1 Dòng\r\n  CanEditItem = true\r\n\r\n  // Có thể xử lý dữ liệu 1 cột (bao gồm Xóa, Thêm, Sửa)\r\n  CanHandleColumn = true\r\n\r\n  // Thêm 1 cột\r\n  CanAddColumn = true\r\n\r\n  // Xóa 1 cột\r\n  CanDeleteColumn = true\r\n\r\n  // Chỉnh sửa thông tin 1 cột\r\n  CanEditColumn = true\r\n\r\n  IsShowActionColumn = true\r\n\r\n  columns = undefined\r\n  get Columns() {\r\n    if (!this.columns) {\r\n      this.columns = [\r\n        colUtil.get('Tên cấu kiện', 'ElementName', null, this),\r\n        colUtil.get('Đường kính', 'Diameter', null, this),\r\n      ];\r\n\r\n      if (this.IsShowActionColumn) {\r\n        this.columns.push(colUtil.GetActionColumn(this));\r\n      }\r\n    }\r\n    return this.columns;\r\n  }\r\n  set Columns(v) {\r\n    this.columns = v;\r\n    this.Rows = undefined;\r\n  }\r\n\r\n  dataSource = undefined\r\n  get DataSource() {\r\n    if (!this.dataSource) {\r\n      this.dataSource = []\r\n    }\r\n    return this.dataSource;\r\n  }\r\n  set DataSource(v) {\r\n    this.dataSource = v;\r\n    this.Rows = undefined;\r\n  }\r\n\r\n  rows = undefined\r\n  get Rows() {\r\n    if (!this.rows) {\r\n      this.rows = util.GetRows(this);\r\n    }\r\n    return this.rows;\r\n  }\r\n  set Rows(v) {\r\n    this.rows = v;\r\n  }\r\n\r\n  AddItem = (item, isEdit = false) => {\r\n    if (this.CanHandleItem && this.CanAddItem) {\r\n      if (item === undefined) {\r\n        if (this.OnGetItemForAdd) {\r\n          item = this.OnGetItemForAdd();\r\n        } else {\r\n          item = {\r\n            Key: genUtil.randomId(),\r\n            IsTypeNotDefined: true\r\n          };\r\n        }\r\n      }\r\n      this.DataSource.push(item);\r\n\r\n      var row = rowUtil.get(item, this);\r\n      this.Rows.push(row);\r\n\r\n      if (isEdit) {\r\n        row.Edit();\r\n      }\r\n    }\r\n  }\r\n\r\n  DeleteItem = (item, row) => {\r\n    if (this.CanHandleItem && this.CanDeleteItem) {\r\n      var list = this.DataSource;\r\n      var index = list.indexOf(item);\r\n      list.splice(index, 1);\r\n      this.Rows.splice(index, 1);\r\n\r\n      if (this.OnDeleteItem) {\r\n        this.OnDeleteItem(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  EditItem = (item) => {\r\n    if (this.CanHandleItem && this.CanEditItem) {\r\n      if (item.IsTypeNotDefined) {\r\n        var index = this.DataSource.findIndex(x => x.Key === item.Key);\r\n        item = this.DataSource[index] = { ...item };\r\n      }\r\n\r\n      if (this.OnEditItem) {\r\n        this.OnEditItem(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  AddColumn = () => {\r\n    if (this.CanHandleColumn && this.CanDeleteColumn) {\r\n      var col = colUtil.GetByTitle(null, this);\r\n\r\n      var actionCol_Index = this.Columns.findIndex(x => x.IsAction);\r\n      if (actionCol_Index !== -1) {\r\n        this.Columns.splice(actionCol_Index, 0, col);\r\n      } else {\r\n        this.Columns.push(col);\r\n      }\r\n\r\n      col.Edit();\r\n    }\r\n  }\r\n\r\n  Update = () => {\r\n    this.Rows = null;\r\n  }\r\n\r\n  // Ghi đè cách truy xuất giá trị 1 cell theo Item, Cell, Row, Col\r\n  Override_Get_CellValue\r\n\r\n  // Ghi đè cách render 1 cell theo Item, Cell, Row, Col\r\n  Override_Get_CellRender\r\n\r\n  // Khi hiệu chỉnh đầu mục cột,\r\n  // sử dụng 2 cách để hiểu chỉnh: select và input\r\n  Column_InputType = cit.input\r\n  AllColumnNames = []\r\n\r\n  // Có thể di chuyển vị trí các cột hay không\r\n  CanShow_MoveCommand = true\r\n\r\n  // Thiết lập sẵn bề rỗng của \r\n  Column_Title_SelectWidth\r\n}","import * as rowUtil from './TableRowUtil'\r\nimport * as colUtil from './TableColumnUtil'\r\nimport TableVM from './TableVM';\r\n\r\n// Instance\r\nexport const get = (data) => {\r\n  var qI = new TableVM();\r\n  qI.Columns = data.columns.map(x => colUtil.GetByTitle(x, qI));\r\n  qI.DataSource = data.dataSource;\r\n  return qI;\r\n}\r\n\r\nexport const GetByColumn_Data = (colNames, data, isHaveAction = true) => {\r\n  var qI = new TableVM();\r\n  \r\n  var cols = colNames.map(x => colUtil.GetByTitle(x, qI));\r\n  if (isHaveAction){\r\n    cols.push(colUtil.GetActionColumn(qI));\r\n  }\r\n\r\n  qI.Columns = cols;\r\n\r\n  qI.DataSource = data;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetRows = (q) => {\r\n  return q.DataSource.map(x => rowUtil.get(x, q));\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { LevelSettingDataVM } from './LevelSettingDataVM';\r\nimport * as itemUtil from './item/LS_ItemVMUtil'\r\nimport TableVM from '../../../../table/TableVM';\r\nimport TableColumn from '../../../../table/TableColumn';\r\nimport * as genUtil from '../../../../../util/generalUtil';\r\nimport EditableTextView from '../../../../text/EditableTextView';\r\nimport MultiSelectView from '../../../../select/MultiSelectView';\r\nimport * as pct from '../../command/ProjectCommand'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new LevelSettingDataVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return q.ModelItem.Items.map(x => itemUtil.get(x, q));\r\n}\r\n\r\nexport const GetTable = (q) => {\r\n  var qI = new TableVM();\r\n\r\n  // name\r\n  var nameCol = new TableColumn();\r\n  nameCol.Title = 'Tên';\r\n  nameCol.DataIndex = ['name']\r\n  nameCol.Key = genUtil.randomId();\r\n  nameCol.Table = qI;\r\n  nameCol.ClassName = 'ls__title-column'\r\n\r\n  // name\r\n  var valCol = new TableColumn();\r\n  valCol.Title = 'Tương đương với';\r\n  valCol.DataIndex = ['value']\r\n  valCol.Key = genUtil.randomId();\r\n  valCol.Table = qI;\r\n  valCol.ClassName = 'ls__value-column'\r\n\r\n  qI.Columns = [nameCol, valCol];\r\n  qI.CanShow_MoveCommand = false;\r\n  qI.CanHandleColumn = false\r\n\r\n  // Cell Value\r\n  qI.Override_Get_CellRender = (value, item, dataIndex, cell, row, col) => {\r\n    switch (col.DataIndex[0]) {\r\n      case 'name':\r\n        return q.Commands.includes(pct.edit) ?\r\n          <EditableTextView store={item.NameVM} />\r\n          : item.NameVM.Content\r\n      case 'value':\r\n        // return <MultiSelectView store={item.ValueVM} />\r\n        return item.Value_Element\r\n    }\r\n  }\r\n\r\n  qI.DataSource = [...q.Items];\r\n\r\n  return qI;\r\n}","import * as util from './TLS_Data_WrapperVMUtil'\r\nimport * as genUtil from \"../../../../../../util/generalUtil\";\r\n\r\nexport class TLS_Data_WrapperVM {\r\n  binding\r\n  get Binding(){\r\n    if (!this.binding){\r\n      this.binding = util.GetBinding(this);\r\n    }\r\n    return this.binding \r\n  }\r\n\r\n  typical\r\n  get Typical(){\r\n    if (!this.typical){\r\n      this.typical = util.GetTypical(this);\r\n    }\r\n    return this.typical;\r\n  }\r\n\r\n  // Old versoin\r\n  // get LevelStorageList() {\r\n  //   return this.Dict.LevelStorageList;\r\n  // }\r\n\r\n  // Level StorageList\r\n  OnSet_LevelStorageList_Func_Dict = []\r\n\r\n  levelStorageList\r\n  get LevelStorageList(){\r\n    if (!this.levelStorageList){\r\n      this.levelStorageList = util.GetLevelStorageList(this);\r\n    }\r\n    return this.levelStorageList;\r\n  } set LevelStorageList(v){\r\n    this.levelStorageList = v;\r\n\r\n    genUtil.Handle(this.OnSet_LevelStorageList_Func_Dict,\r\n      (v) => this.OnSet_LevelStorageList_Func_Dict = v)\r\n  }\r\n\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  get SettingVM (){\r\n    return this.Dict;\r\n  }\r\n\r\n  get Project(){\r\n    return this.Dict.Project\r\n  }\r\n}","export const text = 'text'\r\nexport const input = 'input'","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class CheckboxVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      ischecked: observable,\r\n      isDisable : observable,\r\n      Cancel : observable\r\n    })\r\n  }\r\n\r\n  name\r\n\r\n  OnCheckChanging\r\n\r\n  Cancel = false;\r\n\r\n  ischecked = undefined\r\n  set Ischecked(v) {\r\n    this.ischecked = v;\r\n    if (this.onCheckChange) {\r\n      this.onCheckChange(v);\r\n    }\r\n  }\r\n\r\n  isDisable = false\r\n}","import { CheckboxVM } from \"./CheckboxVM\"\r\n\r\nexport const get = (name, ischecked) => {\r\n  var qI = new CheckboxVM();\r\n  qI.ischecked = ischecked;\r\n  qI.name = name;\r\n  return qI;\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as checkboxVMUtil from './CheckboxVMUtil'\r\nimport './Checkbox.css'\r\n\r\nclass CheckboxView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = checkboxVMUtil.get(false);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onCheckedChange = (e) => {\r\n    var data = this.state;\r\n    var { checked } = e.target;\r\n\r\n    if (data.OnCheckChanging) {\r\n      data.OnCheckChanging(checked);\r\n    }\r\n\r\n    if (!data.Cancel) {\r\n      data.Ischecked = checked;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { ischecked, name, isDisable } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <label>\r\n          <input type=\"checkbox\"\r\n            checked={ischecked}\r\n            onChange={this.onCheckedChange} disabled={isDisable} />\r\n          <span className='checkbox__title'>{name}</span>\r\n        </label>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(CheckboxView)","import { Button, Popover } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport CheckboxView from '../../../../../checkbox/CheckboxView';\r\nimport * as checkBoxUtil from '../../../../../checkbox/CheckboxVMUtil';\r\nimport * as multiSelectUtil from \"../../../../../select/MultiSelectVMUtil\";\r\nimport * as textUtil from \"../../../../../text/TextVMUtil\";\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\nimport { text } from '../pageItem/TLS_PageItemStateType';\r\nimport * as util from './LevelGroupVMUtil'\r\nimport * as pct from '../../../command/ProjectCommand'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class LevelGroupVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      primary: observable,\r\n      isSelectOpen: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n   // Level StorageList\r\n   levelStorageList\r\n   get LevelStorageList(){\r\n     if (!this.levelStorageList){\r\n       this.levelStorageList = util.GetLevelStorageList(this);\r\n     }\r\n     return this.levelStorageList;\r\n   } set LevelStorageList(v){\r\n     this.levelStorageList = v;\r\n\r\n     var selectVM = this.LevelSelectVM;\r\n     selectVM.Items = v;\r\n     selectVM.InitialItems = this.Levels;\r\n   }\r\n\r\n  get Levels() {\r\n    return this.ModelItem.Levels;\r\n  } set Levels(v) {\r\n    this.ModelItem.Levels = v;\r\n  }\r\n\r\n  get SettingVM() {\r\n    return this.Dict.SettingVM;\r\n  }\r\n\r\n  levelSelectVM\r\n  get LevelSelectVM() {\r\n    if (!this.levelSelectVM) {\r\n      var list = this.LevelStorageList;\r\n      if (!list) {\r\n        this.SettingVM.ModelItem.OnGetLevelStorageList_Funcs.push(() => {\r\n          var obj = this.levelSelectVM;\r\n          obj.Items = this.LevelStorageList;\r\n          obj.InitialItems = this.Levels;\r\n        })\r\n      }\r\n\r\n      list = list ? list : []\r\n      var obj = this.levelSelectVM = multiSelectUtil.get(list, this.Levels);\r\n      obj.Placeholder = 'chọn level ...';\r\n      obj.GetDisabled_Func = () => !this.Commands.includes(pct.edit)\r\n\r\n      obj.TitleRender = (item) => {\r\n        const getTriggerContent = () => {\r\n          return this.IsSelectOpen || this.Primary === item ? 'click' : 'hover';\r\n        }\r\n        var triggerVM = textUtil.get(getTriggerContent())\r\n\r\n        const getButtonType = () => {\r\n          return this.Primary === item ? 'primary' : 'dashed'\r\n        }\r\n        var buttonTypeVM = textUtil.get(getButtonType())\r\n\r\n        const getAddContent = () => {\r\n          return this.Primary === item ? '' : 'Set'\r\n        }\r\n        var addContentVM = textUtil.get(getAddContent())\r\n\r\n        const getItemCss = () => {\r\n          return this.Primary === item ? 'levelgroup__primary' : '';\r\n        }\r\n\r\n        return <Popover trigger={triggerVM.Content}\r\n          content={\r\n            <span>\r\n              {this.Primary !== item ?\r\n                <span className='levelgroup__addtext'>{addContentVM.Content}</span>\r\n                : ''}\r\n              <Button size='small'\r\n                type={buttonTypeVM.Content}\r\n                onClick={() => {\r\n                  this.Primary = item;\r\n                }}>Primary</Button>\r\n            </span>\r\n          }>\r\n          <span className={getItemCss()}>{item}</span>\r\n        </Popover>\r\n      }\r\n\r\n      obj.OnSetOpen = (v) => this.IsSelectOpen = v;\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.Levels = v;\r\n        if (this.Levels.indexOf(this.Primary) === -1) {\r\n          this.Primary = util.GetDefaultPrimary(this);\r\n        }\r\n      }\r\n    }\r\n    return this.levelSelectVM;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.LevelGroups.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n    var list = this.Dict.LevelGroups;\r\n    list.splice(this.Index, 1);\r\n\r\n    this.Primary = util.GetDefaultPrimary(this);\r\n  }\r\n\r\n  primary = undefined\r\n  get Primary() {\r\n    if (!this.primary) {\r\n      this.primary = this.ModelItem.Primary;\r\n    }\r\n    return this.primary\r\n  } set Primary(v) {\r\n    this.primary = this.ModelItem.Primary = v;\r\n  }\r\n\r\n  isSelectOpen = undefined\r\n  get IsSelectOpen() {\r\n    return this.isSelectOpen\r\n  } set IsSelectOpen(v) {\r\n    this.isSelectOpen = v;\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import { LevelGroupVM } from \"./LevelGroupVM\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new LevelGroupVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  genUtil.Add_2(\r\n    dict.OnSet_LevelStorageList_Func_Dict,\r\n    () => qI.LevelStorageList = GetLevelStorageList(qI),\r\n    false\r\n  );\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefaultPrimary = (q) => {\r\n  if (q.Levels && q.Levels.length !== 0) {\r\n    return q.Levels[0];\r\n  }\r\n}\r\n\r\nexport const GetLevelStorageList = (q) => {\r\n  return q.Dict.LevelStorageList;\r\n}","import * as textUtil from \"../../../../../text/TextVMUtil\";\r\nimport * as genUtil from \"../../../../../../util/generalUtil\";\r\nimport * as it from './TLS_FilterValue_InputType'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport SelectView from \"../../../../../select/SelectView\";\r\nimport * as selectUtil from \"../../../../../select/SelectVMUtil\";\r\nimport * as util from './TLS_FilterValueVMUtil'\r\nimport InputView from \"../../../../../input/InputView\";\r\nimport { PMDataVM } from \"../../../../single/form/PMDataVM\";\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class TLS_FilterValueVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      inputType: observable,\r\n      value : observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  get Values() {\r\n    return this.Dict.ModelItem.Items;\r\n  }\r\n\r\n  value = undefined\r\n  get Value() {\r\n    if (!this.value){\r\n      this.value = this.Values[this.Index].Value;\r\n    } return this.value\r\n  }\r\n  set Value(v) {\r\n    this.value = this.Values[this.Index].Value = v;\r\n  }\r\n\r\n  valueVM\r\n  get ValueVM() {\r\n    if (!this.valueVM) {\r\n      var obj = this.valueVM = textUtil.get(this.Value);\r\n      obj.onSetContent = (v) => {\r\n        this.Value = v;\r\n      }\r\n    }\r\n    return this.valueVM;\r\n  }\r\n\r\n  selectVM\r\n  get SelectVM() {\r\n    if (!this.selectVM) {\r\n      var list = ['Cột', 'Vách', 'Dầm', 'Sàn']\r\n      var obj = this.selectVM = selectUtil.get(list, this.Value);\r\n      obj.Placeholder = '...'\r\n      obj.OnSetOpen = (v) => this.SelectOpen = v;\r\n      obj.OnSelectedItemChanged = (v) => this.Value = v;\r\n    }\r\n    return this.selectVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.ModelItem.Items.splice(this.Index, 1);\r\n    this.Dict.Items.splice(this.Index, 1);\r\n  }\r\n\r\n  inputType = undefined\r\n  get InputType(){\r\n    if (!this.inputType){\r\n      this.inputType = this.ModelItem.InputType\r\n    }\r\n    return this.inputType;\r\n  } set InputType(v){\r\n    this.inputType = this.ModelItem.InputType = v;\r\n  }\r\n\r\n  ToggleInputType = () => {\r\n    switch (this.InputType) {\r\n      case it.input:\r\n        this.SelectVM.InitialItem = this.Value;\r\n        this.Value = this.SelectVM.SelectedItem;\r\n        this.InputType = it.select\r\n        break;\r\n      case it.select:\r\n        if (this.Value) {\r\n          this.ValueVM.Content = this.Value;\r\n        } else{\r\n          if (!this.ValueVM.Content){\r\n            this.ValueVM.Content = 'value'\r\n          }\r\n          this.Value =this.ValueVM.Content;\r\n        }\r\n\r\n        this.InputType = it.input\r\n        break;\r\n    }\r\n  }\r\n\r\n  SwitchChecked_Funcs = () => this.InputType === it.select;\r\n\r\n  get InputElement() {\r\n    switch (this.InputType) {\r\n      case it.input:\r\n        // return <NewInputView store={this.ValueVM} \r\n        //   className='tls_filter__value__input' />\r\n        return <InputView store={this.ValueVM} \r\n          className='tls_filter__value__input' />\r\n      case it.select:\r\n        return <SelectView store={this.SelectVM} \r\n          className='tls_filter__value__select' />\r\n    }\r\n  }\r\n\r\n  selectOpen\r\n  get SelectOpen() {\r\n    if (this.selectOpen === undefined) {\r\n      this.selectOpen = this.SelectVM.Open;\r\n    }\r\n    return this.selectOpen;\r\n  }\r\n  set SelectOpen(v) {\r\n    this.selectOpen = v;\r\n    this.PopoverState.Content = util.GetPopoverState(this);\r\n  }\r\n\r\n  popoverState\r\n  get PopoverState() {\r\n    if (!this.popoverState) {\r\n      this.popoverState = textUtil.get(util.GetPopoverState(this));\r\n    }\r\n    return this.popoverState;\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import { TLS_FilterValueVM } from \"./TLS_FilterValueVM\"\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TLS_FilterValueVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetPopoverState = (q) => {\r\n    return q.SelectOpen ? 'none' : 'hover';\r\n  }","import { makeObservable, observable, action } from 'mobx';\r\nimport * as selectUtil from \"../../../../../select/SelectVMUtil\";\r\nimport * as util from './TLS_FilterVMUtil'\r\nimport * as valueUtil from './TLS_FilterValueVMUtil'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\nimport * as pct from '../../../command/ProjectCommand'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class TLS_FilterVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  get id(){\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get Field(){\r\n    return this.ModelItem.Field;\r\n  } set Field(v){\r\n    this.ModelItem.Field = v;\r\n  }\r\n\r\n  get FieldStorageList(){\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  fieldSelectVM\r\n  get FieldSelectVM(){\r\n    if (!this.fieldSelectVM){\r\n      var obj = this.fieldSelectVM = \r\n        selectUtil.get(this.FieldStorageList, this.Field);\r\n      obj.Placeholder = 'chọn bộ lọc ...';\r\n      obj.OnSelectedItemChanged = (v) => this.Field = v;\r\n      obj.GetDisabled_Func = () => !this.Commands.includes(pct.edit)\r\n    }\r\n    return this.fieldSelectVM;\r\n  }\r\n\r\n  get Index (){\r\n    return this.Dict.Filters.indexOf(this);\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n    this.Dict.Filters.splice(this.Index, 1);\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  AddItem = () => {\r\n    var item = valueUtil.get(this.ModelItem.AddItem(),this);\r\n    this.Items.push(item);\r\n    return item;\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}\r\n","import { TLS_FilterVM } from \"./TLS_FilterVM\";\r\nimport * as valueUtil from './TLS_FilterValueVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TLS_FilterVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (q) => {\r\n  return q.ModelItem.Items.map(x => valueUtil.get(x, q));\r\n}","import { Button, Popover } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport NewInputView from '../../../../../input/NewInputView';\r\nimport * as textUtil from '../../../../../text/TextVMUtil';\r\nimport * as st from './TLS_PageItemStateType'\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupVMUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterVMUtil'\r\nimport * as util from './TLS_PageItemVMUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\nimport * as pct from '../../../command/ProjectCommand'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class TLS_PageItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      name: observable,\r\n      State: observable,\r\n      levelGroups: observable,\r\n      filters: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem?.id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v) {\r\n    this.name = this.ModelItem.Name = v;\r\n  }\r\n\r\n  State = st.text\r\n\r\n  ToggleState = () => {\r\n    switch (this.State) {\r\n      case st.text:\r\n        this.State = st.input\r\n        break;\r\n      case st.input:\r\n        this.NameVM.Content = this.Name;\r\n        this.State = st.text\r\n        break;\r\n    }\r\n  }\r\n\r\n  get DeleteMarginCss() {\r\n    return this.State === st.input ? 'tls_pageItem__deletemargin' : ''\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      this.nameVM = textUtil.get(this.Name);\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  NameOK = () => {\r\n    this.State = st.text;\r\n    this.Name = this.NameVM.Content;\r\n  }\r\n\r\n  NameCancel = () => {\r\n    this.State = st.text;\r\n  }\r\n\r\n  get InputToolElement() {\r\n    return <div >\r\n      <Button type='primary' size='small'\r\n        onClick={this.NameOK}>ok</Button>\r\n      <Button type='dashed' size='small'\r\n        onClick={this.NameCancel}>cancel</Button>\r\n    </div>\r\n  }\r\n\r\n  get InputElement() {\r\n    var obj = <NewInputView className='tls_pageItem_input' store={this.NameVM} />\r\n    return obj;\r\n  }\r\n\r\n  get TitleElement() {\r\n    var delElem = <Button type='primary' size='small' onClick={this.Delete}\r\n      className='tls_pageItem__delete'>x</Button>\r\n\r\n    switch (this.State) {\r\n      case st.text:\r\n        return <>\r\n          <span>{this.Name}</span>\r\n          {this.Commands.includes(pct.edit) ?\r\n            <>\r\n              <Button type='primary' size='small' className='tls_pageItem__edit'\r\n                onClick={this.ToggleState}>e</Button>\r\n              {delElem}\r\n            </>\r\n            : ''}\r\n        </>\r\n      case st.input:\r\n        return <>\r\n          <Popover content={this.InputToolElement} trigger=\"focus\">\r\n            <span>\r\n              {this.InputElement}\r\n            </span>\r\n          </Popover>\r\n          {delElem}\r\n        </>\r\n    }\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.PageItems.indexOf(this);\r\n  }\r\n\r\n  get IsLast() {\r\n    return this.Dict.PageItems.length - 1 === this.Index;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n\r\n    var index = this.Index;\r\n    var isLast = this.IsLast;\r\n\r\n    var dict = this.Dict;\r\n    var list = dict.PageItems;\r\n    list.splice(index, 1);\r\n    dict.AllTabs.splice(index, 1);\r\n\r\n    if (list.length !== 0) {\r\n      dict.IsModelChangePageKey = true;\r\n      dict.CurrentPageKey = (isLast ? list[index - 1] : list[index]).id\r\n    }\r\n  }\r\n\r\n  // Setting\r\n  get SettingVM() {\r\n    return this.Dict.SettingVM;\r\n  }\r\n\r\n  // Level StorageList\r\n  OnSet_LevelStorageList_Func_Dict = []\r\n\r\n  levelStorageList\r\n  get LevelStorageList() {\r\n    if (!this.levelStorageList) {\r\n      this.levelStorageList = util.GetLevelStorageList(this);\r\n    }\r\n    return this.levelStorageList;\r\n  } set LevelStorageList(v) {\r\n    this.levelStorageList = v;\r\n\r\n    genUtil.Handle(this.OnSet_LevelStorageList_Func_Dict,\r\n      (v) => this.OnSet_LevelStorageList_Func_Dict = v)\r\n  }\r\n\r\n  levelGroups = undefined\r\n  get LevelGroups() {\r\n    if (!this.levelGroups) {\r\n      this.levelGroups = util.GetLevelGroups(this);\r\n    }\r\n    return this.levelGroups;\r\n  }\r\n\r\n  AddLevelGroup = () => {\r\n    var item = levelGroupUtil.get(this.ModelItem.AddLevelGroup(), this);\r\n    this.LevelGroups.push(item);\r\n    return item;\r\n  }\r\n\r\n  // Filter\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  filters = undefined\r\n  get Filters() {\r\n    if (!this.filters) {\r\n      this.filters = util.GetFilters(this);\r\n    }\r\n    return this.filters;\r\n  }\r\n\r\n  AddFilter = () => {\r\n    var item = filterUtil.get(this.ModelItem.AddFilter(), this);\r\n    this.Filters.push(item);\r\n    return item;\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import { TLS_PageItemVM } from \"./TLS_PageItemVM\"\r\nimport * as levelGroupUtil from '../levelGroup/LevelGroupVMUtil'\r\nimport * as filterUtil from '../filter/TLS_FilterVMUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  var qI = new TLS_PageItemVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  genUtil.Add_2(\r\n    dict.OnSet_LevelStorageList_Func_Dict,\r\n    () => qI.LevelStorageList = GetLevelStorageList(qI),\r\n    false\r\n  );\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetLevelGroups = (q) => {\r\n  return q.ModelItem.LevelGroups.map(x => levelGroupUtil.get(x, q));\r\n}\r\n\r\nexport const GetFilters = (q) => {\r\n  return q.ModelItem.Filters.map(x => filterUtil.get(x, q));\r\n}\r\n\r\nexport const GetLevelStorageList = (q) => {\r\n  return q.Dict.LevelStorageList;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './TypicalLevelSettingDataVMUtil'\r\nimport { ControlOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemVMUtil';\r\nimport * as genUtil from \"../../../../../util/generalUtil\"\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class TypicalLevelSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      pageItems: observable,\r\n      currentPageKey: observable,\r\n      allTabs: observable\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  // Setting\r\n  get SettingVM (){\r\n    return this.Dict.SettingVM;\r\n  }\r\n\r\n  // Level StorageList\r\n  OnSet_LevelStorageList_Func_Dict = []\r\n\r\n  levelStorageList\r\n  get LevelStorageList(){\r\n    if (!this.levelStorageList){\r\n      this.levelStorageList = util.GetLevelStorageList(this);\r\n    }\r\n    return this.levelStorageList;\r\n  } set LevelStorageList(v){\r\n    this.levelStorageList = v;\r\n\r\n    genUtil.Handle(this.OnSet_LevelStorageList_Func_Dict,\r\n      (v) => this.OnSet_LevelStorageList_Func_Dict = v)\r\n  }\r\n\r\n  get FieldFilterStorageList() {\r\n    return this.Dict.FieldFilterStorageList;\r\n  }\r\n\r\n  // Page Items\r\n  pageItems = undefined\r\n  get PageItems() {\r\n    if (!this.pageItems) {\r\n      this.pageItems = util.GetPageItems(this);\r\n    }\r\n    return this.pageItems;\r\n  }\r\n\r\n  AddPageItem = () => {\r\n    var item = pageItemUtil.get(this.ModelItem.AddPageItem(), this);\r\n    this.PageItems.push(item);\r\n\r\n    var i = this.IsHaveAddCommandTab ? 1 : 0;\r\n    this.AllTabs.splice(this.AllTabs.length - i, 0, item);\r\n\r\n    this.CurrentPageKey = item.id;\r\n\r\n    return item;\r\n  }\r\n\r\n  addCommandTab\r\n  get AddCommandTab() {\r\n    if (!this.addCommandTab) {\r\n      this.addCommandTab = {\r\n        id: 'add',\r\n        TitleElement: <Button className='tls__tabs__add'\r\n          type='text' size='small'\r\n          onClick={this.AddPageItem}>+</Button>\r\n      }\r\n    }\r\n    return this.addCommandTab;\r\n  }\r\n\r\n  IsHaveAddCommandTab = false\r\n\r\n  allTabs = undefined\r\n  get AllTabs() {\r\n    if (!this.allTabs) {\r\n      var obj = [...this.PageItems];\r\n      if (this.IsHaveAddCommandTab) {\r\n        obj.push(this.AddCommandTab);\r\n      }\r\n      this.allTabs = obj;\r\n    }\r\n    return this.allTabs;\r\n  }\r\n\r\n  currentPageKey = undefined\r\n  get CurrentPageKey() {\r\n    if (!this.currentPageKey) {\r\n      this.currentPageKey = this.PageItems[0].id;\r\n    }\r\n    return this.currentPageKey;\r\n  } set CurrentPageKey(v) {\r\n    this.currentPageKey = v;\r\n  }\r\n\r\n  IsModelChangePageKey = false\r\n\r\n  ChangePageKey = (v) => {\r\n    if (this.IsModelChangePageKey) {\r\n      this.IsModelChangePageKey = false; return;\r\n    }\r\n    this.CurrentPageKey = v;\r\n  }\r\n\r\n  Save = () => {\r\n    this.SettingVM.Save();\r\n  }\r\n\r\n  // Commands\r\n  get Commands(){\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { TypicalLevelSettingDataVM } from './TypicalLevelSettingDataVM';\r\nimport * as pageItemUtil from './pageItem/TLS_PageItemVMUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new TypicalLevelSettingDataVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  genUtil.Add_2(\r\n    dict.OnSet_LevelStorageList_Func_Dict,\r\n    () => qI.LevelStorageList = GetLevelStorageList(qI),\r\n    false\r\n  );\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetPageItems = (q) => {\r\n  return q.ModelItem.PageItems.map(x => pageItemUtil.get(x, q));\r\n}\r\n\r\nexport const GetLevelStorageList = (q) => {\r\n  return q.Dict.LevelStorageList\r\n}","import { TLS_Data_WrapperVM } from \"./TLS_Data_WrapperVM\"\r\nimport * as bindingUtil from '../../level/LevelSettingDataVMUtil'\r\nimport * as typicalUtil from '../TypicalLevelSettingDataVMUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new TLS_Data_WrapperVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  // Gán sự kiện update Level cho Binding\r\n  genUtil.Add_2(\r\n    q.OnSet_LevelStorageList_Func_Dict,\r\n    () => qI.LevelStorageList = GetLevelStorageList(qI),\r\n    false\r\n  );\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetBinding = (q) => {\r\n  return bindingUtil.get(q.ModelItem.Binding, q);\r\n}\r\n\r\nexport const GetTypical = (q) => {\r\n  return typicalUtil.get(q.ModelItem.Typical, q);\r\n}\r\n\r\nexport const GetLevelStorageList = (q) => {\r\n  return q.ModelItem.LevelStorageList;\r\n}","import { SettingVM } from \"../base/SettingVM\";\r\nimport * as util from './TypicalLevelSettingVMUtil'\r\n\r\nexport class TypicalLevelSettingVM extends SettingVM {\r\n  get LevelStorageList() {\r\n    return this.ModelItem.LevelStorageList;\r\n  }\r\n\r\n  get FieldFilterStorageList(){\r\n    return this.ModelItem.FieldFilterStorageList;\r\n  }\r\n\r\n  Save = () => {\r\n    this.ModelItem.Save();\r\n  }\r\n}","//import * as dataVMUtil from './TypicalLevelSettingDataVMUtil'\r\nimport * as dataVMUtil from './wrapper/TLS_Data_WrapperVMUtil'\r\nimport { TypicalLevelSettingVM } from './TypicalLevelSettingVM'\r\nimport * as fieldUtil from '../../mass/field/MassItemField'\r\n\r\nexport const get = (q, project) => {\r\n  if (!q) return undefined;\r\n  \r\n  var qI = new TypicalLevelSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Project = project;\r\n\r\n  // var level_Dict = project.Level_Dict;\r\n  // const getLevelsFunc = () => { \r\n  //   qI.LevelStorageList = level_Dict.Items.map(x => x.Name);\r\n  //   qI.GetLevelStorageList = true;\r\n  // }\r\n  // if (level_Dict.Items){\r\n  //   getLevelsFunc();\r\n  // } else{\r\n  //   level_Dict.OnGetItemsDone_Funcs.push(getLevelsFunc);\r\n  // }\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data, qI);\r\n  }    \r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetFieldFilterStorageList = () => {\r\n  return fieldUtil.GetListForTypicalLevelFilter();\r\n}","export const info = 'info'\r\nexport const value = 'value'","import { PMDataVM } from \"../model/main/single/form/PMDataVM\"\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport const Validate = (commands) => {\r\n  if (!commands) return false;\r\n  var list = pmDataVM().Commands;\r\n  if (ValidateInGroup(commands, list)) return true;\r\n  return ValidateInGroup(commands, pmDataVM().AdminCommands)\r\n}\r\n\r\nexport const ValidateInGroup = (commands, list) => {\r\n  var data = list;\r\n  if (!data) return false;\r\n  if (typeof commands === 'string') return data.includes(commands);\r\n\r\n  var isValid = false\r\n  commands.forEach(x => {\r\n    if (!isValid){\r\n      isValid = data.includes(x)\r\n    }\r\n  })\r\n  return isValid;\r\n}","export const input = 'input'\r\nexport const detail = 'detail'","import { makeObservable, observable, action } from 'mobx';\r\nimport { Button, message } from 'antd';\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../../../util/commandUtil'\r\nimport * as util from './ColumnGroupUtil'\r\nimport './ColumnGroup.css'\r\nimport { PMDataVM } from '../../../../../single/form/PMDataVM';\r\nimport * as pct from '../../../../command/ProjectCommand'\r\nimport * as ut from '../table/Table_UseType'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class ColumnGroup {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      columns: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Group\r\n\r\n  get Title() {\r\n    return util.GetTitle(this)\r\n  }\r\n\r\n  Fields\r\n\r\n  get DefaultField() {\r\n    return util.GetDefaultField(this)\r\n  }\r\n\r\n  get Table() {\r\n    return this.Dict;\r\n  }\r\n\r\n  columns = undefined\r\n  get Columns() {\r\n    if (!this.columns) {\r\n      this.columns = util.GetColumns(this)\r\n    } return this.columns\r\n  }\r\n\r\n  get ColumnsCount() {\r\n    return this.Columns.length\r\n  }\r\n\r\n  AddColumn = () => {\r\n    util.AddColumn(this)\r\n    this.Table.Refresh_ColumnCount()\r\n  }\r\n\r\n  get View() {\r\n    return <th key={this.id} colSpan={this.ColumnsCount}>\r\n      <span>{this.Title}</span>\r\n\r\n      {this.Table.UseType === ut.detail || comUtil.Validate(pct.edit)\r\n      ?\r\n        <Button type='primary' size='small'\r\n          className='es__mi__add btn-success'\r\n          onClick={this.AddColumn}>+</Button>\r\n        : ''}\r\n    </th>\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../../../util/commandUtil'\r\nimport * as util from './ColumnUtil'\r\nimport * as rs from '../../../../../../text/TextRenderState';\r\nimport SelectView from '../../../../../../select/SelectView';\r\nimport * as cgt from './Column_GroupType'\r\nimport { PMDataVM } from '../../../../../single/form/PMDataVM';\r\nimport * as pct from '../../../../command/ProjectCommand'\r\nimport * as ut from '../table/Table_UseType'\r\nimport { TextVM } from '../../../../../../text/TextVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class Column {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      renderState: observable,\r\n      title: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.Table.UseType === ut.detail ||\r\n      this.Commands.includes(pct.edit)) {\r\n      if (this.RenderState === rs._default) {\r\n        this.RenderState = rs.edit\r\n        this.Hide_Tool();\r\n      }\r\n    }\r\n  }\r\n\r\n  field\r\n  get Field() {\r\n    return this.field\r\n  } set Field(v) {\r\n    this.field = v;\r\n    this.Title = util.GetTitle(this)\r\n  }\r\n\r\n  Group\r\n\r\n  get Table() {\r\n    return this.Dict.Table;\r\n  }\r\n\r\n  // Title\r\n  title = undefined\r\n  get Title() {\r\n    if (!this.title) {\r\n      this.title = util.GetTitle(this)\r\n    } return this.title\r\n  } set Title(v) {\r\n    this.title = v;\r\n  }\r\n\r\n  titleSelect\r\n  get TitleSelect() {\r\n    if (!this.titleSelect) {\r\n      this.titleSelect = util.GetTitleSelect(this)\r\n    } return this.titleSelect\r\n  }\r\n\r\n  get TitleView() {\r\n    switch (this.RenderState) {\r\n      case rs._default:\r\n        return <div className='f'>\r\n          <div className='f1'>{this.Title}</div>\r\n          {this.Table.UseType === ut.detail ||\r\n            comUtil.Validate(pct.edit) ? this.DeleteVM.View : ''}\r\n        </div>\r\n      case rs.edit:\r\n        return <SelectView store={this.TitleSelect} />\r\n    }\r\n  }\r\n\r\n  get View() {\r\n    return <th key={this.id} style={this.Table.Tr_Style}\r\n      onDoubleClick={this.Edit}\r\n      onMouseEnter={this.OnMouseEnter}\r\n      onMouseLeave={this.OnMouseLeave}>\r\n      {this.TitleView}\r\n    </th>\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Columns\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.Table.Refresh_ColumnCount()\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  // Hover\r\n  OnMouseEnter = () => {\r\n    if (this.RenderState === rs.edit) {\r\n      return;\r\n    }\r\n    this.Show_Tool();\r\n  }\r\n\r\n  OnMouseLeave = () => {\r\n    this.Hide_Tool();\r\n  }\r\n\r\n  Show_Tool() {\r\n    this.DeleteVM.Show();\r\n  }\r\n\r\n  Hide_Tool() {\r\n    this.DeleteVM.Hide();\r\n  }\r\n\r\n  // MassItem\r\n  MassItem_Render = (v) => {\r\n    var field = this.Field;\r\n    var textVM = new TextVM();\r\n\r\n    const getVal = this.Group === cgt.info ?\r\n      () => {\r\n        var qI = v.GetValue(field, (val) => {\r\n          textVM.Content = val\r\n        });\r\n        textVM.Content = qI.Value;\r\n      } :\r\n      () => {\r\n        textVM.Content = v.ValueDict.GetValue(field, 'raw', undefined, true)\r\n      }\r\n    getVal();\r\n\r\n    return <td key={this.id}>{textVM.Content}</td>\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import { SelectVM } from \"../../../../../../select/SelectVM\"\r\nimport { PMData } from \"../../../../../single/model/PMData\"\r\nimport * as mif from '../../../../mass/field/MassItemField'\r\nimport * as mut from '../../../../mass/unit/MassUnitType'\r\nimport * as cgt from './Column_GroupType'\r\nimport * as rs from '../../../../../../text/TextRenderState';\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport { Column } from \"./Column\"\r\nimport { EntDelete } from \"../../../../../../delete/EntDelete\"\r\nimport * as d_tt from '../../../../../../delete/EntDelete_ToggleType'\r\nimport * as t_ut from '../table/Table_UseType'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (field, group, dict) => {\r\n  var qI = new Column();\r\n  qI.Field = field;\r\n  qI.Group = group;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetTitleSelect = (q) => {\r\n  var qI = new SelectVM();\r\n\r\n  switch (q.Group) {\r\n    case cgt.info:\r\n      qI.Items = q.Table.UseType === t_ut.input ?\r\n        pmData().MIF_Dict_ForInput : pmData().MIF_Dict_ForMassGroup\r\n      break;\r\n    case cgt.value:\r\n      qI.Items = pmData().MUT_Dict\r\n      break;\r\n  }\r\n\r\n  qI.TitleRender = (v) => v.Name;\r\n  qI.InitialItem = genUtil.SingleFilter(qI.Items,\r\n    (x) => x.Name === q.Title);\r\n\r\n  qI.OnSelectedItemChanged = (v) => {\r\n    q.Field = v.Value\r\n    q.RenderState = rs._default\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTitle = (q) => {\r\n  var field = q.Field\r\n\r\n  switch (q.Group) {\r\n    case cgt.info:\r\n      return mif.GetName(field)\r\n    case cgt.value:\r\n      return mut.GetName(field)\r\n  }\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}","import { ColumnGroup } from \"./ColumnGroup\"\r\nimport * as cgt from '../column/Column_GroupType'\r\nimport * as colUtil from '../column/ColumnUtil'\r\nimport * as mif from '../../../../mass/field/MassItemField'\r\nimport * as mut from '../../../../mass/unit/MassUnitType'\r\n\r\n// Instance\r\nexport const get = (group, dict) => {\r\n  var qI = new ColumnGroup();\r\n  qI.Group = group;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetTitle = (q) => {\r\n  switch (q.Group) {\r\n    case cgt.info:\r\n      return 'THÔNG TIN'\r\n    case cgt.value:\r\n      return 'GIÁ TRỊ'\r\n  }\r\n}\r\n\r\nexport const GetColumns = (q) => {\r\n  return q.Fields.map(x => {\r\n    return colUtil.get(x, q.Group, q)\r\n  })\r\n}\r\n\r\nexport const GetDefaultField = (q) => {\r\n  switch (q.Group) {\r\n    case cgt.info:\r\n      return mif.workItem;\r\n    case cgt.value:\r\n      return mut.each;\r\n  }\r\n}\r\n\r\n// Method\r\nexport const AddColumn = (q) => {\r\n  var qI = colUtil.get(q.DefaultField, q.Group, q);\r\n  q.Columns.push(qI)\r\n  return q;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Table.css'\r\nimport { Table } from './Table';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Table();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='table table-bordered'>\r\n          <thead className='es__thead'>\r\n            {/* Column Group */}\r\n            <tr>\r\n              {data.ColumnGroups.map(x => x.View)}\r\n            </tr>\r\n\r\n            {/* Column */}\r\n            <tr>\r\n              {data.ColumnGroups.map(x =>\r\n                x.Columns.map(x => x.View))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* Items */}\r\n            {data.Items ?\r\n              data.Items.map(x =>\r\n                <tr key={x._id}>\r\n                  {data.ColumnGroups.map(y =>\r\n                    y.Columns.map(z => z.MassItem_Render(x)))}\r\n                </tr>)\r\n              : <tr />}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","export const url = \"https://api.bimdev.vn/api/hbes_table\"","import { makeObservable, observable, action } from 'mobx';\r\nimport TableView from './TableView';\r\nimport * as util from './TableUtil'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../../../util/commandUtil'\r\nimport { url } from './TableUrl'\r\nimport { Button, message } from 'antd';\r\nimport { SaveFilled } from '@ant-design/icons';\r\nimport InputView from '../../../../../../input/InputView';\r\nimport { TextVM } from '../../../../../../text/TextVM';\r\nimport { PMDataVM } from '../../../../../single/form/PMDataVM';\r\nimport * as pct from '../../../../command/ProjectCommand'\r\nimport * as ut from './Table_UseType'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class Table {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      columnCount: observable,\r\n      columnGroups : observable\r\n    })\r\n  }\r\n\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Dict\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  SetItems = (v) => {\r\n    this.Dict.ModelItem.MassItems = v;\r\n  }\r\n\r\n  Refresh_Info = () => {\r\n    this.Infos = util.GetInfos(this)\r\n    this.Values = util.GetValues(this)\r\n  }\r\n\r\n  infos = undefined\r\n  get Infos() {\r\n    if (!this.infos) {\r\n      this.infos = util.GetDefaultInfos(this)\r\n    } return this.infos\r\n  } set Infos(v) {\r\n    this.infos = v;\r\n  }\r\n\r\n  get InfoCount() {\r\n    return this.Infos.length\r\n  }\r\n\r\n  values = undefined\r\n  get Values() {\r\n    if (!this.values) {\r\n      this.values = util.GetDefaultValues(this)\r\n    } return this.values\r\n  } set Values(v) {\r\n    this.values = v;\r\n  }\r\n\r\n  get ValueCount() {\r\n    return this.Values.length\r\n  }\r\n\r\n  Refresh_ColumnCount = () => {\r\n    this.ColumnCount = util.GetColumnCount(this)\r\n  }\r\n\r\n  columnCount = undefined\r\n  get ColumnCount() {\r\n    if (this.columnCount === undefined) {\r\n      this.columnCount = util.GetColumnCount(this)\r\n    } return this.columnCount\r\n  } set ColumnCount(v) {\r\n    this.columnCount = v;\r\n  }\r\n\r\n  get Tr_Style() {\r\n    var val = ((1 / this.ColumnCount) * 100).toFixed(1);\r\n    return {\r\n      width: val + '%'\r\n    }\r\n  }\r\n\r\n  columnGroups = undefined\r\n  get ColumnGroups() {\r\n    if (!this.columnGroups) {\r\n      this.columnGroups = util.GetColumnGroups(this)\r\n    } return this.columnGroups\r\n  } set ColumnGroups(v){\r\n    this.columnGroups = v;\r\n  }\r\n\r\n  GetColumnGroup = (group) => {\r\n    return genUtil.SingleFilter(\r\n      this.ColumnGroups,\r\n      (x) => x.Group === group\r\n    )\r\n  }\r\n\r\n  get ApiData() {\r\n    this.Refresh_Info()\r\n\r\n    var obj = {\r\n      _id: this._id,\r\n      infos: this.Infos,\r\n      values: this.Values\r\n    }\r\n\r\n    if (this.UseType === ut.input){\r\n      obj.dictId = this.Dict.ModelItem._id\r\n    }\r\n\r\n    // debugger\r\n    return obj;\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  save\r\n  get Save(){\r\n    if (!this.save){\r\n      this.save = util.GetSave(this)\r\n    } return this.save;\r\n  }\r\n  \r\n  // Paste\r\n  pasteContent\r\n  get PasteContent() {\r\n    return this.pasteContent\r\n  } set PasteContent(v) {\r\n    this.pasteContent = v;\r\n    if (v && v.length !== 0) {\r\n      this.PasteVM.Content = ''\r\n    }\r\n  }\r\n\r\n  pasteVM\r\n  get PasteVM() {\r\n    if (!this.pasteVM) {\r\n      var qI = this.pasteVM = new TextVM();\r\n      qI.Content = ''\r\n      qI.Placeholder = 'paste dữ liệu vào đây ...'\r\n      qI.onSetContent = (v) => this.PasteContent = v;\r\n    } return this.pasteVM;\r\n  }\r\n\r\n  OnPaste = (v) => {\r\n    var text = genUtil.GetPlainText(v);\r\n    var q1 = text.split('\\r\\n')\r\n    if (q1.length === 0 || (q1.length === 1 && q1[0].length === 0)) {\r\n      return;\r\n    }\r\n\r\n    var q2 = q1.map(x => x.split('\\t'));\r\n    // remove item cuối cùng thừa\r\n    var lastIndex = q2.length - 1;\r\n    if (q2[lastIndex].length === 1 && q2[lastIndex][0].length === 0) {\r\n      q2.splice(lastIndex, 1);\r\n    }\r\n\r\n    // Update Data\r\n    this.SetItems(util.GetItems_FromPaste(this, q2));\r\n    this.Dict.SaveMassItems();\r\n\r\n    this.PasteVM.Content = ''\r\n  }\r\n\r\n  // View\r\n  get View() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get WrapperView() {\r\n    return <div>\r\n      {/* Tool */}\r\n      {comUtil.Validate(pct.edit) ?\r\n        <div className='es__table__tool__wrapper'>\r\n          <div className='f-ac'>\r\n            <Button type='primary' size='small'\r\n              onClick={this.Save}>\r\n              LƯU ĐẦU MỤC BẢNG\r\n            </Button>\r\n            {this.UseType === ut.input ?\r\n              <InputView store={this.PasteVM}\r\n                className='es__table__paste'\r\n                onPaste={this.OnPaste} />\r\n              : ''}\r\n          </div>\r\n        </div>\r\n        : ''}\r\n\r\n      {/* Table */}\r\n      <TableView store={this} />\r\n    </div>\r\n  }\r\n\r\n  // Refresh Columns\r\n  Refresh_Columns = (infos, values) => {\r\n    this.Infos = infos;\r\n    this.Values = values;\r\n    this.ColumnGroups = util.GetColumnGroups(this)\r\n    this.ColumnCount = util.GetColumnCount(this)\r\n  }\r\n}","import { makeObservable, observable, action, set } from 'mobx';\r\nimport * as massItemUtil from '../item/base/MassItemUtil'\r\nimport { message } from 'antd';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as util from './MassDetailVMUtil'\r\nimport Modal from 'antd/lib/modal/Modal';\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport class MassDetailVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    return this._id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n    massItemUtil.getByViewDetail(v, (items) => {\r\n      this.Items = items;\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    this.MainMassType = util.GetMainMassType(this);\r\n    this.DetailTable.Items = v;\r\n  }\r\n\r\n  detailTable\r\n  get DetailTable() {\r\n    if (!this.detailTable) {\r\n      this.detailTable = util.GetTable(this);\r\n    }\r\n    return this.detailTable;\r\n  }\r\n\r\n  // Setting Data\r\n  MainMassType\r\n}","import { PMData } from \"../../../single/model/PMData\";\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as mt from '../MassType'\r\nimport * as tableUtil from '../../exportset/item/massitem_table/table/TableUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\n// Property\r\nexport const GetTable = (q) => {\r\n  return tableUtil.get(q);\r\n}\r\n\r\nexport const GetMainMassType = (q) => {\r\n  var list = q.Items;\r\n  return !list || list.length === 0 ? mt.Concrete : list[0].MassType;\r\n}","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as api from '../../../../../../../util/apiUtil'\r\nimport { PMData } from '../../../../../single/model/PMData'\r\nimport * as mif from '../../../../mass/field/MassItemField'\r\nimport * as mut from '../../../../mass/unit/MassUnitType'\r\nimport * as cgt from '../column/Column_GroupType'\r\nimport * as colGroupUtil from '../columngroup/ColumnGroupUtil'\r\nimport { Table } from './Table'\r\nimport { url } from './TableUrl'\r\nimport MassItem from '../../../../mass/item/base/MassItem'\r\nimport * as ut from './Table_UseType'\r\nimport { ExportSetVM } from '../../base/ExportSetVM'\r\nimport { MassDetailVM } from '../../../../mass/detail/MassDetailVM'\r\nimport { PMDataVM } from '../../../../../single/form/PMDataVM'\r\n\r\nconst pmData = () => PMData.Instance\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict);\r\n  qI._id = data._id;\r\n  qI.Infos = data.infos;\r\n  qI.Values = data.values;\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Table();\r\n\r\n  if (dict instanceof ExportSetVM) {\r\n    qI.UseType = ut.input\r\n  } else if (dict instanceof MassDetailVM) {\r\n    // Lưu vết trong pmData\r\n    pmData().MassDetail_Table = qI;\r\n    \r\n    qI.UseType = ut.detail\r\n  }\r\n\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.Dict\r\n  if (host instanceof ExportSetVM) {\r\n    if (host.MassItems) {\r\n      setObj(host.MassItems)\r\n    }\r\n\r\n    genUtil.Add_2(\r\n      host.OnSet_MassItems_Func,\r\n      () => setObj(host.MassItems),\r\n      false\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetDefaultInfos = (q) => {\r\n  return [mif.workItem, mif.level]\r\n}\r\n\r\nexport const GetInfos = (q) => {\r\n  return q.GetColumnGroup(cgt.info)\r\n    .Columns.map(x => x.Field);\r\n}\r\n\r\nexport const GetDefaultValues = (q) => {\r\n  return [mut.each]\r\n}\r\n\r\nexport const GetValues = (q) => {\r\n  return q.GetColumnGroup(cgt.value)\r\n    .Columns.map(x => x.Field);\r\n}\r\n\r\nexport const GetColumnGroups = (q) => {\r\n  var qInfo = colGroupUtil.get(cgt.info, q)\r\n  qInfo.Fields = q.Infos;\r\n\r\n  var qValue = colGroupUtil.get(cgt.value, q)\r\n  qValue.Fields = q.Values;\r\n\r\n  return [\r\n    qInfo, qValue\r\n  ]\r\n}\r\n\r\nexport const GetColumnCount = (q) => {\r\n  return q.ColumnGroups.reduce((a, b) => a + b.Columns.length, 0);\r\n}\r\n\r\n// Method\r\nexport const GetItems_FromPaste = (q, rawData) => {\r\n  q.Refresh_Info();\r\n\r\n  var infos = q.Infos;\r\n  var infoCount = infos.length\r\n  var values = q.Values;\r\n  var totalCount = infoCount + values.length;\r\n\r\n  return rawData.map(x => {\r\n    var qI = new MassItem();\r\n    var infoDict = qI.Info = {}\r\n    var valueDict = qI.ValueDict\r\n    valueDict.Dict = qI;\r\n    // Khởi xướng trước value each = 1 \r\n    // cho đồng bộ các dữ liệu khác\r\n    valueDict.GetItem(mut.each).Value = 1;\r\n\r\n    for (let i = 0; i < x.length; i++) {\r\n      if (i >= totalCount) {\r\n        continue\r\n      }\r\n\r\n      if (i < infoCount) {\r\n        infoDict[infos[i]] = x[i]\r\n      } else {\r\n        if (!isNaN(x[i])) {\r\n          valueDict.GetItem(values[i - infoCount])\r\n            .Value = parseFloat(x[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return qI;\r\n  })\r\n}\r\n\r\n// Save\r\nexport const GetSave = (q) => {\r\n  switch (q.UseType) {\r\n    case ut.input:\r\n      return q.SaveDatabase\r\n    case ut.detail:\r\n      return pmDataVM().Mds_Dict_Dict.OpenSave\r\n  }\r\n}\r\n\r\n// Api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { ExportSetVM } from './ExportSetVM'\r\nimport { EntDelete } from '../../../../../delete/EntDelete';\r\nimport * as d_tt from '../../../../../delete/EntDelete_ToggleType'\r\nimport { Button, message } from 'antd';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, SaveFilled } from '@ant-design/icons';\r\nimport * as tableUtil from '../massitem_table/table/TableUtil';\r\nimport { SelectVM } from '../../../../../select/SelectVM';\r\nimport { TextVM } from '../../../../../text/TextVM';\r\nimport * as mt from '../../../mass/MassType'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ExportSetVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetActiveTool = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n  qI.Retrieve_WrapperView = () => !q.IsActive ?\r\n    <Button type='primary' size='small'\r\n      onClick={q.Set_Active}>\r\n      <CheckCircleOutlined />\r\n    </Button>\r\n    :\r\n    <Button type='primary' size='small'\r\n      onClick={q.UnSet_Active}\r\n      className='btn-warning'>\r\n      <CloseCircleOutlined />\r\n    </Button>\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Handle_MassItems = (q) => {\r\n  if (q.IsGet_MassItems) return undefined;\r\n  q.IsGet_MassItems = true;\r\n\r\n  const setObj = (data) => {\r\n    q.MassItems = data\r\n    q.IsGet_MassItems = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.MassItems) {\r\n    setObj(host.MassItems)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_MassItems_Func,\r\n    () => setObj(host.MassItems),\r\n    false\r\n  )\r\n}\r\n\r\nexport const Handle_MassItems_Table = (q) => {\r\n  if (q.IsGet_MassItems_Table) return undefined;\r\n  q.IsGet_MassItems_Table = true;\r\n\r\n  const setObj = (data) => {\r\n    q.MassItems_Table = data.length !== 0 ?\r\n      tableUtil.GetFromDb(data[0], q) : tableUtil.get(q)\r\n    q.IsGet_MassItems_Table = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  var apiData = {\r\n    dictId : host._id\r\n  }\r\n\r\n  tableUtil.GetData(apiData, (data) => {\r\n    setObj(data)\r\n  });\r\n}\r\n\r\nexport const GetMassType_Render = (q) => {\r\n  var qI = new TextVM();\r\n  qI.Content = q.MassType;\r\n  return qI;\r\n}\r\n\r\nexport const GetMassType_Select = (q) => {\r\n  var qI = new SelectVM();\r\n  qI.Items = mt.GetList();\r\n  qI.InitialItem = q.MassType;\r\n  qI.OnSelectedItemChanged = (v) => { \r\n    q.MassType = v;\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './ExportSetVMUtil'\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport * as inputUtil from '../../../../../../util/inputUtil';\r\nimport * as editTextUtil from '../../../../../text/EditableTextVMUtil';\r\nimport EditableTextView from '../../../../../text/EditableTextView';\r\nimport './ExportSet.css'\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport TextView from '../../../../../text/TextView';\r\nimport * as pct from '../../../command/ProjectCommand'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class ExportSetVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isActive: observable,\r\n      massItems: observable,\r\n      massItems_Table: observable,\r\n      renderState: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get projectId() {\r\n    return this.ModelItem.projectId;\r\n  }\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n    this.NameVM.RenderState = v;\r\n    this.DescriptionVM.RenderState = v;\r\n\r\n    if (v === rs._default) {\r\n      this.SaveDatabase(false);\r\n    }\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.Commands.includes(pct.edit)) {\r\n      if (this.RenderState === rs._default) {\r\n        this.RenderState = rs.edit\r\n        this.Hide_Tool();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Name\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  } set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM = editTextUtil.get(this.Name, this.CanEdit);\r\n\r\n      obj.Is_Tool_Visible = false\r\n      obj.OnKeyDown = (e) => {\r\n        var { key, value } = inputUtil.Get_Shortcut(e);\r\n        switch (key) {\r\n          case inputUtil.enter:\r\n            this.RenderState = rs._default\r\n            break;\r\n        }\r\n      }\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Name = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  get NameView() {\r\n    return <EditableTextView className='mgs__cell__main'\r\n      store={this.NameVM} />\r\n  }\r\n\r\n  get NameWrapper_View() {\r\n    return <div className='mgs__cell__wrapper'>\r\n      {this.NameView}\r\n      {this.ActiveTool.View}\r\n    </div>\r\n  }\r\n\r\n  // MassType\r\n  get MassType() {\r\n    return this.ModelItem.MassType;\r\n  } set MassType(v) {\r\n    this.ModelItem.MassType = v;\r\n    this.MassType_Render.Content = v;\r\n  }\r\n\r\n  massType_Render\r\n  get MassType_Render() {\r\n    if (!this.massType_Render) {\r\n      this.massType_Render = util.GetMassType_Render(this)\r\n    } return this.massType_Render\r\n  }\r\n\r\n  massType_Select\r\n  get MassType_Select() {\r\n    if (!this.massType_Select) {\r\n      this.massType_Select = util.GetMassType_Select(this)\r\n    } return this.massType_Select\r\n  }\r\n\r\n  get MassType_View() {\r\n    switch (this.RenderState) {\r\n      case rs._default:\r\n        return <TextView store={this.MassType_Render} />\r\n      case rs.edit:\r\n        return <SelectView store={this.MassType_Select} />\r\n    }\r\n  }\r\n\r\n  // Description\r\n  get Description() {\r\n    return this.ModelItem.Description;\r\n  } set Description(v) {\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM = editTextUtil.get(this.Description, this.CanEdit);\r\n\r\n      obj.Is_Tool_Visible = false\r\n      obj.OnKeyDown = (e) => {\r\n        var { key, value } = inputUtil.Get_Shortcut(e);\r\n        switch (key) {\r\n          case inputUtil.enter:\r\n            this.RenderState = rs._default\r\n            break;\r\n        }\r\n      }\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Description = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  get DescriptionView() {\r\n    return <EditableTextView className='mgs__cell__main'\r\n      store={this.DescriptionVM} />\r\n  }\r\n\r\n  get DescriptionWrapper_View() {\r\n    return <div className='mgs__cell__wrapper'>\r\n      {this.DescriptionView}\r\n      {this.Commands.includes(pct.edit) ? this.DeleteVM.View : ''}\r\n    </div>\r\n  }\r\n\r\n  // Project\r\n  get Project() {\r\n    return this.Dict.Project\r\n  }\r\n\r\n  // Active\r\n  isActive = false\r\n  get IsActive() {\r\n    return this.isActive\r\n  } set IsActive(v) {\r\n    this.isActive = v;\r\n  }\r\n\r\n  get ActiveStyle() {\r\n    return this.IsActive ? 'active' : ''\r\n  }\r\n\r\n  Set_Active = () => {\r\n    var q1 = this.Dict\r\n    if (q1.TempCurrentItem) {\r\n      q1.TempCurrentItem.IsActive = false\r\n    }\r\n\r\n    q1.TempCurrentItem = this;\r\n    this.IsActive = true;\r\n  }\r\n\r\n  UnSet_Active = () => {\r\n    this.Dict.TempCurrentItem = undefined;\r\n    this.IsActive = false;\r\n  }\r\n\r\n  activeTool\r\n  get ActiveTool() {\r\n    if (!this.activeTool) {\r\n      this.activeTool = util.GetActiveTool(this)\r\n    } return this.activeTool;\r\n  }\r\n\r\n  // Hover\r\n  OnMouseEnter = () => {\r\n    if (this.RenderState === rs.edit) {\r\n      return;\r\n    }\r\n    this.Show_Tool();\r\n  }\r\n\r\n  OnMouseLeave = () => {\r\n    this.Hide_Tool();\r\n  }\r\n\r\n  Show_Tool() {\r\n    this.ActiveTool.Show();\r\n    this.DeleteVM.Show();\r\n  }\r\n\r\n  Hide_Tool() {\r\n    this.ActiveTool.Hide();\r\n    this.DeleteVM.Hide();\r\n  }\r\n\r\n  // Row\r\n  get RowView() {\r\n    return <tr className={`es__row ${this.ActiveStyle}`}\r\n      onDoubleClick={this.Edit}\r\n      onMouseEnter={this.OnMouseEnter}\r\n      onMouseLeave={this.OnMouseLeave}>\r\n      <td>{this.NameWrapper_View}</td>\r\n      <td>{this.MassType_View}</td>\r\n      <td>{this.DescriptionWrapper_View}</td>\r\n    </tr>\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle, false);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  // MassItem\r\n  OnSet_MassItems_Func = []\r\n\r\n  massItems = undefined\r\n  get MassItems() {\r\n    if (!this.massItems) {\r\n      util.Handle_MassItems(this)\r\n    } return this.massItems\r\n  } set MassItems(v) {\r\n    this.massItems = v;\r\n\r\n    genUtil.Handle(this.OnSet_MassItems_Func,\r\n      (v) => this.OnSet_MassItems_Func = v)\r\n  }\r\n\r\n  // MassItems_Table\r\n  massItems_Table = undefined\r\n  get MassItems_Table() {\r\n    if (!this.massItems_Table) {\r\n      util.Handle_MassItems_Table(this)\r\n    } return this.massItems_Table\r\n  } set MassItems_Table(v) {\r\n    this.massItems_Table = v;\r\n  }\r\n\r\n  // Save MassItems\r\n  SaveMassItems = () => {\r\n    this.ModelItem.SaveMassItems();\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { ExportSetVM } from '../item/base/ExportSetVM';\r\n\r\nclass TableItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ExportSetVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.RowView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableItemView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { ExportSet_DictVM } from '../dict/ExportSet_DictVM';\r\nimport './Table.css'\r\nimport TableItemView from './TableItemView';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ExportSet_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='table table-bordered'>\r\n          <thead className='es__thead'>\r\n            <tr>\r\n              <th className='es__table__name'>Tên</th>\r\n              <th className='es__table__masstype'>Công tác</th>\r\n              <th className='es__table__description'>Mô tả</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.Items?.map(x => {\r\n              return <TableItemView key={x.id} store={x} />\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import * as genUtil from '../../../../../util/generalUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ExportSet_DictVMUtil'\r\nimport TableView from '../table/TableView';\r\nimport * as iUtil from '../item/base/ExportSetVMUtil'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as pct from '../../command/ProjectCommand'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class ExportSet_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      Is_Modal_Visible: observable,\r\n      currentItem: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Item\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  AddItem = (v) => {\r\n    var list = this.Items;\r\n    if (list.length === this.ModelItem.Items.length) return\r\n\r\n    var obj = iUtil.get(v, this);\r\n    list.push(obj);\r\n  }\r\n\r\n  addVM\r\n  get AddVM() {\r\n    if (!this.addVM) {\r\n      this.addVM = util.GetAddVM(this)\r\n    } return this.addVM;\r\n  }\r\n\r\n  //\r\n  currentItem = undefined\r\n  get CurrentItem() {\r\n    return this.currentItem;\r\n  } set CurrentItem(v) {\r\n    this.currentItem = v;\r\n    this.ModelItem.CurrentItem = v?.ModelItem\r\n  }\r\n\r\n  TempCurrentItem\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get MainView() {\r\n    return <div className='f'>\r\n      {this.Commands.includes(pct.edit) ?\r\n        <div className='es__add'>\r\n          {this.AddVM.View}\r\n        </div>\r\n        : ''}\r\n      <div className='es__main f1'>\r\n        <TableView store={this} />\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  // View\r\n  Is_Modal_Visible = false\r\n\r\n  get ModalView() {\r\n    return util.GetModalView(this)\r\n  }\r\n\r\n  get PickView() {\r\n    return util.GetPickView(this)\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import * as genUtil from '../../../../../util/generalUtil'\r\nimport { ExportSet_DictVM } from \"./ExportSet_DictVM\";\r\nimport * as iUtil from '../item/base/ExportSetVMUtil'\r\nimport ProjectVM from \"../../project/base/ProjectVM\";\r\nimport { EntDelete } from '../../../../delete/EntDelete';\r\nimport * as d_tt from '../../../../delete/EntDelete_ToggleType'\r\nimport { TextVM } from '../../../../text/TextVM';\r\nimport InputView from '../../../../input/InputView';\r\nimport { Button, message } from 'antd';\r\nimport { PlusCircleOutlined, SaveFilled } from '@ant-design/icons';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport './ExportSet_Dict.css'\r\n\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ExportSet_DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  if (dict instanceof ProjectVM) {\r\n    qI.Project = dict;\r\n  }\r\n\r\n  q.OnAddItem = (v) => qI.AddItem(v)\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => iUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}\r\n\r\nexport const GetAddVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  var nameVM = new TextVM();\r\n  nameVM.Placeholder = 'tên bảng ...'\r\n\r\n  qI.ToggleType = d_tt.manual\r\n  qI.Title = 'Xác nhận thêm bảng?'\r\n\r\n  qI.OnPre_ShowHover = () => {\r\n    nameVM.Content = undefined\r\n  }\r\n\r\n  qI.Modal_InfoView = <InputView store={nameVM} />\r\n  qI.Modal_ContentView = <div className='f-ac'>\r\n    {qI.Modal_InfoView}\r\n    {qI.Modal_ButtonView}\r\n  </div>\r\n\r\n  qI.ShowHover_Button = <Button type='primary' size='small'\r\n    className='btn-success'\r\n    onClick={qI.Show_Hover}>\r\n    <PlusCircleOutlined />\r\n  </Button>\r\n\r\n  qI.OnPreRun = () => {\r\n    if (!nameVM.Content || nameVM.Content.length === 0) {\r\n      qI.IsRun_Cancel = true\r\n      message.warn('Vui lòng nhập tên bảng!');\r\n    }\r\n  }\r\n\r\n  qI.OnRun = () => {\r\n    q.ModelItem.NewItem(nameVM.Content);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPickView = (q) => {\r\n  var content = q.CurrentItem ? q.CurrentItem.Name : '(none)'\r\n  var click = () => {\r\n    q.Is_Modal_Visible = true\r\n    if (q.TempCurrentItem) {\r\n      q.TempCurrentItem.UnSet_Active();\r\n    }\r\n  }\r\n\r\n  return <Button type='primary'\r\n    onClick={click}>\r\n    <div className='f'>\r\n      <div>CHỌN BẢNG:</div>\r\n      <div className='es__pick__current'>{content}</div>\r\n    </div>\r\n  </Button>\r\n}\r\n\r\n\r\nexport const GetModalView = (q) => {\r\n  var title = 'CHỌN BẢNG THỐNG KÊ'\r\n\r\n  const hideVisible = () => {\r\n    q.Is_Modal_Visible = false\r\n  }\r\n\r\n  const modalOK = () => {\r\n    q.Is_Modal_Visible = false\r\n    q.CurrentItem = q.TempCurrentItem\r\n  }\r\n\r\n  return <Modal title={title} visible={q.Is_Modal_Visible}\r\n    width={1000}\r\n    className='es__modal'\r\n    onCancel={hideVisible}\r\n    footer={\r\n      <>\r\n        <Button type='primary' size='small'\r\n          onClick={modalOK}>ok</Button>\r\n        <Button type='text' size='small'\r\n          onClick={hideVisible}>cancel</Button>\r\n      </>\r\n    }>\r\n    <div>\r\n      {q.MainView}\r\n    </div>\r\n  </Modal>\r\n}\r\n\r\n","import * as phaseDictVMUtil from '../../phase/Phase_DictVMUtil'\r\nimport ProjectVM from \"./ProjectVM\";\r\nimport * as levelSettingUtil from '../../setting/level/LevelSettingVMUtil'\r\nimport * as typicalLevelUtil from '../../setting/typicallevel/TypicalLevelSettingVMUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as exportSetDictUtil from '../../exportset/dict/ExportSet_DictVMUtil'\r\n\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  var qI = new ProjectVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPhase_DictVM = (q) => {\r\n  var phaseDict = q.ModelItem.Phase_Dict;\r\n  return phaseDictVMUtil.get(phaseDict);\r\n}\r\n\r\nexport const GetExportSet_Dict = (q) => {\r\n  return exportSetDictUtil.get(q.ModelItem.ExportSet_Dict, q)\r\n}\r\n\r\n// LevelSetting\r\nexport const Handle_LevelSetting = (q) => {\r\n  if (q.IsGet_LevelSetting) return undefined\r\n  q.IsGet_LevelSetting = true;\r\n\r\n  const setObj = (v) => {\r\n    q.LevelSetting = levelSettingUtil.get(v, q);\r\n  }\r\n\r\n  var qI = q.ModelItem;\r\n  if (qI.LevelSetting) {\r\n    setObj(qI.LevelSetting)\r\n  } else {\r\n    genUtil.Add_2(\r\n      qI.OnSet_LevelSetting_Func_Dict,\r\n      () => {\r\n        setObj(qI.LevelSetting)\r\n      },\r\n      false)\r\n  }\r\n}\r\n\r\n// TypicalLevelSetting\r\nexport const GetTypicalLevelSetting_Func = (model, project) => {\r\n  return typicalLevelUtil.get(model, project);\r\n}\r\n\r\nexport const GetTypicalLevelSetting = (q) => {\r\n  var project = q.ModelItem;\r\n  var tls = project.TypicalLevelSetting;\r\n  if (tls) {\r\n    return GetTypicalLevelSetting_Func(tls, q)\r\n  } else {\r\n    // project.OnGetTypicalLevelSetting_Funcs.push(() =>\r\n    //   q.TypicalLevelSetting = GetTypicalLevelSetting_Func(project.TypicalLevelSetting, q));\r\n\r\n    genUtil.Add_2(\r\n      project.OnGetTypicalLevelSetting_Func_Dict,\r\n      () =>\r\n        q.TypicalLevelSetting = GetTypicalLevelSetting_Func(project.TypicalLevelSetting, q),\r\n      false\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetTypicalLevelSetting_ForEdit = (q) => {\r\n  var project = q.ModelItem;\r\n  var tls = project.TypicalLevelSetting_ForEdit;\r\n  if (tls) {\r\n    return GetTypicalLevelSetting_Func(tls, q)\r\n  } else {\r\n    // project.OnGetTypicalLevelSetting_Funcs.push(() => {\r\n    //   q.TypicalLevelSetting_ForEdit = GetTypicalLevelSetting_Func(project.TypicalLevelSetting_ForEdit, q)\r\n    // });\r\n\r\n    genUtil.Add_2(\r\n      project.OnGetTypicalLevelSetting_Func_Dict,\r\n      () =>\r\n        q.TypicalLevelSetting_ForEdit = GetTypicalLevelSetting_Func(project.TypicalLevelSetting_ForEdit, q),\r\n      false\r\n    )\r\n  }\r\n}\r\n\r\n// Commands\r\nexport const Handle_Commands = (q) => {\r\n  if (q.IsGet_Commands) return undefined;\r\n  q.IsGet_Commands = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Commands = data\r\n    q.IsGet_Commands = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Commands) {\r\n    setObj(host.Commands)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Commands_Func,\r\n    () => setObj(host.Commands),\r\n    false\r\n  )\r\n}","import { LevelSettingVM } from './LevelSettingVM'\r\nimport * as dataUtil from './LevelSettingDataVMUtil'\r\n\r\nexport const get = (q, project) => {\r\n  if (!q) return undefined;\r\n  \r\n  var qI = new LevelSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Project = project;\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataUtil.get(data, qI);\r\n  }  \r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Project_DictVMUtil'\r\n\r\nexport class Project_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      util.Handle_Items(this);\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n    this.GetItemsDone = true;\r\n  }\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n}","import * as itemVMUtil from './ProjectVMUtil'\r\nimport { Project_DictVM } from \"./Project_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new Project_DictVM();\r\n\r\n  qI.ModelItem = q;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (v) => {\r\n    q.Items = v.map(x => itemVMUtil.get(x, q));\r\n  }\r\n\r\n  var qI = q.ModelItem;\r\n  if (qI.Items && qI.Items.length !== 0){\r\n    setObj(qI.Items);\r\n  } else {\r\n    qI.OnGetItemsDone = () => setObj(qI.Items);\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassResultCompVMUtil'\r\nimport * as multiSelectVMUtil from '../../../../select/MultiSelectVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as textUtil from '../../../../text/TextVMUtil'\r\nimport { Link } from 'react-router-dom';\r\nimport { Popover } from 'antd';\r\n\r\nexport default class MassResultCompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsShowProjectSelect: observable,\r\n      CanHavePhase: observable,\r\n      isHavePhase: observable,\r\n      IsDataPending: observable,\r\n      massGroupSetting_Dict : observable,\r\n      canEdit_Site : observable\r\n    })\r\n  }\r\n\r\n  projects = undefined\r\n  get Projects() {\r\n    if (!this.projects) {\r\n      this.projects = this.ModelItem.Projects;\r\n    }\r\n    return this.projects;\r\n  }\r\n  set Projects(v) {\r\n    this.projects = v;\r\n    this.ModelItem.Projects = v;\r\n  }\r\n\r\n  projectVMs\r\n  get ProjectVMs() {\r\n    if (!this.projectVMs) {\r\n      this.projectVMs = util.GetProjectVMs(this);\r\n    }\r\n    return this.projectVMs;\r\n  }\r\n  set ProjectVMs(v) {\r\n    this.projectVMs = v;\r\n    this.Projects = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  projectVMStorageList\r\n  get ProjectVMStorageList() {\r\n    if (!this.projectVMStorageList) {\r\n      this.projectVMStorageList = util.GetProjectVMStorageList(this);\r\n    }\r\n    return this.projectVMStorageList;\r\n  }\r\n  set ProjectVMStorageList(v) {\r\n    this.projectVMStorageList = v;\r\n\r\n    this.projectVMs = util.GetProjectVMs(this);\r\n\r\n    var selectVM = this.ProjectSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.projectVMs;\r\n  }\r\n\r\n  projectSelectOpen\r\n  get ProjectSelectOpen(){\r\n    if (this.projectSelectOpen === undefined){\r\n      this.projectSelectOpen = this.ProjectSelectVM.Open;\r\n    }\r\n    return this.projectSelectOpen;\r\n  }\r\n  set ProjectSelectOpen(v){\r\n    this.projectSelectOpen = v;\r\n    this.ProjectPopoverState.Content = util.GetProjectPopoverStateValue(this);\r\n  }\r\n\r\n  projectPopoverState\r\n  get ProjectPopoverState(){\r\n    if (!this.projectPopoverState){\r\n      this.projectPopoverState = textUtil.get(util.GetProjectPopoverStateValue(this));\r\n    }\r\n    return this.projectPopoverState;\r\n  }\r\n\r\n  projectSelectVM\r\n  get ProjectSelectVM() {\r\n    if (!this.projectSelectVM) {\r\n      var list = this.ProjectVMStorageList ? this.ProjectVMStorageList : [];\r\n      var obj = this.projectSelectVM = multiSelectVMUtil.get(list, this.ProjectVMs);\r\n      obj.Placeholder = 'chọn dự án'\r\n      obj.TitleRender = (item) => <Popover trigger={this.ProjectPopoverState.Content}\r\n        placement=\"topLeft\"\r\n        content={\r\n          <a target='_blank' rel=\"noreferrer\"\r\n            // href={`/#/project/${item._id}`} \r\n            href={item.Url}\r\n            >View project</a>\r\n        }\r\n      >\r\n        {item.DisplayContent}\r\n      </Popover>\r\n\r\n      obj.OnSelectedItemChanged = (v) => this.ProjectVMs = v;\r\n      obj.OnSetOpen = (v) => this.ProjectSelectOpen = v;\r\n    }\r\n    return this.projectSelectVM;\r\n  }\r\n\r\n  IsShowProjectSelect = true\r\n\r\n  phases = undefined\r\n  get Phases() {\r\n    if (!this.phases) {\r\n      this.phases = this.ModelItem.Phases;\r\n    }\r\n    return this.phases;\r\n  }\r\n  set Phases(v) {\r\n    this.phases = v;\r\n    this.ModelItem.Phases = v;\r\n  }\r\n\r\n  phaseVMs\r\n  get PhaseVMs() {\r\n    if (!this.phaseVMs) {\r\n      this.phaseVMs = util.GetPhaseVMs(this);\r\n    }\r\n    return this.phaseVMs;\r\n  }\r\n  set PhaseVMs(v) {\r\n    this.phaseVMs = v;\r\n    this.Phases = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  massItem_Dict\r\n  get MassItem_Dict() {\r\n    if (!this.massItem_Dict) {\r\n      this.massItem_Dict = this.ModelItem.MassItem_Dict;\r\n    }\r\n    return this.massItem_Dict;\r\n  }\r\n\r\n  phaseVMStorageList\r\n  get PhaseVMStorageList() {\r\n    return this.phaseVMStorageList;\r\n  }\r\n  set PhaseVMStorageList(v) {\r\n    this.phaseVMStorageList = v;\r\n\r\n    this.phaseVMs = util.GetPhaseVMs(this);\r\n\r\n    var selectVM = this.PhaseSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.phaseVMs;\r\n  }\r\n\r\n  phaseSelectVM\r\n  get PhaseSelectVM() {\r\n    if (!this.phaseSelectVM) {\r\n      var list = this.PhaseVMStorageList ? this.PhaseVMStorageList : [];\r\n      var obj = this.phaseSelectVM = multiSelectVMUtil.get(list, this.PhaseVMs);\r\n      obj.Placeholder = 'chọn version'\r\n      obj.OnSelectedItemChanged = (v) => this.PhaseVMs = v;\r\n    }\r\n    return this.phaseSelectVM;\r\n  }\r\n\r\n  CanHavePhase = false\r\n\r\n  isHavePhase = undefined\r\n  get IsHavePhase() {\r\n    if (!this.isHavePhase) {\r\n      this.isHavePhase = this.ModelItem.IsHavePhase;\r\n    }\r\n    return this.isHavePhase;\r\n  }\r\n  set IsHavePhase(v) {\r\n    this.isHavePhase = v;\r\n    this.ModelItem.IsHavePhase = v;\r\n  }\r\n\r\n  isShowPhaseSelectVM\r\n  get IsShowPhaseSelectVM() {\r\n    if (!this.isShowPhaseSelectVM) {\r\n      var obj = this.isShowPhaseSelectVM\r\n        = checkboxVMUtil.get(\"So sánh các version\", this.IsHavePhase);\r\n\r\n      obj.onCheckChange = (v) => {\r\n        this.IsHavePhase = v;\r\n      };\r\n    }\r\n    return this.isShowPhaseSelectVM;\r\n  }\r\n\r\n  IsDataPending = false;\r\n\r\n  get LoadingSpinTip() {\r\n    return `loading data ... (${(this.HandledRatio * 100).toFixed(1)}%)`;\r\n  }\r\n\r\n  loadingSpinTipVM\r\n  get LoadingSpinTipVM() {\r\n    if (!this.loadingSpinTipVM) {\r\n      this.loadingSpinTipVM = textUtil.get(this.LoadingSpinTip);\r\n    }\r\n    return this.loadingSpinTipVM;\r\n  }\r\n\r\n  handledRatio = 0\r\n  get HandledRatio() {\r\n    return this.handledRatio;\r\n  }\r\n  set HandledRatio(v) {\r\n    this.handledRatio = v;\r\n    this.LoadingSpinTipVM.Content = this.LoadingSpinTip;\r\n  }\r\n\r\n  // function\r\n  GetMassData = () => {\r\n    // CanEdit Site\r\n    this.CanEdit_Site = util.GetCanEdit_Site(this)\r\n    \r\n    this.IsDataPending = true;\r\n    this.HandledRatio = 0;\r\n    this.ModelItem.GetMassData();\r\n  }\r\n\r\n  // MassGroupSetting\r\n  massGroupSetting_Dict = undefined\r\n  get MassGroupSetting_Dict(){\r\n    if (!this.massGroupSetting_Dict){\r\n      util.Handle_MassGroupSetting_Dict(this)\r\n    }return this.massGroupSetting_Dict\r\n  } set MassGroupSetting_Dict(v){\r\n    this.massGroupSetting_Dict = v;\r\n  }\r\n\r\n  // Edit Site\r\n  canEdit_Site = undefined\r\n  get CanEdit_Site(){\r\n    return this.canEdit_Site\r\n  } set CanEdit_Site(v){\r\n    this.canEdit_Site = v;\r\n  }\r\n}","import { message } from \"antd\";\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport MassResultCompVM from \"./MassResultCompVM\"\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, isfetchProjects = true) => {\r\n  var qI = new MassResultCompVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.ViewItem = qI;\r\n\r\n  if (isfetchProjects) {\r\n    pmDataVM().Project_DictVM.OnGetItemsDone = (v) => {\r\n      qI.ProjectVMStorageList = GetProjectVMStorageList(qI);\r\n    }\r\n  }\r\n\r\n  q.OnGetItemsDone_Funcs.push(() => {\r\n    message.success('get data successfully');\r\n  })\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetProjectVMStorageList = (q) => {\r\n  return pmDataVM().Project_DictVM.Items;\r\n}\r\n\r\nexport const GetProjectVMs = (q) => {\r\n  var storageList = q.ProjectVMStorageList;\r\n  if (!storageList) return [];\r\n\r\n  var list = [];\r\n\r\n  var projects = q.Projects;\r\n  projects.forEach(x => {\r\n    var index = storageList.findIndex(y => y.ModelItem === x);\r\n    if (index !== -1) {\r\n      list.push(storageList[index]);\r\n    }\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetPhaseVMs = (q) => {\r\n  var storageList = q.PhaseVMStorageList;\r\n  if (!storageList) return [];\r\n\r\n  var list = [];\r\n\r\n  var phases = q.Phases;\r\n  phases.forEach(x => {\r\n    var index = storageList.findIndex(y => y.ModelItem === x);\r\n    if (index !== -1) {\r\n      list.push(storageList[index]);\r\n    }\r\n  })\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetProjectPopoverStateValue = (q) => {\r\n  return q.ProjectSelectOpen ? 'none' : 'hover';\r\n}\r\n\r\nexport const Handle_MassGroupSetting_Dict = (q) => {\r\n  if (q.IsGet_MassGroupSetting_Dict) return undefined\r\n  q.IsGet_MassGroupSetting_Dict = true;\r\n\r\n  const setObj = (data) => {\r\n    q.MassGroupSetting_Dict = data\r\n  }\r\n\r\n  var host = pmDataVM();\r\n  if (host.MassGroupSetting_Dict){\r\n    setObj(host.MassGroupSetting_Dict)\r\n  }\r\n  genUtil.Add_2(\r\n    host.OnSet_MassGroupSetting_Dict_Func,\r\n    () => setObj(host.MassGroupSetting_Dict),\r\n    false\r\n  )\r\n}\r\n\r\nexport const GetCanEdit_Site = (q) => {\r\n  return q.Projects.length === 0 && !q.IsHavePhase\r\n}","export class DO_Comp {\r\n  \r\n}","export class DO_Element {\r\n  SubItems = []\r\n}","export const project = 'project'\r\nexport const element = 'element'\r\nexport const elementinfo = 'element-info'\r\nexport const elementinfo_identify = 'element-info-identify'\r\nexport const elementinfo_locate = 'element-info-locate'\r\nexport const elementinfo_geometry = 'element-info-geometry'\r\nexport const elementinfo_specification = 'element-info-specification'\r\nexport const elementinfo_material = 'element-info-material'","import { DO_Element } from './DO_Element';\r\nimport * as et from './DO_ElementType'\r\n\r\nexport const get = (type, title) => {\r\n  var qI = new DO_Element();\r\n  qI.Title = title ? title : type;\r\n\r\n  switch (type) {\r\n    case et.element:\r\n      qI.SubItems = [\r\n        get('guid'),\r\n        get('projectId'),\r\n        get('exportSetId'),\r\n        get(et.elementinfo, 'info')\r\n      ]\r\n      break;\r\n    case et.project:\r\n      qI.SubItems = []\r\n      break;\r\n    case et.elementinfo:\r\n      qI.SubItems = [\r\n        get(et.elementinfo_identify, 'identify'),\r\n        get(et.elementinfo_locate, 'locate'),\r\n        get(et.elementinfo_geometry, 'geometry'),\r\n        get(et.elementinfo_specification, 'specification'),\r\n        get(et.elementinfo_material, 'material'),\r\n      ]\r\n      break;\r\n    case et.elementinfo_identify:\r\n      qI.SubItems = [\r\n        get('category'),\r\n        get('typename'),\r\n        get('elementName'),\r\n        get('typemark'),\r\n        get('typecomment'),\r\n        get('description'),\r\n        get('model'),\r\n        get('manufacturer'),\r\n        get('keynote'),\r\n        get('assemblycode'),\r\n        get('systemtype'),\r\n        get('systemclassification'),\r\n        get('workItem'),\r\n      ];\r\n      break;\r\n    case et.elementinfo_locate:\r\n      qI.SubItems = [\r\n        get('level'),\r\n        get('baseLevel'),\r\n        get('topLevel'),\r\n        get('block'),\r\n        get('zone'),\r\n      ];\r\n      break;\r\n    default:\r\n      qI.SubItems = [];\r\n      break;\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as textUtil from '../../../text/TextVMUtil';\r\nimport * as util from './DO_ElementVMUtil'\r\n\r\nexport class DO_ElementVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      subItems: observable,\r\n      isOpenSub : observable\r\n    })\r\n  }\r\n\r\n  get Title(){\r\n    return this.ModelItem.Title\r\n  }\r\n\r\n  get IsHaveButton(){\r\n    return this.SubItems.length !== 0;\r\n  }\r\n\r\n  subItems = undefined\r\n  get SubItems(){\r\n    if (!this.subItems){\r\n      this.subItems = util.GetSubItems(this);\r\n    }\r\n    return this.subItems\r\n  }\r\n\r\n  isOpenSub = false\r\n  get IsOpenSub(){\r\n    return this.isOpenSub\r\n  } set IsOpenSub(v){\r\n    this.isOpenSub = v;\r\n  }\r\n\r\n  ToggleSub = () => {\r\n    this.IsOpenSub = !this.IsOpenSub;\r\n    this.ToggleSubContentVM.Content = util.GetToggleSubContent(this)\r\n  }\r\n\r\n  toggleSubContentVM\r\n  get ToggleSubContentVM(){\r\n    if (!this.toggleSubContentVM){\r\n      this.toggleSubContentVM = \r\n        textUtil.get(util.GetToggleSubContent(this))\r\n    }\r\n    return this.toggleSubContentVM;\r\n  }\r\n}","import { DO_ElementVM } from \"./DO_ElementVM\"\r\n\r\n// Instance\r\nexport const get = (q) => {\r\n  var qI = new DO_ElementVM();\r\n\r\n  qI.ModelItem = q;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetSubItems = (q) => {\r\n  return q.ModelItem.SubItems.map(x => get(x));\r\n}\r\n\r\nexport const GetToggleSubContent = (q) => {\r\n  return q.IsOpenSub ? '-' : '+';\r\n}","import { DO_CompVM } from \"./DO_CompVM\"\r\nimport * as modelUtil from './DO_CompUtil'\r\nimport * as itemUtil from '../DO_ElementVMUtil'\r\n\r\n// Instance\r\nexport const get = (q) => {\r\n  var qI =new DO_CompVM();\r\n  qI.ModelItem = q;\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return get(modelUtil.GetTest());\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  var obj = q.ModelItem.Items.map(x => itemUtil.get(x));\r\n  return obj;\r\n} ","import { DO_Comp } from \"./DO_Comp\"\r\nimport * as itemUtil from '../DO_ElementUtil'\r\nimport * as et from '../DO_ElementType'\r\n\r\nexport const GetTest = () => {\r\n  var qI = new DO_Comp();\r\n  \r\n  qI.Items = [\r\n    itemUtil.get(et.project),\r\n    itemUtil.get(et.element),\r\n  ]\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DO_CompVMUtil'\r\n\r\nexport class DO_CompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n  \r\n  items = undefined;\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select, Spin } from \"antd\";\r\nimport { DO_ElementVM } from \"./DO_ElementVM\";\r\nimport './comp/DO_Comp.css'\r\n\r\nclass DO_ElementView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DO_ElementVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <span className='doelement'>\r\n          {data.Title}\r\n\r\n          {/* Toggle Sub Button */}\r\n          {data.IsHaveButton ?\r\n            <Button className='doelement__button'\r\n              type='primary' size='small'\r\n              onClick={data.ToggleSub}>\r\n                {data.ToggleSubContentVM.Content}\r\n              </Button>\r\n            : ''}\r\n\r\n          {/* Sub Items */}\r\n          {data.IsOpenSub ?\r\n            <div className='doelement__dict'>\r\n              {data.SubItems.map(x => {\r\n                return <DO_ElementView key={x.Title}\r\n                  store={x} />\r\n              })}\r\n            </div>\r\n            : ''}\r\n        </span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(DO_ElementView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select, Spin } from \"antd\";\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\nimport { DO_CompVM } from \"./DO_CompVM\";\r\nimport * as util from './DO_CompVMUtil'\r\nimport './DO_Comp.css'\r\nimport DO_ElementView from \"../DO_ElementView\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance;\r\n\r\nclass DO_CompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = util.GetTest();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='doelement__dict'>\r\n          {data.Items ?\r\n            data.Items.map(x => {\r\n              return <DO_ElementView key={x.Title}\r\n                store={x} />\r\n            })\r\n            : ''}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(DO_CompView)","import { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport { Button, Popover } from 'antd';\r\nimport * as SelectUtil from '../../../../../select/SelectVMUtil';\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport * as genUtil from '../../../../../../util/generalUtil';\r\n\r\nexport class Category_ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_ShowValue_Delete: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  //Data\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  }\r\n  set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var listCategory =  [\r\n          'Stair',\r\n          'Roof',\r\n          'Celling',\r\n          'Door',\r\n          'Window',\r\n          'Furniture',\r\n          'Lighting Fixture',\r\n          'Plumbing Fixture',\r\n          'Railing',\r\n          'Wall Sweep'          \r\n      ]\r\n      var obj = this.nameVM = SelectUtil.get(listCategory, this.Name);\r\n      obj.Placeholder = 'Chọn Category'\r\n      obj.OnSelectedItemChanged = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  valueVM\r\n  get ValueVM() {\r\n    if (!this.valueVM) {\r\n      var list =  [\r\n          'STAIRCASE',\r\n          'ROOFING',\r\n          'CEILING',\r\n          'DOOR',\r\n          'WINDOW',\r\n          'FURNITURE',\r\n          'LIGHTING FIXTURE',\r\n          'PLUMBING FIXTURE',\r\n          'RAILING',\r\n          'SKIRTING'          \r\n      ]\r\n      var obj = this.valueVM = SelectUtil.get(list, this.Values);\r\n      obj.Placeholder = 'Chọn masstype tương ứng'\r\n      obj.OnSelectedItemChanged = (v) => this.Values = v;\r\n    }\r\n    return this.valueVM;\r\n  }\r\n\r\nget Name_Element() {\r\n  return <>\r\n      <div className='ls_item__value__wrapper'>\r\n        <SelectView store={this.NameVM} />\r\n    </div>\r\n  </>\r\n}\r\n\r\nIs_ShowValue_Delete = undefined\r\n\r\nShowValue_Delete = () => {\r\n  this.Is_ShowValue_Delete = true;\r\n}\r\n\r\nHideValue_Delete = () => {\r\n  this.Is_ShowValue_Delete = false;\r\n}\r\n\r\n  get Value_Element() {\r\n    return <>\r\n      <div className='ls_item__value__wrapper'\r\n        onMouseEnter={this.ShowValue_Delete}\r\n        onMouseLeave={this.HideValue_Delete}>\r\n        <SelectView store={this.ValueVM} />\r\n\r\n        <div className='ls_item__value__delete'>\r\n          {this.Is_ShowValue_Delete ?\r\n            <Button type='primary' size='small'\r\n            onClick={this.Delete}>x</Button>\r\n            : <div/>}\r\n        </div>\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  // Index\r\n  get Index() {\r\n    return this.Dict.ItemCategories.indexOf(this);\r\n  }\r\n\r\n  get IsLast() {\r\n    return this.Dict.ItemCategories.length - 1 === this.Index;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n\r\n    var dict = this.Dict;\r\n    dict.ItemCategories.splice(this.Index, 1);\r\n    dict.TableCategory.DeleteItem(this);\r\n  }\r\n}","import { Category_ItemVM } from \"./Category_ItemVM\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n    var qI = new Category_ItemVM();\r\n  \r\n    qI.ModelItem = q;\r\n    qI.Dict = dict;\r\n  \r\n    return qI;\r\n  }\r\n\r\n  // Property\r\nexport const Handle_Value_StorageList = (q) => {\r\n    if (q.IsGet_Value_StorageList) return undefined;\r\n    q.IsGet_Value_StorageList = true;\r\n  \r\n    var project = q.Project.ModelItem\r\n  \r\n    var setObj = (CategoryDict) => {\r\n      q.Value_StorageList = CategoryDict.Items.map(x => x.Name);\r\n    }\r\n  \r\n    if (project.CategoryDict){\r\n      setObj(project.CategoryDict)\r\n    } else {\r\n      genUtil.Add_2(\r\n      project.OnSet_CategoryDict_Func_Dict,\r\n      () => {\r\n        setObj(project.CategoryDict)\r\n      }, false);\r\n    }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport { Button, Popover } from 'antd';\r\nimport * as SelectUtil from '../../../../../select/SelectVMUtil';\r\nimport * as editTextUtil from '../../../../../text/EditableTextVMUtil';\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport * as genUtil from '../../../../../../util/generalUtil';\r\n\r\nexport class MEP_ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_ShowValue_Delete: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Data\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  }\r\n  set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var list =  [\r\n          'HVAC',\r\n          'Electrical',\r\n          'Plumbing',\r\n          'Firefighter'\r\n      ]\r\n      var obj = this.nameVM = SelectUtil.get(list, this.name);\r\n      obj.Placeholder = 'Chọn masstype'\r\n      obj.OnSelectedItemChanged = (v) => this.name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  systemClassificationVM\r\n  get SystemClassificationVM() {\r\n    if (!this.systemClassificationVM) {\r\n      var list =  [\r\n        'Supply Air',\r\n        'Exhause Air',\r\n        'Return Air',\r\n        'Hydronic Return',\r\n        'Sanitary',\r\n        'Power',\r\n        'Telecom',\r\n        'Lighting',\r\n        'Lightning Protection',\r\n        'Domestic Cold Water',\r\n        'Domestic Hot Water',\r\n        'Other',\r\n        'Sanitary',\r\n        'Vent',\r\n        'Fire Protection Wet',\r\n        'Fire Protection Dry',\r\n        'Fire Protection Pre-Action',\r\n        'Fire Protection Other',\r\n        'Sanitary',\r\n        'Telecom'\r\n      ]\r\n      var obj = this.systemClassificationVM = SelectUtil.get(list, this.systemClassification);\r\n      obj.Placeholder = 'System Classification'\r\n      obj.OnSelectedItemChanged = (v) => this.systemClassification = v;\r\n    }\r\n    return this.systemClassificationVM;\r\n  }\r\n\r\n  valueVM\r\n  get ValueVM() {\r\n    if (!this.valueVM) {\r\n      var list =  [\r\n        'M-Supply Air',\r\n        'M-Fresh Air',\r\n        'M-Pre Cooled Air',\r\n        'M-Kitchen Fresh Air',\r\n        'M-Lobby Pressurization Air',\r\n        'M-Stair Pressurization Air',\r\n        'M-Exhause Air',\r\n        'M-Kitchen Exhaust Air',\r\n        'M-Smoke Exhaust Air',\r\n        'M-Smoke Exhaust Generator',\r\n        'M-Toilet Exhaust Air',\r\n        'M-Return Air',\r\n        'M-Chilled Water Supply',\r\n        'M-Condenser Water Supply',\r\n        'M-Steam Supply Piping',\r\n        'M-Brine Supply Pipe',\r\n        'M-Oil Supply Pipe',\r\n        'M-Refrigerant Pipe',\r\n        'M-Humidification Water',\r\n        'M-Chilled Water Return',\r\n        'M-Condenser Water Return',\r\n        'M-Steam Return',\r\n        'M-Brine Return',\r\n        'M-Oil Return',\r\n        'M-Drain Steam',\r\n        'M-Drain AC',\r\n        'E-Busway',\r\n        'E-Electrical Medium Voltage',\r\n        'E-Electrical Low Voltage',\r\n        'E-Electrical Extra Low Voltage',\r\n        'E-Electrical Lighting',\r\n        'E-Electrical Earthing and Lightning',\r\n        'P-Clean Water',\r\n        'P-General Service Water',\r\n        'P-Well Water',\r\n        'P-Industrial Water',\r\n        'P-Filtration Supply',\r\n        'P-Filtration Return',\r\n        'P-Hot Water Supply',\r\n        'P-Hot Water Return',\r\n        'P-Expansion',\r\n        'P-Gas',\r\n        'P-Soil Water',\r\n        'P-Waste Water',\r\n        'P-Waste Kitchen Water',\r\n        'P-Storm Water',\r\n        'P-Pump Up',\r\n        'P-Ventilation',\r\n        'F-Drencher',\r\n        'F-Sprinkler',\r\n        'F-Low Pressure',\r\n        'F-High Pressure',\r\n        'F-Hosereel',\r\n        'F-Indoor Fire Hydrant',\r\n        'F-Dry Riser',\r\n        'F-Pre Action',\r\n        'F-Foam',\r\n        'F-CO2 Fire Extinguishing',\r\n        'F-Drain Pipe',\r\n        'F-Electrical Fire Alarm'\r\n      ]\r\n      var obj = this.valueVM = SelectUtil.get(list, this.Values);\r\n      obj.Placeholder = 'Chọn SystemType tương ứng'\r\n      obj.OnSelectedItemChanged = (v) => this.Values = v;\r\n    }\r\n    return this.valueVM;\r\n  }\r\n\r\n  Is_ShowValue_Delete = undefined\r\n\r\n  ShowValue_Delete = () => {\r\n    this.Is_ShowValue_Delete = true;\r\n  }\r\n\r\n  HideValue_Delete = () => {\r\n    this.Is_ShowValue_Delete = false;\r\n  }\r\n\r\n  get Value_Element() {\r\n    return <>\r\n      <div className='ls_item__value__wrapper'\r\n        onMouseEnter={this.ShowValue_Delete}\r\n        onMouseLeave={this.HideValue_Delete}>\r\n        <SelectView store={this.ValueVM} />\r\n\r\n        <div className='ls_item__value__delete'>\r\n          {this.Is_ShowValue_Delete ?\r\n            <Button type='primary' size='small'\r\n            onClick={this.Delete}>x</Button>\r\n            : <div/>}\r\n        </div>\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  get Name_Element() {\r\n    return <>\r\n      <div className='ls_item__value__wrapper'>\r\n        <SelectView store={this.NameVM} />\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  get SystemClassification_Element() {\r\n    return <>\r\n      <div className='ls_item__value__wrapper'>\r\n        <SelectView store={this.SystemClassificationVM} />\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  // Index\r\n  get Index() {\r\n    return this.Dict.itemMEPs.indexOf(this);\r\n  }\r\n\r\n  get IsLast() {\r\n    return this.Dict.Items.length - 1 === this.Index;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n\r\n    var dict = this.Dict;\r\n    dict.itemMEPs.splice(this.Index, 1);\r\n    dict.TableMEP.DeleteItem(this);\r\n  }\r\n}","import { MEP_ItemVM } from \"./MEP_ItemVM\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n    var qI = new MEP_ItemVM();\r\n  \r\n    qI.ModelItem = q;\r\n    qI.Dict = dict;\r\n  \r\n    return qI;\r\n  }\r\n\r\n  // Property\r\nexport const Handle_Value_StorageList = (q) => {\r\n    if (q.IsGet_Value_StorageList) return undefined;\r\n    q.IsGet_Value_StorageList = true;\r\n  \r\n    var project = q.Project.ModelItem\r\n  \r\n    var setObj = (massTypeDict) => {\r\n      q.Value_StorageList = massTypeDict.Items.map(x => x.Name);\r\n    }\r\n  \r\n    if (project.massTypeDict){\r\n      setObj(project.massTypeDict)\r\n    } else {\r\n      genUtil.Add_2(\r\n      project.OnSet_massTypeDict_Func_Dict,\r\n      () => {\r\n        setObj(project.massTypeDict)\r\n      }, false);\r\n    }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport { Button, Popover } from 'antd';\r\nimport * as SelectUtil from '../../../../../select/SelectVMUtil';\r\nimport * as editTextUtil from '../../../../../text/EditableTextVMUtil';\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport * as genUtil from '../../../../../../util/generalUtil';\r\n\r\nexport class MT_ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_ShowValue_Delete: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Data\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  }\r\n  set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM = editTextUtil.get(this.Name);\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Name = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  valueVM\r\n  get ValueVM() {\r\n    if (!this.valueVM) {\r\n      var list =  [\r\n          'ARC',\r\n          'CARPET',\r\n          'CEILINGFINISH',\r\n          'FLOORFINISH',\r\n          'GYPSUM',\r\n          'MASONRY',\r\n          'METAL',\r\n          'MOSAIC',\r\n          'OTHER',\r\n          'PAINTING',\r\n          'PLASTER',\r\n          'PLASTIC',\r\n          'ROOFING',\r\n          'SCREED',\r\n          'SITEWORK',\r\n          'SKIRTING',\r\n          'TILING&PAVING',\r\n          'VINYL',\r\n          'WALLFINISH',\r\n          'WOODEN'\r\n      ]\r\n      var obj = this.valueVM = SelectUtil.get(list, this.Values);\r\n      obj.Placeholder = 'Chọn masstype tương ứng'\r\n      obj.OnSelectedItemChanged = (v) => this.Values = v;\r\n    }\r\n    return this.valueVM;\r\n  }\r\n\r\n  Is_ShowValue_Delete = undefined\r\n\r\n  ShowValue_Delete = () => {\r\n    this.Is_ShowValue_Delete = true;\r\n  }\r\n\r\n  HideValue_Delete = () => {\r\n    this.Is_ShowValue_Delete = false;\r\n  }\r\n\r\n  get Value_Element() {\r\n    return <>\r\n      <div className='ls_item__value__wrapper'\r\n        onMouseEnter={this.ShowValue_Delete}\r\n        onMouseLeave={this.HideValue_Delete}>\r\n        <SelectView store={this.ValueVM} />\r\n\r\n        <div className='ls_item__value__delete'>\r\n          {this.Is_ShowValue_Delete ?\r\n            <Button type='primary' size='small'\r\n            onClick={this.Delete}>x</Button>\r\n            : <div/>}\r\n        </div>\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  // Index\r\n  get Index() {\r\n    return this.Dict.Items.indexOf(this);\r\n  }\r\n\r\n  get IsLast() {\r\n    return this.Dict.Items.length - 1 === this.Index;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n\r\n    var dict = this.Dict;\r\n    dict.Items.splice(this.Index, 1);\r\n    dict.Table.DeleteItem(this);\r\n  }\r\n}","import { MT_ItemVM } from \"./MT_ItemVM\"\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n    var qI = new MT_ItemVM();\r\n  \r\n    qI.ModelItem = q;\r\n    qI.Dict = dict;\r\n  \r\n    return qI;\r\n  }\r\n\r\n  // Property\r\nexport const Handle_Value_StorageList = (q) => {\r\n    if (q.IsGet_Value_StorageList) return undefined;\r\n    q.IsGet_Value_StorageList = true;\r\n  \r\n    var project = q.Project.ModelItem\r\n  \r\n    var setObj = (massTypeDict) => {\r\n      q.Value_StorageList = massTypeDict.Items.map(x => x.Name);\r\n    }\r\n  \r\n    if (project.massTypeDict){\r\n      setObj(project.massTypeDict)\r\n    } else {\r\n      genUtil.Add_2(\r\n      project.OnSet_massTypeDict_Func_Dict,\r\n      () => {\r\n        setObj(project.massTypeDict)\r\n      }, false);\r\n    }\r\n}","import { makeObservable, observable, action, makeAutoObservable, observe } from 'mobx';\r\nimport * as util from './MassTypeSettingDataVMUtil'\r\nimport * as utilCategory from './CategorySettingDataVMUtil'\r\nimport * as utilMEP from './MEPSettingDataVMUtil'\r\nimport { ControlOutlined } from '@ant-design/icons';\r\nimport { Button, message } from 'antd';\r\nimport * as itemUtil from './Item/MT_ItemVMUtil'\r\nimport * as rs from '../../../../text/TextRenderState';\r\nimport * as itemUtilCategory from './Category/Category_ItemVMUtil'\r\nimport * as itemUtilMEP from './MEP/MEP_ItemVMUtil'\r\n\r\nexport class MassTypeSettingDataVM {\r\n    constructor() {\r\n        makeAutoObservable (this,{\r\n            items:observable,\r\n            itemCategories:observable,\r\n            itemMEPs:observable\r\n        })\r\n    }\r\n\r\n    items = undefined\r\n    get Items() {\r\n        if (!this.items) {\r\n            this.items = util.GetItems(this);\r\n        }\r\n        return this.items;\r\n    } set Items(v) {\r\n        this.items = v;\r\n    }\r\n\r\n    itemCategories = undefined\r\n    get ItemCategories() {\r\n        if (!this.itemCategories) {\r\n            this.itemCategories = utilCategory.GetItems(this);\r\n        }\r\n        return this.itemCategories;\r\n    } set ItemCategories(v) {\r\n        this.itemCategories = v;\r\n    }\r\n\r\n    itemMEPs = undefined\r\n    get ItemMEPs() {\r\n        if (!this.itemMEPs) {\r\n            this.itemMEPs = utilMEP.GetItems(this);\r\n        }\r\n        return this.itemMEPs;\r\n    } set ItemMEPs(v) {\r\n        this.itemMEPs = v;\r\n    }\r\n\r\n    AddItem = () => {\r\n        var item = itemUtil.get(this.ModelItem.AddItem(), this);\r\n    \r\n        item.NameVM.RenderState = rs.edit\r\n    \r\n        this.Items.push(item);\r\n        this.Table.AddItem(item);\r\n        return item;\r\n      }\r\n    \r\n      // Table\r\n    table\r\n      get Table(){\r\n        if (!this.table){\r\n          this.table = util.GetTable(this);\r\n        }\r\n        return this.table;\r\n      }\r\n\r\n      AddItemCategory = () => {\r\n        var item = itemUtilCategory.get(this.ModelItem.AddItem(), this);\r\n    \r\n        //item.NameVM.RenderState = rs.edit\r\n    \r\n        this.ItemCategories.push(item);\r\n        this.TableCategory.AddItem(item);\r\n        return item;\r\n      }\r\n\r\n    tableCategory\r\n      get TableCategory(){\r\n        if (!this.tableCategory){\r\n          this.tableCategory = utilCategory.GetTable(this);\r\n        }\r\n        return this.tableCategory;\r\n      }\r\n\r\n      AddItemMEP = () => {\r\n        var item = itemUtilMEP.get(this.ModelItem.AddItem(), this);\r\n    \r\n        //item.NameVM.RenderState = rs.edit\r\n    \r\n        this.ItemMEPs.push(item);\r\n        this.TableMEP.AddItem(item);\r\n        return item;\r\n      }\r\n\r\n    tableMEP\r\n      get TableMEP(){\r\n        if (!this.tableMEP){\r\n          this.tableMEP = utilMEP.GetTable(this);\r\n        }\r\n        return this.tableMEP;\r\n      }\r\n    \r\n    Update_MasstypeData = () => {\r\n        this.ModelItem.Update_MasstypeData();\r\n        message.success('save successfully!');\r\n      }\r\n}","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { MassTypeSettingDataVM } from './MassTypeSettingDataVM';\r\nimport * as itemUtil from './Category/Category_ItemVMUtil'\r\nimport TableVM from '../../../../table/TableVM';\r\nimport TableColumn from '../../../../table/TableColumn';\r\nimport * as genUtil from '../../../../../util/generalUtil';\r\nimport EditableTextView from '../../../../text/EditableTextView';\r\nimport SelectView from '../../../../select/SelectView';\r\n\r\nexport const pmDataVM = () => {\r\n    return PMDataVM.Instance;\r\n  }\r\n\r\n  // Instance\r\nexport const get = (q, dict) => {\r\n    var qI = new MassTypeSettingDataVM();\r\n    qI.ModelItem = q;\r\n    qI.Dict = dict;\r\n  \r\n    return qI;\r\n  }\r\n\r\n  // Property\r\nexport const GetItems = (q) => {\r\n    return q.ModelItem.Items.map(x => itemUtil.get(x, q));\r\n}\r\n\r\nexport const GetTable = (q) => {\r\n    var qI = new TableVM();\r\n  \r\n    // name\r\n    var nameCol = new TableColumn();\r\n    nameCol.Title = 'Category';\r\n    nameCol.DataIndex = [ 'name' ]\r\n    nameCol.Key = genUtil.randomId();\r\n    nameCol.Table = qI;\r\n    nameCol.ClassName = 'ls__title-column'\r\n  \r\n    // name\r\n    var valCol = new TableColumn();\r\n    valCol.Title = 'Tương đương với MassType';\r\n    valCol.DataIndex = [ 'value' ]\r\n    valCol.Key = genUtil.randomId();\r\n    valCol.Table = qI;\r\n    valCol.ClassName = 'ls__value-column'\r\n  \r\n    qI.Columns = [ nameCol, valCol];\r\n    qI.CanShow_MoveCommand = false;\r\n    qI.CanHandleColumn = false\r\n  \r\n    // Cell Value\r\n    qI.Override_Get_CellRender = (value, item, dataIndex, cell, row, col) => {\r\n      switch (col.DataIndex[0]) {\r\n        case 'name':\r\n          return item.Name_Element\r\n        case 'value':\r\n          return item.Value_Element\r\n      }\r\n    }\r\n  \r\n    qI.DataSource = [...q.ItemCategories];\r\n  \r\n    return qI;\r\n  }","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { MassTypeSettingDataVM } from './MassTypeSettingDataVM';\r\nimport * as itemUtil from './MEP/MEP_ItemVMUtil'\r\nimport TableVM from '../../../../table/TableVM';\r\nimport TableColumn from '../../../../table/TableColumn';\r\nimport * as genUtil from '../../../../../util/generalUtil';\r\nimport EditableTextView from '../../../../text/EditableTextView';\r\nimport SelectView from '../../../../select/SelectView';\r\n\r\nexport const pmDataVM = () => {\r\n    return PMDataVM.Instance;\r\n  }\r\n\r\n  // Instance\r\nexport const get = (q, dict) => {\r\n    var qI = new MassTypeSettingDataVM();\r\n    qI.ModelItem = q;\r\n    qI.Dict = dict;\r\n  \r\n    return qI;\r\n  }\r\n\r\n  // Property\r\nexport const GetItems = (q) => {\r\n    return q.ModelItem.Items.map(x => itemUtil.get(x, q));\r\n}\r\n\r\nexport const GetTable = (q) => {\r\n    var qI = new TableVM();\r\n  \r\n    // name\r\n    var nameCol = new TableColumn();\r\n    nameCol.Title = 'MassType';\r\n    nameCol.DataIndex = [ 'name' ]\r\n    nameCol.Key = genUtil.randomId();\r\n    nameCol.Table = qI;\r\n    nameCol.ClassName = 'ls__title-column'\r\n  \r\n    // name\r\n    var ClassCol = new TableColumn();\r\n    ClassCol.Title = 'System Classification';\r\n    ClassCol.DataIndex = [ 'systemClassification' ]\r\n    ClassCol.Key = genUtil.randomId();\r\n    ClassCol.Table = qI;\r\n    ClassCol.ClassName = 'ls__title-column'\r\n\r\n    // name\r\n    var valCol = new TableColumn();\r\n    valCol.Title = 'Tương đương với System Type';\r\n    valCol.DataIndex = [ 'value' ]\r\n    valCol.Key = genUtil.randomId();\r\n    valCol.Table = qI;\r\n    valCol.ClassName = 'ls__value-column'\r\n  \r\n    qI.Columns = [ nameCol,ClassCol, valCol];\r\n    qI.CanShow_MoveCommand = false;\r\n    qI.CanHandleColumn = false\r\n  \r\n    // Cell Value\r\n    qI.Override_Get_CellRender = (value, item, dataIndex, cell, row, col) => {\r\n      switch (col.DataIndex[0]) {\r\n        case 'name':\r\n          return item.Name_Element\r\n        case 'systemClassification':\r\n            return item.SystemClassification_Element\r\n        case 'value':\r\n          return item.Value_Element\r\n      }\r\n    }\r\n  \r\n    qI.DataSource = [...q.ItemCategories];\r\n  \r\n    return qI;\r\n  }","import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { MassTypeSettingDataVM } from './MassTypeSettingDataVM';\r\nimport * as itemUtil from './Item/MT_ItemVMUtil'\r\nimport TableVM from '../../../../table/TableVM';\r\nimport TableColumn from '../../../../table/TableColumn';\r\nimport * as genUtil from '../../../../../util/generalUtil';\r\nimport EditableTextView from '../../../../text/EditableTextView';\r\nimport SelectView from '../../../../select/SelectView';\r\n\r\nexport const pmDataVM = () => {\r\n    return PMDataVM.Instance;\r\n  }\r\n\r\n  // Instance\r\nexport const get = (q, dict) => {\r\n    var qI = new MassTypeSettingDataVM();\r\n    qI.ModelItem = q;\r\n    qI.Dict = dict;\r\n  \r\n    return qI;\r\n  }\r\n\r\n  // Property\r\nexport const GetItems = (q) => {\r\n    return q.ModelItem.Items.map(x => itemUtil.get(x, q));\r\n}\r\n\r\nexport const GetTable = (q) => {\r\n    var qI = new TableVM();\r\n  \r\n    // name\r\n    var nameCol = new TableColumn();\r\n    nameCol.Title = 'Material';\r\n    nameCol.DataIndex = [ 'name' ]\r\n    nameCol.Key = genUtil.randomId();\r\n    nameCol.Table = qI;\r\n    nameCol.ClassName = 'ls__title-column'\r\n  \r\n    // name\r\n    var valCol = new TableColumn();\r\n    valCol.Title = 'Tương đương với MassType';\r\n    valCol.DataIndex = [ 'value' ]\r\n    valCol.Key = genUtil.randomId();\r\n    valCol.Table = qI;\r\n    valCol.ClassName = 'ls__value-column'\r\n  \r\n    qI.Columns = [ nameCol, valCol];\r\n    qI.CanShow_MoveCommand = false;\r\n    qI.CanHandleColumn = false\r\n  \r\n    // Cell Value\r\n    qI.Override_Get_CellRender = (value, item, dataIndex, cell, row, col) => {\r\n      switch (col.DataIndex[0]) {\r\n        case 'name':\r\n          return <EditableTextView store={item.NameVM} />\r\n        case 'value':\r\n          return item.Value_Element\r\n      }\r\n    }\r\n  \r\n    qI.DataSource = [...q.Items];\r\n  \r\n    return qI;\r\n  }\r\n\r\n  ","import { SettingVM } from \"../base/SettingVM\";\r\nimport * as util from './MassTypeSettingVMUtil'\r\n\r\nexport class MassTypeSettingVM extends SettingVM {\r\n      get MassTypeStorageList() {\r\n        return this.ModelItem.MassTypeStorageList;\r\n      }\r\n\r\n      // get CategoryStorageList() {\r\n      //   return this.ModelItem.CategoryStorageList;\r\n      // }\r\n    \r\n      get FieldFilterStorageList(){\r\n        return this.ModelItem.FieldFilterStorageList;\r\n      }\r\n    \r\n      Save = () => {\r\n        this.ModelItem.Save();\r\n      }\r\n}","import Setting from \"../base/Setting\";\r\nimport * as st from '../base/SettingType'\r\n\r\nexport class MassTypeSetting extends Setting {\r\n    SettingType = st.masstype\r\n    \r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './MT_ItemUtil'\r\n\r\nexport class MT_Item{\r\n    _id\r\n\r\n    tempId\r\n    get TempId(){\r\n      if (!this.tempId){\r\n        this.tempId = genUtil.newGUID();\r\n      }\r\n      return this.tempId;\r\n    }\r\n\r\n    get id (){\r\n        return this._id ? this._id : this.tempId;\r\n    }\r\n\r\n    get Index (){\r\n        return this.Dict.Items.indexOf(this);\r\n    }\r\n  \r\n    Delete = () => {\r\n      this.Dict.Items.splice(this.Index, 1);\r\n    }\r\n\r\n      // Data\r\n  Name = ''\r\n\r\n  Values = []\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      name: this.Name,\r\n      values: this.Values\r\n    }\r\n    return obj;\r\n  }\r\n}\r\n","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './Category_ItemUtil'\r\n\r\nexport class Category_Item{\r\n    _id\r\n\r\n    tempId\r\n    get TempId(){\r\n      if (!this.tempId){\r\n        this.tempId = genUtil.newGUID();\r\n      }\r\n      return this.tempId;\r\n    }\r\n\r\n    get id (){\r\n        return this._id ? this._id : this.tempId;\r\n    }\r\n\r\n    get Index (){\r\n        return this.Dict.Items.indexOf(this);\r\n    }\r\n  \r\n    Delete = () => {\r\n      this.Dict.Items.splice(this.Index, 1);\r\n    }\r\n\r\n      // Data\r\n  Name = ''\r\n\r\n  Values = []\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      name: this.Name,\r\n      values: this.Values\r\n    }\r\n    return obj;\r\n  }\r\n}\r\n","import Setting from \"../base/Setting\";\r\nimport * as util from './MassTypeSettingDataUtil'\r\nimport { reaction } from \"mobx\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport * as itemUtil from './Item/MT_ItemUtil'\r\nimport * as genUtil from \"../../../../../util/generalUtil\";\r\nimport * as itemUtilCategory from './Category/Category_ItemUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport class MassTypeSettingData {\r\n  \r\n  // Items\r\n  Items = []\r\n\r\n  AddItem = () => {\r\n    var item = itemUtil.GetDefault(this);\r\n    this.Items.push(item);\r\n    return item;\r\n  }\r\n\r\n  Update_MasstypeData = () => {\r\n    this.masstypeStorageList = util.GetMassTypeStorageList(this);\r\n  }\r\n\r\n  OnSet_MassTypeStorageList_Func_Dict = []\r\n\r\n  masstypeStorageList\r\n  get masstypeStorageList(){\r\n    if (!this.masstypeStorageList){\r\n      this.masstypeStorageList = util.GetMassTypeStorageList(this);\r\n    }\r\n    return this.masstypeStorageList;\r\n  } set masstypeStorageList(v){\r\n    this.masstypeStorageList = v;\r\n\r\n    genUtil.Handle(this.OnSet_MassTypeStorageList_Func_Dict,\r\n      (v) => this.OnSet_MassTypeStorageList_Func_Dict = v)\r\n  }\r\n\r\n  //\r\n  AddItemCategory = () => {\r\n    var item = itemUtilCategory.GetDefault(this);\r\n    this.Items.push(item);\r\n    return item;\r\n  }\r\n\r\n\r\n  get ApiData() {\r\n    return {\r\n      items : this.Items.map(x => x.ApiData)\r\n    }\r\n  }\r\n}","import { MT_Item } from \"./MT_Item\"\r\n\r\nexport const GetFromDb = (data,dict) =>{\r\n    var qI = new MT_Item();\r\n\r\n    qI.Name = data.name;\r\n    qI.Values = data.values\r\n    qI.Dict = dict;\r\n  \r\n    return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n    var qI = new MT_Item();\r\n  \r\n    qI.Dict = dict;\r\n  \r\n    return qI;\r\n  }","import { Category_Item } from \"./Category_Item\"\r\n\r\nexport const GetFromDb = (data,dict) =>{\r\n    var qI = new Category_Item();\r\n\r\n    qI.Name = data.name;\r\n    qI.Values = data.values\r\n    qI.Dict = dict;\r\n  \r\n    return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n    var qI = new Category_Item();\r\n  \r\n    qI.Dict = dict;\r\n  \r\n    return qI;\r\n  }","import { PMData } from '../../../single/model/PMData';\r\nimport { MassTypeSettingData } from './MassTypeSettingData';\r\nimport * as itemUtil from './Item/MT_ItemUtil';\r\n\r\nexport const pmData = ()  =>{\r\n  return PMData.Instance;\r\n}\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = new MassTypeSettingData();\r\n  \r\n  qI.Items = data.items.map(x => itemUtil.GetFromDb(x, qI));\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = (dict) => {\r\n  var qI = new MassTypeSettingData();\r\n\r\n  qI.Items = []\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetMassTypeStorageList = (q) => {\r\n  return q.Items.map(x => x.Name);\r\n}","import { MassTypeSetting } from \"./MassTypeSetting\"\r\nimport * as dataUtil from './MassTypeSettingDataUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport { message } from 'antd';\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new MassTypeSetting();\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = () => {\r\n  var qI = new MassTypeSetting();\r\n\r\n  qI.Name = 'Thiết lập công tác'\r\n  qI.Description = 'Mô tả thiết lập'\r\n  qI.Data = dataUtil.GetDefault(qI);\r\n  return qI;\r\n}","import * as dataVMUtil from './MassTypeSettingDataVMUtil'\r\nimport { MassTypeSettingVM } from './MassTypeSettingVM'\r\nimport * as modelUtil from './MassTypeSettingUtil'\r\n\r\nexport const get = (q) => {\r\n  if (!q) return undefined;\r\n  \r\n  var qI = new MassTypeSettingVM();\r\n\r\n  qI.ModelItem = q;\r\n\r\n  q.OnNameChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Name = v;\r\n    }\r\n  }\r\n\r\n  q.OnDescriptionChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Description = v;\r\n    }\r\n  }\r\n\r\n  q.OnDataChanged = (v) => {\r\n    if (q.M2VM){\r\n      qI.Data = v;\r\n      qI.DataVM = qI.GetDataVM();\r\n    }\r\n  }\r\n\r\n  qI.OnGetDataVM = () => {\r\n    var data = q.Data;\r\n    return dataVMUtil.get(data, qI);\r\n  }    \r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefault = () => {\r\n  return get(modelUtil.GetDefault())\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport TableVM from \"./TableVM\";\r\nimport * as rs from './RenderState'\r\nimport './Table.css'\r\nimport { LeftCircleOutlined, RightCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TableVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var columns = data.Columns;\r\n    var className = this.props.className\r\n    var style = this.props.style\r\n\r\n    var rows = data.Rows;\r\n    var tableElem = '';\r\n    if (columns && rows) {\r\n      var theadElem = <thead className=\"thead-light\">\r\n        <tr>\r\n          {columns.map(x => {\r\n            return <th scope=\"col\" key={x.Key}\r\n              className={x.ClassName}>\r\n              <div className='column__title__wrapper'\r\n                onMouseEnter={x.Show_MoveCommand}\r\n                onMouseLeave={x.Collapse_MoveCommand}>\r\n\r\n                {x.CanShow_MoveCommand ?\r\n                  <div className='column__title__left'>\r\n                    {x.IsShow_MoveCommand ?\r\n                      <Button type='primary' size='small'\r\n                        className='column__title__move__button'\r\n                        onClick={x.MoveLeft}>\r\n                        <LeftCircleOutlined />\r\n                      </Button>\r\n                      : <div className='column__title__move__blank' />}\r\n                  </div>\r\n                  : ''}\r\n\r\n                {x.TitleRender()}\r\n\r\n                {x.CanShow_MoveCommand ?\r\n                  <div className='column__title__right'>\r\n                    {x.IsShow_MoveCommand ?\r\n                      <Button type='primary' size='small'\r\n                        className='column__title__move__button right'\r\n                        onClick={x.MoveRight}>\r\n                        <RightCircleOutlined />\r\n                      </Button>\r\n                      : <div className='column__title__move__blank' />}\r\n                  </div>\r\n                  : ''}\r\n              </div>\r\n            </th>\r\n          })}\r\n        </tr>\r\n      </thead>\r\n\r\n      var tbodyElem = <tbody>\r\n        {rows.map(x => {\r\n          return <tr key={x.Key}>\r\n            {x.Cells.map(y => {\r\n              return <td key={y.Key}>{y.Render()}</td>\r\n            })}\r\n          </tr>\r\n        })}\r\n      </tbody>\r\n\r\n      tableElem = <table className={className} style={style}>\r\n        {theadElem}{tbodyElem}\r\n      </table>\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {tableElem}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TableView)","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row, Tabs } from 'antd';\r\nimport { MassTypeSettingDataVM } from './MassTypeSettingDataVM';\r\nimport './MassTypeSetting.css'\r\nimport TableView from '../../../../table/TableView';\r\nimport { SaveFilled } from '@ant-design/icons';\r\n\r\nclass MassTypeSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassTypeSettingDataVM()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='tls__wrapper'>\r\n          {/* Update massType Data */}\r\n          <Button type='primary' size='small' className='tls__save__button'\r\n            onClick={data.Update_MasstypeData}>\r\n            <SaveFilled className='tls__save' />\r\n          </Button>\r\n\r\n          <Button type='primary' size='small'\r\n            className='tls__save__button'\r\n            onClick={data.AddItem}>+</Button>\r\n          <TableView store={data.Table} />\r\n        </div>\r\n        \r\n        <hr />\r\n\r\n        <div className='tls__wrapper'>\r\n          {/* Update massType Data */}\r\n          <Button type='primary' size='small' className='tls__save__button'\r\n            onClick={data.Update_MasstypeData}>\r\n            <SaveFilled className='tls__save' />\r\n          </Button>\r\n\r\n          <Button type='primary' size='small'\r\n            className='tls__save__button'\r\n            onClick={data.AddItemCategory}>+</Button>\r\n          <TableView store={data.TableCategory} />\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='tls__wrapper'>\r\n            {/* Update massType Data */}\r\n            <Button type='primary' size='small' className='tls__save__button'\r\n            onClick={data.Update_MasstypeData}>\r\n            <SaveFilled className='tls__save' />\r\n          </Button>\r\n\r\n          <Button type='primary' size='small'\r\n            className='tls__save__button'\r\n            onClick={data.AddItemMEP}>+</Button>\r\n          <TableView store={data.TableMEP} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(MassTypeSettingDataView);","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row } from 'antd';\r\nimport './MassTypeSetting.css'\r\nimport { SaveFilled } from '@ant-design/icons';\r\nimport * as util from './MassTypeSettingVMUtil'\r\nimport MassTypeSettingDataView from './MassTypeSettingDataView';\r\n\r\n\r\nclass MassTypeSettingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = util.GetDefault()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className ='tls__name'>\r\n            <h3>{data.Name}</h3>\r\n          </div>\r\n          <div>\r\n            {data.Description}\r\n          </div>\r\n            <MassTypeSettingDataView store={data.DataVM} />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default observer(MassTypeSettingView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './TabUtil'\r\nimport './Tab.css'\r\n\r\nexport class Tab {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Items: observable,\r\n      currentItem: observable,\r\n      IsHaveBorder: observable\r\n    })\r\n  }\r\n\r\n  Items = []\r\n\r\n  currentItem = undefined\r\n  get CurrentItem() {\r\n    if (!this.currentItem) {\r\n      this.currentItem = util.GetDefault_CurrentItem(this)\r\n    } return this.currentItem\r\n  } set CurrentItem(v) {\r\n    this.currentItem = v;\r\n  }\r\n\r\n  SetCurrent = (v) => {\r\n    this.CurrentItem = v;\r\n  }\r\n\r\n  idRender\r\n  get IdRender() {\r\n    if (!this.idRender) {\r\n      this.idRender = util.GetDefault_IdRender(this)\r\n    } return this.idRender\r\n  } set IdRender(v) {\r\n    this.idRender = v\r\n  }\r\n\r\n  titleRender;\r\n  get TitleRender() {\r\n    if (!this.titleRender) {\r\n      this.titleRender = util.GetDefault_TitleRender(this)\r\n    } return this.titleRender\r\n  } set TitleRender(v) {\r\n    this.titleRender = v\r\n  }\r\n\r\n  titleView_Render\r\n  get TitleView_Render() {\r\n    if (!this.titleView_Render) {\r\n      this.titleView_Render = util.GetDefault_TitleView_Render(this)\r\n    } return this.titleView_Render\r\n  } set TitleView_Render(v) {\r\n    this.titleView_Render = v\r\n  }\r\n\r\n  contentRender;\r\n  get ContentRender() {\r\n    if (!this.contentRender) {\r\n      this.contentRender = util.GetDefault_ContentRender(this)\r\n    } return this.contentRender\r\n  } set ContentRender(v) {\r\n    this.contentRender = v\r\n  }\r\n\r\n  contentWrapper_Render;\r\n  get ContentWrapper_Render() {\r\n    if (!this.contentWrapper_Render) {\r\n      this.contentWrapper_Render = util.GetDefault_ContentWrapper_Render(this)\r\n    } return this.contentWrapper_Render\r\n  } set ContentWrapper_Render(v) {\r\n    this.contentWrapper_Render = v\r\n  }\r\n\r\n  IsHaveBorder = true\r\n\r\n  get BorderStyle() {\r\n    return this.IsHaveBorder ? 'border' : ''\r\n  }\r\n\r\n  get TitleView() {\r\n    return <div className='tab__title__wrapper'>\r\n      {this.Items?.map(this.TitleView_Render)}\r\n    </div>\r\n  }\r\n\r\n  get ContentView(){\r\n    return this.CurrentItem ? \r\n      this.ContentWrapper_Render(this.CurrentItem) : ''\r\n  }\r\n\r\n  get ContentWrapper_View() {\r\n    return <div className={`tab__content__wrapper ${this.BorderStyle}`}>\r\n      {this.ContentView}\r\n    </div>\r\n  }\r\n\r\n  get View() {\r\n    return <div className='tab__wrapper'>\r\n      {this.TitleView}\r\n      {this.ContentWrapper_View}\r\n    </div>\r\n  }\r\n}","import { Tab } from \"./Tab\"\r\n\r\n// Instance\r\nexport const GetTest = () => {\r\n  var qI = new Tab();\r\n  qI.Items = [\r\n    {\r\n      Title: 'London',\r\n      Content: 'A'\r\n    },\r\n    {\r\n      Title: 'Paris',\r\n      Content: 'B'\r\n    }\r\n  ]\r\n\r\n  qI.IdRender = (v) => v.Title\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefault_CurrentItem = (q) => {\r\n  return q.Items && q.Items.length !== 0 ? q.Items[0] : undefined\r\n}\r\n\r\nexport const GetDefault_IdRender = (q) => {\r\n  return (v) => v.id\r\n}\r\n\r\nexport const GetDefault_TitleRender = (q) => {\r\n  return (v) => v.Title\r\n}\r\n\r\nexport const GetDefault_TitleView_Render = (q) => {\r\n  return (v) => {\r\n    var active = q.CurrentItem === v ? 'active' : ''\r\n    return <div className={`tab__title ${active}`}\r\n      onClick={() => { \r\n        q.SetCurrent(v)\r\n      }}\r\n      key={q.IdRender(v)}>{q.TitleRender(v)}</div>\r\n  }\r\n}\r\n\r\nexport const GetDefault_ContentRender = (q) => {\r\n  return (v) => v.Content\r\n}\r\n\r\nexport const GetDefault_ContentWrapper_Render = (q) => {\r\n  return (v) => {\r\n    return <div key={q.IdRender(v)}>\r\n      {q.ContentRender(v)}\r\n    </div>\r\n  }\r\n}","import * as textUtil from '../../../../../../text/TextVMUtil'\r\nimport * as util from './AddTemplateVMUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class AddTemplateVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      dict: observable\r\n    })\r\n  }\r\n\r\n  get InputName() {\r\n    return this.ModelItem?.InputName\r\n  } set InputName(v) {\r\n    this.ModelItem.InputName = v\r\n  }\r\n\r\n  inputNameVM\r\n  get InputNameVM() {\r\n    if (!this.inputNameVM) {\r\n      var obj = this.inputNameVM = textUtil.get(this.InputName, 'tên template');\r\n      obj.onSetContent = (v) => this.InputName = v;\r\n    } return this.inputNameVM\r\n  }\r\n\r\n  tool\r\n  get Tool() {\r\n    if (!this.tool) {\r\n      this.tool = util.GetTool(this)\r\n    } return this.tool\r\n  }\r\n\r\n  get View() {\r\n    return this.Tool.View\r\n  }\r\n\r\n  Show = this.Tool.Show\r\n\r\n  Hide = this.Tool.Hide\r\n\r\n  run\r\n  get Run() {\r\n    if (!this.run) {\r\n      this.run = () => this.ModelItem.Run();\r\n    } return this.run\r\n  }\r\n\r\n  dict = undefined\r\n  get Dict(){\r\n    return this.dict;\r\n  } set Dict(v){\r\n    this.dict = v;\r\n    util.SetDict(this, v)\r\n  }\r\n\r\n  get Delete(){\r\n    return this.Dict.DeleteVM\r\n  }\r\n}","import { EntDelete } from \"../../../../../../delete/EntDelete\";\r\nimport { AddTemplateVM } from \"./AddTemplateVM\"\r\nimport * as d_tt from '../../../../../../delete/EntDelete_ToggleType'\r\nimport { Button, message } from \"antd\";\r\nimport InputView from \"../../../../../../input/InputView\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new AddTemplateVM(dict);\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  qI.Tool.AdditionElement = q.DeleteView\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetTool = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n\r\n  qI.OnPre_ShowHover = () => {\r\n    q.InputNameVM.Content = undefined\r\n  }\r\n\r\n  qI.Modal_InfoView = <InputView store={q.InputNameVM} />\r\n  qI.Modal_ContentView = <div className='mgs__template__modalcontent'>\r\n    {qI.Modal_InfoView}\r\n    {qI.Modal_ButtonView}\r\n  </div>\r\n\r\n  qI.Retrieve_ShowHover_Button = () => <div>\r\n    <Button type='primary' size='small'\r\n      onClick={qI.Show_Hover}>\r\n      Add Template\r\n    </Button>\r\n    {q.Dict ? q.Delete.View : ''}\r\n  </div>\r\n\r\n  qI.OnPreHide = () => {\r\n    if (q.Delete.Is_Hover_Visible) {\r\n      qI.IsRun_Cancel = true;\r\n    }\r\n  }\r\n\r\n  qI.OnPreRun = () => {\r\n    if (!q.InputName || q.InputName.length === 0) {\r\n      qI.IsRun_Cancel = true\r\n      message.warn('Vui lòng nhập tên template!');\r\n    }\r\n  }\r\n\r\n  qI.OnRun = q.Run\r\n\r\n  return qI;\r\n}\r\n\r\n// Method\r\nexport const SetDict = (q, v) => {\r\n  var q1 = v;\r\n  q1.DeleteVM.OnSet_Is_Hover_Visible = (v1) => {\r\n    var tool = q.Tool\r\n    if (!v1) {\r\n      // tool.Is_Visible = false\r\n    } else {\r\n      if (tool.Is_Hover_Visible) {\r\n        tool.Is_Hover_Visible = false\r\n      }\r\n      tool.Is_Visible = true\r\n    }\r\n  }\r\n}","export const query = 'query'\r\nexport const save = 'save'","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { MassGroupSettingVM } from './MassGroupSettingVM'\r\nimport { EntDelete } from '../../../../../delete/EntDelete';\r\nimport * as d_tt from '../../../../../delete/EntDelete_ToggleType'\r\nimport { Button, message } from 'antd';\r\nimport * as addTemplateUtil from './addtemplate/AddTemplateVMUtil';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, SaveFilled } from '@ant-design/icons';\r\nimport * as mgsd_ut from '../dict/MGS_Dict_UseType'\r\nimport * as mgsdd_ut from '../dict/dict/MGS_Dict_Dict_UseType'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new MassGroupSettingVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetAddTemplate = (q) => {\r\n  return addTemplateUtil.get(q.ModelItem.AddTemplate, q);\r\n}\r\n\r\nexport const GetActiveTool = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n  qI.Retrieve_WrapperView = () => !q.IsActive ?\r\n    <Button type='primary' size='small'\r\n      onClick={q.Set_Active}>\r\n      <CheckCircleOutlined />\r\n    </Button>\r\n    :\r\n    <Button type='primary' size='small'\r\n      onClick={q.UnSet_Active}\r\n      className='btn-warning'>\r\n      <CloseCircleOutlined />\r\n    </Button>\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSaveTable = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n  qI.Title = 'Xác nhận lưu đè?'\r\n  qI.ShowHover_Button = <Button type='primary' size='small'\r\n    className='btn-success'\r\n    onClick={qI.Show_Hover}>\r\n    <SaveFilled />\r\n  </Button>\r\n\r\n  qI.OnRun = () => {\r\n    var save = q.Dict.Save;\r\n    save.Name = q.Name;\r\n    save.Run();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDD_UseType = (q) => {\r\n  return q.Dict.Dict.UseType\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = q.D_UseType === mgsd_ut.project ? d_tt.manual : d_tt.mouseEvent\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../../util/commandUtil'\r\nimport * as util from './MassGroupSettingVMUtil'\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport * as inputUtil from '../../../../../../util/inputUtil';\r\nimport * as editTextUtil from '../../../../../text/EditableTextVMUtil';\r\nimport EditableTextView from '../../../../../text/EditableTextView';\r\nimport './MassGroupSetting.css'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\nimport * as mgsd_ut from '../dict/MGS_Dict_UseType'\r\nimport * as mgsdd_ut from '../dict/dict/MGS_Dict_Dict_UseType'\r\nimport * as pct from '../../../command/ProjectCommand'\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class MassGroupSettingVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isActive: observable,\r\n      dd_UseType: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get projectId() {\r\n    return this.ModelItem.projectId;\r\n  }\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n    this.NameVM.RenderState = v;\r\n    this.DescriptionVM.RenderState = v;\r\n\r\n    if (v === rs._default) {\r\n      this.SaveDatabase(false);\r\n    }\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.Commands.includes(pct.edit)) {\r\n      if (this.RenderState === rs._default) {\r\n        this.RenderState = rs.edit\r\n        this.Hide_Tool();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Name\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  } set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  get Name_ForPick() {\r\n    return `${this.Name}${this.D_UseType === mgsd_ut.template ? ' (from template)' : ''}`\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM = editTextUtil.get(this.Name, this.CanEdit);\r\n\r\n      obj.Is_Tool_Visible = false\r\n      obj.OnKeyDown = (e) => {\r\n        var { key, value } = inputUtil.Get_Shortcut(e);\r\n        switch (key) {\r\n          case inputUtil.enter:\r\n            this.RenderState = rs._default\r\n            break;\r\n        }\r\n      }\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Name = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  get NameView() {\r\n    return <EditableTextView className='mgs__cell__main'\r\n      store={this.NameVM} />\r\n  }\r\n\r\n  get NameWrapper_View() {\r\n    return <div className='mgs__cell__wrapper'>\r\n      {this.NameView}\r\n      {this.DD_UseType === mgsdd_ut.query ?\r\n        this.ActiveTool.View : \r\n        (this.Commands.includes(pct.edit) ? this.SaveTable.View : '')}\r\n    </div>\r\n  }\r\n\r\n  // Description\r\n  get Description() {\r\n    return this.ModelItem.Description;\r\n  } set Description(v) {\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM = editTextUtil.get(this.Description, this.CanEdit);\r\n\r\n      obj.Is_Tool_Visible = false\r\n      obj.OnKeyDown = (e) => {\r\n        var { key, value } = inputUtil.Get_Shortcut(e);\r\n        switch (key) {\r\n          case inputUtil.enter:\r\n            this.RenderState = rs._default\r\n            break;\r\n        }\r\n      }\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Description = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  get DescriptionView() {\r\n    return <EditableTextView className='mgs__cell__main'\r\n      store={this.DescriptionVM} />\r\n  }\r\n\r\n  get DescriptionWrapper_View() {\r\n    return <div className='mgs__cell__wrapper'>\r\n      {this.DescriptionView}\r\n      {/* {this.Commands.includes(pct.edit)  */}\r\n      {comUtil.Validate(pct.edit)\r\n      && this.DD_UseType === mgsdd_ut.query ?\r\n        (this.D_UseType === mgsd_ut.project ?\r\n          this.AddTemplate.View : this.DeleteVM.View) : ''}\r\n    </div>\r\n  }\r\n\r\n  // AddTemplate\r\n  addTemplate\r\n  get AddTemplate() {\r\n    if (!this.addTemplate) {\r\n      this.addTemplate = util.GetAddTemplate(this)\r\n    } return this.addTemplate\r\n  }\r\n\r\n  // Active\r\n  activeTool\r\n  get ActiveTool() {\r\n    if (!this.activeTool) {\r\n      this.activeTool = util.GetActiveTool(this)\r\n    } return this.activeTool\r\n  }\r\n\r\n  isActive = false\r\n  get IsActive() {\r\n    return this.isActive\r\n  } set IsActive(v) {\r\n    this.isActive = v;\r\n  }\r\n\r\n  get ActiveStyle() {\r\n    return this.DD_UseType === mgsdd_ut.query &&\r\n      this.IsActive ? 'active' : ''\r\n  }\r\n\r\n  Set_Active = () => {\r\n    var q1 = pmDataVM().Mgs_Dict_Dict\r\n    if (q1.Current_MGS) {\r\n      q1.Current_MGS.IsActive = false\r\n    }\r\n\r\n    q1.Current_MGS = this;\r\n    this.IsActive = true;\r\n  }\r\n\r\n  UnSet_Active = () => {\r\n    pmDataVM().Mgs_Dict_Dict.Current_MGS = undefined;\r\n    this.IsActive = false;\r\n  }\r\n\r\n  // Save Table\r\n  get D_UseType() {\r\n    return this.Dict.UseType;\r\n  }\r\n\r\n  dd_UseType = undefined\r\n  get DD_UseType() {\r\n    if (!this.dd_UseType) {\r\n      this.dd_UseType = util.GetDD_UseType(this)\r\n    }\r\n    return this.dd_UseType;\r\n  } set DD_UseType(v) {\r\n    this.dd_UseType = v;\r\n  }\r\n\r\n  saveTable\r\n  get SaveTable() {\r\n    if (!this.saveTable) {\r\n      this.saveTable = util.GetSaveTable(this)\r\n    } return this.saveTable\r\n  }\r\n\r\n  // Hover\r\n  OnMouseEnter = () => {\r\n    if (this.RenderState === rs.edit) {\r\n      return;\r\n    }\r\n    this.Show_Tool();\r\n  }\r\n\r\n  OnMouseLeave = () => {\r\n    this.Hide_Tool();\r\n  }\r\n\r\n  Show_Tool() {\r\n    switch (this.DD_UseType) {\r\n      case mgsdd_ut.query:\r\n        {\r\n          this.ActiveTool.Show();\r\n\r\n          switch (this.D_UseType) {\r\n            case mgsd_ut.project:\r\n              this.AddTemplate.Show();\r\n              break;\r\n            case mgsd_ut.template:\r\n              this.DeleteVM.Show();\r\n              break;\r\n          }\r\n        }\r\n        break;\r\n      case mgsdd_ut.save:\r\n        this.SaveTable.Show();\r\n        break;\r\n    }\r\n  }\r\n\r\n  Hide_Tool() {\r\n    switch (this.DD_UseType) {\r\n      case mgsdd_ut.query:\r\n        {\r\n          this.ActiveTool.Hide();\r\n\r\n          switch (this.D_UseType) {\r\n            case mgsd_ut.project:\r\n              this.AddTemplate.Hide();\r\n              break;\r\n            case mgsd_ut.template:\r\n              this.DeleteVM.Hide();\r\n              break;\r\n          }\r\n        }\r\n        break;\r\n      case mgsdd_ut.save:\r\n        this.SaveTable.Hide();\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Row\r\n  get RowView() {\r\n    return <tr className={`mgs__row ${this.ActiveStyle}`}\r\n      onDoubleClick={this.Edit}\r\n      onMouseEnter={this.OnMouseEnter}\r\n      onMouseLeave={this.OnMouseLeave}>\r\n      <td>{this.NameWrapper_View}</td>\r\n      <td>{this.DescriptionWrapper_View}</td>\r\n    </tr>\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle, false);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { MassGroupSettingVM } from '../item/MassGroupSettingVM';\r\n\r\nclass TableItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassGroupSettingVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.RowView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableItemView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport './Tab.css'\r\nimport * as util from './TabUtil'\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = util.GetTest()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.View}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { MassGroupSetting_DictVM } from '../dict/MassGroupSetting_DictVM';\r\nimport './Table.css'\r\nimport TableItemView from './TableItemView';\r\nimport TabView from '../../../tab/TabView';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassGroupSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='table table-bordered'>\r\n          <thead className='mgs__thead'>\r\n            <tr>\r\n              <th className='mgs__table__name'>Name</th>\r\n              <th className='mgs__table__description'>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.Items?.map(x => {\r\n              return <TableItemView key={x.id} store={x} />\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport * as util from './MassGroupSetting_DictVMUtil'\r\nimport TableView from '../table/TableView';\r\nimport * as iUtil from '../item/MassGroupSettingVMUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class MassGroupSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = (v) => {\r\n    var list = this.Items;\r\n    if (list.length === this.ModelItem.Items.length) return\r\n\r\n    var obj = iUtil.get(v, this);\r\n    list.push(obj)\r\n  }\r\n\r\n  get UseType(){\r\n    return this.ModelItem.UseType\r\n  }\r\n\r\n  get CategoryName(){\r\n    return this.ModelItem.CategoryName\r\n  }\r\n\r\n  // Save\r\n  save\r\n  get Save() {\r\n    if (!this.save) {\r\n      this.save = util.GetSave(this)\r\n    } return this.save;\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get TableWrapper_View(){\r\n    return <div className='mgs__table__wrapper'>\r\n      <TableView store={this} />\r\n    </div>\r\n  }\r\n}","import { SaveFilled } from '@ant-design/icons';\r\nimport { Button, message } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\nimport * as util from './SaveVMUtil'\r\nimport * as mgsdd_ut from '../dict/dict/MGS_Dict_Dict_UseType'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class SaveVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  get Name(){\r\n    return this.ModelItem.Name;\r\n  } set Name(v){\r\n    this.ModelItem.Name = v\r\n  }\r\n\r\n  Run = () => {\r\n    this.ModelItem.Run();\r\n\r\n    var q1 = pmDataVM().Mgs_Dict_Dict;\r\n    if (q1.UseType === mgsdd_ut.save){\r\n      q1.Is_Modal_Visible = false;\r\n    }\r\n  }\r\n}","import { MassGroupSetting_DictVM } from \"./MassGroupSetting_DictVM\";\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as selUtil from \"../../../../../select/SelectVMUtil\";\r\nimport * as saveUtil from \"../save/SaveVMUtil\";\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\nimport * as iUtil from '../item/MassGroupSettingVMUtil'\r\nimport * as mgsd_ut from './MGS_Dict_UseType'\r\n\r\nexport const pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new MassGroupSetting_DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  q.OnAddItem = (v) => qI.AddItem(v)\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    // Ưu tiên data có projectId\r\n    var isValid = true;\r\n\r\n    if (q.UseType === mgsd_ut.project) {\r\n      var pId = pmData().CurrentProject?._id;\r\n      if (pId) {\r\n        if (data.length !== 0) {\r\n          isValid = data[0].projectId === pId\r\n        } else {\r\n          var oldData = q.Items;\r\n          if (oldData && oldData.length !== 0) {\r\n            isValid = oldData[0].projectId !== pId\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (isValid) {\r\n      q.Items = data.map(x => iUtil.get(x, q));\r\n    }\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}\r\n\r\nexport const GetSave = (q) => {\r\n  return saveUtil.get(q.ModelItem.Save, q)\r\n}","import { SaveVM } from \"./SaveVM\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI =new SaveVM();\r\n  \r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n// Method\r\n","import { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as util from './MGS_Dict_DictVMUtil'\r\nimport * as ut from './MGS_Dict_Dict_UseType'\r\nimport './MGS_Dict_Dict.css'\r\nimport { PMDataVM } from '../../../../../single/form/PMDataVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class MGS_Dict_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      useType: observable,\r\n      current_MGS: observable,\r\n      Is_Modal_Visible: observable\r\n    })\r\n  }\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = util.GetItems(this)\r\n    } return this.items;\r\n  }\r\n\r\n  useType = ut.query\r\n  get UseType() {\r\n    return this.useType\r\n  } set UseType(v) {\r\n    this.useType = v;\r\n\r\n    util.SetUseType(this, v)\r\n  }\r\n\r\n  Toggle_UseType = () => {\r\n    this.UseType = this.UseType === ut.query ? ut.save : ut.query\r\n  }\r\n\r\n  queryTab\r\n  get QueryTab() {\r\n    if (!this.queryTab) {\r\n      this.queryTab = util.GetQueryTab(this)\r\n    } return this.queryTab\r\n  }\r\n\r\n  saveTab\r\n  get SaveTab() {\r\n    if (!this.saveTab) {\r\n      this.saveTab = util.GetSaveTab(this)\r\n    } return this.saveTab\r\n  }\r\n\r\n  get View() {\r\n    return util.GetView(this)\r\n  }\r\n\r\n  Is_Modal_Visible = false\r\n\r\n  get ModalView() {\r\n    return util.GetModalView(this)\r\n  }\r\n\r\n  mainItem\r\n  get MainItem() {\r\n    if (!this.mainItem) {\r\n      this.mainItem = util.GetMainItem(this)\r\n    } return this.mainItem\r\n  }\r\n\r\n  add_MGS\r\n  get Add_MGS() {\r\n    if (!this.add_MGS) {\r\n      this.add_MGS = util.GetAdd_MGS(this)\r\n    } return this.add_MGS\r\n  }\r\n\r\n  current_MGS = undefined\r\n  get Current_MGS() {\r\n    return this.current_MGS\r\n  } set Current_MGS(v) {\r\n    this.current_MGS = v;\r\n    this.ModelItem.Current_MGS = v?.ModelItem\r\n  }\r\n\r\n  get Pick_MGS_View() {\r\n    return util.GetPick_MGS_View(this)\r\n  }\r\n\r\n  OpenSave = () => {\r\n    this.Is_Modal_Visible = true\r\n    this.UseType = ut.save\r\n  }\r\n\r\n  get Save_MGS_View() {\r\n    return util.GetSave_MGS_View(this)\r\n  }\r\n\r\n  get Commands() {\r\n    return pmDataVM().Commands\r\n  }\r\n}","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../../../util/commandUtil'\r\nimport { EntDelete } from '../../../../../../delete/EntDelete';\r\nimport { Tab } from '../../../../tab/Tab';\r\nimport * as mgsdUtil from '../MassGroupSetting_DictVMUtil'\r\nimport * as mgsd_ut from '../MGS_Dict_UseType'\r\nimport { MGS_Dict_DictVM } from './MGS_Dict_DictVM';\r\nimport * as d_tt from '../../../../../../delete/EntDelete_ToggleType'\r\nimport { PlusCircleOutlined, SaveFilled } from '@ant-design/icons';\r\nimport { Button, message } from 'antd';\r\nimport { TextVM } from '../../../../../../text/TextVM';\r\nimport InputView from '../../../../../../input/InputView';\r\nimport * as ut from './MGS_Dict_Dict_UseType'\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport * as pct from '../../../../command/ProjectCommand'\r\n\r\n// Instance\r\nexport const get = (q) => {\r\n  var qI = new MGS_Dict_DictVM();\r\n  qI.ModelItem = q;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return q.ModelItem.Items.map(x => mgsdUtil.get(x, q));\r\n}\r\n\r\nexport const GetMainItem = (q) => {\r\n  return genUtil.SingleFilter\r\n    (q.Items, (x) => x.UseType === mgsd_ut.project)\r\n}\r\n\r\nexport const GetQueryTab = (q) => {\r\n  var qI = new Tab();\r\n\r\n  qI.Items = q.Items;\r\n  qI.TitleRender = (v) => v.CategoryName\r\n  qI.ContentRender = (v) => v.TableWrapper_View;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSaveTab = (q) => {\r\n  var qI = new Tab();\r\n\r\n  qI.Items = [q.MainItem]\r\n  qI.TitleRender = (v) => v.CategoryName\r\n  qI.ContentRender = (v) => v.TableWrapper_View;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetAdd_MGS = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  var nameVM = new TextVM();\r\n  nameVM.Placeholder = 'tên thiết lập ...'\r\n\r\n  qI.ToggleType = d_tt.manual\r\n  qI.Title = 'Xác nhận thêm thiết lập?'\r\n\r\n  qI.OnPre_ShowHover = () => {\r\n    nameVM.Content = undefined\r\n  }\r\n\r\n  qI.Modal_InfoView = <InputView store={nameVM} />\r\n  qI.Modal_ContentView = <div className='msg__dd__save__add__hoverwrapper'>\r\n    {qI.Modal_InfoView}\r\n    {qI.Modal_ButtonView}\r\n  </div>\r\n\r\n  qI.ShowHover_Button = <Button type='primary' size='small'\r\n    className='btn-success'\r\n    onClick={qI.Show_Hover}>\r\n    <PlusCircleOutlined />\r\n  </Button>\r\n\r\n  qI.OnPreRun = () => {\r\n    if (!nameVM.Content || nameVM.Content.length === 0) {\r\n      qI.IsRun_Cancel = true\r\n      message.warn('Vui lòng nhập tên thiết lập!');\r\n    }\r\n  }\r\n\r\n  qI.OnRun = () => {\r\n    var save = q.MainItem.Save;\r\n    save.Name = nameVM.Content;\r\n    save.Run();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPick_MGS_View = (q) => {\r\n  var content = q.Current_MGS ? q.Current_MGS.Name_ForPick : '(none)'\r\n  var click = () => {\r\n    q.Is_Modal_Visible = true\r\n    q.UseType = ut.query\r\n  }\r\n\r\n  return <Button type='primary'\r\n    onClick={click}>\r\n    <div className='msg__dd__pick__wrapper'>\r\n      <div>CHỌN THIẾT LẬP:</div>\r\n      <div className='msg__dd__pick__current'>{content}</div>\r\n    </div>\r\n  </Button>\r\n}\r\n\r\nexport const GetSave_MGS_View = (q) => {\r\n  if (comUtil.Validate(pct.edit)){\r\n    return <Button type='primary' size='small'\r\n      onClick={q.OpenSave}>\r\n      <SaveFilled />\r\n    </Button>\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const GetView = (q) => {\r\n  switch (q.UseType) {\r\n    case ut.query:\r\n      return <>\r\n        {q.QueryTab.View}\r\n      </>\r\n    case ut.save:\r\n      return <>\r\n        <div className='msg__dd__save__wrapper'>\r\n          <div className='msg__dd__save__add'>\r\n            {q.Commands.includes(pct.edit) ? q.Add_MGS.View : ''}\r\n          </div>\r\n          <div className='msg__dd__save__main'>\r\n            {q.SaveTab.ContentView}\r\n          </div>\r\n        </div>\r\n      </>\r\n  }\r\n}\r\n\r\nexport const GetModalView = (q) => {\r\n  var title = q.UseType === ut.query ?\r\n    'CHỌN THIẾT LẬP' : 'LƯU THIẾT LẬP'\r\n\r\n  const toggleVisible = () => {\r\n    q.Is_Modal_Visible = !q.Is_Modal_Visible\r\n  }\r\n\r\n  return <Modal title={title} visible={q.Is_Modal_Visible}\r\n    width={1000}\r\n    className='msg__modal'\r\n    onCancel={toggleVisible}\r\n    footer={null}>\r\n    <div>\r\n      {q.View}\r\n    </div>\r\n  </Modal>\r\n}\r\n\r\n// Method\r\nexport const SetUseType = (q, v) => {\r\n  var host = q.MainItem;\r\n\r\n  const setObj = () => {\r\n    host.Items.forEach(x => {\r\n      x.DD_UseType = v\r\n    })\r\n  }\r\n\r\n  if (host.Items) {\r\n    setObj();\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Items_Func,\r\n      setObj\r\n    )\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { MassDetailSettingVM } from './MassDetailSettingVM'\r\nimport { EntDelete } from '../../../../../delete/EntDelete';\r\nimport * as d_tt from '../../../../../delete/EntDelete_ToggleType'\r\nimport { Button, message } from 'antd';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, SaveFilled } from '@ant-design/icons';\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new MassDetailSettingVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetActiveTool = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n  qI.Retrieve_WrapperView = () => !q.IsActive ?\r\n    <Button type='primary' size='small'\r\n      onClick={q.Set_Active}>\r\n      <CheckCircleOutlined />\r\n    </Button>\r\n    :\r\n    <Button type='primary' size='small'\r\n      onClick={q.UnSet_Active}\r\n      className='btn-warning'>\r\n      <CloseCircleOutlined />\r\n    </Button>\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSaveTable = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n  qI.Title = 'Xác nhận lưu đè?'\r\n  qI.ShowHover_Button = <Button type='primary' size='small'\r\n    className='btn-success'\r\n    onClick={qI.Show_Hover}>\r\n    <SaveFilled />\r\n  </Button>\r\n\r\n  qI.OnRun = () => {\r\n    var save = q.Dict.Save;\r\n    save.Name = q.Name;\r\n    save.Run();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDD_UseType = (q) => {\r\n  return q.Dict.Dict.UseType\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}","export const query = 'query'\r\nexport const save = 'save'","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../../util/commandUtil'\r\nimport * as util from './MassDetailSettingVMUtil'\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport * as inputUtil from '../../../../../../util/inputUtil';\r\nimport * as editTextUtil from '../../../../../text/EditableTextVMUtil';\r\nimport EditableTextView from '../../../../../text/EditableTextView';\r\nimport './MassDetailSetting.css'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\nimport * as mdsdd_ut from '../dict/dict/MDS_Dict_Dict_UseType'\r\nimport * as pct from '../../../command/ProjectCommand'\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class MassDetailSettingVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isActive: observable,\r\n      dd_UseType: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get projectId() {\r\n    return this.ModelItem.projectId;\r\n  }\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n    this.NameVM.RenderState = v;\r\n    this.DescriptionVM.RenderState = v;\r\n\r\n    if (v === rs._default) {\r\n      this.SaveDatabase(false);\r\n    }\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.Commands.includes(pct.edit)) {\r\n      if (this.RenderState === rs._default) {\r\n        this.RenderState = rs.edit\r\n        this.Hide_Tool();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Name\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  } set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  get Name_ForPick() {\r\n    return this.Name\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM = editTextUtil.get(this.Name, this.CanEdit);\r\n\r\n      obj.Is_Tool_Visible = false\r\n      obj.OnKeyDown = (e) => {\r\n        var { key, value } = inputUtil.Get_Shortcut(e);\r\n        switch (key) {\r\n          case inputUtil.enter:\r\n            this.RenderState = rs._default\r\n            break;\r\n        }\r\n      }\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Name = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  get NameView() {\r\n    return <EditableTextView className='mds__cell__main'\r\n      store={this.NameVM} />\r\n  }\r\n\r\n  get NameWrapper_View() {\r\n    return <div className='mds__cell__wrapper'>\r\n      {this.NameView}\r\n      {this.DD_UseType === mdsdd_ut.query ?\r\n        this.ActiveTool.View :\r\n        (this.Commands.includes(pct.edit) ? this.SaveTable.View : '')}\r\n    </div>\r\n  }\r\n\r\n  // Description\r\n  get Description() {\r\n    return this.ModelItem.Description;\r\n  } set Description(v) {\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM = editTextUtil.get(this.Description, this.CanEdit);\r\n\r\n      obj.Is_Tool_Visible = false\r\n      obj.OnKeyDown = (e) => {\r\n        var { key, value } = inputUtil.Get_Shortcut(e);\r\n        switch (key) {\r\n          case inputUtil.enter:\r\n            this.RenderState = rs._default\r\n            break;\r\n        }\r\n      }\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Description = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  get DescriptionView() {\r\n    return <EditableTextView className='mds__cell__main'\r\n      store={this.DescriptionVM} />\r\n  }\r\n\r\n  get DescriptionWrapper_View() {\r\n    return <div className='mds__cell__wrapper'>\r\n      {this.DescriptionView}\r\n      {comUtil.Validate(pct.edit)\r\n        && this.DD_UseType === mdsdd_ut.query ? this.DeleteVM.View : ''}\r\n    </div>\r\n  }\r\n  \r\n  // Active\r\n  activeTool\r\n  get ActiveTool() {\r\n    if (!this.activeTool) {\r\n      this.activeTool = util.GetActiveTool(this)\r\n    } return this.activeTool\r\n  }\r\n\r\n  isActive = false\r\n  get IsActive() {\r\n    return this.isActive\r\n  } set IsActive(v) {\r\n    this.isActive = v;\r\n  }\r\n\r\n  get ActiveStyle() {\r\n    return this.DD_UseType === mdsdd_ut.query &&\r\n      this.IsActive ? 'active' : ''\r\n  }\r\n\r\n  Set_Active = () => {\r\n    var q1 = pmDataVM().Mds_Dict_Dict\r\n    if (q1.TempCurrentItem) {\r\n      q1.TempCurrentItem.IsActive = false\r\n    }\r\n\r\n    q1.TempCurrentItem = this;\r\n    this.IsActive = true;\r\n  }\r\n\r\n  UnSet_Active = () => {\r\n    pmDataVM().Mds_Dict_Dict.TempCurrentItem = undefined;\r\n    this.IsActive = false;\r\n  }\r\n\r\n  // Save Table\r\n  dd_UseType = undefined\r\n  get DD_UseType() {\r\n    if (!this.dd_UseType) {\r\n      this.dd_UseType = util.GetDD_UseType(this)\r\n    }\r\n    return this.dd_UseType;\r\n  } set DD_UseType(v) {\r\n    this.dd_UseType = v;\r\n  }\r\n\r\n  saveTable\r\n  get SaveTable() {\r\n    if (!this.saveTable) {\r\n      this.saveTable = util.GetSaveTable(this)\r\n    } return this.saveTable\r\n  }\r\n\r\n  // Hover\r\n  OnMouseEnter = () => {\r\n    if (this.RenderState === rs.edit) {\r\n      return;\r\n    }\r\n    this.Show_Tool();\r\n  }\r\n\r\n  OnMouseLeave = () => {\r\n    this.Hide_Tool();\r\n  }\r\n\r\n  Show_Tool() {\r\n    switch (this.DD_UseType) {\r\n      case mdsdd_ut.query:\r\n        {\r\n          this.ActiveTool.Show();\r\n          this.DeleteVM.Show();\r\n        }\r\n        break;\r\n      case mdsdd_ut.save:\r\n        this.SaveTable.Show();\r\n        break;\r\n    }\r\n  }\r\n\r\n  Hide_Tool() {\r\n    switch (this.DD_UseType) {\r\n      case mdsdd_ut.query:\r\n        {\r\n          this.ActiveTool.Hide();\r\n          this.DeleteVM.Hide();\r\n        }\r\n        break;\r\n      case mdsdd_ut.save:\r\n        this.SaveTable.Hide();\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Row\r\n  get RowView() {\r\n    return <tr className={`mds__row ${this.ActiveStyle}`}\r\n      onDoubleClick={this.Edit}\r\n      onMouseEnter={this.OnMouseEnter}\r\n      onMouseLeave={this.OnMouseLeave}>\r\n      <td>{this.NameWrapper_View}</td>\r\n      <td>{this.DescriptionWrapper_View}</td>\r\n    </tr>\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle, false);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { MassDetailSettingVM } from '../item/MassDetailSettingVM';\r\n\r\nclass TableItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassDetailSettingVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.RowView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableItemView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { MassDetailSetting_DictVM } from '../dict/MassDetailSetting_DictVM';\r\nimport './Table.css'\r\nimport TableItemView from './TableItemView';\r\nimport TabView from '../../../tab/TabView';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassDetailSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='table table-bordered'>\r\n          <thead className='mds__thead'>\r\n            <tr>\r\n              <th className='mds__table__name'>Name</th>\r\n              <th className='mds__table__description'>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.Items?.map(x => {\r\n              return <TableItemView key={x.id} store={x} />\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport * as util from './MassDetailSetting_DictVMUtil'\r\nimport TableView from '../table/TableView';\r\nimport * as iUtil from '../item/MassDetailSettingVMUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class MassDetailSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = (v) => {\r\n    var list = this.Items;\r\n    if (list.length === this.ModelItem.Items.length) return\r\n\r\n    var obj = iUtil.get(v, this);\r\n    list.push(obj)\r\n  }\r\n\r\n  get UseType(){\r\n    return this.ModelItem.UseType\r\n  }\r\n\r\n  get CategoryName(){\r\n    return this.ModelItem.CategoryName\r\n  }\r\n\r\n  // Save\r\n  save\r\n  get Save() {\r\n    if (!this.save) {\r\n      this.save = util.GetSave(this)\r\n    } return this.save;\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get TableWrapper_View(){\r\n    return <div className='mgs__table__wrapper'>\r\n      <TableView store={this} />\r\n    </div>\r\n  }\r\n}","import { SaveFilled } from '@ant-design/icons';\r\nimport { Button, message } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\nimport * as util from './SaveVMUtil'\r\nimport * as mdsdd_ut from '../dict/dict/MDS_Dict_Dict_UseType'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class SaveVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  get Name(){\r\n    return this.ModelItem.Name;\r\n  } set Name(v){\r\n    this.ModelItem.Name = v\r\n  }\r\n\r\n  Run = () => {\r\n    this.ModelItem.Run();\r\n\r\n    var q1 = pmDataVM().Mds_Dict_Dict;\r\n    if (q1.UseType === mdsdd_ut.save){\r\n      q1.Is_Modal_Visible = false;\r\n    }\r\n  }\r\n}","import { MassDetailSetting_DictVM } from \"./MassDetailSetting_DictVM\";\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as selUtil from \"../../../../../select/SelectVMUtil\";\r\nimport * as saveUtil from \"../save/SaveVMUtil\";\r\nimport { PMData } from \"../../../../single/model/PMData\";\r\nimport * as iUtil from '../item/MassDetailSettingVMUtil'\r\n\r\nexport const pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new MassDetailSetting_DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  q.OnAddItem = (v) => qI.AddItem(v)\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => iUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}\r\n\r\nexport const GetSave = (q) => {\r\n  return saveUtil.get(q.ModelItem.Save, q)\r\n}","import { SaveVM } from \"./SaveVM\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI =new SaveVM();\r\n  \r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// Method","import { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as util from './MDS_Dict_DictVMUtil'\r\nimport * as ut from './MDS_Dict_Dict_UseType'\r\nimport './MDS_Dict_Dict.css'\r\nimport { PMDataVM } from '../../../../../single/form/PMDataVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class MDS_Dict_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      useType: observable,\r\n      current_MDS : observable,\r\n      Is_Modal_Visible : observable\r\n    })\r\n  }\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = util.GetItems(this)\r\n    } return this.items;\r\n  }\r\n\r\n  useType = ut.query\r\n  get UseType(){\r\n    return this.useType\r\n  } set UseType(v){\r\n    this.useType = v;\r\n\r\n    util.SetUseType(this, v)\r\n  }\r\n\r\n  Toggle_UseType = () => {\r\n    this.UseType = this.UseType === ut.query ? ut.save : ut.query\r\n  }\r\n\r\n  queryTab\r\n  get QueryTab() {\r\n    if (!this.queryTab) {\r\n      this.queryTab = util.GetQueryTab(this)\r\n    } return this.queryTab\r\n  }\r\n\r\n  saveTab\r\n  get SaveTab() {\r\n    if (!this.saveTab) {\r\n      this.saveTab = util.GetSaveTab(this)\r\n    } return this.saveTab\r\n  }\r\n\r\n  get View() {\r\n    return util.GetView(this)\r\n  }\r\n\r\n  Is_Modal_Visible = false\r\n\r\n  get ModalView() {\r\n    return util.GetModalView(this)\r\n  }\r\n\r\n  mainItem\r\n  get MainItem(){\r\n    if (!this.mainItem){\r\n      this.mainItem = util.GetMainItem(this)\r\n    } return this.mainItem\r\n  }\r\n\r\n  add_MDS\r\n  get Add_MDS(){\r\n    if (!this.add_MDS){\r\n      this.add_MDS = util.GetAdd_MDS(this)\r\n    } return this.add_MDS\r\n  }\r\n\r\n  current_MDS = undefined\r\n  get Current_MDS() {\r\n    return this.current_MDS\r\n  } set Current_MDS(v) {\r\n    this.current_MDS = v;\r\n    this.ModelItem.Current_MDS = v?.ModelItem\r\n  }\r\n\r\n  get Pick_MDS_View(){\r\n    return util.GetPick_MDS_View(this)\r\n  }\r\n\r\n  OpenSave = () => {\r\n    this.Is_Modal_Visible = true\r\n    this.UseType = ut.save\r\n  }\r\n\r\n  get Save_MDS_View(){\r\n    return util.GetSave_MDS_View(this)\r\n  }\r\n\r\n  get Commands(){\r\n    return pmDataVM().Commands\r\n  }\r\n\r\n  // Table\r\n  get Table(){\r\n    return this.ModelItem.Table\r\n  }\r\n}","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../../../util/commandUtil'\r\nimport { EntDelete } from '../../../../../../delete/EntDelete';\r\nimport { Tab } from '../../../../tab/Tab';\r\nimport * as mdsdUtil from '../MassDetailSetting_DictVMUtil'\r\nimport { MDS_Dict_DictVM } from './MDS_Dict_DictVM';\r\nimport * as d_tt from '../../../../../../delete/EntDelete_ToggleType'\r\nimport { PlusCircleOutlined, SaveFilled } from '@ant-design/icons';\r\nimport { Button, message } from 'antd';\r\nimport { TextVM } from '../../../../../../text/TextVM';\r\nimport InputView from '../../../../../../input/InputView';\r\nimport * as ut from './MDS_Dict_Dict_UseType'\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport * as pct from '../../../../command/ProjectCommand'\r\n\r\n// Instance\r\nexport const get = (q) => {\r\n  var qI = new MDS_Dict_DictVM();\r\n  qI.ModelItem = q;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return q.ModelItem.Items.map(x => mdsdUtil.get(x, q));\r\n}\r\n\r\nexport const GetMainItem = (q) => {\r\n  return q.Items[0]\r\n}\r\n\r\nexport const GetQueryTab = (q) => {\r\n  var qI = new Tab();\r\n\r\n  qI.Items = q.Items;\r\n  qI.TitleRender = (v) => v.CategoryName\r\n  qI.ContentRender = (v) => v.TableWrapper_View;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetSaveTab = (q) => {\r\n  var qI = new Tab();\r\n\r\n  qI.Items = [q.MainItem]\r\n  qI.TitleRender = (v) => v.CategoryName\r\n  qI.ContentRender = (v) => v.TableWrapper_View;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetAdd_MDS = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  var nameVM = new TextVM();\r\n  nameVM.Placeholder = 'tên thiết lập ...'\r\n\r\n  qI.ToggleType = d_tt.manual\r\n  qI.Title = 'Xác nhận thêm thiết lập?'\r\n\r\n  qI.OnPre_ShowHover = () => {\r\n    nameVM.Content = undefined\r\n  }\r\n\r\n  qI.Modal_InfoView = <InputView store={nameVM} />\r\n  qI.Modal_ContentView = <div className='mdg__dd__save__add__hoverwrapper'>\r\n    {qI.Modal_InfoView}\r\n    {qI.Modal_ButtonView}\r\n  </div>\r\n\r\n  qI.ShowHover_Button = <Button type='primary' size='small'\r\n    className='btn-success'\r\n    onClick={qI.Show_Hover}>\r\n    <PlusCircleOutlined />\r\n  </Button>\r\n\r\n  qI.OnPreRun = () => {\r\n    if (!nameVM.Content || nameVM.Content.length === 0) {\r\n      qI.IsRun_Cancel = true\r\n      message.warn('Vui lòng nhập tên thiết lập!');\r\n    }\r\n  }\r\n\r\n  qI.OnRun = () => {\r\n    var save = q.MainItem.Save;\r\n    save.Name = nameVM.Content;\r\n    save.Run();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPick_MDS_View = (q) => {\r\n  var content = q.Current_MDS ? q.Current_MDS.Name_ForPick : '(none)'\r\n  var click = () => {\r\n    if (q.TempCurrentItem){\r\n      q.TempCurrentItem.UnSet_Active();\r\n    }\r\n\r\n    q.Is_Modal_Visible = true\r\n    q.UseType = ut.query\r\n  }\r\n\r\n  return <Button type='primary'\r\n    onClick={click}>\r\n    <div className='mdg__dd__pick__wrapper'>\r\n      <div>CHỌN THIẾT LẬP:</div>\r\n      <div className='mdg__dd__pick__current'>{content}</div>\r\n    </div>\r\n  </Button>\r\n}\r\n\r\nexport const GetSave_MDS_View = (q) => {\r\n  if (comUtil.Validate(pct.edit)){\r\n    return <Button type='primary' size='small'\r\n      onClick={q.OpenSave}>\r\n      <SaveFilled />\r\n    </Button>\r\n  }\r\n  return ''\r\n}\r\n\r\nexport const GetView = (q) => {\r\n  switch (q.UseType) {\r\n    case ut.query:\r\n      return <>\r\n        {q.QueryTab.ContentView}\r\n      </>\r\n    case ut.save:\r\n      return <>\r\n        <div className='mdg__dd__save__wrapper'>\r\n          <div className='mdg__dd__save__add'>\r\n            {comUtil.Validate(pct.edit) ? q.Add_MDS.View : ''}\r\n          </div>\r\n          <div className='mdg__dd__save__main'>\r\n            {q.SaveTab.ContentView}\r\n          </div>\r\n        </div>\r\n      </>\r\n  }\r\n}\r\n\r\nexport const GetModalView = (q) => {\r\n  var title = q.UseType === ut.query ?\r\n    'CHỌN THIẾT LẬP' : 'LƯU THIẾT LẬP'\r\n\r\n    const hideVisible = () => {\r\n      q.Is_Modal_Visible = false\r\n    }\r\n\r\n    const modalOK = () => {\r\n      q.Is_Modal_Visible = false\r\n      q.Current_MDS = q.TempCurrentItem\r\n    }\r\n\r\n  return <Modal title={title} visible={q.Is_Modal_Visible}\r\n    width={1000}\r\n    className='msg__modal'\r\n    onCancel={hideVisible}\r\n    footer={\r\n      <>\r\n        <Button type='primary' size='small'\r\n          onClick={modalOK}>ok</Button>\r\n        <Button type='text' size='small'\r\n          onClick={hideVisible}>cancel</Button>\r\n      </>\r\n    }>\r\n    <div>\r\n      {q.View}\r\n    </div>\r\n  </Modal>\r\n}\r\n\r\n// Method\r\nexport const SetUseType = (q, v) => {\r\n  var host = q.MainItem;\r\n\r\n  const setObj = () => {\r\n    host.Items.forEach(x => {\r\n      x.DD_UseType = v\r\n    })\r\n  }\r\n\r\n  if (host.Items) {\r\n    setObj();\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Items_Func,\r\n      setObj\r\n    )\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { EntDelete } from '../../../../../delete/EntDelete';\r\nimport * as d_tt from '../../../../../delete/EntDelete_ToggleType'\r\nimport * as d_ut from '../../../../../delete/EntDelete_UseType'\r\nimport * as d_vt from '../../../../../delete/EntDelete_VisibleType'\r\nimport { Button, message } from 'antd';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, SaveFilled } from '@ant-design/icons';\r\nimport { ItemVM } from './ItemVM';\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ItemVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetNameForView = (q) => {\r\n  return `${q.Name} (${q.MassType})`;\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.mouseEvent\r\n  qI.UseType = d_ut.style\r\n  qI.Retrieve_WrapperView = () => <div className='f'>\r\n    <Button type='primary' size='small'\r\n      onClick={q.SetValue}>ok\r\n    </Button>\r\n    {q.CanEdit ?\r\n      <Button type='primary' size='small'\r\n        className='btn-danger'\r\n        onClick={q.Delete}>x\r\n      </Button>\r\n      : ''}\r\n  </div>\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../../util/commandUtil'\r\nimport * as util from './ItemVMUtil'\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport * as inputUtil from '../../../../../../util/inputUtil';\r\nimport * as editTextUtil from '../../../../../text/EditableTextVMUtil';\r\nimport EditableTextView from '../../../../../text/EditableTextView';\r\nimport './Item.css'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\nimport * as pct from '../../../command/ProjectCommand'\r\nimport * as d_ut from '../dict/base/Dict_UseType'\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      nameForView : observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n    this.NameVM.RenderState = v;\r\n\r\n    if (v === rs._default) {\r\n      this.SaveDatabase(false);\r\n    }\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.CanEdit && comUtil.Validate(pct.edit)) {\r\n      if (this.RenderState === rs._default) {\r\n        this.RenderState = rs.edit\r\n        this.Hide_Tool();\r\n      }\r\n    }\r\n  }\r\n\r\n  // UseType\r\n  get CanEdit(){\r\n    return this.Dict.QueryTab.CurrentItem.UseType === d_ut.partial\r\n  }\r\n\r\n  // Name\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  } set Name(v) {\r\n    this.ModelItem.Name = v;\r\n    this.NameForView = util.GetNameForView(this)\r\n  }\r\n\r\n  nameForView = undefined\r\n  get NameForView(){\r\n    if (!this.nameForView){\r\n      this.nameForView = util.GetNameForView(this)\r\n    } return this.nameForView;\r\n  } set NameForView(v){\r\n    this.nameForView = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM = editTextUtil.get(this.Name, this.CanEdit);\r\n\r\n      obj.Placeholder = 'nhập thông tin ...'\r\n      obj.Is_Tool_Visible = false\r\n      obj.OnKeyDown = (e) => {\r\n        var { key, value } = inputUtil.Get_Shortcut(e);\r\n        switch (key) {\r\n          case inputUtil.enter:\r\n            this.RenderState = rs._default\r\n            break;\r\n        }\r\n      }\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Name = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  get NameView() {\r\n    return <EditableTextView className='sg__cell__main'\r\n      store={this.NameVM} />\r\n  }\r\n\r\n  get NameWrapper_View() {\r\n    return <div className='sg__cell__wrapper f'>\r\n      <div className='sg__cell_name__wrapper'>\r\n        {this.CanEdit ? this.NameView : this.NameForView}\r\n      </div>\r\n      {comUtil.Validate(pct.edit) ?\r\n        <div className='sg__item__delete'>\r\n          {comUtil.Validate(pct.edit) ? this.DeleteVM.View : ''}\r\n        </div>\r\n        : ''}\r\n    </div>\r\n  }\r\n\r\n  // MassType\r\n  get MassType(){\r\n    return this.ModelItem.MassType\r\n  }\r\n\r\n  get Field(){\r\n    return this.ModelItem.Field\r\n  }\r\n\r\n  // Hover\r\n  OnMouseEnter = () => {\r\n    if (this.RenderState === rs.edit) {\r\n      return;\r\n    }\r\n    this.Show_Tool();\r\n  }\r\n\r\n  OnMouseLeave = () => {\r\n    this.Hide_Tool();\r\n  }\r\n\r\n  Show_Tool() {\r\n    this.DeleteVM.Show();\r\n  }\r\n\r\n  Hide_Tool() {\r\n    this.DeleteVM.Hide();\r\n  }\r\n\r\n  // Row\r\n  get RowView() {\r\n    return <div className={`sg__row`}\r\n      onDoubleClick={this.Edit}\r\n      onMouseEnter={this.OnMouseEnter}\r\n      onMouseLeave={this.OnMouseLeave}>\r\n      {this.NameWrapper_View}\r\n    </div>\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle, false);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Data\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    // Cancel Close Popover\r\n    this.Dict.CurrentPopover.IsCancel = true;\r\n\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.Dict.Items.forEach(x => {\r\n      x.Items.splice(x.Items.indexOf(this), 1)\r\n    })\r\n\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  get Commands() {\r\n    return pmDataVM().Commands;\r\n  }\r\n\r\n  // SetValue\r\n  SetValue = () => {\r\n    this.Dict.SetValue(this.Name);\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { ItemVM } from '../item/ItemVM';\r\n\r\nclass TableItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ItemVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.RowView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableItemView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { DictVM } from '../dict/base/DictVM';\r\nimport './Table.css'\r\nimport TableItemView from './TableItemView';\r\nimport TabView from '../../../tab/TabView';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {/* <table>\r\n          <tbody>\r\n            {data.Items?.map(x => {\r\n              return <TableItemView key={x.id} store={x} />\r\n            })}\r\n          </tbody>\r\n        </table> */}\r\n\r\n        <div>\r\n          {data.Items?.map(x => {\r\n            return <TableItemView key={x.id} store={x} />\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictVMUtil'\r\nimport TableView from '../../table/TableView';\r\nimport * as iUtil from '../../item/ItemVMUtil'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../../../util/commandUtil'\r\nimport * as pct from '../../../../command/ProjectCommand'\r\nimport * as ut from './Dict_UseType'\r\nimport { Button } from 'antd';\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = util.GetItems(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  addData\r\n  get AddData() {\r\n    if (!this.addData) {\r\n      this.addData = util.GetAddData(this)\r\n    } return this.addData;\r\n  }\r\n\r\n  get UseType() {\r\n    return this.ModelItem.UseType\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get TableWrapper_View() {\r\n    return <div className='sg__table__wrapper f'>\r\n      {this.UseType === ut.partial && comUtil.Validate(pct.edit)\r\n        ? this.AddData.View : ''}\r\n      <TableView store={this} />\r\n    </div>\r\n  }\r\n}","import { DictVM } from \"./DictVM\";\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\nimport { PMData } from \"../../../../../single/model/PMData\";\r\nimport * as imUtil from '../../item/ItemUtil'\r\nimport * as iUtil from '../../item/ItemVMUtil'\r\nimport { EntDelete } from '../../../../../../delete/EntDelete';\r\nimport * as d_tt from '../../../../../../delete/EntDelete_ToggleType'\r\nimport * as d_vt from '../../../../../../delete/EntDelete_VisibleType'\r\nimport * as ut from './Dict_UseType'\r\nimport { Button } from 'antd';\r\nimport './Dict.css'\r\n\r\nexport const pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  q.OnAddItem = (v) => qI.AddItem(v)\r\n  q.OnSet_Items = (v) => qI.Items = GetItems(qI)\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  var list = q.Dict.Data;\r\n  var field = q.Dict.CurrentField\r\n\r\n  switch (q.UseType) {\r\n    case ut.partial:\r\n      var massType = q.Dict.CurrentMassType;    \r\n      return list.filter(x => x.MassType === massType && \r\n        x.Field === field);\r\n    case ut.all:\r\n      return list.filter(x => x.Field === field);\r\n  }\r\n}\r\n\r\nexport const GetAddData = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  const func = () => {\r\n    var host = q.Dict.ModelItem;\r\n    host.AddData();\r\n  }\r\n\r\n  qI.ToggleType = d_tt.manual\r\n  qI.Retrieve_WrapperView = () => <Button type='primary' size='small'\r\n    className='sg__additem'\r\n    onClick={func}>+</Button>\r\n\r\n  return qI;\r\n}","import { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Dict_DictVMUtil'\r\nimport './Dict_Dict.css'\r\nimport * as dataItemUtil from '../../item/ItemVMUtil'\r\n\r\nexport class Dict_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_Modal_Visible : observable,\r\n      SetValue : observable\r\n    })\r\n  }\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = util.GetItems(this)\r\n    } return this.items;\r\n  }\r\n\r\n  get Data(){\r\n    return this.ModelItem.Data\r\n  }\r\n\r\n  queryTab\r\n  get QueryTab() {\r\n    if (!this.queryTab) {\r\n      this.queryTab = util.GetQueryTab(this)\r\n    } return this.queryTab\r\n  }\r\n\r\n  get View() {\r\n    return util.GetView(this)\r\n  }\r\n\r\n  Is_Modal_Visible = false\r\n\r\n  get ModalView() {\r\n    return util.GetModalView(this)\r\n  }\r\n\r\n  currentItem = undefined\r\n  get CurrentItem() {\r\n    return this.currentItem\r\n  } set CurrentItem(v) {\r\n    this.currentItem = v;\r\n    this.ModelItem.Current_MDS = v?.ModelItem ? v.ModelItem : v\r\n  }\r\n\r\n  popover_Render\r\n  get Popover_Render(){\r\n    if (!this.popover_Render){\r\n      this.popover_Render = util.GetDefaultPopover_Render(this)\r\n    } return this.popover_Render\r\n  } set Popover_Render(v){\r\n    this.popover_Render = v;\r\n  }\r\n\r\n  // Field\r\n  currentField = undefined\r\n  get CurrentField(){\r\n    return this.currentField\r\n  } set CurrentField(v){\r\n    this.currentField = v;\r\n    this.ModelItem.CurrentField = v;\r\n  }\r\n\r\n  // MassType\r\n  currentMassType = undefined\r\n  get CurrentMassType(){\r\n    return this.currentMassType\r\n  } set CurrentMassType(v){\r\n    this.currentMassType = v;\r\n    this.ModelItem.CurrentMassType = v;\r\n  }\r\n\r\n  // Data\r\n  data\r\n  get Data(){\r\n    if (!this.data){\r\n      this.data = util.GetData(this)\r\n    } return this.data\r\n  } set Data(v){\r\n    this.data = v;\r\n  }\r\n\r\n  AddData = (v) => {\r\n    var qI = dataItemUtil.get(v, this)\r\n    qI.Edit();\r\n    this.Data.push(qI)\r\n    \r\n    this.Items.forEach(x => {\r\n      var list = x.Items;\r\n      if (list.length !== this.Data.length){\r\n        x.Items.push(qI)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Initial\r\n  Initial = () => {\r\n    this.ModelItem.Initial();\r\n  }\r\n\r\n  // Refine\r\n  Refine = () => {\r\n    util.Refine(this);\r\n  }\r\n\r\n  // SetValue\r\n  SetValue = undefined\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle);\r\n  }\r\n}","export const hover = 'hover'\r\nexport const click = 'click'","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { EntPopover } from './EntPopover';\r\nimport { Button, Popover } from 'antd';\r\nimport './EntPopover.css'\r\nimport * as tt from './EntPopover_TriggerType'\r\n\r\nclass EntPopoverView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntPopover()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    this.state.ClickRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='popover__wrapper' style={data.WrapperStyle}\r\n          onMouseEnter={data.Trigger === tt.hover ? data.ShowContent : undefined}\r\n          onMouseLeave={data.Trigger === tt.hover ? data.HideContent : undefined}>\r\n          <div className='popover__title__wrapper'\r\n            onClick={data.Trigger === tt.click ? data.ToggleContent : undefined}>\r\n            {data.Title}\r\n          </div>\r\n          {data.Is_Content_Visible ?\r\n            <div className='popover__content__wrapper' ref={data.ClickRef}>\r\n              <div className='popover__content__dec'>\r\n                <div className='popover__content__arrow' />\r\n                {data.Content}\r\n              </div>\r\n            </div>\r\n            : ''}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(EntPopoverView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport * as util from './EntPopoverUtil'\r\nimport EntPopoverView from './EntPopoverView';\r\nimport * as tt from './EntPopover_TriggerType'\r\n\r\nexport class EntPopover {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      is_Content_Visible: observable,\r\n      Trigger: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    } return this._id;\r\n  } set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender) {\r\n      this.titleRender = util.GetDefault_TitleRender(this)\r\n    } return this.titleRender\r\n  } set TitleRender(v) {\r\n    this.titleRender = v;\r\n  }\r\n\r\n  get Title() {\r\n    return this.TitleRender();\r\n  }\r\n\r\n  contentRender\r\n  get ContentRender() {\r\n    if (!this.contentRender) {\r\n      this.contentRender = util.GetDefault_ContentRender(this)\r\n    } return this.contentRender\r\n  } set ContentRender(v) {\r\n    this.contentRender = v;\r\n  }\r\n\r\n  get Content() {\r\n    return this.ContentRender();\r\n  }\r\n\r\n  get WrapperStyle() {\r\n    return this.Is_Content_Visible ?\r\n      { zIndex: 100 } : undefined\r\n  }\r\n\r\n  // Trigger\r\n  Trigger = tt.hover\r\n\r\n  is_Content_Visible = false\r\n  get Is_Content_Visible() {\r\n    return this.is_Content_Visible\r\n  } set Is_Content_Visible(v) {\r\n    if (this.PreSet_Is_Content_Visible) {\r\n      this.PreSet_Is_Content_Visible(v)\r\n    }\r\n\r\n    this.is_Content_Visible = v;\r\n    if (v) {\r\n      this.Init_ClickOutside = true;\r\n      document.addEventListener('click', this.OnClickOutside);\r\n    } else {\r\n      document.removeEventListener('click', this.OnClickOutside);\r\n    }\r\n\r\n    if (this.OnSet_Is_Content_Visible) {\r\n      this.OnSet_Is_Content_Visible(v)\r\n    }\r\n  }\r\n\r\n  ShowContent = () => {\r\n    this.Is_Content_Visible = true\r\n  }\r\n\r\n  HideContent = () => {\r\n    this.Is_Content_Visible = false\r\n  }\r\n\r\n  ToggleContent = () => {\r\n    this.Is_Content_Visible = !this.Is_Content_Visible\r\n  }\r\n\r\n  OnClickOutside = (e) => {\r\n    if (this.Trigger === tt.click) {\r\n      if (this.IsCancel){\r\n        this.IsCancel = false\r\n        return;\r\n      }\r\n      if (this.Init_ClickOutside) {\r\n        this.Init_ClickOutside = false;\r\n        return;\r\n      }\r\n\r\n      if (this.ClickRef) {\r\n        var current = this.ClickRef.current;\r\n        if (!current) return;\r\n\r\n        var target = e.target;\r\n        var isInside = false\r\n        const func = (p, c) => {\r\n          if (p.contains(c)) {\r\n            isInside = true;\r\n          } else {\r\n            Array.from(p.children).forEach(x => func(x, c))\r\n          }\r\n        }\r\n\r\n        func(current, target)\r\n\r\n        if (!isInside) {\r\n          this.Is_Content_Visible = false\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // View\r\n  get View() {\r\n    return <EntPopoverView key={this.id} store={this} />\r\n  }\r\n}","import { Button, Popover } from 'antd'\r\nimport { EntPopover } from './EntPopover'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new EntPopover();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefault_TitleRender = (q) => {\r\n  return () => 'Title'\r\n}\r\n\r\nexport const GetDefault_ContentRender = (q) => {\r\n  return () => 'Content'\r\n}","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../../../util/commandUtil'\r\nimport { EntDelete } from '../../../../../../delete/EntDelete';\r\nimport { Tab } from '../../../../tab/Tab';\r\nimport * as iUtil from '../base/DictVMUtil'\r\nimport { Dict_DictVM } from './Dict_DictVM';\r\nimport * as d_tt from '../../../../../../delete/EntDelete_ToggleType'\r\nimport { PlusCircleOutlined, SaveFilled } from '@ant-design/icons';\r\nimport { Button, message, Popover } from 'antd';\r\nimport { TextVM } from '../../../../../../text/TextVM';\r\nimport InputView from '../../../../../../input/InputView';\r\nimport Modal from 'antd/lib/modal/Modal';\r\nimport * as pct from '../../../../command/ProjectCommand'\r\nimport * as i_ut from '../base/Dict_UseType'\r\nimport * as popoverUtil from '../../../../../../popover/EntPopoverUtil';\r\nimport * as dataItemUtil from '../../item/ItemVMUtil'\r\n\r\n// Instance\r\nexport const get = (q) => {\r\n  var qI = new Dict_DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  q.OnAddData = (v) => qI.AddData(v)\r\n  q.OnSet_Data = (v) => qI.Data = GetData(qI)\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return q.ModelItem.Items.map(x => iUtil.get(x, q));\r\n}\r\n\r\nexport const GetQueryTab = (q) => {\r\n  var qI = new Tab();\r\n\r\n  qI.Items = q.Items;\r\n  qI.TitleRender = (v) => {\r\n    switch (v.UseType) {\r\n      case i_ut.partial:\r\n        return q.CurrentMassType\r\n      case i_ut.all:\r\n        return 'All'\r\n    }\r\n  }\r\n  qI.ContentRender = (v) => v.TableWrapper_View;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDefaultPopover_Render = (q) => {\r\n  return (button) => {\r\n    var qI = popoverUtil.get();\r\n\r\n    qI.Trigger = 'click'\r\n    qI.TitleRender = () => button;\r\n    qI.ContentRender = () => q.View;\r\n\r\n    qI.PreSet_Is_Content_Visible = (v) => {\r\n      if (v) {\r\n        q.Initial();\r\n      }\r\n    }\r\n    qI.OnSet_Is_Content_Visible = (v) => {\r\n      if (!v) {\r\n        q.Refine();\r\n        q.SaveDatabase(false);\r\n      }\r\n    }\r\n\r\n    return qI;\r\n  }\r\n}\r\n\r\nexport const GetView = (q) => {\r\n  return <div className='sg__view__wrapper'>\r\n    {q.QueryTab.View}\r\n  </div>\r\n}\r\n\r\nexport const GetModalView = (q) => {\r\n  var title = 'THIẾT LẬP'\r\n\r\n  const hideVisible = () => {\r\n    q.Is_Modal_Visible = false\r\n  }\r\n\r\n  const modalOK = () => {\r\n    q.Is_Modal_Visible = false\r\n    q.CurrentItem = q.TempCurrentItem\r\n  }\r\n\r\n  return <Modal title={title} visible={q.Is_Modal_Visible}\r\n    width={1000}\r\n    className='msg__modal'\r\n    onCancel={hideVisible}\r\n    footer={\r\n      <>\r\n        <Button type='primary' size='small'\r\n          onClick={modalOK}>ok</Button>\r\n        <Button type='text' size='small'\r\n          onClick={hideVisible}>cancel</Button>\r\n      </>\r\n    }>\r\n    <div>\r\n      {q.View}\r\n    </div>\r\n  </Modal>\r\n}\r\n\r\nexport const GetData = (q) => {\r\n  return q.ModelItem.Data.map(x => dataItemUtil.get(x, q));\r\n}\r\n\r\n// Method\r\nexport const Refine = (q) => {\r\n  // Lấy list trong công tác và field hiện tại\r\n  var list = q.Items[0].Items;\r\n  var removes = []\r\n\r\n  list.forEach((x,i,a) => {\r\n    var name = x.Name;\r\n    if (!name || name.length === 0){\r\n      removes.push(x);\r\n    } else {\r\n      if (i !== a.findIndex(y => y.Name === name)){\r\n        removes.push(x)\r\n      }\r\n    }\r\n  })\r\n\r\n  removes.forEach(x => x.Delete());\r\n}\r\n\r\n","export const login = 'login'\r\nexport const user = 'user'","import * as util from './User_DictVMUtil'\r\nimport * as vt from './User_Dict_ViewType'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../util/generalUtil'\r\n\r\nexport class User_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      viewType: observable\r\n    })\r\n  }\r\n\r\n  get Url() {\r\n    return this.ModelItem.Url\r\n  } set Url(v) {\r\n    this.ModelItem.Url = v;\r\n  }\r\n\r\n  // LoginUser\r\n  OnSet_LoginUser_Func = []\r\n\r\n  loginUser\r\n  get LoginUser() {\r\n    if (!this.loginUser) {\r\n      util.Handle_LoginUser(this)\r\n    } return this.loginUser;\r\n  } set LoginUser(v) {\r\n    this.loginUser = v;\r\n    this.ViewType = util.GetViewType(this)\r\n\r\n    if (this.IsSet_Model) {\r\n      this.ModelItem.LoginUser = v?.ModelItem;\r\n    }else {\r\n      this.IsSet_Model = true;\r\n    }\r\n\r\n    genUtil.Handle(this.OnSet_LoginUser_Func,\r\n      (v) => this.OnSet_LoginUser_Func = v)\r\n  }\r\n\r\n  // Login\r\n  login\r\n  get Login() {\r\n    if (!this.login) {\r\n      this.login = util.GetLogin(this)\r\n    } return this.login;\r\n  }\r\n\r\n  // NewPassword\r\n  newPassword\r\n  get NewPassword() {\r\n    if (!this.newPassword) {\r\n      this.newPassword = util.GetNewPassword(this)\r\n    } return this.newPassword;\r\n  }\r\n\r\n  Logout = () => {\r\n    this.LoginUser = undefined\r\n  }\r\n\r\n  // View\r\n  viewType = undefined;\r\n  get ViewType() {\r\n    if (!this.viewType) {\r\n      util.Handle_ViewType(this)\r\n    } return this.viewType\r\n  } set ViewType(v) {\r\n    this.viewType = v;\r\n  }\r\n\r\n  loginRender\r\n  get LoginRender() {\r\n    if (!this.loginRender) {\r\n      this.loginRender = util.GetDefault_LoginRender(this)\r\n    } return this.loginRender;\r\n  } set LoginRender(v) {\r\n    this.loginRender = v;\r\n  }\r\n\r\n  userRender\r\n  get UserRender() {\r\n    if (!this.userRender) {\r\n      this.userRender = util.GetDefault_UserRender(this)\r\n    } return this.userRender;\r\n  } set UserRender(v) {\r\n    this.userRender = v;\r\n  }\r\n\r\n  mainViewRender\r\n  get MainViewRender() {\r\n    if (!this.mainViewRender) {\r\n      this.mainViewRender = util.GetDefault_MainViewRender(this)\r\n    } return this.mainViewRender\r\n  } set MainViewRender(v) {\r\n    this.mainViewRender = v;\r\n  }\r\n\r\n  get MainView() {\r\n    return this.MainViewRender();\r\n  }\r\n\r\n  modalViewRender\r\n  get ModalViewRender() {\r\n    if (!this.modalViewRender) {\r\n      this.modalViewRender = util.GetDefault_ModalViewRender(this)\r\n    } return this.modalViewRender\r\n  } set ModalViewRender(v) {\r\n    this.modalViewRender = v;\r\n  }\r\n\r\n  get ModalView() {\r\n    return this.ModalViewRender();\r\n  }\r\n\r\n  viewRender\r\n  get ViewRender() {\r\n    if (!this.viewRender) {\r\n      this.viewRender = util.GetDefault_ViewRender(this)\r\n    } return this.viewRender\r\n  } set ViewRender(v) {\r\n    this.viewRender = v;\r\n  }\r\n\r\n  get View() {\r\n    return this.ViewRender();\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from '../../text/TextRenderState';\r\nimport * as editTextUtil from '../../text/EditableTextVMUtil';\r\nimport EditableTextView from '../../text/EditableTextView';\r\nimport * as genUtil from '../../../util/generalUtil'\r\n\r\nexport class UserVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      renderState: observable,\r\n    })\r\n  }\r\n  \r\n  get id(){\r\n    return this.ModelItem.id\r\n  }\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n    this.UsernameVM.RenderState = v;\r\n    // this.DescriptionVM.RenderState = v;\r\n\r\n    if (this.OnSet_RenderState){\r\n      this.OnSet_RenderState(v)\r\n    }\r\n\r\n    if (!this.IsSaveDatabase){\r\n      this.IsSaveDatabase = true\r\n    } else if (v === rs._default) {\r\n      this.SaveDatabase(false);\r\n    }\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.RenderState === rs._default) {\r\n      this.RenderState = rs.edit\r\n      this.Hide_Tool();\r\n    }\r\n  }\r\n\r\n  // UserName\r\n  get Username(){\r\n    return this.ModelItem.Username\r\n  } set Username(v){\r\n    this.ModelItem.Username = v;\r\n  }\r\n\r\n  usernameVM\r\n  get UsernameVM() {\r\n    if (!this.usernameVM) {\r\n      var obj = this.usernameVM = editTextUtil.get(this.Username, this.CanEdit);\r\n\r\n      obj.Is_Tool_Visible = false\r\n      // obj.OnKeyDown = (e) => {\r\n      //   var { key, value } = inputUtil.Get_Shortcut(e);\r\n      //   switch (key) {\r\n      //     case inputUtil.enter:\r\n      //       this.RenderState = rs._default\r\n      //       break;\r\n      //   }\r\n      // }\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Username = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.usernameVM;\r\n  }\r\n\r\n  get UsernameView() {\r\n    return <EditableTextView store={this.UsernameVM} />\r\n  }\r\n\r\n  // Name\r\n  get Name(){\r\n    return this.ModelItem.Name\r\n  } set Name(v){\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  // Save\r\n  IsSaveDatabase = true\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle, false);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  // Tool\r\n  Show_Tool() {\r\n   \r\n  }\r\n\r\n  Hide_Tool() {\r\n    \r\n  }\r\n}","import { UserVM } from \"./UserVM\"\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  \r\n  var qI = new UserVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}","import { message } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport { TextVM } from '../../text/TextVM'\r\nimport * as util from './LoginUtil'\r\n\r\nexport class Login {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_Modal_Visible: observable\r\n    })\r\n  }\r\n\r\n  Username = ''\r\n\r\n  usernameVM\r\n  get UsernameVM(){\r\n    if (!this.usernameVM){\r\n      this.usernameVM = util.GetUsernameVM(this)\r\n    } return this.usernameVM;\r\n  }\r\n\r\n  Password\r\n\r\n  passwordVM\r\n  get PasswordVM(){\r\n    if (!this.passwordVM){\r\n      this.passwordVM = util.GetPasswordVM(this)\r\n    } return this.passwordVM;\r\n  }\r\n\r\n  get ApiData(){\r\n    return {\r\n      username : this.Username,\r\n      password: this.Password\r\n    }\r\n  }\r\n\r\n  Is_Modal_Visible = false\r\n\r\n  get ButtonView(){\r\n    return util.GetButtonView(this)\r\n  }\r\n\r\n  get MainView(){\r\n    return util.GetMainView(this)\r\n  }\r\n  \r\n  get ModalView(){\r\n    return util.GetModalView(this)\r\n  }\r\n\r\n  ModalOK = () => {\r\n    var username = this.Username;\r\n    var pw = this.Password;\r\n    if (!username || username.length === 0){\r\n      message.warn('Bạn phải nhập UserName!');\r\n      return;\r\n    }\r\n    if (!pw || pw.length === 0){\r\n      message.warn('Bạn phải nhập Password!');\r\n      return;\r\n    }\r\n\r\n    this.Validate();\r\n  }\r\n\r\n  Initial = () => {\r\n    this.UsernameVM.Content = ''\r\n    this.PasswordVM.Content = ''\r\n  }\r\n\r\n  Validate = () => {\r\n    util.Validate(this)\r\n  }\r\n}","import { TextVM } from \"../../text/TextVM\";\r\nimport * as ts from '../../text/TextState'\r\nimport { Login } from \"./Login\"\r\nimport InputView from \"../../input/InputView\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { Button, message } from 'antd';\r\nimport './Login.css'\r\nimport * as uUtil from '../item/UserUtil'\r\nimport * as uVMUtil from '../item/UserVMUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Login();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetUsernameVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.Placeholder = 'tên user'\r\n  qI.Content = q.Username;\r\n  qI.onSetContent = (v) => q.Username = v;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.Password;\r\n  qI.onSetContent = (v) => q.Password = v;\r\n\r\n  return qI;\r\n}\r\n\r\n// View\r\nexport const GetButtonView = (q) => {\r\n  var click = () => {\r\n    q.Initial();\r\n    q.Is_Modal_Visible = true\r\n  }\r\n\r\n  return <Button type='primary' size='small'\r\n    onClick={click}>\r\n    Login\r\n  </Button>\r\n}\r\n\r\nexport const GetMainView = (q) => {\r\n  return <table className='login__table'>\r\n    <tbody>\r\n      <tr className='login__tr name'>\r\n        <th className='login__title'>\r\n          Username:\r\n        </th>\r\n        <td className='login__input'>\r\n          <InputView store={q.UsernameVM} />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='login__title'>\r\n          Password:\r\n        </th>\r\n        <td className='login__input'>\r\n          <InputView store={q.PasswordVM} />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n}\r\n\r\nexport const GetModalView = (q) => {\r\n  const hideVisible = () => {\r\n    q.Is_Modal_Visible = false\r\n  }\r\n\r\n  return <Modal title=\"Đăng nhập\" visible={q.Is_Modal_Visible}\r\n    onCancel={hideVisible}\r\n    width={350}\r\n    footer={\r\n      <>\r\n        <Button type='primary' size='small'\r\n          onClick={q.ModalOK}>ok</Button>\r\n        <Button type='text' size='small'\r\n          onClick={hideVisible}>cancel</Button>\r\n      </>\r\n    }>\r\n    <div>\r\n      {q.MainView}\r\n    </div>\r\n  </Modal>\r\n}\r\n\r\n// Method\r\nexport const Validate = (q) => {\r\n  var dictVM = q.Dict;\r\n  var dict = dictVM.ModelItem;\r\n\r\n  const setObj = (data) => {\r\n    if (data.length !== 0) {\r\n      dictVM.LoginUser = uVMUtil.get(uUtil.GetFromDb(data[0], dict), dictVM);\r\n      q.Is_Modal_Visible = false;\r\n    } else {\r\n      message.warn('Thông tin đăng nhập không đúng!')\r\n    }\r\n  }\r\n\r\n  uUtil.GetData(dictVM.Url, q.ApiData, (data) => {\r\n    setObj(data)\r\n  });\r\n}","import { message } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport { TextVM } from '../../text/TextVM'\r\nimport * as util from './NewPasswordUtil'\r\n\r\nexport class NewPassword {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_Modal_Visible: observable\r\n    })\r\n  }\r\n\r\n  OldPassword\r\n\r\n  oldPasswordVM\r\n  get OldPasswordVM(){\r\n    if (!this.oldPasswordVM){\r\n      this.oldPasswordVM = util.GetOldPasswordVM(this)\r\n    } return this.oldPasswordVM;\r\n  }\r\n\r\n  NewPassword\r\n\r\n  newPasswordVM\r\n  get NewPasswordVM(){\r\n    if (!this.newPasswordVM){\r\n      this.newPasswordVM = util.GetNewPasswordVM(this)\r\n    } return this.newPasswordVM;\r\n  }\r\n\r\n  ReNewPassword\r\n\r\n  reNewPasswordVM\r\n  get ReNewPasswordVM(){\r\n    if (!this.reNewPasswordVM){\r\n      this.reNewPasswordVM = util.GetReNewPasswordVM(this)\r\n    } return this.reNewPasswordVM;\r\n  }\r\n\r\n  get ApiData(){\r\n    var obj = {\r\n      _id : this.User.ModelItem?._id,\r\n      oldpassword: this.OldPassword,\r\n      newpassword : this.NewPassword\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  get User(){\r\n    return this.Dict.LoginUser\r\n  }\r\n\r\n  Is_Modal_Visible = false\r\n\r\n  get ButtonView(){\r\n    return util.GetButtonView(this)\r\n  }\r\n\r\n  get MainView(){\r\n    return util.GetMainView(this)\r\n  }\r\n  \r\n  get ModalView(){\r\n    return util.GetModalView(this)\r\n  }\r\n\r\n  ModalOK = () => {\r\n    var opw = this.OldPassword;\r\n    var npw = this.NewPassword\r\n    var rnpw = this.ReNewPassword;\r\n    if (!opw || opw.length === 0){\r\n      message.warn('Bạn phải nhập Password cũ!');\r\n      return;\r\n    }\r\n    if (!npw || npw.length === 0){\r\n      message.warn('Bạn phải nhập Password mới!');\r\n      return;\r\n    }\r\n    if (opw === npw){\r\n      message.warn('Password mới bị trùng với password cũ!');\r\n      return;\r\n    }\r\n    if (rnpw !== npw){\r\n      message.warn('Thông tin nhập lại Password mới không đúng!');\r\n      return;\r\n    }\r\n\r\n    this.Validate();\r\n  }\r\n\r\n  OpenModal = () => {\r\n    this.Initial();\r\n    this.Is_Modal_Visible = true\r\n  }\r\n\r\n  Initial = () => {\r\n    this.OldPasswordVM.Content = ''\r\n    this.NewPasswordVM.Content = ''\r\n    this.ReNewPasswordVM.Content = ''\r\n  }\r\n\r\n  Validate = () => {\r\n    util.Validate(this)\r\n  }\r\n}","import { TextVM } from \"../../text/TextVM\";\r\nimport * as ts from '../../text/TextState'\r\nimport { NewPassword } from \"./NewPassword\"\r\nimport InputView from \"../../input/InputView\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { Button, message } from 'antd';\r\nimport './NewPassword.css'\r\nimport * as api from '../../../util/apiUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new NewPassword();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetOldPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.OldPassword;\r\n  qI.onSetContent = (v) => q.OldPassword = v;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetNewPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.NewPassword;\r\n  qI.onSetContent = (v) => q.NewPassword = v;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetReNewPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.ReNewPassword;\r\n  qI.onSetContent = (v) => q.ReNewPassword = v;\r\n\r\n  return qI;\r\n}\r\n\r\n// View\r\nexport const GetButtonView = (q) => {\r\n  var click = () => {\r\n    q.OpenModal();\r\n  }\r\n\r\n  return <Button type='primary' size='small'\r\n    onClick={click}>\r\n    New Password\r\n  </Button>\r\n}\r\n\r\nexport const GetMainView = (q) => {\r\n  return <table className='newpassword__table'>\r\n    <tbody>\r\n      <tr className='newpassword__tr name'>\r\n        <th className='newpassword__title'>\r\n          Username:\r\n        </th>\r\n        <td className='newpassword__input'>\r\n          <b>\r\n            {q.User?.Username}\r\n          </b>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='newpassword__title'>\r\n          OldPassword:\r\n        </th>\r\n        <td className='newpassword__input'>\r\n          <InputView store={q.OldPasswordVM} />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='newpassword__title'>\r\n          NewPassword:\r\n        </th>\r\n        <td className='newpassword__input'>\r\n          <InputView store={q.NewPasswordVM} />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='login__title'>\r\n          Re-NewPassword:\r\n        </th>\r\n        <td className='login__input'>\r\n          <InputView store={q.ReNewPasswordVM} />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n}\r\n\r\nexport const GetModalView = (q) => {\r\n  const hideVisible = () => {\r\n    q.Is_Modal_Visible = false\r\n  }\r\n\r\n  return <Modal title=\"Đổi mật khẩu\" visible={q.Is_Modal_Visible}\r\n    onCancel={hideVisible}\r\n    width={400}\r\n    footer={\r\n      <>\r\n        <Button type='primary' size='small'\r\n          onClick={q.ModalOK}>ok</Button>\r\n        <Button type='text' size='small'\r\n          onClick={hideVisible}>cancel</Button>\r\n      </>\r\n    }>\r\n    <div>\r\n      {q.MainView}\r\n    </div>\r\n  </Modal>\r\n}\r\n\r\n// Method\r\nexport const Validate = (q) => {\r\n  var dictVM = q.Dict;\r\n  var dict = dictVM.ModelItem;\r\n\r\n  const setObj = (data) => {\r\n    if (data === 'wrongpassword'){\r\n      message.warn('Password cũ không đúng!');\r\n    }else if (data.length !== 0) {\r\n      q.Is_Modal_Visible = false;\r\n      message.success('change password successfully!');\r\n      q.Dict.LoginUser = undefined\r\n    }\r\n  }\r\n\r\n  const apiFunc = () => api.put(`${dictVM.Url}/newpassword`, q.ApiData);\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      setObj(data)\r\n    })\r\n}","import { User_DictVM } from \"./User_DictVM\";\r\nimport * as iUtil from '../item/UserVMUtil'\r\nimport * as loginUtil from '../login/LoginUtil'\r\nimport * as newpasswordUtil from '../newpassword/NewPasswordUtil'\r\nimport * as vt from './User_Dict_ViewType'\r\nimport './User_Dict.css'\r\nimport { Button, message } from 'antd';\r\nimport * as genUtil from '../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new User_DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_LoginUser = (q) => {\r\n  if (q.IsGet_LoginUser) return undefined;\r\n  q.IsGet_LoginUser = true;\r\n\r\n  const setObj = (data) => {\r\n    q.IsSet_Model = false\r\n    q.LoginUser = data ? iUtil.get(data, q) : undefined\r\n    q.IsGet_LoginUser = true;\r\n  }\r\n\r\n  var host = q.ModelItem;\r\n  genUtil.Add_2(host.OnSet_LoginUser_Func,\r\n    () => setObj(host.LoginUser))\r\n  var q1 = host.LoginUser;\r\n}\r\n\r\nexport const GetLogin = (q) => {\r\n  return loginUtil.get(q);\r\n}\r\n\r\nexport const GetNewPassword = (q) => {\r\n  return newpasswordUtil.get(q)\r\n}\r\n\r\nexport const Handle_ViewType = (q) => {\r\n  if (q.IsGet_ViewType) return undefined;\r\n  q.IsGet_ViewType = true;\r\n\r\n  const setObj = () => {\r\n    q.ViewType = GetViewType(q)\r\n    q.IsGet_ViewType = false;\r\n  }\r\n\r\n  if (q.LoginUser) {\r\n    setObj();\r\n  } else {\r\n    genUtil.Add_2(\r\n      q.OnSet_LoginUser_Func,\r\n      setObj\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetViewType = (q) => {\r\n  return q.LoginUser ? vt.user : vt.login\r\n}\r\n\r\nexport const GetDefault_LoginRender = (q) => {\r\n  return () => q.Login.ButtonView;\r\n}\r\n\r\nexport const GetDefault_UserRender = (q) => {\r\n  return () => <>\r\n    <div className='f-ac'>\r\n      <div className='ud__username'\r\n        onClick={q.NewPassword.OpenModal}>\r\n        <b>{q.LoginUser.Username}</b>\r\n      </div>\r\n      <Button type='primary' size='small'\r\n        className='btn-danger ud__logout'\r\n        onClick={q.Logout}>\r\n        x\r\n      </Button>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport const GetDefault_MainViewRender = (q) => {\r\n  return () => {\r\n    switch (q.ViewType) {\r\n      case vt.login:\r\n        return q.LoginRender()\r\n      case vt.user:\r\n        return q.UserRender();\r\n      default:\r\n        return ''\r\n    }\r\n    // q.ViewType === vt.login ?\r\n    //   q.LoginRender() : q.UserRender();\r\n  }\r\n}\r\n\r\nexport const GetDefault_ModalViewRender = (q) => {\r\n  return () => <>\r\n    {q.Login.ModalView}\r\n    {q.NewPassword.ModalView}\r\n  </>\r\n}\r\n\r\nexport const GetDefault_ViewRender = (q) => {\r\n  return () => <div>\r\n    <div className='ud__main__wrapper'>\r\n      {q.MainView}\r\n    </div>\r\n    {q.ModalView}\r\n  </div>\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './AdminVMUtil'\r\n\r\nexport class AdminVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  // Users\r\n  OnSet_Users_Func = []\r\n\r\n  users\r\n  get Users(){\r\n    if (!this.users){\r\n      util.Handle_Users(this)\r\n    } return this.users\r\n  } set Users(v){\r\n    this.users = v;\r\n    genUtil.Handle(this.OnSet_Users_Func,\r\n      (v) => this.OnSet_Users_Func = v)\r\n  }\r\n\r\n  // Projects\r\n  OnSet_Projects_Func = []\r\n\r\n  projects\r\n  get Projects(){\r\n    if (!this.projects){\r\n      util.Handle_Projects(this)\r\n    } return this.projects\r\n  } set Projects(v){\r\n    this.projects = v;\r\n    genUtil.Handle(this.OnSet_Projects_Func,\r\n      (v) => this.OnSet_Projects_Func = v)\r\n  }\r\n\r\n  // Dict\r\n  userManager_Dict\r\n  get UserManager_Dict(){\r\n    if (!this.userManager_Dict){\r\n      this.userManager_Dict = util.GetUserManager_Dict(this)\r\n    } return this.userManager_Dict;\r\n  }\r\n\r\n  projectCommand_Dict\r\n  get ProjectCommand_Dict(){\r\n    if (!this.projectCommand_Dict){\r\n      this.projectCommand_Dict = util.GetProjectCommand_Dict(this)\r\n    } return this.projectCommand_Dict\r\n  }\r\n\r\n  projectGroupCommand_Dict\r\n  get ProjectGroupCommand_Dict(){\r\n    if (!this.projectGroupCommand_Dict){\r\n      this.projectGroupCommand_Dict = \r\n        util.GetProjectGroupCommand_Dict(this)\r\n    } return this.projectGroupCommand_Dict\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Table.css'\r\nimport { DictVM } from '../dict/DictVM';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='admin__um__table'>\r\n          <thead className='admin__um__thead'>\r\n            <tr>\r\n              <th className='admin__um__table__username'>Username</th>\r\n              <th className='admin__um__table__password'>Password</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className='admin__um__tbody'>\r\n            {data.Items?.map(x => {\r\n              return data.ItemRender(x)\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictVMUtil'\r\nimport { Button, message } from 'antd';\r\nimport TableView from '../table/TableView';\r\nimport './Dict.css'\r\nimport { SaveFilled } from '@ant-design/icons';\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Items\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  AddItem = () => {\r\n    var i = this.ModelItem.Dict.GetUser_Func()\r\n    this.ModelItem.Items.push(i);\r\n\r\n    var iVM = this.GetItem_Func(i);\r\n    this.Items.push(iVM);\r\n  }\r\n\r\n  getItem_Func\r\n  get GetItem_Func(){\r\n    if(!this.getItem_Func){\r\n      this.getItem_Func = util.GetGetItem_Func(this)\r\n    } return this.getItem_Func\r\n  }\r\n\r\n  itemRender\r\n  get ItemRender(){\r\n    if (!this.itemRender){\r\n      this.itemRender = util.GetDefault_ItemRender(this)\r\n    } return this.itemRender;\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get MainView() {\r\n    return <div>\r\n      <div className='f-jc admin__um__title'>\r\n        <span>QUẢN LÝ NGƯỜI DÙNG</span>\r\n      </div>\r\n      <div className='f'>\r\n        <div className='admin__um__add'>\r\n          <Button type='primary' size='small'\r\n            className='btn-success'\r\n            onClick={this.AddItem}>+</Button>\r\n        </div>\r\n        <div className='es__main f1'>\r\n          <TableView store={this} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { DictVM } from \"./DictVM\";\r\nimport * as iUtil from '../../../../../user/item/UserVMUtil'\r\nimport './Dict.css'\r\nimport { Button } from 'antd';\r\nimport * as editTextUtil from '../../../../../text/EditableTextVMUtil';\r\nimport EditableTextView from '../../../../../text/EditableTextView';\r\nimport * as rs from '../../../../../text/TextRenderState';\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => {\r\n      return q.GetItem_Func(x);\r\n    });\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}\r\n\r\nexport const GetDefault_ItemRender = (q) => {\r\n  return (v) => <tr key={v.id} onDoubleClick={v.Edit}>\r\n    <td>\r\n      <div className='admin__um__username'>\r\n        {v.UsernameView}\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div className='admin__um__password f-ac'>\r\n        <div className='f1'>\r\n          {v.PasswordView}\r\n        </div>\r\n        {v.ToolView_Render()}\r\n      </div>\r\n    </td>\r\n  </tr>\r\n}\r\n\r\nexport const GetGetItem_Func = (q) => {\r\n  return (x) => {\r\n    var qI = iUtil.get(x, q)\r\n\r\n    var q1 = qI.PasswordVM = editTextUtil.get('', undefined);\r\n    q1.Is_Tool_Visible = false\r\n    qI.OnSet_RenderState = (v) => {\r\n      q1.RenderState = v\r\n    }\r\n\r\n    genUtil.Add(\r\n      q1.OnSet_RenderState_Func_Dict,\r\n      () => {\r\n        if (q1.RenderState === rs._default) {\r\n          x.Password = q1.Content;\r\n          q1.Content = ''\r\n        }\r\n      },\r\n      false\r\n    )\r\n    qI.PasswordView = <EditableTextView store={q1} />\r\n\r\n    const ok = () => {\r\n      // qI.IsSaveDatabase = false\r\n      qI.RenderState = rs._default\r\n    }\r\n    const cancel = () => {\r\n      qI.UsernameVM.Content = qI.Username;\r\n      qI.PasswordVM.Content = ''\r\n      qI.IsSaveDatabase = false\r\n      qI.RenderState = rs._default\r\n    }\r\n\r\n    qI.ToolView_Render = () => <div className='f'>\r\n      {qI.RenderState === rs.edit ?\r\n        <>\r\n          <Button type='primary' size='small'\r\n            onClick={ok}>ok</Button>\r\n          <Button type='primary' size='small'\r\n            onClick={cancel}>cancel</Button>\r\n        </>\r\n        : ''}\r\n      <Button type='primary' size='small'\r\n        className='btn-danger'\r\n        onClick={qI.Delete}>x</Button>\r\n    </div>\r\n\r\n    return qI;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './ItemVMUtil'\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport './Item.css'\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport TextView from '../../../../../text/TextView';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\n\r\nexport class ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      renderState : observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  get projectId() {\r\n    return this.ModelItem.projectId;\r\n  }\r\n\r\n  renderState = rs.edit\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.RenderState === rs._default) {\r\n      this.RenderState = rs.edit\r\n      this.Hide_Tool();\r\n    }\r\n  }\r\n\r\n  // Project\r\n  get Project() {\r\n    return this.ModelItem.Project;\r\n  } set Project(v) {\r\n    this.ModelItem.Project = v;\r\n    this.Project_Render.Content = v?.Name;\r\n  }\r\n\r\n  project_Render\r\n  get Project_Render() {\r\n    if (!this.project_Render) {\r\n      this.project_Render = util.GetProject_Render(this)\r\n    } return this.project_Render\r\n  }\r\n\r\n  project_Select\r\n  get Project_Select() {\r\n    if (!this.project_Select) {\r\n      this.project_Select = util.GetProject_Select(this)\r\n    } return this.project_Select\r\n  }\r\n\r\n  get Project_View() {\r\n    switch (this.RenderState) {\r\n      case rs._default:\r\n        return <TextView store={this.Project_Render} />\r\n      case rs.edit:\r\n        return <SelectView store={this.Project_Select} />\r\n    }\r\n  }\r\n\r\n  // User\r\n  get User() {\r\n    return this.ModelItem.User;\r\n  } set User(v) {\r\n    this.ModelItem.User = v;\r\n    this.User_Render.Content = v?.Username;\r\n  }\r\n\r\n  user_Render\r\n  get User_Render() {\r\n    if (!this.user_Render) {\r\n      this.user_Render = util.GetUser_Render(this)\r\n    } return this.user_Render\r\n  }\r\n\r\n  user_Select\r\n  get User_Select() {\r\n    if (!this.user_Select) {\r\n      this.user_Select = util.GetUser_Select(this)\r\n    } return this.user_Select\r\n  }\r\n\r\n  get User_View() {\r\n    switch (this.RenderState) {\r\n      case rs._default:\r\n        return <TextView store={this.User_Render} />\r\n      case rs.edit:\r\n        return <SelectView store={this.User_Select} />\r\n    }\r\n  }\r\n\r\n  // Commands\r\n  get Commands(){\r\n    return this.ModelItem.Commands\r\n  } set Commands(v){\r\n    this.ModelItem.Commands = v;\r\n  }\r\n\r\n  command_Select\r\n  get Command_Select(){\r\n    if (!this.command_Select){\r\n      this.command_Select = util.GetCommand_Select(this)\r\n    } return this.command_Select\r\n  }\r\n\r\n  get Command_View() {\r\n    return <MultiSelectView store={this.Command_Select}/>\r\n  }\r\n\r\n  // Hover\r\n  OnMouseEnter = () => {\r\n    if (this.RenderState === rs.edit) {\r\n      return;\r\n    }\r\n    this.Show_Tool();\r\n  }\r\n\r\n  OnMouseLeave = () => {\r\n    this.Hide_Tool();\r\n  }\r\n\r\n  Show_Tool() {\r\n    this.DeleteVM.Show();\r\n  }\r\n\r\n  Hide_Tool() {\r\n    this.DeleteVM.Hide();\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle, false);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Group.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n}","import { GroupVM } from \"./GroupVM\"\r\nimport { SelectVM } from '../../../../../select/SelectVM';\r\nimport { TextVM } from '../../../../../text/TextVM';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { EntDelete } from \"../../../../../delete/EntDelete\";\r\nimport * as d_tt from '../../../../../delete/EntDelete_ToggleType'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new GroupVM();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetProject_Render = (q) => {\r\n  var qI = new TextVM();\r\n  qI.Content = q.Project?.Name;\r\n  return qI;\r\n}\r\n\r\nexport const GetProject_Select = (q) => {\r\n  var qI = new SelectVM();\r\n  qI.TitleRender = (v) => v.Name;\r\n  qI.Placeholder = 'chọn dự án ...'\r\n  qI.OnSelectedItemChanged = (v) => {\r\n    q.Project = v;\r\n  }\r\n\r\n  const setObj = (data) => {\r\n    qI.Items = data\r\n    qI.InitialItem = q.Project;\r\n  }\r\n\r\n  var host = q.Dict.Dict\r\n  if (host.Projects) {\r\n    setObj(host.Projects)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Projects_Func,\r\n      () => setObj(host.Projects)\r\n    )\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.manual\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './GroupVMUtil'\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport TextView from '../../../../../text/TextView';\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { Button, message } from 'antd';\r\nimport * as iVMUtil from '../item/ItemVMUtil'\r\nimport * as iUtil from '../item/ItemUtil'\r\nimport './Group.css'\r\n\r\nexport class GroupVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Items: observable,\r\n    })\r\n  }\r\n\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  renderState = rs.edit\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n  }\r\n\r\n  get Key() {\r\n    return this.Project;\r\n  }\r\n\r\n  // Project\r\n  project\r\n  get Project() {\r\n    return this.project;\r\n  } set Project(v) {\r\n    this.project = v;\r\n    this.Project_Render.Content = v?.Name;\r\n  }\r\n\r\n  project_Render\r\n  get Project_Render() {\r\n    if (!this.project_Render) {\r\n      this.project_Render = util.GetProject_Render(this)\r\n    } return this.project_Render\r\n  }\r\n\r\n  project_Select\r\n  get Project_Select() {\r\n    if (!this.project_Select) {\r\n      this.project_Select = util.GetProject_Select(this)\r\n    } return this.project_Select\r\n  }\r\n\r\n  get Project_View() {\r\n    switch (this.RenderState) {\r\n      case rs._default:\r\n        return <TextView store={this.Project_Render} />\r\n      case rs.edit:\r\n        return <SelectView store={this.Project_Select} />\r\n    }\r\n  }\r\n\r\n  // Item\r\n  Items = []\r\n\r\n  AddItem = () => {\r\n    var itemDict = this.Dict.ModelItem;\r\n    var i = iUtil.get(itemDict);\r\n    i.Project = this.Project;\r\n    itemDict.Items.push(i);\r\n\r\n    var ivm = iVMUtil.get(i, this);\r\n    this.Items.push(ivm);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Groups\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.Items.forEach(x => {\r\n      x.Delete();\r\n    })\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  // Row\r\n  get RowView() {\r\n    return <tr key={this.id}>\r\n      <td className='admin__pc__group__project'>\r\n        <div className='f-ac'>\r\n          {this.Project_View}\r\n          <Button type='primary' size='small'\r\n            className='btn-danger'\r\n            onClick={this.Delete} >x</Button>\r\n        </div>\r\n      </td>\r\n      <td className='admin__pc__group__usergroup'>\r\n        <div className='f'>\r\n          <div className='admin__pc__group__add'>\r\n            <Button type='primary' size='small'\r\n              className='btn-success'\r\n              onClick={this.AddItem}>+</Button>\r\n          </div>\r\n          <div className='f1'>\r\n            <table className='admin__pc__group__authorize__table'>\r\n              <tbody>\r\n                {this.Items?.map(x => {\r\n                  return <tr key={x.id}>\r\n                    <td className='admin__pc__group__user'>{x.User_View}</td>\r\n                    <td className='admin__pc__group__command'>{x.Command_View}</td>\r\n                    <td>\r\n                      <Button type='primary' size='small'\r\n                        className='btn-danger'\r\n                        onClick={x.Delete} >x</Button>\r\n                    </td>\r\n                  </tr>\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { ItemVM } from './ItemVM'\r\nimport { EntDelete } from '../../../../../delete/EntDelete';\r\nimport * as d_tt from '../../../../../delete/EntDelete_ToggleType'\r\nimport { Button, message } from 'antd';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, SaveFilled } from '@ant-design/icons';\r\nimport { SelectVM } from '../../../../../select/SelectVM';\r\nimport { TextVM } from '../../../../../text/TextVM';\r\nimport { GroupVM } from '../group/GroupVM';\r\nimport * as pc from '../../../command/ProjectCommand'\r\nimport { MultiSelectVM } from '../../../../../select/MultiSelectVM';\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ItemVM();\r\n\r\n  qI.ModelItem = q;\r\n  if (dict instanceof GroupVM) {\r\n    qI.Group = dict;\r\n    qI.Dict = dict.Dict;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.manual\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\n// Project\r\nexport const GetProject_Render = (q) => {\r\n  var qI = new TextVM();\r\n  qI.Content = q.Project?.Name;\r\n  return qI;\r\n}\r\n\r\nexport const GetProject_Select = (q) => {\r\n  var qI = new SelectVM();\r\n  qI.TitleRender = (v) => v.Name;\r\n  qI.Placeholder = 'chọn dự án ...'\r\n  qI.OnSelectedItemChanged = (v) => {\r\n    q.Project = v;\r\n  }\r\n\r\n  const setObj = (data) => {\r\n    qI.Items = data\r\n    qI.InitialItem = q.Project;\r\n  }\r\n\r\n  var host = q.Dict.Dict\r\n  if (host.Projects) {\r\n    setObj(host.Projects)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Projects_Func,\r\n      () => setObj(host.Projects)\r\n    )\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\n// User\r\nexport const GetUser_Render = (q) => {\r\n  var qI = new TextVM();\r\n  qI.Content = q.User?.Username;\r\n  return qI;\r\n}\r\n\r\nexport const GetUser_Select = (q) => {\r\n  var qI = new SelectVM();\r\n  qI.Placeholder = 'chọn user ...'\r\n  qI.TitleRender = (v) => v.Username;\r\n  qI.OnSelectedItemChanged = (v) => {\r\n    q.User = v;\r\n  }\r\n\r\n  const setList = (data) => {\r\n    qI.Items = data\r\n  }\r\n\r\n  const setSelect = (data) => {\r\n    qI.InitialItem = data;\r\n  }\r\n\r\n  var host = q.Dict.Dict\r\n  if (host.Users) {\r\n    setList(host.Users)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Users_Func,\r\n      () => {\r\n        setList(host.Users)\r\n      }\r\n    )\r\n  }\r\n\r\n  var host2 = q.ModelItem\r\n  if (host2.User !== undefined) {\r\n    setSelect(host2.User)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host2.OnSet_User_Func,\r\n      () => setSelect(host2.User)\r\n    )\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\n// Command\r\nexport const GetCommand_Select = (q) => {\r\n  var qI = new MultiSelectVM();\r\n\r\n  qI.Items = pc.GetList();\r\n  qI.InitialItems = q.Commands;\r\n  qI.Placeholder = 'commands ...'\r\n  qI.OnSelectedItemChanged = (v) => {\r\n    q.Commands = v;\r\n  }\r\n\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { GroupVM } from '../group/GroupVM';\r\n\r\nclass TableItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new GroupVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.RowView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableItemView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Table.css'\r\nimport TableItemView from './TableItemView';\r\nimport { DictVM } from '../dict/DictVM';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='admin__pc__table'>\r\n          <thead className='admin__pc__thead'>\r\n            <tr>\r\n              <th className='admin__pc__table__project'>Dự án</th>\r\n              <th className='admin__pc__table__authorize'>Phân quyền</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className='admin__pc__tbody'>\r\n            {data.Groups?.map(x => {\r\n              return <TableItemView key={x.id} store={x} />\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictVMUtil'\r\nimport * as iUtil from '../item/ItemVMUtil'\r\nimport * as gUtil from '../group/GroupVMUtil'\r\nimport { Button, message } from 'antd';\r\nimport TableView from '../table/TableView';\r\nimport './Dict.css'\r\nimport { SaveFilled } from '@ant-design/icons';\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      groups: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Group\r\n  groups = undefined\r\n  get Groups() {\r\n    if (!this.groups) {\r\n      util.Handle_Groups(this)\r\n    } return this.groups\r\n  } set Groups(v) {\r\n    this.groups = v;\r\n  }\r\n\r\n  AddGroup = () => {\r\n    this.Groups.push(gUtil.get(this));\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get MainView() {\r\n    return <div>\r\n      <div className='f-jc admin__pc__title'>\r\n        <span>PHÂN QUYỀN DỰ ÁN</span>\r\n      </div>\r\n      <div className='f'>\r\n        <div className='admin__pc__add'>\r\n          <Button type='primary' size='small'\r\n            className='btn-success'\r\n            onClick={this.AddGroup}>+</Button>\r\n          <Button type='primary' size='small'\r\n            className='btn-success'\r\n            onClick={this.Save}>\r\n            <SaveFilled />\r\n          </Button>\r\n        </div>\r\n        <div className='es__main f1'>\r\n          <TableView store={this} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  // Refine\r\n  Refine = () => {\r\n    // filter groups\r\n    var removeItems = []\r\n    this.Groups.forEach((x, i, a) => {\r\n      if (!x.Project || x.Items.length === 0\r\n        || a.findIndex(y => y.Project === x.Project) !== i) {\r\n        removeItems.push(x);\r\n      }\r\n    })\r\n\r\n    removeItems.forEach(x => {\r\n      x.Delete();\r\n    })\r\n\r\n    // filter user\r\n    this.Groups.forEach(x => {\r\n      removeItems = []\r\n      x.Items.forEach((y, i, a) => {\r\n        if (!y.User || y.Commands.length === 0\r\n          || a.findIndex(z => z.User === y.User) !== i) {\r\n          removeItems.push(y);\r\n        }\r\n      })\r\n\r\n      removeItems.forEach(y => {\r\n        y.Delete();\r\n      })\r\n    })\r\n\r\n    // sau khi refine user, refine group 1 lần nữa Items === 0\r\n    removeItems = []\r\n    this.Groups.forEach((x, i, a) => {\r\n      if (x.Items.length === 0) {\r\n        removeItems.push(x);\r\n      }\r\n    })\r\n\r\n    removeItems.forEach(x => {\r\n      x.Delete();\r\n    })\r\n  }\r\n\r\n  // Save\r\n  Save = () => {\r\n    this.Refine();\r\n    this.ModelItem.Save();\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { DictVM } from \"./DictVM\";\r\nimport * as iUtil from '../item/ItemVMUtil'\r\nimport './Dict.css'\r\nimport * as gUtil from '../group/GroupVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Groups = (q) => {\r\n  if (q.IsGet_Groups) return undefined;\r\n  q.IsGet_Groups = true;\r\n\r\n  const setObj = (data) => {\r\n    const mainFunc = () => {\r\n      q.Groups = genUtil.GroupBy(data, 'Project',\r\n        (key) => {\r\n          var qI = gUtil.get(q);\r\n          qI.Project = key;\r\n          return qI;\r\n        },\r\n        (x, group) => iUtil.get(x, group));\r\n      q.IsGet_Groups = false;\r\n    }\r\n\r\n    var count = data.length;\r\n    if (count === 0) {\r\n      mainFunc();\r\n    } else {\r\n      var i = -1;\r\n      const validFunc = () => {\r\n        i++;\r\n        if (i === count - 1) {\r\n          mainFunc();\r\n        }\r\n      }\r\n\r\n      data.forEach(x => {\r\n        if (x.Project !== undefined) {\r\n          validFunc();\r\n        } else {\r\n          genUtil.Add_2(\r\n            x.OnSet_Project_Func,\r\n            validFunc\r\n          )\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as util from './ItemVMUtil'\r\nimport * as rs from '../../../../../text/TextRenderState';\r\nimport './Item.css'\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport TextView from '../../../../../text/TextView';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport { Button, message } from 'antd';\r\n\r\nexport class ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      renderState: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  renderState = rs.edit\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.RenderState === rs._default) {\r\n      this.RenderState = rs.edit\r\n      this.Hide_Tool();\r\n    }\r\n  }\r\n\r\n  // User\r\n  get User() {\r\n    return this.ModelItem.User;\r\n  } set User(v) {\r\n    this.ModelItem.User = v;\r\n    this.User_Render.Content = v?.Username;\r\n  }\r\n\r\n  user_Render\r\n  get User_Render() {\r\n    if (!this.user_Render) {\r\n      this.user_Render = util.GetUser_Render(this)\r\n    } return this.user_Render\r\n  }\r\n\r\n  user_Select\r\n  get User_Select() {\r\n    if (!this.user_Select) {\r\n      this.user_Select = util.GetUser_Select(this)\r\n    } return this.user_Select\r\n  }\r\n\r\n  get User_View() {\r\n    switch (this.RenderState) {\r\n      case rs._default:\r\n        return <TextView store={this.User_Render} />\r\n      case rs.edit:\r\n        return <SelectView store={this.User_Select} />\r\n    }\r\n  }\r\n\r\n  // Commands\r\n  get Commands() {\r\n    return this.ModelItem.Commands\r\n  } set Commands(v) {\r\n    this.ModelItem.Commands = v;\r\n  }\r\n\r\n  command_Select\r\n  get Command_Select() {\r\n    if (!this.command_Select) {\r\n      this.command_Select = util.GetCommand_Select(this)\r\n    } return this.command_Select\r\n  }\r\n\r\n  get Command_View() {\r\n    return <MultiSelectView store={this.Command_Select} />\r\n  }\r\n\r\n  // Hover\r\n  OnMouseEnter = () => {\r\n    if (this.RenderState === rs.edit) {\r\n      return;\r\n    }\r\n    this.Show_Tool();\r\n  }\r\n\r\n  OnMouseLeave = () => {\r\n    this.Hide_Tool();\r\n  }\r\n\r\n  Show_Tool() {\r\n    this.DeleteVM.Show();\r\n  }\r\n\r\n  Hide_Tool() {\r\n    this.DeleteVM.Hide();\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle, false);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  get RowView() {\r\n    return <tr>\r\n      <td>\r\n        <div className='f-ac admin__pgc__user'>\r\n          {this.User_View}\r\n          <Button type='primary' size='small'\r\n            className='btn-danger'\r\n            onClick={this.Delete} >x</Button>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <div className='admin__pgc__command'>\r\n          {this.Command_View}\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { ItemVM } from './ItemVM'\r\nimport { EntDelete } from '../../../../../delete/EntDelete';\r\nimport * as d_tt from '../../../../../delete/EntDelete_ToggleType'\r\nimport { Button, message } from 'antd';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, SaveFilled } from '@ant-design/icons';\r\nimport { SelectVM } from '../../../../../select/SelectVM';\r\nimport { TextVM } from '../../../../../text/TextVM';\r\nimport * as pc from '../../../command/ProjectCommand'\r\nimport { MultiSelectVM } from '../../../../../select/MultiSelectVM';\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ItemVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = d_tt.manual\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\n// User\r\nexport const GetUser_Render = (q) => {\r\n  var qI = new TextVM();\r\n  qI.Content = q.User?.Username;\r\n  return qI;\r\n}\r\n\r\nexport const GetUser_Select = (q) => {\r\n  var qI = new SelectVM();\r\n  qI.Placeholder = 'chọn user ...'\r\n  qI.TitleRender = (v) => v.Username;\r\n  qI.OnSelectedItemChanged = (v) => {\r\n    q.User = v;\r\n  }\r\n\r\n  const setList = (data) => {\r\n    qI.Items = data\r\n  }\r\n\r\n  const setSelect = (data) => {\r\n    qI.InitialItem = data;\r\n  }\r\n\r\n  var host = q.Dict.Dict\r\n  if (host.Users) {\r\n    setList(host.Users)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Users_Func,\r\n      () => {\r\n        setList(host.Users)\r\n      }\r\n    )\r\n  }\r\n\r\n  var host2 = q.ModelItem\r\n  if (host2.User !== undefined) {\r\n    setSelect(host2.User)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host2.OnSet_User_Func,\r\n      () => setSelect(host2.User)\r\n    )\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\n// Command\r\nexport const GetCommand_Select = (q) => {\r\n  var qI = new MultiSelectVM();\r\n\r\n  qI.Items = pc.GetList();\r\n  qI.InitialItems = q.Commands;\r\n  qI.Placeholder = 'commands ...'\r\n  qI.OnSelectedItemChanged = (v) => {\r\n    q.Commands = v;\r\n  }\r\n\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { ItemVM } from '../item/ItemVM';\r\n\r\nclass TableItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ItemVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.RowView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableItemView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Table.css'\r\nimport TableItemView from './TableItemView';\r\nimport { DictVM } from '../dict/DictVM';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='admin__pgc__table'>\r\n          <thead className='admin__pgc__thead'>\r\n            <tr>\r\n              <th className='admin__pgc__table__user'>Người dùng</th>\r\n              <th className='admin__pgc__table__authorize'>Phân quyền</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className='admin__pgc__tbody'>\r\n            {data.Items?.map(x => {\r\n              return <TableItemView key={x.id} store={x} />\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictVMUtil'\r\nimport * as iVMUtil from '../item/ItemVMUtil'\r\nimport * as iUtil from '../item/ItemUtil'\r\nimport { Button, message } from 'antd';\r\nimport TableView from '../table/TableView';\r\nimport './Dict.css'\r\nimport { SaveFilled } from '@ant-design/icons';\r\nimport { Item } from '../item/Item';\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Items\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  AddItem = () => {\r\n    var i = iUtil.get(this.ModelItem);\r\n    this.ModelItem.Items.push(i);\r\n\r\n    var iVM = iVMUtil.get(i, this)\r\n    this.Items.push(iVM);\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get MainView() {\r\n    return <div>\r\n      <div className='f-jc admin__pgc__title'>\r\n        <span>PHÂN QUYỀN NHÓM DỰ ÁN</span>\r\n      </div>\r\n      <div className='f'>\r\n        <div className='admin__pgc__add'>\r\n          <Button type='primary' size='small'\r\n            className='btn-success'\r\n            onClick={this.AddItem}>+</Button>\r\n          <Button type='primary' size='small'\r\n            className='btn-success'\r\n            onClick={this.Save}>\r\n            <SaveFilled />\r\n          </Button>\r\n        </div>\r\n        <div className='es__main f1'>\r\n          <TableView store={this} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  // Refine\r\n  Refine = () => {\r\n    // filter groups\r\n    var removeItems = []\r\n    this.Items.forEach((x, i, a) => {\r\n      if (!x.User || x.Commands.length === 0\r\n        || a.findIndex(y => y.User === x.User) !== i) {\r\n        removeItems.push(x);\r\n      }\r\n    })\r\n\r\n    removeItems.forEach(x => {\r\n      x.Delete();\r\n    })\r\n  }\r\n\r\n  // Save\r\n  Save = () => {\r\n    this.Refine();\r\n    this.ModelItem.Save();\r\n  }\r\n}","import * as genUtil from '../../../../../../util/generalUtil'\r\nimport { DictVM } from \"./DictVM\";\r\nimport * as iUtil from '../item/ItemVMUtil'\r\nimport './Dict.css'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x=> iUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}","import { AdminVM } from \"./AdminVM\";\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nimport * as umDictUtil from '../usermanager/dict/DictVMUtil'\r\nimport * as pcDictUtil from '../project/dict/DictVMUtil'\r\nimport * as pgcDictUtil from '../projectgroup/dict/DictVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new AdminVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Users = (q) => {\r\n  if (q.IsGet_Users) return undefined\r\n  q.IsGet_Users = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Users = data\r\n    q.IsGet_Users = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Users){\r\n    setObj(host.Users)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Users_Func,\r\n      () => setObj(host.Users)\r\n    )\r\n  }\r\n}\r\n\r\nexport const Handle_Projects = (q) => {\r\n  if (q.IsGet_Projects) return undefined\r\n  q.IsGet_Projects = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Projects = data\r\n    q.IsGet_Projects = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Projects){\r\n    setObj(host.Projects)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Projects_Func,\r\n      () => setObj(host.Projects)\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetUserManager_Dict = (q) => {\r\n  return umDictUtil.get(q.ModelItem.UserManager_Dict, q);\r\n}\r\n\r\nexport const GetProjectCommand_Dict = (q) => {\r\n  return pcDictUtil.get(q.ModelItem.ProjectCommand_Dict, q)\r\n}\r\n\r\nexport const GetProjectGroupCommand_Dict = (q) => {\r\n  return pgcDictUtil.get(q.ModelItem.ProjectGroupCommand_Dict, q)\r\n}","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport MassItem_Dict from \"./MassItem_Dict\";\r\nimport { Spin } from \"antd\";\r\nimport TextView from \"../../../../../text/TextView\";\r\n\r\nclass MassItem_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassItem_Dict();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.IsDataPending ?\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <div>\r\n              <Spin />\r\n              <TextView store={data.LoadingSpinTipVM} />\r\n            </div>\r\n          </div> :\r\n          // <MassTableView\r\n          //   key={data.MassTable?.id}\r\n          //   store={data.MassTable} />\r\n          data.MassTableView\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassItem_DictView)","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select, Spin } from \"antd\";\r\nimport MultiSelectView from '../../../../select/MultiSelectView'\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\nimport MassItem_DictView from \"../item/base/MassItem_DictView\";\r\nimport * as comUtil from '../../../../../util/commandUtil'\r\nimport * as pct from '../../command/ProjectCommand'\r\n\r\nconst { Option } = Select;\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance;\r\n\r\nclass MassResultCompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = pmDataVM().MassResultCompVM\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.IsShowProjectSelect ?\r\n          <MultiSelectView store={data.ProjectSelectVM} /> : ''}\r\n\r\n        {comUtil.Validate([pct.view, pct.edit]) ?\r\n          <>\r\n            {data.CanHavePhase ?\r\n              <>\r\n                <CheckboxView store={data.IsShowPhaseSelectVM} />\r\n                {data.IsHavePhase ?\r\n                  <MultiSelectView store={data.PhaseSelectVM} />\r\n                  : ''}\r\n              </>\r\n              : ''}\r\n\r\n            <div style={{ marginTop: 8 }} >\r\n              {pmDataVM().Mgs_Dict_Dict.Pick_MGS_View}\r\n              {pmDataVM().Mgs_Dict_Dict.ModalView}\r\n            </div>\r\n\r\n            <Button style={{ marginTop: 8 }} onClick={data.GetMassData}\r\n              size='middle' type='primary'>GET DATA</Button>\r\n            <div style={{ marginTop: 15 }}>\r\n              <MassItem_DictView store={data.MassItem_Dict} />\r\n            </div>\r\n          </>\r\n          : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassResultCompView)","import * as genUtil from '../../../../util/generalUtil'\r\nimport { PMData } from '../model/PMData';\r\n\r\n// Project\r\nimport * as pvt from '../../entity/project/base/ProjectViewType'\r\nimport * as project_DictVMUtil from '../../entity/project/base/Project_DictVMUtil'\r\nimport * as massResultCompVMUtil from '../../entity/mass/result/MassResultCompVMUtil'\r\nimport DO_CompView from '../../entity/doc/comp/DO_CompView';\r\nimport MassTypeSettingView from '../../entity/setting/massType/MassTypeSettingView';\r\n\r\n// MassGroup\r\nimport * as mgsddUtil from '../../entity/setting/massGroup/dict/dict/MGS_Dict_DictVMUtil'\r\nimport * as mgsdUtil from '../../entity/setting/massGroup/dict/MassGroupSetting_DictVMUtil'\r\nimport * as mgsd_ut from '../../entity/setting/massGroup/dict/MGS_Dict_UseType'\r\n\r\n// MassDetail\r\nimport * as mdsddUtil from '../../entity/setting/massDetail/dict/dict/MDS_Dict_DictVMUtil'\r\n\r\n// SiteSuggest\r\nimport * as sgddUtil from '../../entity/setting/sitesuggest/dict/dict/Dict_DictVMUtil'\r\n\r\nimport * as userDictUtil from '../../../user/dict/User_DictVMUtil'\r\nimport * as adminUtil from '../../entity/admin/main/AdminVMUtil'\r\nimport MassResultCompView from '../../entity/mass/result/MassResultCompView';\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport const GetProject_DictVM = (data) => {\r\n  return project_DictVMUtil.get\r\n    (pmData().Project_Dict);\r\n}\r\n\r\nexport const GetMassResultCompVM = (data) => {\r\n  return massResultCompVMUtil.get\r\n    (pmData().MassResultComp);\r\n}\r\n\r\n// MassGroup\r\nexport const GetMgs_Dict_Dict = (data) => {\r\n  return mgsddUtil.get(pmData().Mgs_Dict_Dict);\r\n}\r\n\r\nexport const GetMassGroupSetting_Dict = (data) => {\r\n  return genUtil.SingleFilter\r\n    (data.Mgs_Dict_Dict.Items, (x) => x.UseType === mgsd_ut.project);\r\n}\r\n\r\n// MassDetail\r\nexport const GetMds_Dict_Dict = (data) => {\r\n  return mdsddUtil.get(pmData().Mds_Dict_Dict);\r\n}\r\n\r\n// SiteDict\r\nexport const Handle_SG_Dict_Dict = (q) => {\r\n  if (q.IsGet_SG_Dict_Dict) return undefined;\r\n  q.IsGet_SG_Dict_Dict = true;\r\n\r\n  const setObj = (data) => {\r\n    q.SG_Dict_Dict = sgddUtil.get(data)\r\n    q.IsGet_SG_Dict_Dict = false;\r\n  }\r\n\r\n  var host = pmData()\r\n  if (host.SG_Dict_Dict) {\r\n    setObj(host.SG_Dict_Dict)\r\n  }\r\n  genUtil.Add_2(\r\n    host.OnSet_SG_Dict_Dict_Funcs,\r\n    () => setObj(host.SG_Dict_Dict),\r\n    false\r\n  )\r\n\r\n  //return sgddUtil.get(pmData().SG_Dict_Dict)\r\n}\r\n\r\n// UserDict\r\nexport const GetUserDict = (data) => {\r\n  var qI = userDictUtil.get(pmData().UserDict, data);\r\n\r\n  qI.ViewRender = () => <div className='ud__wrapper'>\r\n    <div className='ud__dec f'>\r\n      <div className='f1' />\r\n      <div>\r\n        <div className='ud__main__wrapper'>\r\n          {qI.MainView}\r\n        </div>\r\n        {qI.ModalView}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetAdmin = (data) => {\r\n  return adminUtil.get(pmData().Admin, data);\r\n}\r\n\r\n// Commands\r\nexport const Handle_Commands = (q) => {\r\n  if (q.IsGet_Commands) return undefined;\r\n  q.IsGet_Commands = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Commands = data\r\n    q.IsGet_Commands = false;\r\n  }\r\n\r\n  var host = pmData()\r\n  if (host.Commands) {\r\n    setObj(host.Commands)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Commands_Func,\r\n    () => setObj(host.Commands),\r\n    false\r\n  )\r\n}\r\n\r\nexport const Handle_AdminCommands = (q) => {\r\n  if (q.IsGet_AdminCommands) return undefined;\r\n  q.IsGet_AdminCommands = true;\r\n\r\n  const setObj = (data) => {\r\n    q.AdminCommands = data\r\n    q.IsGet_AdminCommands = false;\r\n  }\r\n\r\n  var host = pmData()\r\n  if (host.AdminCommands) {\r\n    setObj(host.AdminCommands)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_AdminCommands_Func,\r\n    () => setObj(host.AdminCommands),\r\n    false\r\n  )\r\n}\r\n\r\n// View\r\nexport const GetHomeView = (q) => {\r\n  switch (q.ProjectViewType) {\r\n    case pvt.mass:\r\n      return <div className='massresult__comp__wrapper'>\r\n        <MassResultCompView store={q.MassResultCompVM} />\r\n      </div>\r\n    case pvt.mepsetting:\r\n      return 'MEP Setting'\r\n    case pvt.document:\r\n      return <DO_CompView />\r\n    case pvt.masstype:\r\n      return <MassTypeSettingView />\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMData } from '../model/PMData';\r\nimport * as util from './PMDataVMUtil'\r\nimport * as pvt from '../../entity/project/base/ProjectViewType'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport class PMDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isDebug: observable,\r\n      projectViewType: observable,\r\n      currentProject: observable,\r\n      main_Classname: observable,\r\n      massGroupSetting_Dict: observable,\r\n      commands: observable,\r\n      adminCommands: observable\r\n    })\r\n  }\r\n\r\n  static instance\r\n  static get Instance() {\r\n    if (!this.instance) {\r\n      this.instance = new PMDataVM();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  get pmData() {\r\n    return PMData.Instance;\r\n  }\r\n\r\n  project_DictVM\r\n  get Project_DictVM() {\r\n    if (!this.project_DictVM) {\r\n      this.project_DictVM = util.GetProject_DictVM();\r\n    }\r\n    return this.project_DictVM;\r\n  }\r\n\r\n  massResultCompVM\r\n  get MassResultCompVM() {\r\n    if (!this.massResultCompVM) {\r\n      this.massResultCompVM = util.GetMassResultCompVM();\r\n    }\r\n    return this.massResultCompVM;\r\n  }\r\n  set MassResultCompVM(v) {\r\n    this.massResultCompVM = v;\r\n    if (!v) {\r\n      this.pmData.MassResultComp = v;\r\n    }\r\n    else {\r\n      this.pmData.MassResultComp = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  isDebug = undefined\r\n  get IsDebug() {\r\n    if (this.isDebug === undefined) {\r\n      this.isDebug = this.pmData.IsDebug;\r\n    }\r\n    return this.isDebug;\r\n  } set IsDebug(v) {\r\n    this.isDebug = this.pmData.IsDebug = v;\r\n  }\r\n\r\n  OnSet_ProjectViewType_Func_Dict = []\r\n\r\n  projectViewType = pvt.mass\r\n  //projectViewType = pvt.document\r\n  get ProjectViewType() {\r\n    return this.projectViewType;\r\n  } set ProjectViewType(v) {\r\n    this.projectViewType = v;\r\n    this.OnSet_ProjectViewType_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  OnSet_CurrentProject_Func_Dict = []\r\n\r\n  currentProject = undefined\r\n  get CurrentProject() {\r\n    return this.currentProject;\r\n  } set CurrentProject(v) {\r\n    this.currentProject = v;\r\n\r\n    this.OnSet_CurrentProject_Func_Dict.forEach(x => x.Value());\r\n    this.pmData.CurrentProject = v?.ModelItem\r\n\r\n    util.Handle_SG_Dict_Dict(this)\r\n  }\r\n\r\n  // MassGroup\r\n  mgs_Dict_Dict\r\n  get Mgs_Dict_Dict() {\r\n    if (!this.mgs_Dict_Dict) {\r\n      this.mgs_Dict_Dict = util.GetMgs_Dict_Dict(this)\r\n    } return this.mgs_Dict_Dict\r\n  }\r\n\r\n  // MassDetail\r\n  mds_Dict_Dict\r\n  get Mds_Dict_Dict() {\r\n    if (!this.mds_Dict_Dict) {\r\n      this.mds_Dict_Dict = util.GetMds_Dict_Dict(this)\r\n    } return this.mds_Dict_Dict\r\n  }\r\n\r\n  // SiteSuggest\r\n  sg_Dict_Dict\r\n  get SG_Dict_Dict() {\r\n    if (!this.sg_Dict_Dict) {\r\n      util.Handle_SG_Dict_Dict(this)\r\n    } return this.sg_Dict_Dict\r\n  } set SG_Dict_Dict(v) {\r\n    this.sg_Dict_Dict = v\r\n  }\r\n\r\n  // MassGroupSetting\r\n  massGroupSetting_Dict = undefined\r\n  get MassGroupSetting_Dict() {\r\n    if (!this.massGroupSetting_Dict) {\r\n      this.massGroupSetting_Dict = util.GetMassGroupSetting_Dict(this)\r\n    } return this.massGroupSetting_Dict\r\n  }\r\n\r\n  get UpdatedDate() {\r\n    return this.pmData.UpdatedDate;\r\n  }\r\n\r\n  // Classname scale bề rộng dự án cho phù hợp\r\n  // View BoQ : 800px\r\n  // View Detail : 100%\r\n  main_Classname = 'projectcomp__main'\r\n  get Main_Classname() {\r\n    return this.main_Classname;\r\n  } set Main_Classname(v) {\r\n    this.main_Classname = v;\r\n  }\r\n\r\n  // UserDict\r\n  userDict\r\n  get UserDict() {\r\n    if (!this.userDict) {\r\n      this.userDict = util.GetUserDict(this)\r\n    } return this.userDict;\r\n  }\r\n\r\n  // Admin\r\n  admin\r\n  get Admin() {\r\n    if (!this.admin) {\r\n      this.admin = util.GetAdmin(this)\r\n    } return this.admin\r\n  }\r\n\r\n  // Commands\r\n  commands = undefined\r\n  get Commands() {\r\n    if (!this.commands) {\r\n      util.Handle_Commands(this)\r\n    } return this.commands;\r\n  } set Commands(v) {\r\n    this.commands = v\r\n  }\r\n\r\n  adminCommands = undefined\r\n  get AdminCommands() {\r\n    if (!this.adminCommands) {\r\n      util.Handle_AdminCommands(this)\r\n    } return this.adminCommands;\r\n  } set AdminCommands(v) {\r\n    this.adminCommands = v\r\n  }\r\n\r\n  UnAuthorized_View =\r\n    <span className='unauthorize'>Bạn không có quyền truy cập View hiện tại!</span>\r\n\r\n  get HomeView() {\r\n    return util.GetHomeView(this)\r\n  }\r\n}","import * as util from './LeftNavUtil'\r\n\r\nexport class LeftNav {\r\n  Title\r\n\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  } set Items(v){\r\n    this.items = v;\r\n  }\r\n\r\n  currentProject\r\n  get CurrentProject(){\r\n    return this.currentProject;\r\n  } set CurrentProject(v){\r\n    this.currentProject = v;\r\n    \r\n    this.Items = util.GetItems(this);\r\n  }\r\n}","export class LeftNavItem {\r\n  Title\r\n  Value\r\n}","import { LeftNavItem } from \"./LeftNavItem\"\r\n\r\nexport const get = (title, value) => {\r\n  var qI = new LeftNavItem();\r\n  qI.Title = title;\r\n  qI.Value = value;\r\n  return qI;\r\n}","import { LeftNav } from \"./LeftNav\"\r\nimport * as pvt from '../../project/base/ProjectViewType'\r\nimport * as itemUtil from './LeftNavItemUtil'\r\n\r\nexport const GetTest = () => {\r\n  var qI = new LeftNav();\r\n\r\n  qI.Title = 'HikariComplex'\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return q.CurrentProject ?\r\n    [\r\n      itemUtil.get('MASS', pvt.mass),\r\n      itemUtil.get('LEVEL', pvt.typicallevel),\r\n      itemUtil.get('PHASE', pvt.phase),\r\n      itemUtil.get('INPUT DATA', pvt.inputdata)\r\n    ]                                    \r\n      : \r\n    [\r\n      itemUtil.get('MASS', pvt.mass),\r\n      itemUtil.get('MEP SETTING', pvt.mepsetting),\r\n      itemUtil.get('CÔNG TÁC', pvt.masstype),\r\n      itemUtil.get('DOCUMENT', pvt.document),\r\n    ]\r\n}","import { LeftNavVM } from \"./LeftNavVM\"\r\nimport * as modelUtil from './LeftNavUtil'\r\nimport { PMDataVM } from \"../../../single/form/PMDataVM\";\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance;\r\n\r\nexport const get = (q) => {\r\n  var qI = new LeftNavVM();\r\n\r\n  qI.ModelItem = q;\r\n  genUtil.Add(\r\n    pmDataVM().OnSet_CurrentProject_Func_Dict,\r\n    () => qI.CurrentProject = pmDataVM().CurrentProject,\r\n    false);\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return get(modelUtil.GetTest());\r\n}\r\n\r\n// Property\r\nexport const GetItems = (q) => {\r\n  return q.ModelItem.Items;\r\n}\r\n\r\nexport const GetPreTitle = (q) => {\r\n  return q.CurrentProject ? 'DỰ ÁN'\r\n    : 'CÁC DỰ ÁN';\r\n}\r\n\r\nexport const GetTitle = (q) => {\r\n  return q.CurrentProject ? q.CurrentProject.Name \r\n    : '';\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { pmData } from '../../mass/item/base/MassItemUtil';\r\nimport * as util from './LeftNavVMUtil'\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class LeftNavVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      projectViewType : observable,\r\n      items : observable,\r\n      title : observable,\r\n      preTitle : observable\r\n    })\r\n  }\r\n\r\n  preTitle = undefined\r\n  get PreTitle (){\r\n    if (!this.preTitle){\r\n      this.preTitle = util.GetPreTitle(this);\r\n    }\r\n    return this.preTitle;\r\n  } set PreTitle(v){\r\n    this.preTitle = v;\r\n  }\r\n\r\n  title = undefined\r\n  get Title (){\r\n    if (!this.title){\r\n      this.title = util.GetTitle(this);\r\n    }\r\n    return this.title;\r\n  } set Title(v){\r\n    this.title = v;\r\n  }\r\n\r\n  items = undefined\r\n  get Items (){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  } set Items(v){\r\n    this.items = v;\r\n  }\r\n\r\n  currentProject\r\n  get CurrentProject(){\r\n    return this.currentProject;\r\n  } set CurrentProject(v){\r\n    this.currentProject = v;\r\n\r\n    this.ModelItem.CurrentProject = v?.ModelItem;\r\n    this.Items = util.GetItems(this);\r\n    this.PreTitle = util.GetPreTitle(this);\r\n    this.Title = util.GetTitle(this);\r\n  }\r\n\r\n  projectViewType = undefined\r\n  get ProjectViewType(){\r\n    if (!this.projectViewType){\r\n      this.projectViewType = pmDataVM().ProjectViewType;\r\n    }\r\n    return this.projectViewType\r\n  } set ProjectViewType(v){\r\n    this.projectViewType = pmDataVM().ProjectViewType = v;\r\n  }\r\n\r\n  GetItemClass = (item) => {\r\n    return `leftnav__item ${item.Value === this.ProjectViewType ? 'active' : ''}`;\r\n  }\r\n\r\n  SetView = (item) => {\r\n    this.ProjectViewType = item.Value;\r\n  }\r\n\r\n  get UpdatedDate(){\r\n    return pmData().UpdatedDate;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { } from '@ant-design/icons';\r\nimport './LeftNav.css'\r\nimport { LeftNavVM } from './LeftNavVM';\r\nimport * as navUtil from './LeftNavVMUtil'\r\n\r\nclass LeftNavView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = navUtil.GetTest();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <nav className='leftnav'>\r\n          {/* Wrapper */}\r\n          <div className='leftnav__wrapper'>\r\n            {/* Body */}\r\n            <div className='leftnav__body'>\r\n\r\n              {/* Title */}\r\n              <span className='leftnav__title'>\r\n                <span className='leftnav__title__prefix'>\r\n                  {data.PreTitle}\r\n                </span>\r\n                <span className='leftnav__title__name'>\r\n                  {data.Title}\r\n                </span>\r\n              </span>\r\n\r\n              {/* Items */}\r\n              <div className='leftnav__items'>\r\n                {data.Items.map(x => {\r\n                  return <a key={x.Value} onClick={() => data.SetView(x)}\r\n                    className={data.GetItemClass(x)}>\r\n                    {x.Title}\r\n                  </a>\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Footer */}\r\n            <div className='leftnav__footer'>\r\n              <span>© Copyright</span>\r\n              <span>{`Updated Date: ${data.UpdatedDate}`}</span>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(LeftNavView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Row } from 'antd';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MassDetailVM } from './MassDetailVM';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport './MassDetail.css'\r\nimport { SaveFilled } from '@ant-design/icons';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance;\r\n\r\nclass MassDetailView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassDetailVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const id = this.props.match.params.id;\r\n\r\n    data.id = id;\r\n\r\n    // Set up Main Width\r\n    pmDataVM().Main_Classname = 'massdetail__comp'\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {pmDataVM().Mds_Dict_Dict.Pick_MDS_View}\r\n          {pmDataVM().Mds_Dict_Dict.ModalView}\r\n        </div>\r\n        <div className='massdetail__table__wrapper'>\r\n          {data.DetailTable.WrapperView}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(MassDetailView));\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row } from 'antd';\r\nimport { LevelGroupVM } from './LevelGroupVM';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport './LevelGroup.css'\r\nimport * as pct from '../../../command/ProjectCommand'\r\n\r\nclass LevelGroupView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new LevelGroupVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='levelgroup__container'>\r\n          <MultiSelectView store={data.LevelSelectVM} />\r\n          {data.Commands.includes(pct.edit) ?\r\n            <Button size='small' type='text'\r\n              className='levelgroup__deletebutton'\r\n              onClick={data.Delete}>\r\n              <DeleteFilled className='levelgroup__deleteicon' />\r\n            </Button>\r\n            : ''}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(LevelGroupView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Popover, Switch } from 'antd';\r\nimport { TLS_FilterValueVM } from './TLS_FilterValueVM';\r\nimport NewInputView from '../../../../../input/NewInputView';\r\nimport './TLS_FilterValue.css'\r\nimport * as pct from '../../../command/ProjectCommand'\r\n\r\nclass TLS_FilterValueView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TLS_FilterValueVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='tls_filter__value'>\r\n          {/* Input */}\r\n          {data.Commands.includes(pct.edit) ?\r\n            <>\r\n              <Popover\r\n                trigger={data.PopoverState.Content}\r\n                content={\r\n                  <Switch unCheckedChildren='inp' checkedChildren='sel'\r\n                    checked={data.SwitchChecked_Funcs()} onChange={data.ToggleInputType} />\r\n                }>\r\n                <span>\r\n                  {data.InputElement}\r\n                </span>\r\n              </Popover>\r\n\r\n\r\n              {/* Delete */}\r\n              <Button type='primary' size='small' onClick={data.Delete}\r\n                className='tls_filter__value__delete'>x</Button>\r\n            </>\r\n            : data.Value}\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TLS_FilterValueView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport { TLS_FilterVM } from './TLS_FilterVM';\r\nimport SelectView from '../../../../../select/SelectView';\r\nimport './TLS_Filter.css'\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport TLS_FilterValueView from './TLS_FilterValueView';\r\nimport * as pct from '../../../command/ProjectCommand'\r\n\r\nclass TLS_FilterView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TLS_FilterVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='tls_filter__div'>\r\n          {/* Field Select */}\r\n          <SelectView store={data.FieldSelectVM}\r\n            className='tls_filter_fieldselect' />\r\n\r\n          <div className='tls_filter__valuediv__wrapper'>\r\n            {/* Add Value */}\r\n            {data.Commands.includes(pct.edit) ?\r\n              <Button type='primary' size='small' onClick={data.AddItem}\r\n                className='tls_filter__valuediv__addbutton'>+</Button>\r\n              : ''}\r\n\r\n            {/* Value List */}\r\n            <div className='tls_filter__valuediv'>\r\n              {data.Items.map(x => {\r\n                return <TLS_FilterValueView key={x.id} store={x} />\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {data.Commands.includes(pct.edit) ?\r\n            <Button size='small' type='text'\r\n              className='tls_filter__deletebutton'\r\n              onClick={data.Delete}>\r\n              <DeleteFilled className='tls_filter__deleteicon' />\r\n            </Button>\r\n            : ''}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TLS_FilterView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row, Tabs } from 'antd';\r\nimport MultiSelectView from '../../../../../select/MultiSelectView';\r\nimport { DeleteFilled } from '@ant-design/icons';\r\nimport './TLS_PageItem.css'\r\nimport { TLS_PageItemVM } from './TLS_PageItemVM';\r\nimport TLS_FilterView from '../filter/TLS_FilterView';\r\nimport LevelGroupView from '../levelGroup/LevelGroupView';\r\nimport * as pct from '../../../command/ProjectCommand'\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass TLS_PageItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TLS_PageItemVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='tls__pageitem__wrapper'>\r\n          {/* Filters */}\r\n          <div className='typicallevel__list'>\r\n            <div className='typicallevel__list__1'>\r\n              {/* Add Filter */}\r\n              {data.Commands.includes(pct.edit) ?\r\n                <Button type='primary' size='small' onClick={data.AddFilter}\r\n                  className='typicallevel__addbutton'>+</Button>\r\n                : ''}\r\n              <span><b>Thiết lập bộ lọc</b></span>\r\n            </div>\r\n\r\n            {/* Filter List */}\r\n            {data.Filters.map(x => {\r\n              return <TLS_FilterView key={x.id} store={x} />\r\n            })}\r\n          </div>\r\n\r\n          {/* LevelGroup */}\r\n          <div className='typicallevel__list'>\r\n            <div className='typicallevel__list__1'>\r\n              {/* Add Level */}\r\n              {data.Commands.includes(pct.edit) ?\r\n              <Button type='primary' size='small' onClick={data.AddLevelGroup}\r\n                className='typicallevel__addbutton'>+</Button>\r\n                : ''}\r\n              <span><b>Thiết lập level</b></span>\r\n            </div>\r\n\r\n            {/* Level List */}\r\n            {data.LevelGroups.map(x => {\r\n              return <LevelGroupView key={x.id} store={x} />\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TLS_PageItemView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row, Tabs } from 'antd';\r\nimport { TypicalLevelSettingDataVM } from './TypicalLevelSettingDataVM';\r\nimport LevelGroupView from './levelGroup/LevelGroupView';\r\nimport './TypicalLevelSettingData.css'\r\nimport './pageItem/TLS_PageItem.css'\r\nimport TLS_FilterView from './filter/TLS_FilterView';\r\nimport TLS_PageItemView from './pageItem/TLS_PageItemView';\r\nimport { SaveFilled } from '@ant-design/icons';\r\nimport * as pct from '../../command/ProjectCommand'\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass TypicalLevelSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TypicalLevelSettingDataVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onKeyDown = (v) => {\r\n    //console.log(v);\r\n    v.stopPropagation();\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {/* Data */}\r\n        <div className='tls'>\r\n          {/* Save Button */}\r\n          {data.Commands.includes(pct.edit) ?\r\n            <Button type='primary' size='small' className='tls__save__button'\r\n              onClick={data.Save}>\r\n              <SaveFilled className='tls__save' />\r\n            </Button>\r\n            : ''}\r\n\r\n          {/* Main Data */}\r\n          <div className='tls__tabs__wrapper'>\r\n            <div className='tls__tabs__div'>\r\n              {/* Add Tab */}\r\n              {data.Commands.includes(pct.edit) ?\r\n                (!data.IsHaveAddCommandTab ?\r\n                  <Button type='primary' size='small' onClick={data.AddPageItem}\r\n                    className='tls__tabs__add__outside'>+</Button>\r\n                  : '')\r\n                : ''}\r\n\r\n              {/* Tabs */}\r\n              <Tabs type='card' className='tls__tabs'\r\n                onChange={data.ChangePageKey}\r\n                activeKey={data.CurrentPageKey}\r\n                onKeyDown={this.onKeyDown}>\r\n                {data.AllTabs.map(x => {\r\n                  return <TabPane tab={x.TitleElement} key={x.id}>\r\n                    <TLS_PageItemView store={x} />\r\n                  </TabPane>\r\n                })}\r\n              </Tabs>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TypicalLevelSettingDataView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row, Tabs } from 'antd';\r\nimport { LevelSettingDataVM } from './LevelSettingDataVM';\r\nimport './LevelSetting.css'\r\nimport TableView from '../../../../table/TableView';\r\nimport { SaveFilled } from '@ant-design/icons';\r\nimport * as pct from '../../command/ProjectCommand'\r\n\r\nclass LevelSettingDataView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new LevelSettingDataVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='ls__wrapper'>\r\n          {data.Commands.includes(pct.edit) ?\r\n            <>\r\n              {/* Update Level Data */}\r\n              <Button type='primary' size='small' className='ls__save__button'\r\n                onClick={data.Update_LevelData}>\r\n                <SaveFilled className='tls__save' />\r\n              </Button>\r\n\r\n              <Button type='primary' size='small'\r\n                className='ls_add'\r\n                onClick={data.AddItem}>+</Button>\r\n            </> :\r\n            ''}\r\n\r\n          {/* Table */}\r\n          <TableView className='table table-bordered' store={data.Table} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(LevelSettingDataView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Row } from 'antd';\r\nimport { TypicalLevelSettingVM } from './TypicalLevelSettingVM';\r\nimport TypicalLevelSettingDataView from './TypicalLevelSettingDataView';\r\nimport NewInputView from '../../../../input/NewInputView';\r\nimport './TypicalLevelSetting.css'\r\nimport { SaveFilled } from '@ant-design/icons';\r\nimport LevelSettingDataView from '../level/LevelSettingDataView';\r\n\r\nclass TypicalLevelSettingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new TypicalLevelSettingVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='projectcomp__level'>\r\n          <div className='projectcomp__title'>\r\n            <h3>THIẾT LẬP TẦNG</h3>\r\n          </div>\r\n          <LevelSettingDataView store={data.DataVM.Binding} />\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='projectcomp__typicallevel'>\r\n          <div className='projectcomp__title'>\r\n            <h3>THIẾT LẬP TẦNG ĐIỂN HÌNH</h3>\r\n          </div>\r\n          <TypicalLevelSettingDataView store={data.DataVM.Typical} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TypicalLevelSettingView);\r\n","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Phase_DictVM } from \"./Phase_DictVM\";\r\nimport InputView from \"../../../input/InputView\";\r\nimport * as stateType from '../state/StateType'\r\nimport * as pct from '../command/ProjectCommand'\r\nimport { PMDataVM } from \"../../single/form/PMDataVM\";\r\n\r\nconst { Option } = Select;\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nclass Phase_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Phase_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var input = data.Input;\r\n    var state = data.State;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {data.Commands.includes(pct.edit) ?\r\n            <>\r\n              <Button type='primary' size='middle' onClick={data.AddVersion}\r\n                disabled={state === stateType.addversion}>\r\n                <PlusCircleOutlined /> LƯU KẾT QUẢ HIỆN TẠI\r\n              </Button>\r\n\r\n              {state === stateType.addversion ? <div className=\"mt-3\">\r\n                <InputView store={input.NameVM} />\r\n                <InputView store={input.DescriptionVM} />\r\n                <div className=\"mt-2\">\r\n                  <Button type='primary' size='small' onClick={data.OK}>OK</Button>\r\n                  <Button type='default' size='small' onClick={data.Cancel}>Cancel</Button>\r\n                </div>\r\n              </div> : ''}\r\n            </>\r\n            : pmDataVM().UnAuthorized_View}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(Phase_DictView)","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { ExportSet_DictVM } from '../dict/ExportSet_DictVM';\r\nimport './ExportSetMain.css'\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nclass ExportSetMain_View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ExportSet_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='es__wrapper'>\r\n          <div className='es__pick__wrapper'>\r\n            <div className='f'>\r\n              {data.PickView}\r\n            </div>\r\n            {data.ModalView}\r\n          </div>\r\n          <div className='es__render__wrapper'>\r\n            {data.CurrentItem &&\r\n              data.CurrentItem.MassItems_Table ?\r\n              data.CurrentItem.MassItems_Table.WrapperView\r\n              : ''}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(ExportSetMain_View);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as projectUtil from '../base/ProjectUtil'\r\nimport * as projectVMUtil from '../base/ProjectVMUtil'\r\nimport * as util from './ProjectCompVMUtil'\r\nimport * as pvt from '../base/ProjectViewType'\r\nimport MassResultCompView from '../../mass/result/MassResultCompView';\r\nimport TypicalLevelSettingView from '../../setting/typicallevel/TypicalLevelSettingView';\r\nimport Phase_DictView from '../../phase/Phase_DictView';\r\nimport ExportSetMain_View from '../../exportset/main/ExportSetMain_View';\r\nimport * as pct from '../base/ProjectCommandType'\r\nimport { Button } from \"antd\";\r\nimport EntPopoverView from '../../../../popover/EntPopoverView';\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\n\r\nexport default class ProjectCompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      projectVM: observable,\r\n      projectViewType: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    return this._id;\r\n  }\r\n  set id(v) {\r\n    this._id = v;\r\n    projectUtil.getById(v, (item) => {\r\n      this.ProjectVM = projectVMUtil.get(item);\r\n    })\r\n  }\r\n\r\n  projectVM = undefined\r\n  get ProjectVM() {\r\n    return this.projectVM;\r\n  }\r\n  set ProjectVM(v) {\r\n    this.projectVM = v;\r\n\r\n    pmDataVM().CurrentProject = v;\r\n\r\n    var list = [v];\r\n    pmDataVM().Project_DictVM.Items = list;\r\n    pmData().Phase_Dict = v.ModelItem.Phase_Dict;\r\n\r\n    var massResComp = this.MassResultCompVM;\r\n    massResComp.ProjectVMStorageList = list;\r\n    massResComp.ProjectSelectVM.InitialItems = list;\r\n\r\n    var setItemsFuncs = () => massResComp.PhaseVMStorageList = phase_DictVM.Items;\r\n\r\n    var phase_DictVM = v.Phase_DictVM;\r\n    if (phase_DictVM.Items) {\r\n      setItemsFuncs();\r\n    } else {\r\n      phase_DictVM.OnGetItemsDone_Funcs.push(() => {\r\n        setItemsFuncs();\r\n      })\r\n    }\r\n  }\r\n\r\n  massResultCompVM\r\n  get MassResultCompVM() {\r\n    if (!this.massResultCompVM) {\r\n      var obj = this.massResultCompVM = util.GetMassResultCompVM(this);\r\n      pmDataVM().MassResultCompVM = obj;\r\n    }\r\n    return this.massResultCompVM;\r\n  }\r\n\r\n  projectViewType = undefined\r\n  get ProjectViewType() {\r\n    if (!this.projectViewType) {\r\n      this.projectViewType = pmDataVM().ProjectViewType;\r\n    }\r\n    return this.projectViewType;\r\n  } set ProjectViewType(v) {\r\n    this.projectViewType = v;\r\n  }\r\n\r\n  get ViewElement() {\r\n    if (!this.ProjectVM) return undefined;\r\n\r\n    var commands = pmDataVM().Commands;\r\n    if (commands && (commands.includes(pct.view) || commands.includes(pct.edit))) {\r\n      switch (this.ProjectViewType) {\r\n        case pvt.mass:\r\n          return <div className='massresult__comp__wrapper'>\r\n            <MassResultCompView store={this.MassResultCompVM} />\r\n          </div>\r\n        case pvt.typicallevel:\r\n          return <>\r\n            {this.ProjectVM.TypicalLevelSetting_ForEdit ?\r\n              <TypicalLevelSettingView store={this.ProjectVM.TypicalLevelSetting_ForEdit} />\r\n              : ''}\r\n          </>\r\n        case pvt.phase:\r\n          return <div className='phase__comp__wrapper'>\r\n            <Phase_DictView store={this.ProjectVM.Phase_DictVM} />\r\n          </div>\r\n        case pvt.inputdata:\r\n          return <ExportSetMain_View store={this.ProjectVM.ExportSet_Dict} />\r\n      }\r\n    }\r\n\r\n    return pmDataVM().UnAuthorized_View\r\n  }\r\n}","export const view = 'view'\r\nexport const edit = 'edit'","import { PMDataVM } from '../../../single/form/PMDataVM'\r\nimport MassResultComp from '../../mass/result/MassResultComp'\r\nimport * as massResutlCompVMUtil from '../../mass/result/MassResultCompVMUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport ProjectCompVM from './ProjectCompVM';\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance;\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new ProjectCompVM();\r\n\r\n  genUtil.Add(\r\n    pmDataVM().OnSet_ProjectViewType_Func_Dict,\r\n    () => qI.ProjectViewType = pmDataVM().ProjectViewType,\r\n    false);\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetMassResultCompVM = (q) => {\r\n  var obj = massResutlCompVMUtil.get(new MassResultComp(), false);\r\n  obj.IsShowProjectSelect = false;\r\n  obj.CanHavePhase = true;\r\n  return obj;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport './ProjectComp.css'\r\nimport * as util from './ProjectCompVMUtil'\r\nimport TwoCol_SelectView from '../../../../select/twocol/TwoCol_SelectView';\r\n\r\nclass ProjectCompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = util.get()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const id = this.props.match.params.id;\r\n    data.id = id;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var projectVM = data.ProjectVM;\r\n\r\n    return (\r\n      <>\r\n        {projectVM ? data.ViewElement : ''}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(ProjectCompView));\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Admin.css'\r\nimport { AdminVM } from './AdminVM';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as comUtil from '../../../../../util/commandUtil'\r\nimport * as ct from '../../command/Command'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nclass AdminView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = pmDataVM().Admin\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='admin__wrapper'>\r\n          {comUtil.Validate(ct.admin) ?\r\n            <>\r\n              <div>\r\n                {data.UserManager_Dict.MainView}\r\n              </div>\r\n              <div className='notfirst'>\r\n                {data.ProjectCommand_Dict.MainView}\r\n              </div>\r\n              <div className='notfirst'>\r\n                {data.ProjectGroupCommand_Dict.MainView}\r\n              </div>\r\n            </>\r\n            : pmDataVM().UnAuthorized_View}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(AdminView);\r\n","export const admin = 'admin'\r\nexport const edit = 'edit'","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { PMDataVM } from '../../single/form/PMDataVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nclass HomeView extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {pmDataVM().HomeView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(HomeView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport './PMData.css'\r\n\r\nimport { PMDataVM } from './PMDataVM';\r\nimport { withRouter } from \"react-router-dom\";\r\n//import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport LeftNavView from '../../entity/nav/left/LeftNavView';\r\nimport MassDetailView from '../../entity/mass/detail/MassDetailView';\r\nimport ProjectCompView from '../../entity/project/comp/ProjectCompView';\r\nimport AdminView from '../../entity/admin/main/AdminView';\r\nimport HomeView from '../../entity/home/HomeView';\r\n\r\nclass PMDataView extends Component {\r\n  render() {\r\n    var data = PMDataVM.Instance;\r\n\r\n    return (\r\n      <>\r\n        <div className='projectcomp'>\r\n          <LeftNavView />\r\n          <div className='projectcomp__main__wrapper'>\r\n            {data.UserDict.View}\r\n\r\n            <div className='projectcomp__main__dec'>\r\n              <div className={data.Main_Classname}>\r\n\r\n                <Router basename={process.env.PUBLIC_URL}>\r\n                  <Switch>\r\n                    <Route exact path=\"/\" component={HomeView} />\r\n\r\n                    {/* Mass Detail */}\r\n                    <Route exact path=\"/massdetail/:id\" component={MassDetailView} />\r\n\r\n                    <Route exact path=\"/project/:id\" component={ProjectCompView} />\r\n\r\n                    <Route exact path=\"/admin\" component={AdminView} />\r\n                  </Switch>\r\n                </Router>\r\n\r\n              </div>\r\n\r\n              <div className='projectcomp__main__bottom' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(PMDataView);\r\n","import './App.css';\r\nimport \"antd/dist/antd.css\";\r\nimport { Component } from 'react';\r\n\r\nimport PMDataView from './model/main/single/form/PMDataView';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <PMDataView />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
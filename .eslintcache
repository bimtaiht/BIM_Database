[{"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassRow.js":"1","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassRowUtil.js":"2","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassTableView.js":"3","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassRowView.js":"4","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\model\\PMDataUtil.js":"5","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\SettingInputVM.js":"6","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\index.js":"7","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\float\\FloatItemView.js":"8","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\view\\TestView.js":"9","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\MultiSelectVM.js":"10","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\MultiSelectVMUtil.js":"11","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageInputVMUtil.js":"12","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\SelectVMUtil.js":"13","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageInputVM.js":"14","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageVM.js":"15","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingVMUtil.js":"16","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\Workpackage_Dict.js":"17","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSetting_DictVM.js":"18","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageInput.js":"19","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\ProjectUtil.js":"20","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSetting.js":"21","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingInputVM.js":"22","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\SettingInputUtil.js":"23","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\result\\MassResultComp.js":"24","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassTable.js":"25","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\App.js":"26","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\reportWebVitals.js":"27","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\util\\hb_PostUtil.js":"28","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSetting_DictVM.js":"29","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageUtil.js":"30","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingInputVMUtil.js":"31","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassTableUtil.js":"32","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingDataVMUtil.js":"33","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\EntFilterVM.js":"34","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSetting_Dict.js":"35","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingInputUtil.js":"36","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingInputUtil.js":"37","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSetting.js":"38","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingInput.js":"39","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassCellView.js":"40","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassCell.js":"41","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\detail\\MassDetailView.js":"42","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\item\\MassItemUtil.js":"43","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\detail\\MassDetailVM.js":"44","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\util\\htmlUtil.js":"45","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\FilterValueType.js":"46","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\item\\MassItemField.js":"47","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\MassPropertyName.js":"48","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingDataVMUtil.js":"49","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueSettingVMUtil.js":"50","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\SelectVM.js":"51","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\FilterCategoryType.js":"52","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingVM.js":"53","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\Project_DictVMUtil.js":"54","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingInputUtil.js":"55","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\result\\MassResultCompUtil.js":"56","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingInput.js":"57","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSetting.js":"58","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\detail\\MassDetailTable.js":"59","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\detail\\MassDetailTableView.js":"60","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\table\\CellVM.js":"61","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\model\\PMData.js":"62","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSetting_Dict.js":"63","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\model\\CategoryDataUtil.js":"64","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\checkbox\\CheckboxVM.js":"65","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassColumnUtil.js":"66","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassColumn.js":"67","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\SettingType.js":"68","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingDataUtil.js":"69","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueSettingUtil.js":"70","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSetting_DictVMUtil.js":"71","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingVMUtil.js":"72","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueSettingVM.js":"73","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueRetrieveType.js":"74","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueSetting.js":"75","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingDataVM.js":"76","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\detail\\MassDetailTableUtil.js":"77","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\element\\ElementUtil.js":"78","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\constant\\viewType.js":"79","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\map\\MapView.js":"80","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\form\\PMDataView.js":"81","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\float\\FloatItemVM.js":"82","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\html\\HtmlRenderVMUtil.js":"83","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\form\\PMDataVM.js":"84","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSetting_DictView.js":"85","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\input\\InputView.js":"86","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSetting_DictVM.js":"87","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\checkbox\\CheckboxView.js":"88","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\item\\MassItem.js":"89","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSetting_DictVMUtil.js":"90","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\result\\MassResultCompVMUtil.js":"91","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\field\\MGS_FieldVM.js":"92","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\field\\MGS_FieldVMUtil.js":"93","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingDataVMUtil.js":"94","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\EntFilter.js":"95","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\SettingVMUtil.js":"96","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSetting_Dict.js":"97","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageVMUtil.js":"98","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\ProjectVM.js":"99","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\slider\\SliderVM.js":"100","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\util\\apiUtil.js":"101","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\text\\TextView.js":"102","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSetting_DictView.js":"103","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\html\\HtmlRenderVM.js":"104","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingDataView.js":"105","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSetting_DictVMUtil.js":"106","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\Setting.js":"107","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\table\\RowVM.js":"108","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingUtil.js":"109","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingDataVM.js":"110","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingInput.js":"111","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\comp\\ProjectCompVM.js":"112","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\comp\\ProjectCompView.js":"113","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\ProjectVMUtil.js":"114","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\Project_Dict.js":"115","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase_DictUtil.js":"116","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseUtil.js":"117","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase_Dict.js":"118","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseVM.js":"119","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase_DictVMUtil.js":"120","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\view\\comp1\\CompView1.js":"121","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\SelectView.js":"122","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\text\\TextVMUtil.js":"123","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\model\\CategoryData.js":"124","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\table\\ColumnVM.js":"125","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\checkbox\\CheckboxVMUtil.js":"126","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\item\\MassItem_Dict.js":"127","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingVM.js":"128","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingData.js":"129","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\EntFilterUtil.js":"130","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase_DictView.js":"131","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseInputUtil.js":"132","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase_DictVM.js":"133","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseInputVM.js":"134","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseInput.js":"135","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\map\\MapVM.js":"136","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\map\\MapItemView.js":"137","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\html\\HtmlRenderView.js":"138","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSetting_DictView.js":"139","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\form\\PMDataVMUtil.js":"140","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\util\\inputUtil.js":"141","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueSettingView.js":"142","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\SettingVM.js":"143","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\Project_DictVM.js":"144","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\comp\\ProjectCompVMUtil.js":"145","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\result\\MassResultCompVM.js":"146","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\result\\MassResultCompView.js":"147","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase.js":"148","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\view\\comp1\\CompVM1.js":"149","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\Workpackage_DictVMUtil.js":"150","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingVMUtil.js":"151","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingUtil.js":"152","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingData.js":"153","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\StringFilterType.js":"154","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingUtil.js":"155","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingDataUtil.js":"156","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\NumberFilterType.js":"157","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassCellUtil.js":"158","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\versionCompare\\VersionCompareSettingUtil.js":"159","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseInputVMUtil.js":"160","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\EntFilterView.js":"161","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\versionCompare\\VCS_Item.js":"162","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\slider\\SliderView.js":"163","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\map\\MapItemVMUtil.js":"164","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\Workpackage_DictView.js":"165","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\state\\StateType.js":"166","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\map\\MapItemVM.js":"167","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\Workpackage_DictVM.js":"168","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\text\\TextVM.js":"169","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\util\\generalUtil.js":"170","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingInputVM.js":"171","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingDataUtil.js":"172","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\MultiSelectView.js":"173","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\versionCompare\\VersionCompareSetting.js":"174","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingInputVM.js":"175","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\float\\FloatItemVMUtil.js":"176","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\Project.js":"177","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\MassType.js":"178","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingDataView.js":"179","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\EntFilterVMUtil.js":"180"},{"size":2259,"mtime":1610933306264,"results":"181","hashOfConfig":"182"},{"size":505,"mtime":1610079671629,"results":"183","hashOfConfig":"182"},{"size":1622,"mtime":1610414826429,"results":"184","hashOfConfig":"182"},{"size":1690,"mtime":1610933306252,"results":"185","hashOfConfig":"182"},{"size":1270,"mtime":1610440250576,"results":"186","hashOfConfig":"182"},{"size":4403,"mtime":1610080287745,"results":"187","hashOfConfig":"182"},{"size":470,"mtime":1606796644103,"results":"188","hashOfConfig":"182"},{"size":734,"mtime":1606796644111,"results":"189","hashOfConfig":"182"},{"size":340,"mtime":1609900061893,"results":"190","hashOfConfig":"182"},{"size":1824,"mtime":1609813254608,"results":"191","hashOfConfig":"182"},{"size":203,"mtime":1609297634811,"results":"192","hashOfConfig":"182"},{"size":935,"mtime":1609999739197,"results":"193","hashOfConfig":"182"},{"size":185,"mtime":1609231224539,"results":"194","hashOfConfig":"182"},{"size":5324,"mtime":1610004300802,"results":"195","hashOfConfig":"182"},{"size":2626,"mtime":1609998964928,"results":"196","hashOfConfig":"182"},{"size":646,"mtime":1609727676563,"results":"197","hashOfConfig":"182"},{"size":1563,"mtime":1610009959127,"results":"198","hashOfConfig":"182"},{"size":1156,"mtime":1609748932177,"results":"199","hashOfConfig":"182"},{"size":1714,"mtime":1610002659179,"results":"200","hashOfConfig":"182"},{"size":854,"mtime":1610528971093,"results":"201","hashOfConfig":"182"},{"size":105,"mtime":1609733751011,"results":"202","hashOfConfig":"182"},{"size":176,"mtime":1609313426806,"results":"203","hashOfConfig":"182"},{"size":340,"mtime":1609833694838,"results":"204","hashOfConfig":"182"},{"size":1784,"mtime":1610617300596,"results":"205","hashOfConfig":"182"},{"size":3863,"mtime":1610934120222,"results":"206","hashOfConfig":"182"},{"size":848,"mtime":1610950116211,"results":"207","hashOfConfig":"182"},{"size":375,"mtime":1606796644124,"results":"208","hashOfConfig":"182"},{"size":338,"mtime":1606873976386,"results":"209","hashOfConfig":"182"},{"size":937,"mtime":1609827570533,"results":"210","hashOfConfig":"182"},{"size":1619,"mtime":1610009959127,"results":"211","hashOfConfig":"182"},{"size":576,"mtime":1609827570534,"results":"212","hashOfConfig":"182"},{"size":0,"mtime":1609921986608,"results":"213","hashOfConfig":"182"},{"size":532,"mtime":1609833401089,"results":"214","hashOfConfig":"182"},{"size":3295,"mtime":1609742682054,"results":"215","hashOfConfig":"182"},{"size":1128,"mtime":1609826771242,"results":"216","hashOfConfig":"182"},{"size":466,"mtime":1609827609859,"results":"217","hashOfConfig":"182"},{"size":470,"mtime":1609727676563,"results":"218","hashOfConfig":"182"},{"size":104,"mtime":1609826771257,"results":"219","hashOfConfig":"182"},{"size":330,"mtime":1609318658611,"results":"220","hashOfConfig":"182"},{"size":1011,"mtime":1610937022228,"results":"221","hashOfConfig":"182"},{"size":5570,"mtime":1610939384029,"results":"222","hashOfConfig":"182"},{"size":1075,"mtime":1610940485021,"results":"223","hashOfConfig":"182"},{"size":2243,"mtime":1610616600846,"results":"224","hashOfConfig":"182"},{"size":759,"mtime":1610335064984,"results":"225","hashOfConfig":"182"},{"size":160,"mtime":1606796644125,"results":"226","hashOfConfig":"182"},{"size":142,"mtime":1609225192362,"results":"227","hashOfConfig":"182"},{"size":667,"mtime":1610499800698,"results":"228","hashOfConfig":"182"},{"size":148,"mtime":1609826771318,"results":"229","hashOfConfig":"182"},{"size":1152,"mtime":1609901705310,"results":"230","hashOfConfig":"182"},{"size":1018,"mtime":1609904879505,"results":"231","hashOfConfig":"182"},{"size":2079,"mtime":1610002572260,"results":"232","hashOfConfig":"182"},{"size":185,"mtime":1609744967443,"results":"233","hashOfConfig":"182"},{"size":377,"mtime":1609321930200,"results":"234","hashOfConfig":"182"},{"size":463,"mtime":1609903234634,"results":"235","hashOfConfig":"182"},{"size":455,"mtime":1609733751031,"results":"236","hashOfConfig":"182"},{"size":395,"mtime":1610614209897,"results":"237","hashOfConfig":"182"},{"size":318,"mtime":1609744327427,"results":"238","hashOfConfig":"182"},{"size":108,"mtime":1609727676564,"results":"239","hashOfConfig":"182"},{"size":2403,"mtime":1610614651169,"results":"240","hashOfConfig":"182"},{"size":1175,"mtime":1610344125790,"results":"241","hashOfConfig":"182"},{"size":630,"mtime":1610500926372,"results":"242","hashOfConfig":"182"},{"size":3486,"mtime":1610673476835,"results":"243","hashOfConfig":"182"},{"size":1131,"mtime":1609749087862,"results":"244","hashOfConfig":"182"},{"size":120,"mtime":1610007370753,"results":"245","hashOfConfig":"182"},{"size":390,"mtime":1608885420528,"results":"246","hashOfConfig":"182"},{"size":156,"mtime":1609921673557,"results":"247","hashOfConfig":"182"},{"size":296,"mtime":1610938901471,"results":"248","hashOfConfig":"182"},{"size":127,"mtime":1609826723626,"results":"249","hashOfConfig":"182"},{"size":1145,"mtime":1609753935357,"results":"250","hashOfConfig":"182"},{"size":1962,"mtime":1610440821280,"results":"251","hashOfConfig":"182"},{"size":727,"mtime":1609749087862,"results":"252","hashOfConfig":"182"},{"size":657,"mtime":1609321868896,"results":"253","hashOfConfig":"182"},{"size":3949,"mtime":1610440404210,"results":"254","hashOfConfig":"182"},{"size":198,"mtime":1610415655356,"results":"255","hashOfConfig":"182"},{"size":706,"mtime":1610440109142,"results":"256","hashOfConfig":"182"},{"size":3331,"mtime":1610440726871,"results":"257","hashOfConfig":"182"},{"size":701,"mtime":1610499800698,"results":"258","hashOfConfig":"182"},{"size":362,"mtime":1610499800696,"results":"259","hashOfConfig":"182"},{"size":226,"mtime":1606872926563,"results":"260","hashOfConfig":"182"},{"size":1218,"mtime":1606810982456,"results":"261","hashOfConfig":"182"},{"size":1409,"mtime":1610068319336,"results":"262","hashOfConfig":"182"},{"size":268,"mtime":1606796644110,"results":"263","hashOfConfig":"182"},{"size":205,"mtime":1606796644114,"results":"264","hashOfConfig":"182"},{"size":3195,"mtime":1610673444849,"results":"265","hashOfConfig":"182"},{"size":2282,"mtime":1609835234587,"results":"266","hashOfConfig":"182"},{"size":841,"mtime":1608784108024,"results":"267","hashOfConfig":"182"},{"size":939,"mtime":1609749087861,"results":"268","hashOfConfig":"182"},{"size":877,"mtime":1608885257589,"results":"269","hashOfConfig":"182"},{"size":1206,"mtime":1610673444863,"results":"270","hashOfConfig":"182"},{"size":722,"mtime":1609827650530,"results":"271","hashOfConfig":"182"},{"size":1691,"mtime":1610608849639,"results":"272","hashOfConfig":"182"},{"size":976,"mtime":1609834773489,"results":"273","hashOfConfig":"182"},{"size":361,"mtime":1609833401067,"results":"274","hashOfConfig":"182"},{"size":185,"mtime":1609224280479,"results":"275","hashOfConfig":"182"},{"size":500,"mtime":1609308647328,"results":"276","hashOfConfig":"182"},{"size":328,"mtime":1609311288491,"results":"277","hashOfConfig":"182"},{"size":1140,"mtime":1609748868429,"results":"278","hashOfConfig":"182"},{"size":950,"mtime":1609999273841,"results":"279","hashOfConfig":"182"},{"size":707,"mtime":1610530607619,"results":"280","hashOfConfig":"182"},{"size":2689,"mtime":1606872168174,"results":"281","hashOfConfig":"182"},{"size":1367,"mtime":1606872168193,"results":"282","hashOfConfig":"182"},{"size":735,"mtime":1606796644123,"results":"283","hashOfConfig":"182"},{"size":2297,"mtime":1609835234587,"results":"284","hashOfConfig":"182"},{"size":4849,"mtime":1606874178590,"results":"285","hashOfConfig":"182"},{"size":1337,"mtime":1610588717077,"results":"286","hashOfConfig":"182"},{"size":771,"mtime":1609748932145,"results":"287","hashOfConfig":"182"},{"size":1145,"mtime":1609834973998,"results":"288","hashOfConfig":"182"},{"size":107,"mtime":1610334754561,"results":"289","hashOfConfig":"182"},{"size":712,"mtime":1609311288494,"results":"290","hashOfConfig":"182"},{"size":1651,"mtime":1609834773504,"results":"291","hashOfConfig":"182"},{"size":314,"mtime":1609826771243,"results":"292","hashOfConfig":"182"},{"size":1707,"mtime":1610673444849,"results":"293","hashOfConfig":"182"},{"size":1409,"mtime":1610609418868,"results":"294","hashOfConfig":"182"},{"size":387,"mtime":1610530531801,"results":"295","hashOfConfig":"182"},{"size":318,"mtime":1610529970474,"results":"296","hashOfConfig":"182"},{"size":447,"mtime":1610589473223,"results":"297","hashOfConfig":"182"},{"size":952,"mtime":1610616339404,"results":"298","hashOfConfig":"182"},{"size":963,"mtime":1610611694630,"results":"299","hashOfConfig":"182"},{"size":543,"mtime":1610530348876,"results":"300","hashOfConfig":"182"},{"size":437,"mtime":1610530931815,"results":"301","hashOfConfig":"182"},{"size":809,"mtime":1606874463092,"results":"302","hashOfConfig":"182"},{"size":2016,"mtime":1610002572260,"results":"303","hashOfConfig":"182"},{"size":172,"mtime":1608780441394,"results":"304","hashOfConfig":"182"},{"size":434,"mtime":1609299308621,"results":"305","hashOfConfig":"182"},{"size":48,"mtime":1610333860277,"results":"306","hashOfConfig":"182"},{"size":181,"mtime":1608884862872,"results":"307","hashOfConfig":"182"},{"size":563,"mtime":1610070950136,"results":"308","hashOfConfig":"182"},{"size":197,"mtime":1609814726613,"results":"309","hashOfConfig":"182"},{"size":663,"mtime":1609833694893,"results":"310","hashOfConfig":"182"},{"size":2972,"mtime":1610938728670,"results":"311","hashOfConfig":"182"},{"size":1638,"mtime":1610591015183,"results":"312","hashOfConfig":"182"},{"size":211,"mtime":1610592718876,"results":"313","hashOfConfig":"182"},{"size":1291,"mtime":1610611694630,"results":"314","hashOfConfig":"182"},{"size":1050,"mtime":1610589675635,"results":"315","hashOfConfig":"182"},{"size":227,"mtime":1610592738868,"results":"316","hashOfConfig":"182"},{"size":1783,"mtime":1606878025791,"results":"317","hashOfConfig":"182"},{"size":736,"mtime":1606875127328,"results":"318","hashOfConfig":"182"},{"size":1546,"mtime":1606796644114,"results":"319","hashOfConfig":"182"},{"size":2316,"mtime":1609835234587,"results":"320","hashOfConfig":"182"},{"size":1659,"mtime":1609902871063,"results":"321","hashOfConfig":"182"},{"size":635,"mtime":1606796644125,"results":"322","hashOfConfig":"182"},{"size":1716,"mtime":1610440250471,"results":"323","hashOfConfig":"182"},{"size":2128,"mtime":1609747590926,"results":"324","hashOfConfig":"182"},{"size":561,"mtime":1610609254871,"results":"325","hashOfConfig":"182"},{"size":338,"mtime":1610611694646,"results":"326","hashOfConfig":"182"},{"size":5403,"mtime":1610614147864,"results":"327","hashOfConfig":"182"},{"size":1750,"mtime":1610614114002,"results":"328","hashOfConfig":"182"},{"size":401,"mtime":1610616285432,"results":"329","hashOfConfig":"182"},{"size":2097,"mtime":1606875022356,"results":"330","hashOfConfig":"182"},{"size":877,"mtime":1609746086384,"results":"331","hashOfConfig":"182"},{"size":642,"mtime":1609827570534,"results":"332","hashOfConfig":"182"},{"size":697,"mtime":1609826771242,"results":"333","hashOfConfig":"182"},{"size":269,"mtime":1609308647328,"results":"334","hashOfConfig":"182"},{"size":201,"mtime":1609227503061,"results":"335","hashOfConfig":"182"},{"size":701,"mtime":1609728515582,"results":"336","hashOfConfig":"182"},{"size":599,"mtime":1609834382312,"results":"337","hashOfConfig":"182"},{"size":343,"mtime":1610932206073,"results":"338","hashOfConfig":"182"},{"size":1384,"mtime":1610939495390,"results":"339","hashOfConfig":"182"},{"size":3251,"mtime":1610938690698,"results":"340","hashOfConfig":"182"},{"size":170,"mtime":1610589325746,"results":"341","hashOfConfig":"182"},{"size":1288,"mtime":1609297841885,"results":"342","hashOfConfig":"182"},{"size":54,"mtime":1610931542473,"results":"343","hashOfConfig":"182"},{"size":810,"mtime":1606872168184,"results":"344","hashOfConfig":"182"},{"size":636,"mtime":1606873706117,"results":"345","hashOfConfig":"182"},{"size":2292,"mtime":1610000307754,"results":"346","hashOfConfig":"182"},{"size":38,"mtime":1610590884902,"results":"347","hashOfConfig":"182"},{"size":2838,"mtime":1606875127328,"results":"348","hashOfConfig":"182"},{"size":1294,"mtime":1609904879458,"results":"349","hashOfConfig":"182"},{"size":733,"mtime":1608887261936,"results":"350","hashOfConfig":"182"},{"size":513,"mtime":1609141622215,"results":"351","hashOfConfig":"182"},{"size":172,"mtime":1609827570534,"results":"352","hashOfConfig":"182"},{"size":1293,"mtime":1609308666629,"results":"353","hashOfConfig":"182"},{"size":1554,"mtime":1609742695343,"results":"354","hashOfConfig":"182"},{"size":222,"mtime":1610932792788,"results":"355","hashOfConfig":"182"},{"size":173,"mtime":1609727676563,"results":"356","hashOfConfig":"182"},{"size":143,"mtime":1606796644110,"results":"357","hashOfConfig":"182"},{"size":247,"mtime":1610530341352,"results":"358","hashOfConfig":"182"},{"size":288,"mtime":1610502945290,"results":"359","hashOfConfig":"182"},{"size":1324,"mtime":1610010637594,"results":"360","hashOfConfig":"182"},{"size":229,"mtime":1609313220184,"results":"361","hashOfConfig":"182"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"365"},"haxxk5",{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"373"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"365"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"388"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"392"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"392"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"388"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"376"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"414"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"423"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"373"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"414"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"441"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"441"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"423"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"373"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"376"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"373"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"417"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"392"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"373"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"507"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"373"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"365"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"507"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"376"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"417"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"423"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"376"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"365"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"562"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"373"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"365"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"365"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"365"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"365"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"365"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"376"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"423"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"414"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"486"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"365"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"365"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"365"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"365"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"626","messages":"627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"365"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"423"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"376"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"417"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"644","messages":"645","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"365"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"661","messages":"662","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"663","messages":"664","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"376"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"376"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"376"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"486"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"682","messages":"683","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"684","usedDeprecatedRules":"417"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"392"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"365"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"365"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"392"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"392"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"376"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"373"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"716","messages":"717","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"718","messages":"719","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"373"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"486"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"365"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"365"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"733","messages":"734","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"392"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"365"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"761","messages":"762","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"763","messages":"764","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"765","messages":"766","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"365"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772","usedDeprecatedRules":"373"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"373"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"392"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"365"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"790","messages":"791","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"800","messages":"801","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassRow.js",["802","803"],"import { makeObservable, observable, action } from 'mobx';\r\nimport TextView from '../../../../text/TextView';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil';\r\nimport * as util from './MassRowUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport default class MassRow {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      rank: observable,\r\n      isShowSub: observable,\r\n      isHaveSub : observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id){\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get Index() {\r\n    return this.Dict.FullRows.indexOf(this);\r\n  }\r\n\r\n  SubItems = []\r\n\r\n  Cells = []\r\n\r\n  isShowSub = true\r\n  get IsShowSub(){\r\n    return this.isShowSub;\r\n  }\r\n  set IsShowSub(v){\r\n    this.isShowSub = v;\r\n    this.ToggleButtonContentVM.Content = util.GetToggleButtonContent(this);\r\n  }\r\n\r\n  toggleButtonContent\r\n  get ToggleButtonContent(){\r\n    if (!this.toggleButtonContent){\r\n      this.toggleButtonContent = util.GetToggleButtonContent(this);\r\n    }\r\n    return this.toggleButtonContent;\r\n  }\r\n  set ToggleButtonContent(v){\r\n    this.toggleButtonContent = v;\r\n  }\r\n\r\n  toggleButtonContentVM\r\n  get ToggleButtonContentVM(){\r\n    if (!this.toggleButtonContentVM){\r\n      var obj =this.toggleButtonContentVM = textVMUtil.get(this.ToggleButtonContent);\r\n      obj.OnSetContent = (v) => this.ToggleButtonContent = v;\r\n    }\r\n    return this.toggleButtonContentVM;\r\n  }\r\n\r\n  rank = undefined\r\n  get Rank() {\r\n    if (this.rank === undefined) {\r\n      this.rank = util.GetRank(this);\r\n    }\r\n    return this.rank;\r\n  }\r\n  set Rank(v) {\r\n    this.rank = v;\r\n  }\r\n\r\n  isHaveSub = undefined\r\n  get IsHaveSub(){\r\n    if (!this.isHaveSub){\r\n      this.isHaveSub = util.GetIsHaveSub(this);\r\n    }\r\n    return this.isHaveSub;\r\n  }\r\n  set IsHaveSub(v){\r\n    this.isHaveSub = v;\r\n  }\r\n\r\n  get Style() {\r\n    return util.GetStyle(this);\r\n  }\r\n\r\n  GetCellByColumn = (col) => {\r\n    var index = this.Cells.findIndex(x => x.Column === col);\r\n    return index !== -1 ? this.Cells[index] : undefined;\r\n  }\r\n\r\n  UpdateData = () => {\r\n    this.Rank = util.GetRank(this);\r\n    this.IsHaveSub = util.GetIsHaveSub(this);\r\n  }\r\n\r\n  ToggleSub =() => {\r\n    this.IsShowSub = !this.IsShowSub;\r\n  }\r\n}",["804","805"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassRowUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassTableView.js",["806","807","808","809","810","811","812","813","814","815"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassRowView.js",["816","817","818","819","820","821","822","823","824","825"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassRow from \"./MassRow\";\r\nimport MassCellView from \"./MassCellView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassRowView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassRow();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var table = data.Dict;\r\n    var columns = table.Columns;\r\n\r\n    var subElems = data.IsShowSub ? data.SubItems.map((x, i) => {\r\n      return <MassRowView store={x} key={x.id} />\r\n    }) : ''\r\n\r\n    var toggleButton = data.IsHaveSub ?\r\n      <Button size='small' style={{ marginRight: 5, minWidth:25 }} type='primary'\r\n        onClick={data.ToggleSub}>\r\n        <TextView store={data.ToggleButtonContentVM} />\r\n      </Button>\r\n      : <div style={{ padding: '0 15.5px' }} />;\r\n\r\n    return (\r\n      <>\r\n        <tr>\r\n          <th scope=\"row\" >\r\n            <div style={data.Style}>\r\n              {toggleButton}\r\n              {data.Name}\r\n            </div>\r\n          </th>\r\n          {columns.map((y, j) => {\r\n            var cell = table.GetCell(y, data);\r\n            return <MassCellView key={cell.id} store={cell}/>\r\n          })}\r\n        </tr>\r\n        {subElems}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassRowView)",["826","827"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\model\\PMDataUtil.js",[],["828","829"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\SettingInputVM.js",["830","831"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil'\r\nimport * as util from './SettingVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport { Button, message } from 'antd';\r\n\r\nexport default class SettingInputVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      dataVM : observable,\r\n      isNew: observable\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  name\r\n  get Name(){\r\n    if(!this.name){\r\n      this.name = this.ModelItem.Name;\r\n    }\r\n    return this.name;\r\n  }\r\n  set Name(v){\r\n    this.name = v;\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  description\r\n  get Description(){\r\n    if (!this.description){\r\n      this.description = this.ModelItem.Description;\r\n    }\r\n    return this.description;\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.ModelItem.Description = v;\r\n  }\r\n\r\n  settingType\r\n  get SettingType(){\r\n    if (!this.settingType){\r\n      this.settingType = this.ModelItem.SettingType;\r\n    }\r\n    return this.settingType;\r\n  }\r\n  set SettingType(v){\r\n    this.settingType = v;\r\n    this.ModelItem.SettingType = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.Name;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM){\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên bộ lọc\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM){\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  settingTypeVM\r\n  get SettingTypeVM() {\r\n    if (!this.settingTypeVM){\r\n      var obj = this.settingTypeVM = \r\n        textVMUtil.get(this.SettingType, \"loại thiết lập\");\r\n      obj.onSetContent = (v) => this.SettingType = v;\r\n    }\r\n    return this.settingTypeVM;\r\n  }\r\n\r\n  dataVM = undefined\r\n  get DataVM(){\r\n    if (!this.dataVM){\r\n      this.dataVM = this.GetDataVM();\r\n    }\r\n    return this.dataVM;\r\n  }\r\n  set DataVM (v){\r\n    if (this.DataVM.SetData){\r\n      this.DataVM.SetData(v);\r\n    }\r\n  }\r\n\r\n  GetDataVM = () => {\r\n    if (this.OnGetDataVM){\r\n      var dataVM = this.OnGetDataVM();\r\n      return dataVM;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  editItem\r\n  get EditItem() {\r\n    return this.editItem;\r\n  }\r\n  set EditItem(v) {\r\n    this.editItem = v;\r\n\r\n    var input = this.ModelItem;\r\n    if (!v) {\r\n      input.EditItem = v;\r\n      this.IsNewVM.Ischecked = true;\r\n    }\r\n    else {\r\n      input.EditItem = v.ModelItem;\r\n\r\n      var { Name, Description, SettingType } = v;\r\n      this.NameVM.Content = Name;\r\n      this.DescriptionVM.Content = Description;\r\n      this.SettingTypeVM.Content = SettingType;\r\n\r\n      this.DataVM = v.DataVM;\r\n      this.IsNewVM.Ischecked = false;\r\n    }\r\n  }\r\n\r\n  isNew = undefined\r\n  get IsNew() {\r\n    if (this.isNew === undefined) {\r\n      this.isNew = this.ModelItem.IsNew;\r\n    }\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v) {\r\n    this.isNew = v;\r\n    this.CommandVM.Content = util.GetCommandName(this);\r\n    this.ModelItem.IsNew = v;\r\n  }\r\n\r\n  isNewVM\r\n  get IsNewVM() {\r\n    if (!this.isNewVM) {\r\n      var obj = this.isNewVM\r\n        = checkboxVMUtil.get(\"Thiết lập mới\", this.IsNew);\r\n\r\n      obj.isDisable = true;\r\n      obj.onCheckChange = (v) => {\r\n        this.IsNew = v;\r\n        if (v) {\r\n          obj.isDisable = true;\r\n        } else {\r\n          obj.isDisable = false;\r\n        }\r\n      };\r\n    }\r\n    return this.isNewVM;\r\n  }\r\n\r\n  commandName = undefined\r\n  get CommandName() {\r\n    if (!this.commandName) {\r\n      this.commandName = util.GetCommandName(this);\r\n    }\r\n    return this.commandName;\r\n  }\r\n  set CommandName(v) {\r\n    this.commandName = v;\r\n  }\r\n\r\n  commandVM\r\n  get CommandVM() {\r\n    if (!this.commandVM) {\r\n      var obj = this.commandVM = textVMUtil.get(this.CommandName);\r\n      obj.onSetContent = (v) => this.CommandName = v;\r\n    }\r\n    return this.commandVM;\r\n  }\r\n\r\n  deleteView\r\n  get DeleteView() {\r\n    return !this.IsNew ?\r\n      <Button onClick={this.DeleteFunc}>Delete</Button>\r\n      : \"\";\r\n  }\r\n\r\n  \r\n  DeleteFunc = () => {\r\n    this.EditItem.ModelItem.Delete();\r\n    this.EditItem.Delete();\r\n    this.EditItem = undefined;\r\n  }\r\n\r\n  AddDatabase = () => {\r\n    this.ModelItem.AddDatabase();\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\index.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\float\\FloatItemView.js",[],["832","833"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\view\\TestView.js",["834","835"],"import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport PMDataView from '../main/single/form/PMDataView';\r\nimport { Col, Row } from 'antd';\r\n\r\nclass TestView extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PMDataView />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TestView);\r\n",["836","837"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\MultiSelectVM.js",["838"],"import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class MultiSelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      selectedIndexs: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  initialItems;\r\n  get InitialItems() {\r\n    return this.initialItems;\r\n  }\r\n  set InitialItems(v){\r\n    this.initialItems = v;\r\n    this.InitialIndexs = this.GetInitialIndexs();\r\n    this.SelectedIndexs = this.InitialIndexs;\r\n  }\r\n\r\n  initialIndexs;\r\n  get InitialIndexs() {\r\n    if (!this.initialIndexs) {\r\n      this.initialIndexs = this.GetInitialIndexs();\r\n    }\r\n    return this.initialIndexs;\r\n  }\r\n  set InitialIndexs(v){\r\n    this.initialIndexs = v;\r\n  }\r\n\r\n  GetInitialIndexs =() => {\r\n    var initialItems = this.InitialItems;\r\n    if (!initialItems) return [];\r\n    return initialItems.map(x => this.Items.indexOf(x)).filter(x => x !== -1);\r\n  }\r\n\r\n  selectedIndexs = []\r\n  get SelectedIndexs() {\r\n    return this.selectedIndexs;\r\n  }\r\n  set SelectedIndexs(v) {\r\n    this.selectedIndexs = v;\r\n    this.SelectedItems = this.GetSelectedItems();\r\n  }\r\n\r\n  selectedItems\r\n  get SelectedItems() {\r\n    if (!this.selectedItems) {\r\n      this.selectedItems = this.GetSelectedItems();\r\n    }\r\n    return this.selectedItems;\r\n  }\r\n  set SelectedItems(v) {\r\n    this.selectedItems = v;\r\n    if (this.OnSelectedItemChanged) {\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  GetSelectedItems = () => {\r\n    return this.SelectedIndexs.map(x => this.Items[x]);\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder() {\r\n    if (!this.placeholder) {\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n}",["839","840"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\MultiSelectVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageInputVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\SelectVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageInputVM.js",["841"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../text/TextVMUtil'\r\nimport * as checkboxVMUtil from '../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../select/SelectVMUtil'\r\nimport * as util from './WorkpackageInputVMUtil'\r\nimport { Button } from 'antd';\r\n\r\nexport class WorkpackageInputVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isNew: observable\r\n    })\r\n  }\r\n\r\n  WorkpackageInput\r\n\r\n  code = undefined\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.WorkpackageInput.Code;\r\n    }\r\n    return this.code\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    this.WorkpackageInput.Code = v;\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.WorkpackageInput.Name;\r\n    }\r\n    return this.name\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    this.WorkpackageInput.Name = v;\r\n  }\r\n\r\n  description = undefined\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.WorkpackageInput.Description;\r\n    }\r\n    return this.description\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    this.WorkpackageInput.Description = v;\r\n  }\r\n\r\n  supItem = undefined\r\n  get SupItem(){\r\n    return this.supItem;\r\n  }\r\n  set SupItem(v){\r\n    this.supItem = v;\r\n    var input = this.WorkpackageInput;\r\n    if (!v) {\r\n      input.SupItem = v;\r\n    }else{\r\n      input.SupItem = v.Workpackage;\r\n    }\r\n  }\r\n\r\n  workpackageVMStorageList = undefined\r\n  get WorkpackageVMStorageList(){\r\n    if (!this.workpackageVMStorageList){\r\n      this.workpackageVMStorageList = util.GetWorkpackageVMStorageList(this);\r\n    }\r\n    return this.workpackageVMStorageList;\r\n  }\r\n  set WorkpackageVMStorageList(v){\r\n    this.workpackageVMStorageList = v;\r\n\r\n    var selectVM = this.SupItemSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItem = this.SupItem;\r\n  }\r\n\r\n  supItemSelectVM\r\n  get SupItemSelectVM(){\r\n    if (!this.supItemSelectVM){\r\n      var obj = this.supItemSelectVM = selectVMUtil.get\r\n        (this.WorkpackageVMStorageList, this.SupItem);\r\n      obj.Placeholder = 'công tác cha'\r\n      obj.CanClear = true;\r\n      obj.OnSelectedItemChanged = (v) => this.SupItem = v;\r\n    }\r\n    return this.supItemSelectVM;\r\n  }\r\n\r\n  isNew = undefined\r\n  get IsNew() {\r\n    if (this.isNew === undefined) {\r\n      this.isNew = this.WorkpackageInput.IsNew;\r\n    }\r\n    return this.isNew;\r\n  }\r\n  set IsNew(v) {\r\n    this.isNew = v;\r\n    this.CommandVM.Content = util.GetCommandName(this);\r\n    this.WorkpackageInput.IsNew = v;\r\n  }\r\n\r\n  commandName = undefined\r\n  get CommandName() {\r\n    if (!this.commandName) {\r\n      this.commandName = util.GetCommandName(this);\r\n    }\r\n    return this.commandName;\r\n  }\r\n  set CommandName(v) {\r\n    this.commandName = v;\r\n  }\r\n\r\n  workpackageVM\r\n  get WorkpackageVM() {\r\n    return this.workpackageVM;\r\n  }\r\n  set WorkpackageVM(v) {\r\n    this.workpackageVM = v;\r\n\r\n    if (!v) {\r\n      this.WorkpackageInput.Workpackage = v;\r\n      this.IsNewVM.Ischecked = true;\r\n    }\r\n    else {\r\n      this.WorkpackageInput.Workpackage = v.Workpackage;\r\n\r\n      var { Code, Name, Description, SupItem } = v;\r\n      this.CodeVM.Content = Code;\r\n      this.NameVM.Content = Name;\r\n      this.DescriptionVM.Content = Description;\r\n\r\n      this.SupItemSelectVM.InitialItem = SupItem;\r\n\r\n      this.IsNewVM.Ischecked = false;\r\n    }\r\n  }\r\n\r\n  codeVM\r\n  get CodeVM() {\r\n    if (!this.codeVM) {\r\n      var obj = this.codeVM =\r\n        textVMUtil.get(this.Code, \"mã code\");\r\n      obj.onSetContent = (v) => this.Code = v;\r\n    }\r\n    return this.codeVM;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên công tác\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  isNewVM\r\n  get IsNewVM() {\r\n    if (!this.isNewVM) {\r\n      var obj = this.isNewVM\r\n        = checkboxVMUtil.get(\"Công tác mới\", this.IsNew);\r\n\r\n      obj.isDisable = true;\r\n      obj.onCheckChange = (v) => {\r\n        this.IsNew = v;\r\n        if (v) {\r\n          obj.isDisable = true;\r\n        } else {\r\n          obj.isDisable = false;\r\n        }\r\n      };\r\n    }\r\n    return this.isNewVM;\r\n  }\r\n\r\n  commandVM\r\n  get CommandVM() {\r\n    if (!this.commandVM) {\r\n      var obj = this.commandVM = textVMUtil.get(this.CommandName);\r\n      obj.onSetContent = (v) => this.CommandName = v;\r\n    }\r\n    return this.commandVM;\r\n  }\r\n\r\n  AsString = () => `${this.Code} ${this.Name} ${this.Description} ${this.IsNew}`\r\n\r\n  AddDatabase = () => {\r\n    this.WorkpackageInput.AddDatabase();\r\n  }\r\n\r\n  deleteView\r\n  get DeleteView() {\r\n    return !this.IsNew ?\r\n      <Button onClick={this.DeleteFunc}>Delete</Button>\r\n      : \"\";\r\n  }\r\n\r\n  DeleteFunc = () => {\r\n    this.WorkpackageVM.Workpackage.Delete();\r\n    this.WorkpackageVM = undefined;\r\n  }\r\n\r\n  Clear = () => {\r\n    this.CodeVM.Content = null;\r\n    this.NameVM.Content = null;\r\n    this.DescriptionVM.Content = null;\r\n    this.IsNewVM.Ischecked = true;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageVM.js",["842"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../text/TextVMUtil'\r\nimport * as util from './WorkpackageVMUtil'\r\n\r\nexport class WorkpackageVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      fullName : observable\r\n    })\r\n  }\r\n\r\n  get Index(){\r\n    return this.Dict.WorkpackageVMs.indexOf(this);\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.Workpackage.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.Workpackage.M2VM = v;\r\n  }\r\n\r\n  Workpackage\r\n\r\n  supItem\r\n  get SupItem(){\r\n    if (!this.supItem){\r\n      this.supItem = util.GetSupItem(this);\r\n    }\r\n    return this.supItem;\r\n  }\r\n\r\n  code = undefined\r\n  get Code() {\r\n    if (!this.code) {\r\n      this.code = this.Workpackage.Code;\r\n    }\r\n    return this.code\r\n  }\r\n  set Code(v) {\r\n    this.code = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Code = v;\r\n    }\r\n  }\r\n\r\n  name = undefined\r\n  get Name() {\r\n    if (!this.name) {\r\n      this.name = this.Workpackage.Name;\r\n    }\r\n    return this.name\r\n  }\r\n  set Name(v) {\r\n    this.name = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Name = v;\r\n    }\r\n  }\r\n\r\n  description = undefined\r\n  get Description() {\r\n    if (!this.description) {\r\n      this.description = this.Workpackage.Description;\r\n    }\r\n    return this.description\r\n  }\r\n  set Description(v) {\r\n    this.description = v;\r\n    if (!this.M2VM) {\r\n      this.Workpackage.Description = v;\r\n    }\r\n  }\r\n\r\n  fullName = undefined\r\n  get FullName() {\r\n    if (!this.fullName) {\r\n      this.fullName = this.Workpackage.FullName;\r\n    }\r\n    return this.fullName;\r\n  }\r\n  set FullName(v) {\r\n    this.fullName = v;\r\n  }\r\n\r\n  get SearchName() {\r\n    return this.FullName;\r\n  }\r\n\r\n  get DisplayContent() {\r\n    return this.FullName;\r\n  }\r\n\r\n  codeVM\r\n  get CodeVM() {\r\n    if (!this.codeVM) {\r\n      var obj = this.codeVM =\r\n        textVMUtil.get(this.Code, \"mã code\");\r\n      obj.onSetContent = (v) => this.Code = v;\r\n    }\r\n    return this.codeVM;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      var obj = this.nameVM =\r\n        textVMUtil.get(this.Name, \"tên công tác\");\r\n      obj.onSetContent = (v) => this.Name = v;\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  descriptionVM\r\n  get DescriptionVM() {\r\n    if (!this.descriptionVM) {\r\n      var obj = this.descriptionVM =\r\n        textVMUtil.get(this.Description, \"mô tả\");\r\n      obj.onSetContent = (v) => this.Description = v;\r\n    }\r\n    return this.descriptionVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.Dict.WorkpackageVMs.splice(this.Index, 1);\r\n  }\r\n\r\n  AsString = () => {\r\n    console.log(this.Name, this.Code, this.Description);\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\Workpackage_Dict.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSetting_DictVM.js",["843"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ElementFilterSetting_DictVMUtil'\r\n\r\nexport class ElementFilterSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  get M2VM() {\r\n    return this.ModelItem.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.ModelItem.M2VM = v;\r\n  }\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n\r\n  items  = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n      this.Input.EditItem = v;\r\n    }\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageInput.js",[],["844","845"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\ProjectUtil.js",[],["846","847"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSetting.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingInputVM.js",["848"],"import Setting from \"../base/Setting\";\r\nimport SettingInputVM from \"../base/SettingInputVM\";\r\n\r\nexport default class ElementFilterSettingInputVM extends SettingInputVM {\r\n  \r\n}",["849","850"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\SettingInputUtil.js",["851"],"import * as st from './SettingType'\r\n\r\nexport const GetUrlPrefix = (q) => {\r\n  var prefix = undefined\r\n  switch (q.SettingType) {\r\n    case st.elementfilter:\r\n      prefix = 'ef';\r\n      break;\r\n    case st.massexport:\r\n      prefix = 'me';\r\n      break;\r\n    case st.massgroup:\r\n      prefix = 'mg';\r\n      break;\r\n  }\r\n  return prefix;\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\result\\MassResultComp.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassTable.js",["852","853","854","855","856"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as mif from '../item/MassItemField'\r\nimport MassColumn from './MassColumn';\r\nimport * as colUtil from './MassColumnUtil'\r\nimport * as rowUtil from './MassRowUtil'\r\nimport * as cellUtil from './MassCellUtil'\r\nimport * as util from './MassTableUtil'\r\nimport { PMData } from '../../../single/model/PMData';\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassTable {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsValidTable: observable,\r\n      Columns: observable,\r\n      MainRows: observable,\r\n      Cells: observable,\r\n      ColumnField: observable\r\n    })\r\n  }\r\n\r\n\r\n  items\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    if (v && v.length !== 0) {\r\n      this.Build();\r\n      this.IsValidTable = true;\r\n    }\r\n    else {\r\n      this.IsValidTable = false;\r\n    }\r\n  }\r\n\r\n  inputWorkpackages\r\n  get InputWorkpackages() {\r\n    return this.inputWorkpackages;\r\n  }\r\n  set InputWorkpackages(v) {\r\n    this.inputWorkpackages = v;\r\n  }\r\n\r\n  IsValidTable = false\r\n\r\n  ColumnField = mif.Project\r\n  RowField = mif.Workpackage\r\n\r\n  Columns = undefined\r\n  MainRows = undefined\r\n  FullRows = undefined\r\n  Cells = undefined\r\n\r\n  GetColumn = (v) => {\r\n    var list = this.Columns;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Name === v);\r\n    if (index === -1) {\r\n      item = colUtil.get(v, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  GetRowWithCheckField = (fieldValue, field) => {\r\n    var supRow = undefined;\r\n\r\n    switch (field) {\r\n      case mif.Workpackage:\r\n        var inputWps = this.InputWorkpackages;\r\n        var wp = fieldValue;\r\n        supRow = !inputWps.includes(wp) ?\r\n          this.GetRow(mif.GetValueString(wp.SupItem, field)) : undefined;\r\n        break;\r\n    }\r\n\r\n    return this.GetRow(mif.GetValueString(fieldValue, field), supRow);\r\n  }\r\n\r\n  GetRow = (v, supItem) => {\r\n    var list = this.FullRows;\r\n    var mainList = this.MainRows;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Name === v);\r\n    if (index === -1) {\r\n      item = rowUtil.get(v, this);\r\n      list.push(item);\r\n\r\n      if (!supItem) {\r\n        mainList.push(item);\r\n      } else {\r\n        supItem.SubItems.push(item);\r\n        item.SupItem = supItem;\r\n      }\r\n\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  GetCell = (col, row) => {\r\n    var list = this.Cells;\r\n    var item = undefined;\r\n    var index = list.findIndex(x => x.Column === col && x.Row === row);\r\n    if (index === -1) {\r\n      item = cellUtil.get(col, row, this);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    else {\r\n      return list[index];\r\n    }\r\n  }\r\n\r\n  Build = () => {\r\n    this.Columns = [];\r\n    this.MainRows = [];\r\n    this.FullRows = [];\r\n    this.Cells = [];\r\n\r\n    var colField = this.ColumnField;\r\n    var rowField = this.RowField;\r\n\r\n    if (colField === mif.Phase){\r\n      pmData().MassResultComp.Phases.forEach(x => {\r\n        var col = this.GetColumn(mif.GetValueString(x, colField));\r\n      })\r\n    }\r\n\r\n    const handleItem = (item, colFieldValue) => {\r\n      var col = this.GetColumn(mif.GetValueString(colFieldValue, colField));\r\n      var row = this.GetRowWithCheckField(item[rowField], rowField);\r\n      var cell = this.GetCell(col, row);\r\n      cell.Items.push(item);\r\n    }\r\n\r\n    this.Items.forEach(x => {\r\n      switch (colField) {\r\n        case mif.Phase:\r\n          x.ValidPhasesByInput.forEach(y => {\r\n            handleItem(x, y);\r\n          })\r\n          break;\r\n        default:\r\n          handleItem(x, x[colField]);\r\n          break;\r\n      }\r\n    })\r\n\r\n    this.FullRows.forEach(x => x.UpdateData());\r\n    this.Cells.forEach(x => x.UpdateData());\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\App.js",["857","858"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\reportWebVitals.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\util\\hb_PostUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSetting_DictVM.js",["859"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassGroupSetting_DictVMUtil'\r\n\r\nexport class MassGroupSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n      this.Input.EditItem = v;\r\n    }\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}",["860","861"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingInputVMUtil.js",["862"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassTableUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingDataVMUtil.js",["863"],"import { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport MassGroupSettingDataVM from './MassGroupSettingDataVM';\r\nimport * as fieldVMUtil from './field/MGS_FieldVMUtil'\r\nimport testUtils from 'react-dom/test-utils';\r\n\r\nexport const pmDataVM = () => {\r\n  return PMDataVM.Instance;\r\n}\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSettingDataVM();\r\n  qI.ModelItem = q;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetFieldVMs = (q) => {\r\n  var fields = q.ModelItem.Fields;\r\n  return fields.map(x => fieldVMUtil.get(x, q));\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\EntFilterVM.js",["864","865","866","867","868","869","870"],"import { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../single/form/PMDataVM'\r\nimport * as selectVMUtil from '../../../select/SelectVMUtil'\r\nimport * as multiSelectVMUtil from '../../../select/MultiSelectVMUtil'\r\n\r\nexport class EntFilterVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n    })\r\n  }\r\n\r\n  ModelItem\r\n\r\n  get pmDataVM () { return PMDataVM.Instance};\r\n\r\n  valueType\r\n  get ValueType() {\r\n    if (!this.valueType) {\r\n      this.valueType = this.ModelItem.ValueType;\r\n    }\r\n    return this.valueType;\r\n  }\r\n  set ValueType(v) {\r\n    this.valueType = v;\r\n    this.ModelItem.ValueType = v;\r\n  }\r\n\r\n  numberFilterType\r\n  get NumberFilterType() {\r\n    if (!this.numberFilterType) {\r\n      this.numberFilterType = this.ModelItem.NumberFilterType;\r\n    }\r\n    return this.numberFilterType;\r\n  }\r\n  set NumberFilterType(v) {\r\n    this.numberFilterType = v;\r\n    this.ModelItem.NumberFilterType = v;\r\n  }\r\n\r\n  stringFilterType\r\n  get StringFilterType() {\r\n    if (!this.stringFilterType) {\r\n      this.stringFilterType = this.ModelItem.StringFilterType;\r\n    }\r\n    return this.stringFilterType;\r\n  }\r\n  set StringFilterType(v) {\r\n    this.stringFilterType = v;\r\n    this.ModelItem.StringFilterType = v;\r\n  }\r\n\r\n  values\r\n  get Values() {\r\n    if (!this.values) {\r\n      this.values = this.ModelItem.Values;\r\n    }\r\n    return this.values;\r\n  }\r\n  set Values(v) {\r\n    this.values = v;\r\n    this.ModelItem.Values = v;\r\n  }\r\n\r\n  valueStorageList\r\n  get ValueStorageList() {\r\n    if (!this.valueStorageList){\r\n      this.valueStorageList = this.ModelItem.ValueStorageList;\r\n    }\r\n    return this.valueStorageList;\r\n  }\r\n\r\n  ValueSelectPlaceholder\r\n\r\n  valueTypeSelectVM\r\n  get ValueTypeSelectVM() {\r\n    if (!this.valueTypeSelectVM) {\r\n      var obj =this.valueTypeSelectVM = selectVMUtil.get(this.pmDataVM.FilterValueTypes, this.ValueType);\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.ValueType = v;\r\n      }\r\n    }\r\n    return this.valueTypeSelectVM;\r\n  }\r\n\r\n  stringFilterTypeSelectVM\r\n  get StringFilterTypeSelectVM() {\r\n    if (!this.stringFilterTypeSelectVM){\r\n      var obj = this.stringFilterTypeSelectVM = selectVMUtil.get(this.pmDataVM.StringFilterTypes, this.StringFilterType);\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.StringFilterType = v;\r\n      }\r\n    }\r\n    return this.stringFilterTypeSelectVM;\r\n  }\r\n\r\n  valuesSelectVM\r\n  get ValuesSelectVM() {\r\n    if (!this.valuesSelectVM){\r\n      var obj = this.valuesSelectVM = multiSelectVMUtil.get(this.ValueStorageList, this.Values);\r\n\r\n      if (this.ValueSelectPlaceholder){\r\n        obj.Placeholder = this.ValueSelectPlaceholder;\r\n      }\r\n\r\n      obj.OnSelectedItemChanged = (v) => {\r\n        this.Values = v;\r\n      }\r\n    }\r\n    return this.valuesSelectVM;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    if (!v) return;\r\n\r\n    var {ValueType, NumberFilterType, StringFilterType, Values} = v;\r\n    this.ValueTypeSelectVM.InitialItem = ValueType;\r\n    this.StringFilterTypeSelectVM.InitialItem = StringFilterType;\r\n    this.ValuesSelectVM.InitialItems = Values;\r\n  }\r\n\r\n  OnInitialData = () => {\r\n    var valueType = this.ValueType;\r\n    var numberFilterType = this.NumberFilterType;\r\n    var stringFilterType = this.StringFilterType;\r\n    var values = this.Values;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSetting_Dict.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingInputUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingInputUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSetting.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingInput.js",["871"],"import Setting from \"../base/Setting\";\r\nimport SettingInput from \"../base/SettingInput\";\r\nimport * as elementFilterSettingUtil from './ElementFilterSettingUtil'\r\n\r\nexport default class ElementFilterSettingInput extends SettingInput {\r\n  GetEditItem = (data, dict) => {\r\n    return elementFilterSettingUtil.get(data, dict);\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassCellView.js",["872","873","874","875","876","877","878","879","880","881","882","883"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Divider, Input, Row, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport TextView from \"../../../../text/TextView\";\r\nimport MassCell from \"./MassCell\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassCellView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassCell();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <td className='text-right' style={data.TDStyle}>\r\n          <a style={data.AStyle}\r\n            onClick={data.ShowDetail}>\r\n            <TextView store={data.ContentVM} />\r\n          </a>\r\n        </td>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassCellView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassCell.js",["884","885"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as textVMUtil from '../../../../text/TextVMUtil'\r\nimport * as api from '../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as mif from '../item/MassItemField'\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as util from './MassCellUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport default class MassCell {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueColor: observable,\r\n      tdBgColor : observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.randomId();\r\n    }\r\n    return this._id;\r\n  }\r\n\r\n  get ColumnIndex() {\r\n    //return this.Row.Cells.indexOf(this);\r\n    return this.Column.Index;\r\n  }\r\n\r\n  items = []\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  unit\r\n  get Unit() {\r\n    if (!this.unit) {\r\n      this.unit = this.GetUnit();\r\n    }\r\n    return this.unit;\r\n  }\r\n  set Unit(v) {\r\n    this.unit = v;\r\n  }\r\n\r\n  GetUnit = () => {\r\n    if (this.SubCells) {\r\n      var unit = undefined;\r\n      this.SubCells.forEach(x => {\r\n        if (x.Unit) {\r\n          unit = x.Unit;\r\n        }\r\n      })\r\n      return unit;\r\n    }\r\n    return this.Items && this.Items.length !== 0 ? this.Items[0].Unit : undefined;\r\n  }\r\n\r\n  unitVM\r\n  get UnitVM() {\r\n    if (!this.unitVM) {\r\n      this.unitVM = textVMUtil.get(this.Unit);\r\n      this.unitVM.OnSetContent = (v) => this.Unit = v;\r\n    }\r\n    return this.unitVM;\r\n  }\r\n\r\n  totalValue = undefined\r\n  get TotalValue() {\r\n    if (!this.totalValue) {\r\n      this.totalValue = this.GetTotalValue();\r\n    }\r\n    return this.totalValue;\r\n  }\r\n  set TotalValue(v) {\r\n    this.totalValue = v;\r\n  }\r\n\r\n  GetTotalValue = () => {\r\n    if (this.SubCells) {\r\n      return this.SubCells.reduce((a, b) => a + b.TotalValue, 0);\r\n    }\r\n    return this.Items.reduce((a, b) => a + b.Value, 0);\r\n  }\r\n\r\n  contentVM\r\n  get ContentVM() {\r\n    if (!this.contentVM) {\r\n      this.contentVM = textVMUtil.get(this.ValueString);\r\n    }\r\n    return this.contentVM;\r\n  }\r\n\r\n  get ValueString() {\r\n    var unit = this.Unit ? this.Unit : '';\r\n    return `${this.TotalValue.toFixed(2)} ${unit}`;\r\n  }\r\n\r\n  subCells\r\n  get SubCells() {\r\n    if (!this.subCells) {\r\n      this.subCells = this.GetSubCells();\r\n    }\r\n    return this.subCells;\r\n  }\r\n  set SubCells(v) {\r\n    this.subCells = v;\r\n  }\r\n\r\n  GetSubCells = () => {\r\n    var subRows = this.Row.SubItems;\r\n    if (subRows && subRows.length !== 0) {\r\n      var col = this.Column;\r\n      return subRows.map(x => x.GetCellByColumn(col))\r\n        .filter(x => x !== undefined);\r\n    }\r\n  }\r\n\r\n  massType\r\n  get MassType() {\r\n    if (!this.massType) {\r\n      this.massType = this.GetMassType();\r\n    }\r\n    return this.massType;\r\n  }\r\n  set MassType(v) {\r\n    this.massType = v;\r\n  }\r\n\r\n  GetMassType = () => {\r\n    return this.SubCells ? this.SubCells[0].MassType : this.Items[0].MassType;\r\n  }\r\n\r\n  AsString = () => {\r\n    console.log(`${this.Column.Name} - ${this.Row.Name} - ${this.TotalValue}`)\r\n  }\r\n\r\n  UpdateData = () => {\r\n    this.SubCells = this.GetSubCells();\r\n    this.TotalValue = this.GetTotalValue();\r\n    this.Unit = this.GetUnit();\r\n    this.ContentVM.Content = this.ValueString;\r\n    this.MassType = this.GetMassType();\r\n    this.IsHaveVCS_Item = util.GetIsHaveVCS_Item(this);\r\n    \r\n    if (this.IsHaveVCS_Item){\r\n      //debugger\r\n      this.VCS_Item = util.GetVCS_Item(this);\r\n    }\r\n\r\n    this.ValueColor = util.GetValueColor(this);\r\n    this.TDBgColor = util.GetTDBgColor(this);\r\n  }\r\n\r\n  ShowDetail = () => {\r\n    if (!this.viewDetailId) {\r\n      this.GetViewDetailId(data => {\r\n        var _id = this.viewDetailId = data._id;\r\n        window.open(`/massdetail/${_id}`, \"_blank\");\r\n      })\r\n    } else {\r\n      window.open(`/massdetail/${this.viewDetailId}`, \"_blank\");\r\n    }\r\n  }\r\n\r\n  viewDetailId\r\n\r\n  get AllItems() {\r\n    if (this.SubCells) {\r\n      return this.SubCells.map(x => x.Items).reduce((a, b) => a.concat(b), []);\r\n    }\r\n    return this.Items;\r\n  }\r\n\r\n  isHaveVCS_Item\r\n  get IsHaveVCS_Item(){\r\n    if (!this.isHaveVCS_Item){\r\n      this.isHaveVCS_Item = util.GetIsHaveVCS_Item(this);\r\n    }\r\n    return this.isHaveVCS_Item;\r\n  }\r\n  set IsHaveVCS_Item(v){\r\n    this.isHaveVCS_Item = v;\r\n  }\r\n\r\n  vcs_Item\r\n  get VCS_Item(){\r\n    if (!this.vcs_Item){\r\n      this.vcs_Item = util.GetVCS_Item(this);\r\n    }\r\n    return this.vcs_Item;\r\n  }\r\n  set VCS_Item(v){\r\n    this.vcs_Item = v;\r\n  }\r\n\r\n  valueColor = undefined\r\n  get ValueColor() {\r\n    if (!this.valueColor) {\r\n      this.valueColor = util.GetValueColor(this);\r\n    }\r\n    return this.valueColor;\r\n  }\r\n  set ValueColor(v){\r\n    this.valueColor = v\r\n  }\r\n\r\n  tdBgColor = undefined\r\n  get TDBgColor() {\r\n    if (!this.tdBgColor) {\r\n      this.tdBgColor = util.GetTDBgColor(this);\r\n    }\r\n    return this.tdBgColor;\r\n  }\r\n  set TDBgColor(v){\r\n    this.tdBgColor = v;\r\n  }\r\n\r\n  get AStyle() {\r\n    return {\r\n      color: this.ValueColor,\r\n      'font-weight': 'bold'\r\n    }\r\n  }\r\n\r\n  \r\n  get TDStyle() {\r\n    return {\r\n      'background-color': this.TDBgColor\r\n    }\r\n  }\r\n\r\n  ApiData = () => {\r\n    var massIds = this.AllItems.map(x => x._id);\r\n    return {\r\n      massType: this.MassType,\r\n      massIds\r\n    };\r\n  }\r\n\r\n  GetViewDetailId = (handle) => {\r\n    var apiData = this.ApiData();\r\n    var url = \"https://api.bimdev.vn/api/hbdv/updatemass\";\r\n    api.put(url, apiData).then(response => response.data)\r\n      .then(data => handle(data))\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\detail\\MassDetailView.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\item\\MassItemUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\detail\\MassDetailVM.js",["886"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as massItemUtil from '../item/MassItemUtil'\r\nimport MassDetailTable from './MassDetailTable';\r\n\r\nexport class MassDetailVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id(){\r\n    return this._id;\r\n  }\r\n  set id(v){\r\n    this._id = v;\r\n    massItemUtil.getByViewDetail(v, (items) => {\r\n      this.Items = items;\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items(){\r\n    return this.items;\r\n  } \r\n  set Items(v){\r\n    this.items = v;\r\n    this.DetailTable.Items = v;\r\n  }\r\n\r\n  detailTable\r\n  get DetailTable() {\r\n    if (!this.detailTable){\r\n      this.detailTable = new MassDetailTable();\r\n    }\r\n    return this.detailTable;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\util\\htmlUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\FilterValueType.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\item\\MassItemField.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\MassPropertyName.js",[],["887","888"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingDataVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueSettingVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\SelectVM.js",["889"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\FilterCategoryType.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingVM.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\Project_DictVMUtil.js",["890"],"import * as itemVMUtil from './ProjectVMUtil'\r\nimport { Project_DictVM } from \"./Project_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new Project_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingInputUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\result\\MassResultCompUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingInput.js",["891"],"import Setting from \"../base/Setting\";\r\nimport SettingInput from \"../base/SettingInput\";\r\nimport * as massExportSettingUtil from './MassExportSettingUtil'\r\n\r\nexport default class MassExportSettingInput extends SettingInput {\r\n  GetEditItem = (data, dict) => {\r\n    return massExportSettingUtil.get(data, dict);\r\n  }\r\n}",["892","893"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSetting.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\detail\\MassDetailTable.js",["894","895","896"],"import { makeObservable, observable, action } from 'mobx';\r\nimport CellVM from '../../../../table/CellVM';\r\nimport ColumnVM from '../../../../table/ColumnVM';\r\nimport RowVM from '../../../../table/RowVM';\r\nimport * as mif from '../item/MassItemField'\r\nimport * as util from './MassDetailTableUtil'\r\n\r\nexport default class MassDetailTable {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      rows: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v;\r\n\r\n    if (v && v.length !== 0) {\r\n      this.IsValidTable = true;\r\n    }\r\n    else {\r\n      this.IsValidTable = false;\r\n    }\r\n    this.Fields = util.GetFields(this);\r\n    this.Rows = this.GetRows();\r\n  }\r\n\r\n  IsValidTable = false\r\n\r\n  fields = undefined\r\n  get Fields() {\r\n    if (!this.fields) {\r\n      this.fields = util.GetFields(this);\r\n    }\r\n    return this.fields;\r\n  }\r\n  set Fields(v){\r\n    this.fields = v;\r\n    this.Columns = util.GetColumns(this);\r\n  }\r\n\r\n  columns = undefined\r\n  get Columns(){\r\n    if (!this.columns){\r\n      this.columns = util.GetColumns(this);\r\n    }\r\n    return this.columns;\r\n  }\r\n  set Columns(v){\r\n    this.columns = v;\r\n  }\r\n\r\n  rows = undefined\r\n  get Rows(){\r\n    if (!this.rows){\r\n      this.rows = this.GetRows();\r\n    }\r\n    return this.rows;\r\n  }\r\n  set Rows(v){\r\n    this.rows = v;\r\n  }\r\n\r\n  GetRows = () => {\r\n    var items = this.Items;\r\n    if (!items) return [];\r\n    var fields = this.Fields;\r\n\r\n    return items.map(x => {\r\n      var row = new RowVM();\r\n      row.Cells = fields.map(y => {\r\n        var cell = new CellVM();\r\n        cell.OnGetValueString = () => {\r\n          var value = cell.Value;\r\n          if(!isNaN(value)){\r\n           return parseFloat(value).toFixed(2);\r\n          }\r\n          return value;\r\n        }\r\n\r\n        const setValueFunc = () => cell.Value = mif.GetValueString(x.GetValue(y), y);\r\n        if (mif.GetIdentifyFields().includes(y) && !x.Element){\r\n          x.OnGetElementDone_Funcs.push(() => {\r\n            setValueFunc();\r\n          });\r\n        }else{\r\n          setValueFunc();\r\n        }\r\n\r\n        var className = 'text-center';\r\n        switch(y){\r\n          case mif.Value:\r\n            className='text-right';\r\n            break;\r\n        }\r\n        cell.className = className;\r\n\r\n        return cell;\r\n      })\r\n      return row;\r\n    })\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\detail\\MassDetailTableView.js",["897","898"],"import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport MassDetailTable from './MassDetailTable';\r\n\r\nclass MassDetailTableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassDetailTable();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var colElems = data.Columns.map((x,i) => {\r\n      return <th scope=\"col\" key={i} className='text-center'>{x.Name}</th>\r\n    })\r\n\r\n    var rowElems = data.Rows.map((x, i) => {\r\n      var cellElems = x.Cells.map((y, j) => {\r\n        return <td key={j} className={y.className}>{y.ValueString}</td>\r\n      })\r\n      return <tr key={i}>\r\n        {cellElems}\r\n      </tr>\r\n    })\r\n\r\n    return (\r\n      <>\r\n        <table className=\"table table-bordered table-sm\">\r\n          <thead>\r\n            <tr>\r\n             {colElems}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rowElems}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(MassDetailTableView);\r\n","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\table\\CellVM.js",["899"],"import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class CellVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueString : observable\r\n    })\r\n  }\r\n\r\n  value\r\n  get Value(){\r\n    return this.value\r\n  }\r\n  set Value(v){\r\n    this.value = v;\r\n    this.ValueString = this.GetValueString();\r\n  }\r\n\r\n  valueString = undefined\r\n  get ValueString (){\r\n    if (!this.valueString){\r\n      this.valueString = this.GetValueString();\r\n    }\r\n    return this.valueString;\r\n  }\r\n  set ValueString(v){\r\n    this.valueString = v;\r\n  }\r\n\r\n  GetValueString = () => {\r\n    return this.OnGetValueString();\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\model\\PMData.js",["900","901","902","903"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSetting_Dict.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\model\\CategoryDataUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\checkbox\\CheckboxVM.js",["904"],"import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class CheckboxVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      ischecked: observable,\r\n      isDisable : observable\r\n    })\r\n  }\r\n\r\n  name\r\n\r\n  ischecked = undefined\r\n  set Ischecked(v) {\r\n    this.ischecked = v;\r\n    if (this.onCheckChange) {\r\n      this.onCheckChange(v);\r\n    }\r\n  }\r\n\r\n  isDisable = false\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassColumnUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassColumn.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\SettingType.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingDataUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueSettingUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSetting_DictVMUtil.js",["905"],"import * as itemVMUtil from './MassExportSettingVMUtil'\r\nimport * as inputVMUtil from './MassExportSettingInputVMUtil'\r\nimport { MassExportSetting_DictVM } from \"./MassExportSetting_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassExportSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (dictVM) => {\r\n  var input = dictVM.ModelItem.Input;\r\n  return inputVMUtil.get(input, dictVM);\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueSettingVM.js",["906","907","908"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../../filter/EntFilterVMUtil'\r\nimport * as util from './MES_ValueSettingVMUtil'\r\nimport * as selectVMUtil from '../../../../../select/SelectVMUtil'\r\n\r\nexport default class MES_ValueSettingVM {\r\n  // constructor() {\r\n  //   makeObservable(this, {\r\n\r\n  //   })\r\n  // }\r\n\r\n  get Index() {\r\n    return this.Dict.ValueSettingVMs.indexOf(this);\r\n  }\r\n\r\n  retrieveType\r\n  get RetrieveType() {\r\n    if (!this.retrieveType) {\r\n      this.retrieveType = this.ModelItem.RetrieveType;\r\n    }\r\n    return this.retrieveType;\r\n  }\r\n  set RetrieveType(v) {\r\n    this.retrieveType = v;\r\n    this.ModelItem.RetrieveType = v;\r\n  }\r\n\r\n  get RetrieveTypeStorageList() {\r\n    return util.GetRetrieveTypeStorageList(this);\r\n  }\r\n\r\n  retrieveTypeSelectVM\r\n  get RetrieveTypeSelectVM() {\r\n    if (!this.retrieveTypeSelectVM) {\r\n      var obj = this.retrieveTypeSelectVM = selectVMUtil.get(this.RetrieveTypeStorageList, this.RetrieveType);\r\n      obj.OnSelectedItemChanged = (v) => this.RetrieveType = v;\r\n    }\r\n    return this.retrieveTypeSelectVM;\r\n  }\r\n\r\n  valueFilterVM\r\n  get ValueFilterVM() {\r\n    if (!this.valueFilterVM) {\r\n      var obj = this.valueFilterVM = filterVMUtil.get(this.ModelItem.ValueFilter);\r\n      obj.ValueSelectPlaceholder = 'giá trị parameter';\r\n    }\r\n    return this.valueFilterVM;\r\n  }\r\n  set ValueFilterVM(v) {\r\n    this.valueFilterVM = v;\r\n    if (!v) {\r\n      this.ModelItem.ValueFilter = v;\r\n    }\r\n    else {\r\n      this.ModelItem.ValueFilter = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  workpackageVM\r\n  get WorkpackageVM() {\r\n    if (!this.workpackageVM) {\r\n      this.workpackageVM = util.GetWorkpackageVM(this);\r\n    }\r\n    return this.workpackageVM;\r\n  }\r\n  set WorkpackageVM(v) {\r\n    this.workpackageVM = v;\r\n    var modelItem = this.ModelItem;\r\n    if (!v) {\r\n      modelItem.Workpackage = v;\r\n    }\r\n    else {\r\n      this.ModelItem.Workpackage = v.Workpackage;\r\n    }\r\n  }\r\n\r\n  workpackageVMStorageList = undefined;\r\n  get WorkpackageVMStorageList() {\r\n    if (!this.workpackageVMStorageList) {\r\n      this.workpackageVMStorageList = util.GetWorkpackageVMStorageList(this);\r\n    }\r\n    return this.workpackageVMStorageList;\r\n  }\r\n  set WorkpackageVMStorageList(v) {\r\n    this.workpackageVMStorageList = v;\r\n\r\n    var selectVM = this.WorkpackageSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.SelectedIndex = -1;\r\n  }\r\n\r\n  workpackageSelectVM\r\n  get WorkpackageSelectVM() {\r\n    if (!this.workpackageSelectVM) {\r\n      var storageList = this.WorkpackageVMStorageList ?\r\n        this.WorkpackageVMStorageList : [];\r\n\r\n      var obj = this.workpackageSelectVM = selectVMUtil.get\r\n        (storageList, this.WorkpackageVM);\r\n      obj.Placeholder = 'chọn công tác';\r\n      obj.OnSelectedItemChanged = (v) => this.WorkpackageVM = v;\r\n    }\r\n\r\n    return this.workpackageSelectVM;\r\n  }\r\n\r\n  massType\r\n  get MassType() {\r\n    if (!this.massType) {\r\n      this.massType = this.ModelItem.MassType;\r\n    }\r\n    return this.massType;\r\n  }\r\n  set MassType(v) {\r\n    this.massType = v;\r\n    this.ModelItem.MassType = v;\r\n  }\r\n\r\n  get MassTypeStorageList() {\r\n    return util.GetMassTypeStorageList(this);\r\n  }\r\n\r\n  massTypeSelectVM\r\n  get MassTypeSelectVM() {\r\n    if (!this.massTypeSelectVM) {\r\n      var obj = this.massTypeSelectVM = selectVMUtil.get(this.MassTypeStorageList, \r\n        this.MassType);\r\n      obj.Placeholder = 'loại khối lượng';\r\n      obj.OnSelectedItemChanged = (v) => this.MassType = v;\r\n    }\r\n    return this.massTypeSelectVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.ModelItem.Delete();\r\n    var list = this.Dict.ValueSettingVMs;\r\n    list.splice(this.Index, 1);\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.RetrieveTypeSelectVM.InitialItem = v.RetrieveType;\r\n    this.ValueFilterVM.SetData(v.ValueFilterVM);\r\n    this.WorkpackageSelectVM.InitialItem = v.WorkpackageVM;\r\n    this.MassTypeSelectVM.InitialItem = v.MassType;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueRetrieveType.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueSetting.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingDataVM.js",["909","910","911"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as util from './MassExportSettingDataVMUtil'\r\nimport * as valueSettingVMUtil from './exportSetting/MES_ValueSettingVMUtil'\r\nimport * as valueSettingUtil from './exportSetting/MES_ValueSettingUtil'\r\n\r\nexport default class MassExportSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      valueSettingVMs: observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  elementFilterVM\r\n  get ElementFilterVM() {\r\n    if (!this.elementFilterVM) {\r\n      this.elementFilterVM = util.GetElementFilterVM(this);\r\n    }\r\n    return this.elementFilterVM;\r\n  }\r\n  set ElementFilterVM(v) {\r\n    this.elementFilterVM = v;\r\n    var modelItem = this.ModelItem;\r\n    if (!v) {\r\n      modelItem.ElementFilter = v;\r\n    }\r\n    else {\r\n      modelItem.ElementFilter = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  elementFilterVMStorageList = undefined\r\n  get ElementFilterVMStorageList() {\r\n    if (!this.elementFilterVMStorageList) {\r\n      this.elementFilterVMStorageList = util.GetElementFilterVMStorageList(this);\r\n    }\r\n    return this.elementFilterVMStorageList;\r\n  }\r\n  set ElementFilterVMStorageList(v) {\r\n    this.elementFilterVMStorageList = v;\r\n\r\n    var selectVM = this.ElementFilterSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.SelectedIndex = 0;\r\n  }\r\n\r\n  elementFilterSelectVM\r\n  get ElementFilterSelectVM() {\r\n    if (!this.elementFilterSelectVM) {\r\n      var storageList = this.ElementFilterVMStorageList ? this.ElementFilterVMStorageList : [];\r\n\r\n      var obj = this.elementFilterSelectVM = selectVMUtil.get(storageList, this.ElementFilterVM);\r\n      obj.Placeholder = 'chọn bộ lọc'\r\n      obj.OnSelectedItemChanged = (v) => this.ElementFilterVM = v;\r\n    }\r\n    return this.elementFilterSelectVM;\r\n  }\r\n\r\n  valueSettingVMs = undefined\r\n  get ValueSettingVMs() {\r\n    if (!this.valueSettingVMs) {\r\n      this.valueSettingVMs = util.GetValueSettingVMs(this);\r\n    }\r\n    return this.valueSettingVMs;\r\n  }\r\n  set ValueSettingVMs(v) {\r\n    var list = this.valueSettingVMs;\r\n    var modelList = this.ModelItem.ValueSettings;\r\n\r\n    var oldCount = list.length;\r\n    var newCount = v.length;\r\n\r\n    list.forEach((x, i) => {\r\n      if (i >= newCount) return;\r\n      x.SetData(v[i]);\r\n    });\r\n\r\n    var delta = Math.abs(oldCount - newCount);\r\n    if (oldCount > newCount) {\r\n      list.splice(newCount, delta);\r\n      modelList.splice(newCount, delta);\r\n    }\r\n    else if (oldCount < newCount) {\r\n      for (var i = 0; i < delta; i++) {\r\n        var originItemVM = v[oldCount + i];\r\n\r\n        var item = valueSettingUtil.Clone\r\n          (originItemVM.ModelItem, this.ModelItem);\r\n        modelList.push(item);\r\n\r\n        var itemVM = valueSettingVMUtil.get(item, this);\r\n        list.push(itemVM);\r\n      }\r\n    }\r\n  }\r\n\r\n  AddNewValueSettingVM = () => {\r\n    var item = this.ModelItem.AddNewValueSetting();\r\n    var itemView = valueSettingVMUtil.get(item, this);\r\n    this.ValueSettingVMs.push(itemView);\r\n    return itemView;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.ElementFilterSelectVM.InitialItem = v.ElementFilterVM;\r\n    this.ValueSettingVMs = v.ValueSettingVMs;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\detail\\MassDetailTableUtil.js",["912"],"import * as mt from '../MassType'\r\nimport * as mif from '../item/MassItemField'\r\nimport ColumnVM from '../../../../table/ColumnVM';\r\n\r\nexport const GetFields = (q) => {\r\n  var list = q.Items;\r\n  if (!list || list.length === 0) return [];\r\n\r\n  var massType = list[0].MassType;\r\n  switch (massType) {\r\n    case mt.rebar:\r\n      return [mif.partition, mif.rebarType, mif.Value, mif.Unit];\r\n    case mt.concrete:\r\n    case mt.formwork:\r\n      return [mif.elementName, mif.Value, mif.Unit];\r\n    default:\r\n      return [mif.Value, mif.Unit]\r\n  }\r\n  return [];\r\n}\r\n\r\nexport const GetColumns = (q) => {\r\n  return q.Fields.map(x => {\r\n    var col = new ColumnVM();\r\n    col.Name = x;\r\n    return col;\r\n  })\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\element\\ElementUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\constant\\viewType.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\map\\MapView.js",[],["913","914"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\form\\PMDataView.js",["915","916","917","918"],"import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport Workpackage_DictView from '../../entity/workpackage/Workpackage_DictView';\r\nimport ElementFilterSetting_DictView from '../../entity/setting/elementFilter/ElementFilterSetting_DictView';\r\nimport MassExportSetting_DictView from '../../entity/setting/massExport/MassExportSetting_DictView';\r\nimport MassGroupSetting_DictView from '../../entity/setting/massGroup/MassGroupSetting_DictView';\r\n\r\nimport { PMDataVM } from './PMDataVM';\r\nimport MassResultCompView from '../../entity/mass/result/MassResultCompView';\r\n\r\nclass PMDataView extends Component {\r\n  get pmDataVM() { return PMDataVM.Instance };\r\n\r\n  render() {\r\n    var data = this.pmDataVM;\r\n\r\n    return (\r\n      <>\r\n        <Row gutter={15} style={{ padding: 15 }}>\r\n          <Col span={6}>\r\n            <Workpackage_DictView store={data.Workpackage_DictVM} />\r\n\r\n            <ElementFilterSetting_DictView store={data.ElementFilterSetting_DictVM} />\r\n\r\n            <MassExportSetting_DictView store={data.MassExportSetting_DictVM} />\r\n\r\n            <MassGroupSetting_DictView store={data.MassGroupSetting_DictVM} />\r\n          </Col>\r\n          <Col span={14}>\r\n            <MassResultCompView store={data.MassResultCompVM} />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(PMDataView);\r\n","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\float\\FloatItemVM.js",["919","920","921"],"import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class FloatItemVM {\r\n  location\r\n\r\n  className\r\n  getClassName = () => {\r\n    if (!this.className){\r\n      this.className = `float ${this.location}`;\r\n    }\r\n    return this.className\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\html\\HtmlRenderVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\form\\PMDataVM.js",["922","923","924","925"],"import { makeObservable, observable, action } from 'mobx';\r\nimport { PMData } from '../model/PMData';\r\nimport * as util from './PMDataVMUtil'\r\n\r\nexport class PMDataVM {\r\n  constructor() {\r\n    \r\n  }\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new PMDataVM();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  get pmData(){\r\n    return PMData.Instance;\r\n  }\r\n\r\n  workpackage_DictVM\r\n  get Workpackage_DictVM() {\r\n    if (!this.workpackage_DictVM){\r\n      this.workpackage_DictVM = util.GetWorkpackage_DictVM();\r\n    }\r\n    return this.workpackage_DictVM;\r\n  }\r\n\r\n  elementFilterSetting_DictVM\r\n  get ElementFilterSetting_DictVM() {\r\n    if (!this.elementFilterSetting_DictVM){\r\n      this.elementFilterSetting_DictVM = util.GetElementFilterSetting_DictVM();\r\n    }\r\n    return this.elementFilterSetting_DictVM;\r\n  }\r\n\r\n  massExportSetting_DictVM\r\n  get MassExportSetting_DictVM() {\r\n    if (!this.massExportSetting_DictVM){\r\n      this.massExportSetting_DictVM = util.GetMassExportSetting_DictVM();\r\n    }\r\n    return this.massExportSetting_DictVM;\r\n  }\r\n\r\n  massGroupSetting_DictVM\r\n  get MassGroupSetting_DictVM() {\r\n    if (!this.massGroupSetting_DictVM){\r\n      this.massGroupSetting_DictVM = util.GetMassGroupSetting_DictVM();\r\n    }\r\n    return this.massGroupSetting_DictVM;\r\n  }\r\n\r\n  project_DictVM\r\n  get Project_DictVM() {\r\n    if (!this.project_DictVM){\r\n      this.project_DictVM = util.GetProject_DictVM();\r\n    }\r\n    return this.project_DictVM;\r\n  }\r\n\r\n  massResultCompVM\r\n  get MassResultCompVM(){\r\n    if (!this.massResultCompVM){\r\n      this.massResultCompVM = util.GetMassResultCompVM();\r\n    }\r\n    return this.massResultCompVM;\r\n  }\r\n  set MassResultCompVM(v) {\r\n    this.massResultCompVM = v;\r\n    if (!v)\r\n    {\r\n      this.pmData.MassResultComp = v;\r\n    }\r\n    else{\r\n      this.pmData.MassResultComp = v.ModelItem;\r\n    }\r\n  }\r\n\r\n  filterValueTypes;\r\n  get FilterValueTypes() {\r\n    if (!this.filterValueTypes){\r\n      this.filterValueTypes = this.pmData.FilterValueTypes;\r\n    }\r\n    return this.filterValueTypes;\r\n  }\r\n\r\n  stringFilterTypes;\r\n  get StringFilterTypes() {\r\n    if (!this.stringFilterTypes){\r\n      this.stringFilterTypes = this.pmData.StringFilterTypes;\r\n    }\r\n    return this.stringFilterTypes;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = this.pmData.CategoryNames;\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n\r\n  valueRetrieveTypes\r\n  get ValueRetrieveTypes() {\r\n    if (!this.valueRetrieveTypes){\r\n      this.valueRetrieveTypes = this.pmData.ValueRetrieveTypes\r\n    }\r\n    return this.valueRetrieveTypes;\r\n  }\r\n\r\n  parameterNames;\r\n  get ParameterNames(){\r\n    if (!this.parameterNames){\r\n      this.parameterNames = this.pmData.ParameterNames;\r\n    }\r\n    return this.parameterNames;\r\n  }\r\n\r\n  massPropertyNames;\r\n  get MassPropertyNames(){\r\n    if (!this.massPropertyNames){\r\n      this.massPropertyNames = this.pmData.MassPropertyNames;\r\n    }\r\n    return this.massPropertyNames;\r\n  }\r\n\r\n  massTypes;\r\n  get MassTypes(){\r\n    if (!this.massTypes){\r\n      this.massTypes = this.pmData.MassTypes;\r\n    }\r\n    return this.massTypes;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSetting_DictView.js",["926","927","928","929","930"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { ElementFilterSetting_DictVM } from \"./ElementFilterSetting_DictVM\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport ElementFilterSettingDataView from \"./ElementFilterSettingDataView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass ElementFilterSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ElementFilterSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  test = () => {\r\n    console.log(\"test button\");\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.Items;\r\n    var wp = data.CurrentItem = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    \r\n    var items = data.Items;\r\n    var elems = items ? items.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var input = data.Input;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Bộ lọc đối tượng</b>\r\n        </Divider>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search bộ lọc\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{marginTop:20}}>\r\n          <InputView store={input.NameVM} />\r\n          <InputView store={input.DescriptionVM} />\r\n\r\n          <ElementFilterSettingDataView store={input.DataVM}/>\r\n\r\n          <CheckboxView store={input.IsNewVM} />\r\n          <Button style={{margin:10}}\r\n            onClick={input.AddDatabase}>{input.CommandVM.Content}</Button>\r\n          {input.DeleteView}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ElementFilterSetting_DictView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\input\\InputView.js",["931","932","933","934","935"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\n\r\nclass InputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    var { value } = e.target;\r\n    this.state.Content = value;\r\n  }\r\n\r\n  render() {\r\n    var { content, placeholder } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Input value={content} onChange={this.onChange}\r\n          placeholder={placeholder}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(InputView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSetting_DictVM.js",["936"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassExportSetting_DictVMUtil'\r\n\r\nexport class MassExportSetting_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  currentItem\r\n  get CurrentItem(){\r\n    if (!this.currentItem){\r\n      this.currentItem = this.ModelItem.CurrentItem;\r\n    }\r\n    return this.currentItem;\r\n  }\r\n  set CurrentItem(v){\r\n    this.currentItem = v;\r\n    if (!v){\r\n      this.ModelItem.CurrentItem = v;\r\n    }else{\r\n      this.ModelItem.CurrentItem = v.ModelItem;\r\n      this.Input.EditItem = v;\r\n    }\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\checkbox\\CheckboxView.js",["937","938","939","940"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as checkboxVMUtil from './CheckboxVMUtil'\r\n\r\nclass CheckboxView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = checkboxVMUtil.get(false);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onCheckedChange = (e) => {\r\n    var { checked } = e.target;\r\n    this.state.Ischecked = checked;\r\n  }\r\n\r\n  render() {\r\n    var { ischecked, name, isDisable } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <label>\r\n        <input type=\"checkbox\" \r\n          checked={ischecked}\r\n          onChange={this.onCheckedChange} disabled={isDisable}/>\r\n          {name} \r\n        </label>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(CheckboxView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\item\\MassItem.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSetting_DictVMUtil.js",["941"],"import * as itemVMUtil from './MassGroupSettingVMUtil'\r\nimport * as inputVMUtil from './MassGroupSettingInputVMUtil'\r\nimport { MassGroupSetting_DictVM } from \"./MassGroupSetting_DictVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new MassGroupSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (dictVM) => {\r\n  var input = dictVM.ModelItem.Input;\r\n  return inputVMUtil.get(input, dictVM);\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\result\\MassResultCompVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\field\\MGS_FieldVM.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\field\\MGS_FieldVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingDataVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\EntFilter.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\SettingVMUtil.js",["942"],"import { message } from \"antd\";\r\nimport { SettingVM } from \"./SettingVM\";\r\n\r\nexport const get = (q) => {\r\n  var qI = new SettingVM();\r\n  qI.Setting = q;\r\n\r\n  q.OnDelete = () => {\r\n    qI.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetCommandName = (qI) => {\r\n  var isNew = qI.IsNew;\r\n  return isNew ? \"Create\" : \"Edit\";\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSetting_Dict.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\WorkpackageVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\ProjectVM.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\slider\\SliderVM.js",["943"],"\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as htmlRenderVMUtil from '../html/HtmlRenderVMUtil'\r\nimport HtmlRenderView from '../html/HtmlRenderView'\r\nimport * as floatItemVMUtil from '../float/FloatItemVMUtil'\r\nimport { Button } from 'antd';\r\nimport FloatItemView from '../float/FloatItemView';\r\n\r\nexport class SliderVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      htmlContents: observable,\r\n    })\r\n  }\r\n\r\n  htmlContents = undefined\r\n  getHtmlContents = () => {\r\n    if (!this.htmlContents) {\r\n      this.htmlContents = [\r\n       ``\r\n      ]\r\n    }\r\n    return this.htmlContents;\r\n  }\r\n  setHtmlContents = (value) => {\r\n    this.htmlContents = value;\r\n    this.setCurrentIndex(0);\r\n  }\r\n\r\n  htmlRenderVMs\r\n  getHtmlRenderVMs = () => {\r\n    if (!this.htmlRenderVMs) {\r\n      this.htmlRenderVMs =\r\n        this.getHtmlContents().map(x => {\r\n          return htmlRenderVMUtil.get(x, true);\r\n        })\r\n    }\r\n    return this.htmlRenderVMs;\r\n  }\r\n\r\n  isLoop = true;\r\n\r\n  currentIndex = 0\r\n  setCurrentIndex = (value) => {\r\n    var isLoop = this.isLoop;\r\n    var lastIndex =this.htmlContents.length -1; \r\n    if (value < 0){ \r\n      if (!isLoop) return;\r\n      value = lastIndex;\r\n    }\r\n    else if (value > lastIndex){\r\n      if (!isLoop) return;\r\n      value = 0;\r\n    }\r\n    this.currentIndex = value;\r\n    this.getHtmlRenderVM().setContent(this.getCurrentContent());\r\n  }\r\n\r\n  getCurrentContent = () => {\r\n    var content = this.getHtmlContents()[this.currentIndex];\r\n    return content;\r\n  }\r\n\r\n  htmlRenderVM\r\n  getHtmlRenderVM = () => {\r\n    if (!this.htmlRenderVM){\r\n      var content = this.getCurrentContent();\r\n      this.htmlRenderVM = htmlRenderVMUtil.get(content, true);\r\n    }\r\n    return this.htmlRenderVM;\r\n  }\r\n\r\n  htmlRenderView\r\n  getHtmlRenderView = () => {\r\n    if (!this.htmlRenderView){\r\n      this.htmlRenderView = \r\n        <HtmlRenderView store={this.getHtmlRenderVM()} />\r\n    }\r\n    return this.htmlRenderView;\r\n  }\r\n\r\n  wrapper\r\n  getWrapper = () => {\r\n    if (!this.wrapper) {\r\n      var floatItemStore1 = floatItemVMUtil.get('top left');\r\n      var last = () =>  {\r\n        this.setCurrentIndex(this.currentIndex-1);\r\n      }\r\n      floatItemStore1.wrapper = \r\n        <Button onClick={last}>{`<`}</Button>\r\n\r\n      var floatItemStore2 = floatItemVMUtil.get('top right');\r\n      var next = () =>  {\r\n        this.setCurrentIndex(this.currentIndex+1);\r\n      }\r\n      floatItemStore2.wrapper = \r\n        <Button onClick={next}>{`>`}</Button>\r\n\r\n      this.wrapper = <>\r\n        <FloatItemView store={floatItemStore1} />\r\n        <FloatItemView store={floatItemStore2} />\r\n      </>\r\n    }\r\n    return this.wrapper;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\util\\apiUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\text\\TextView.js",["944","945","946","947"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from \"antd\";\r\n\r\nclass TextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = {\r\n        content: `Nội dung`\r\n      }\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var { content } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {content}\r\n        {this.getWrapperContent()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(TextView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSetting_DictView.js",["948","949","950","951","952"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport { MassGroupSetting_DictVM } from \"./MassGroupSetting_DictVM\";\r\nimport MassGroupSettingDataView from \"./MassGroupSettingDataView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassGroupSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassGroupSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.Items;\r\n    data.CurrentItem = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var items = data.Items;\r\n    var elems = items ? items.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var input = data.Input;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thiết lập nhóm khối lượng</b>\r\n        </Divider>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search thiết lập\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <InputView store={input.NameVM} />\r\n          <InputView store={input.DescriptionVM} />\r\n\r\n          <MassGroupSettingDataView store={input.DataVM}/>\r\n\r\n          <div>\r\n            <CheckboxView store={input.IsNewVM} />\r\n            <Button style={{ margin: 10 }}\r\n              onClick={input.AddDatabase}>{input.CommandVM.Content}</Button>\r\n            {input.DeleteView}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassGroupSetting_DictView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\html\\HtmlRenderVM.js",["953","954","955"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from '../../util/generalUtil'\r\nimport { renderToString } from 'react-dom/server'\r\nimport ReactDOM from 'react-dom'\r\nimport InputView from '../input/InputView';\r\nimport * as viewType from '../../constant/viewType'\r\nimport TextView from '../text/TextView';\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport * as inputUtil from '../../util/inputUtil'\r\n\r\nexport default class HtmlRenderVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      refinedContent: observable,\r\n      reactElements: observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  setContent = (value) => {\r\n    this.content = value;\r\n    this.setData(this.getDataFunc());\r\n\r\n    this.renderReactElements();\r\n  }\r\n\r\n  inputs = []\r\n  setInput = (input) => {\r\n    if (this.onSetInput) {\r\n      this.onSetInput(input);\r\n    }\r\n  }\r\n\r\n  data\r\n  getData = () => {\r\n    if (!this.data) {\r\n      this.data = this.getDataFunc();\r\n    }\r\n    return this.data;\r\n  }\r\n  getDataFunc = () => {\r\n    var content = this.content;\r\n    if (!content){\r\n      content = '';\r\n    }\r\n\r\n    var inputs = this.inputs;\r\n\r\n    if (!this.isFormatContent) {\r\n      return {\r\n        content\r\n      }\r\n    }\r\n\r\n    var res = content.split('{{');\r\n    var reactElements = [];\r\n    res.forEach((x, i) => {\r\n      if (i === 0) return false;\r\n\r\n      var bracketIndex = x.indexOf('}}');\r\n      if (bracketIndex === -1) return false;\r\n\r\n      var originContent = x.substring(0, bracketIndex);\r\n\r\n      // Kiểm tra có phần inputs ko ?\r\n      var res2 = originContent.split(',');\r\n      var view = res2[0];\r\n      let input;\r\n      if (inputs) {\r\n        if (res2.length >= 2) {\r\n          var inputName = res2[1];\r\n          if (inputName.length !== 0) {\r\n            var inputIndex = inputs.findIndex(x => x.name === inputName);\r\n            if (inputIndex === -1) {\r\n              inputs.push(inputUtil.getDefaultInput(inputName));\r\n              inputIndex = inputs.length - 1;\r\n            }\r\n            input = inputs[inputIndex];\r\n\r\n            if (res2.length === 3) {\r\n              var label = res2[2];\r\n              if (label.length !== 0) {\r\n                input.label = res2[2];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      var findIndex = reactElements.findIndex\r\n        (x => x.originContent === originContent);\r\n\r\n      if (findIndex === -1) {\r\n        reactElements.push({\r\n          id: util.randomId(),\r\n          originContent, view, input\r\n        })\r\n      }\r\n    })\r\n\r\n    reactElements.forEach(x => {\r\n      var { originContent, id } = x;\r\n      content = content.replace(`{{${originContent}}}`,\r\n        `<span id=\"${id}\" style=\"display:table\"></span>`);\r\n    })\r\n\r\n    return {\r\n      content, reactElements\r\n    };\r\n  }\r\n\r\n  setData = (value) => {\r\n    this.data = value;\r\n    this.setRefinedContent(this.getRefinedContentFunc());\r\n    this.setReactElements(this.getReactElementsFunc());\r\n  }\r\n\r\n  refinedContent = undefined\r\n  getRefinedContent = () => {\r\n    if (!this.refinedContent) {\r\n      var content = this.getRefinedContentFunc();\r\n      this.refinedContent = content;\r\n    }\r\n    return this.refinedContent;\r\n  }\r\n  getRefinedContentFunc = () => {\r\n    return this.getData().content;\r\n  }\r\n  setRefinedContent = (value) => {\r\n    this.refinedContent = value;\r\n  }\r\n\r\n  reactElements = undefined\r\n  getReactElements = () => {\r\n    if (!this.reactElements) {\r\n      this.reactElements = this.getReactElementsFunc();\r\n    }\r\n    return this.reactElements;\r\n  }\r\n  getReactElementsFunc = () => {\r\n    var elems = this.getData().reactElements;\r\n    return elems;\r\n  }\r\n  setReactElements = (value) => {\r\n    this.reactElements = value;\r\n  }\r\n\r\n  renderReactElements = () => {\r\n    var reactElems = this.getReactElements();\r\n\r\n    reactElems.forEach(x => {\r\n      var { id, view, input } = x;\r\n      var location = document.getElementById(id);\r\n\r\n      if (input) {\r\n        var { value, label } = input;\r\n        var textVM = textVMUtil.get(value);\r\n        textVM.onSetContent = (value) => {\r\n          input.value = value;\r\n          this.setInput(input);\r\n        }\r\n\r\n        let elem;\r\n        switch (view) {\r\n          case viewType.INPUTVIEW:\r\n            elem = <>\r\n              {label ?\r\n                <>\r\n                  <span style={{ display: 'table-cell' }}><b>{label}:</b></span>\r\n                  <span style={{display: 'table-cell',width:10}}></span>\r\n                </> : ''\r\n              }\r\n              <InputView store={textVM} />\r\n            </>;\r\n            break;\r\n          case viewType.TEXTVIEW:\r\n            elem = <TextView store={textVM} />;\r\n            break;\r\n        }\r\n\r\n\r\n        if (elem && location !== null) {\r\n          ReactDOM.render(elem, location);\r\n        }\r\n      }\r\n    })\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingDataView.js",["956","957","958","959","960","961","962"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSetting_DictVMUtil.js",["963"],"import { ElementFilterSetting_DictVM } from \"./ElementFilterSetting_DictVM\";\r\nimport * as itemVMUtil from './ElementFilterSettingVMUtil'\r\nimport * as inputVMUtil from './ElementFilterSettingInputVMUtil'\r\n\r\nexport const get = (q) => {\r\n  var qI = new ElementFilterSetting_DictVM();\r\n  qI.ModelItem = q;\r\n\r\n  q.OnGetItemsDone = (v) => {\r\n    var obj = qI.Items;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  q.OnAdd = (v) => {\r\n    qI.Add(itemVMUtil.get(v, qI));\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetItems = (dictVM) => {\r\n  var items = dictVM.ModelItem.Items;\r\n  if (!items) return undefined;\r\n  return items.map(x => itemVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetInput = (dictVM) => {\r\n  var input = dictVM.ModelItem.Input;\r\n  return inputVMUtil.get(input, dictVM);\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\Setting.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\table\\RowVM.js",["964","965","966"],"import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class RowVM {\r\n  Cells = []\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingDataVM.js",["967","968","969","970"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as filterVMUtil from '../../filter/EntFilterVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\nimport * as selectVMUtil from '../../../../select/SelectVMUtil'\r\nimport * as util from './MassGroupSettingDataVMUtil'\r\nimport * as fieldVMUtil from './field/MGS_FieldVMUtil'\r\n\r\nexport default class MassGroupSettingDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      fieldVMs : observable\r\n    })\r\n  }\r\n\r\n\r\n  ModelItem\r\n\r\n  fieldVMs = undefined\r\n  get FieldVMs(){\r\n    if (!this.fieldVMs){\r\n      this.fieldVMs = util.GetFieldVMs(this);\r\n    }\r\n    return this.fieldVMs;\r\n  }\r\n  set FieldVMs(v){\r\n    var list = this.fieldVMs;\r\n    var modelList = this.ModelItem.Fields;\r\n\r\n    var oldCount = list.length;\r\n    var newCount = v.length;\r\n\r\n    list.forEach((x, i) => {\r\n      if (i >= newCount) return;\r\n      x.SetData(v[i]);\r\n    });\r\n\r\n    var delta = Math.abs(oldCount - newCount);\r\n    if (oldCount > newCount){\r\n      list.splice(newCount, delta);\r\n      modelList.splice(newCount, delta);\r\n    }\r\n    else if (oldCount < newCount){\r\n      for (var i = 0; i < delta; i++) {\r\n        var originItemVM = v[oldCount + i];\r\n\r\n        var item = originItemVM.Field;\r\n        modelList.push(item);\r\n\r\n        var itemVM = fieldVMUtil.get(item,this);\r\n        list.push(itemVM);\r\n      }\r\n    }\r\n  }\r\n\r\n  AddNewFieldVM = () => {\r\n    var item = this.ModelItem.AddNewField();\r\n    var itemView = fieldVMUtil.get(item, this);\r\n    this.FieldVMs.push(itemView);\r\n    return itemView;\r\n  }\r\n\r\n  SetData = (v) => {\r\n    this.FieldVMs = v.FieldVMs;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingInput.js",["971"],"import Setting from \"../base/Setting\";\r\nimport SettingInput from \"../base/SettingInput\";\r\nimport * as massGroupSettingUtil from './MassGroupSettingUtil'\r\n\r\nexport default class MassGroupSettingInput extends SettingInput {\r\n  GetEditItem = (data, dict) => {\r\n    return massGroupSettingUtil.get(data, dict);\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\comp\\ProjectCompVM.js",["972"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\comp\\ProjectCompView.js",["973"],"import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Col, Row } from 'antd';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ProjectCompVM from './ProjectCompVM';\r\nimport Phase_DictView from '../../phase/Phase_DictView';\r\nimport MassResultCompView from '../../mass/result/MassResultCompView';\r\n\r\nclass ProjectCompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ProjectCompVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const id = this.props.match.params.id;\r\n    data.id = id;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var projectVM = data.ProjectVM;\r\n\r\n    return (\r\n      <>\r\n        <div style={{ padding: 15 }}>\r\n          <Row gutter={10}>\r\n            <Col span={5}>\r\n            </Col>\r\n            <Col span={14}>\r\n              {projectVM ? <>\r\n                <h4 className='text-center'>Dự án {projectVM.Name}</h4>\r\n                <Phase_DictView store={projectVM.Phase_DictVM} />\r\n\r\n                <MassResultCompView store={data.MassResultCompVM} />\r\n              </> : ''}\r\n            </Col>\r\n            <Col span={5}>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(ProjectCompView));\r\n","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\ProjectVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\Project_Dict.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase_DictUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase_Dict.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseVM.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase_DictVMUtil.js",["974"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\view\\comp1\\CompView1.js",["975","976","977","978","979","980"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\SelectView.js",["981","982","983"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { SelectVM } from \"./SelectVM\";\r\nimport * as floatItemVMUtil from '../float/FloatItemVMUtil'\r\nimport FloatItemView from \"../float/FloatItemView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new SelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var { Placeholder, Items, SelectedIndex, InitialIndex } = data;\r\n\r\n    if (SelectedIndex === -1) {\r\n      SelectedIndex = InitialIndex;\r\n      data.InitialIndex = -1;\r\n    }\r\n\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = item.DisplayContent ? item.DisplayContent : `${item}`;\r\n      return <Option key={index} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    var floatElem = ''\r\n    if (data.CanClear) {\r\n      var floatItemStore = floatItemVMUtil.get('right')\r\n      floatItemStore.wrapper = <Button size='small' type='primary'\r\n        onClick={data.Clear}>x</Button>\r\n\r\n      floatElem = <FloatItemView store={floatItemStore} />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div style={data.DivStyle}>\r\n          {floatElem}\r\n          <Select\r\n            showSearch\r\n            style={{ width: '100%' }}\r\n            placeholder={Placeholder}\r\n            optionFilterProp=\"children\"\r\n            onChange={this.onValueChange}\r\n            value={SelectedIndex}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {elems}\r\n          </Select>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(SelectView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\text\\TextVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\model\\CategoryData.js",["984"],"import * as util from './CategoryDataUtil'\r\n\r\nexport class CategoryData {\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  static instance\r\n  static get Instance(){\r\n    if (!this.instance){\r\n      this.instance = new CategoryData();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  categoryNames;\r\n  get CategoryNames() {\r\n    if (!this.categoryNames){\r\n      this.categoryNames = util.GetCategoryNames();\r\n    }\r\n    return this.categoryNames;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\table\\ColumnVM.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\checkbox\\CheckboxVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\item\\MassItem_Dict.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingVM.js",["985"],"import { SettingVM } from \"../base/SettingVM\";\r\n\r\nexport default class MassExportSettingVM extends SettingVM {\r\n  OnInitialSetDataVM = (v) => {\r\n    var valueSettingVMs = v.ValueSettingVMs;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingData.js",["986","987"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\EntFilterUtil.js",["988","989","990","991","992","993","994","995","996"],"import { CategoryData } from \"../../single/model/CategoryData\"\r\nimport { PMData } from \"../../single/model/PMData\";\r\nimport { EntFilter } from \"./EntFilter\"\r\nimport * as fct from './FilterCategoryType'\r\nimport * as fvt from './FilterValueType'\r\nimport * as sft from './StringFilterType'\r\nimport * as nft from './NumberFilterType'\r\n\r\nexport const categoryData = () => {\r\n  return CategoryData.Instance;\r\n}\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (q, categoryType) => {\r\n  var qI = new EntFilter();\r\n  qI.ValueType = q.valueType;\r\n  qI.NumberFilterType = q.numberFilterType;\r\n  qI.StringFilterType = q.stringFilterType;\r\n  qI.Values = q.values;\r\n  qI.CategoryType = categoryType;\r\n  return qI;\r\n}\r\n\r\nexport const GetValueStorageList = (q) => {\r\n  var list = [];\r\n\r\n  switch (q.CategoryType) {\r\n    case fct.category:\r\n      list = categoryData().CategoryNames;\r\n      break;\r\n    case fct.parameter:\r\n      list = pmData().ParameterNames;\r\n      break;\r\n  }\r\n\r\n  return list;\r\n}\r\n\r\nexport const GetApiData = (q) => {\r\n  return {\r\n    valueType: q.ValueType,\r\n    numberFilterType: q.NumberFilterType,\r\n    stringFilterType: q.StringFilterType,\r\n    values: q.Values\r\n  }\r\n}\r\n\r\nexport const IsValid = (filter, value) => {\r\n  if (value === undefined || value === null) return false;\r\n\r\n  var isValid = false;\r\n  var filterValues = filter.Values;\r\n  switch (filter.ValueType) {\r\n    case fvt.bystring:\r\n      if (typeof value === 'string') {\r\n        var filterType = filter.StringFilterType;\r\n        switch (filterType) {\r\n          case sft.byequal:\r\n            filterValues.forEach(x => {\r\n              if (!isValid && x === value) {\r\n                isValid = true;\r\n              }\r\n            })\r\n            break;\r\n          case sft.bycontain:\r\n            var lowerVal = value.toLowerCase();\r\n            filterValues.forEach(x => {\r\n              if (!isValid && lowerVal.includes(x.toLowerCase())) {\r\n                isValid = true;\r\n              }\r\n            })\r\n            break;\r\n        }\r\n      }\r\n      break;\r\n    case fvt.bynumber:\r\n      if (!isNaN(value)) {\r\n        var filterType = filter.NumberFilterType;\r\n        switch (filterType) {\r\n          case nft.byequal:\r\n            return value === filterValues[0];\r\n          case nft.bysmaller:\r\n            return value < filterValues[0];\r\n          case nft.bysmallerorequal:\r\n            return value <= filterValues[0];\r\n          case nft.bybigger:\r\n            return value > filterValues[0];\r\n          case nft.bybiggerorequal:\r\n            return value >= filterValues[0];\r\n          case nft.bybetween:\r\n            var leftVal = filterValues[0];\r\n            var rightVal = filterValues[1];\r\n            return (filter.IsEqualLeft && leftVal === value) ||\r\n              leftVal < value && value < rightVal\r\n              || (filter.IsEqualRight && value === rightVal);\r\n        }\r\n      }\r\n      break;\r\n  }\r\n\r\n  L1:\r\n  return isValid;\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase_DictView.js",["997","998","999","1000","1001"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { Phase_DictVM } from \"./Phase_DictVM\";\r\nimport InputView from \"../../../input/InputView\";\r\nimport * as stateType from '../state/StateType'\r\n\r\nconst { Option } = Select;\r\n\r\nclass Phase_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Phase_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var input = data.Input;\r\n    var state = data.State;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Phiên bản khối lượng</b>\r\n        </Divider>\r\n        <div>\r\n          <Button type='primary' size='middle' onClick={data.AddVersion}\r\n            disabled={state === stateType.addversion}>\r\n            <PlusCircleOutlined /> LƯU KẾT QUẢ HIỆN TẠI\r\n          </Button>\r\n\r\n          {state === stateType.addversion ? <div className=\"mt-3\">\r\n            <InputView store={input.NameVM} />\r\n            <InputView store={input.DescriptionVM} />\r\n            <div className=\"mt-2\">\r\n              <Button type='primary' size='small' onClick={data.OK}>OK</Button>\r\n              <Button type='default' size='small' onClick={data.Cancel}>Cancel</Button>\r\n            </div>\r\n          </div> : ''}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(Phase_DictView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseInputUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase_DictVM.js",["1002"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Phase_DictVMUtil'\r\nimport * as stateType from '../state/StateType'\r\nimport { message } from 'antd';\r\n\r\nexport class Phase_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable,\r\n      state : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  input\r\n  get Input(){\r\n    if (!this.input){\r\n      this.input = util.GetInput(this);\r\n    }\r\n    return this.input;\r\n  }\r\n\r\n  state = undefined\r\n  get State(){\r\n    return this.state;\r\n  }\r\n  set State(v){\r\n    this.state = v;\r\n  }\r\n\r\n  Add = (item) => {\r\n    this.Items.push(item);\r\n  }\r\n\r\n  AddVersion = () => {\r\n    this.State = stateType.addversion;\r\n  }\r\n\r\n  Cancel = () => {\r\n    this.State = undefined;\r\n  }\r\n\r\n  OK = () => {\r\n    var name = this.Input.Name;\r\n    var index = this.Items.findIndex(x => x.Name === name);\r\n    if (index !== -1){\r\n      message.warning('version name already exists!');\r\n      return;\r\n    }\r\n\r\n    this.State = undefined;\r\n    this.ModelItem.AddMassVersion();\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseInputVM.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseInput.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\map\\MapVM.js",["1003","1004","1005","1006"],"import { Button } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport TextView from '../text/TextView';\r\nimport MapItemView from './MapItemView';\r\nimport * as mapItemVMUtil from './MapItemVMUtil'\r\n\r\nexport class MapVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n    })\r\n  }\r\n\r\n  data\r\n  getData = () => {\r\n    if (!this.data) {\r\n      if (localStorage.getItem('map') === null) {\r\n        this.data = [\r\n          { left: 30, top: 15, name: 'Database' },\r\n          { left: 30, top: 30, name: 'WebAPI' },\r\n          { left: 40, top: 30, name: 'FrontEnd' },\r\n          { left: 20, top: 30, name: 'BIM app' }\r\n        ]\r\n        this.setStorage(this.data);\r\n      } else {\r\n        this.data = this.getStorage();\r\n      }\r\n    }\r\n    return this.data;\r\n  }\r\n  saveData = () => {\r\n    this.setStorage(this.data);\r\n  }\r\n\r\n  setStorage = (data) => {\r\n    localStorage.setItem('map', JSON.stringify(data))\r\n  }\r\n  getStorage = () => {\r\n    return JSON.parse(localStorage.getItem('map'));\r\n  }\r\n\r\n  items = undefined\r\n  getItems = () => {\r\n    if (!this.items) {\r\n      this.getData();\r\n\r\n      var obj = this.getData().map(x => {\r\n        return mapItemVMUtil.getDefaultTemplate(x, this);\r\n      })\r\n\r\n      this.items = obj;\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  addItem = () => {\r\n    var item = { left: 5, top: 5, name: 'New Item' };    \r\n    this.getItems().push(mapItemVMUtil.getDefaultTemplate(item, this));\r\n\r\n    this.getData().push(item);\r\n    this.saveData();\r\n  }\r\n\r\n  request = (data) => {\r\n    if (this.onRequest){\r\n      this.onRequest(data);\r\n    }\r\n  }\r\n\r\n  getReactElements = () => {\r\n    var x = 3;\r\n\r\n    return this.getItems().map((x, i) => {\r\n      return <MapItemView key={i} store={x} />\r\n    })\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\map\\MapItemView.js",["1007"],"\r\nimport React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport InputView from '../input/InputView';\r\n\r\nclass MapItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var { store } = this.props;\r\n    if (!store) {\r\n\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div style={data.getStyle()}>\r\n          {data.wrapper ? data.wrapper : ''}\r\n          {data.canEdit ? <Button size='small' type='ghost' onClick={data.toggleInput}>Edit</Button> : ''}\r\n          {data.getShowInputView()}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MapItemView);\r\n","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\html\\HtmlRenderView.js",["1008","1009","1010","1011","1012","1013","1014","1015","1016","1017"],"import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as util from '../../util/htmlUtil'\r\nimport TextView from \"../text/TextView\";\r\nimport { renderToString } from 'react-dom/server'\r\nimport * as htmlRenderVMUtil from './HtmlRenderVMUtil'\r\nimport * as viewType from \"../../constant/viewType\"\r\nimport * as htmlUtil from \"../../util/htmlUtil\"\r\nimport InputView from \"../input/InputView\";\r\nimport { Button } from \"antd\";\r\n\r\nclass HtmlRenderView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.itemRef = React.createRef()\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `<p>store của textView</p>`\r\n      this.state = htmlRenderVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    data.renderReactElements();\r\n  }\r\n\r\n  onClick2 = () => {\r\n    var data = this.state;\r\n    data.renderReactElements();\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var content = data.getRefinedContent();\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <div ref={this.itemRef}\r\n            dangerouslySetInnerHTML={util.createMarkup(content)} />\r\n          {this.getWrapperContent()}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(HtmlRenderView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSetting_DictView.js",["1018","1019","1020","1021","1022","1023"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../../input/InputView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\nimport { MassExportSetting_DictVM } from \"./MassExportSetting_DictVM\";\r\nimport SelectView from \"../../../../select/SelectView\";\r\nimport MassExportSettingDataView from \"./MassExportSettingDataView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassExportSetting_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassExportSetting_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var items = data.Items;\r\n    var wp = data.CurrentItem = items[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var items = data.Items;\r\n    var elems = items ? items.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var input = data.Input;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thiết lập xuất khối lượng</b>\r\n        </Divider>\r\n\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search thiết lập\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <InputView store={input.NameVM} />\r\n          <InputView store={input.DescriptionVM} />\r\n\r\n          <MassExportSettingDataView store={input.DataVM} />\r\n\r\n          <div>\r\n            <CheckboxView store={input.IsNewVM} />\r\n            <Button style={{ margin: 10 }}\r\n              onClick={input.AddDatabase}>{input.CommandVM.Content}</Button>\r\n            {input.DeleteView}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassExportSetting_DictView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\single\\form\\PMDataVMUtil.js",["1024","1025","1026"],"import * as api from '../../../../util/apiUtil'\r\nimport { PMData } from '../model/PMData';\r\n\r\nimport * as workpackage_DictVMUtil from '../../entity/workpackage/Workpackage_DictVMUtil'\r\nimport * as elementFilterSetting_DictVMUtil from \r\n  '../../entity/setting/elementFilter/ElementFilterSetting_DictVMUtil'\r\nimport * as massExportSetting_DictVMUtil from \r\n  '../../entity/setting/massExport/MassExportSetting_DictVMUtil'\r\nimport * as massGroupSetting_DictVMUtil from \r\n  '../../entity/setting/massGroup/MassGroupSetting_DictVMUtil'\r\nimport * as project_DictVMUtil from '../../entity/project/Project_DictVMUtil'\r\n\r\nimport * as massResultCompVMUtil from '../../entity/mass/result/MassResultCompVMUtil'\r\n\r\nimport * as fvt from '../../entity/filter/FilterValueType'\r\nimport * as sft from '../../entity/filter/StringFilterType'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\nexport const GetWorkpackage_DictVM = (data) => {\r\n  return workpackage_DictVMUtil.get(pmData().Workpackage_Dict);\r\n}\r\n\r\nexport const GetElementFilterSetting_DictVM = (data) => {\r\n  return elementFilterSetting_DictVMUtil.get\r\n    (pmData().ElementFilterSetting_Dict);\r\n}\r\n\r\nexport const GetMassExportSetting_DictVM = (data) => {\r\n  return massExportSetting_DictVMUtil.get\r\n    (pmData().MassExportSetting_Dict);\r\n}\r\n\r\nexport const GetMassGroupSetting_DictVM = (data) => {\r\n  return massGroupSetting_DictVMUtil.get\r\n    (pmData().MassGroupSetting_Dict);\r\n}\r\n\r\nexport const GetProject_DictVM = (data) => {\r\n  return project_DictVMUtil.get\r\n    (pmData().Project_Dict);\r\n}\r\n\r\nexport const GetMassResultCompVM= (data) => {\r\n  return massResultCompVMUtil.get\r\n  (pmData().MassResultComp);\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\util\\inputUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\exportSetting\\MES_ValueSettingView.js",["1027","1028","1029","1030","1031","1032","1033","1034","1035"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\base\\SettingVM.js",["1036"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\Project_DictVM.js",["1037"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './Project_DictVMUtil'\r\n\r\nexport class Project_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items : observable\r\n    })\r\n  }\r\n\r\n  items= undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      this.items = util.GetItems(this);\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v){\r\n    this.items = v;\r\n    this.ModelItem.Items = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  set GetItemsDone (v){\r\n    if (this.OnGetItemsDone){\r\n      this.OnGetItemsDone(v);\r\n    }\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\comp\\ProjectCompVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\result\\MassResultCompVM.js",["1038"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './MassResultCompVMUtil'\r\nimport * as multiSelectVMUtil from '../../../../select/MultiSelectVMUtil'\r\nimport * as checkboxVMUtil from '../../../../checkbox/CheckboxVMUtil'\r\n\r\nexport default class MassResultCompVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      IsShowProjectSelect : observable,\r\n      CanHavePhase : observable,\r\n      isHavePhase : observable\r\n    })\r\n  }\r\n\r\n  projects\r\n  get Projects(){\r\n    if (!this.projects){\r\n      this.projects = this.ModelItem.Projects;\r\n    }\r\n    return this.projects;\r\n  }\r\n  set Projects(v){\r\n    this.projects = v;\r\n    this.ModelItem.Projects = v;\r\n  }\r\n\r\n  projectVMs\r\n  get ProjectVMs(){\r\n    if (!this.projectVMs){\r\n      this.projectVMs = util.GetProjectVMs(this);\r\n    }\r\n    return this.projectVMs;\r\n  }\r\n  set ProjectVMs(v){\r\n    this.projectVMs = v;\r\n    this.Projects = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  projectVMStorageList\r\n  get ProjectVMStorageList() {\r\n    if (!this.projectVMStorageList){\r\n      this.projectVMStorageList = util.GetProjectVMStorageList(this);\r\n    }\r\n    return this.projectVMStorageList;\r\n  }\r\n  set ProjectVMStorageList(v){\r\n    this.projectVMStorageList = v;\r\n  \r\n    this.projectVMs = util.GetProjectVMs(this);\r\n\r\n    var selectVM = this.ProjectSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.projectVMs;\r\n  }\r\n\r\n  projectSelectVM\r\n  get ProjectSelectVM(){\r\n    if (!this.projectSelectVM){\r\n      var list = this.ProjectVMStorageList ? this.ProjectVMStorageList : [];\r\n      var obj = this.projectSelectVM = multiSelectVMUtil.get(list, this.ProjectVMs);\r\n      obj.Placeholder = 'chọn dự án'\r\n      obj.OnSelectedItemChanged = (v) => this.ProjectVMs = v;\r\n    }\r\n    return this.projectSelectVM;\r\n  }\r\n\r\n  IsShowProjectSelect = true\r\n\r\n  // Workpackage Input\r\n  workpackages\r\n  get Workpackages(){\r\n    if (!this.workpackages){\r\n      this.workpackages = this.ModelItem.Workpackages;\r\n    }\r\n    return this.workpackages;\r\n  }\r\n  set Workpackages(v){\r\n    this.workpackages = v;\r\n    this.ModelItem.Workpackages = v;\r\n  }\r\n\r\n  workpackageVMs\r\n  get WorkpackageVMs(){\r\n    if (!this.workpackageVMs){\r\n      this.workpackageVMs = util.GetWorkpackageVMs(this);\r\n    }\r\n    return this.workpackageVMs;\r\n  }\r\n  set WorkpackageVMs(v){\r\n    this.workpackageVMs = v;\r\n    this.Workpackages = v.map(x => x.Workpackage);\r\n  }\r\n\r\n  workpackageVMStorageList\r\n  get WorkpackageVMStorageList() {\r\n    if (!this.workpackageVMStorageList){\r\n      this.workpackageVMStorageList = util.GetWorkpackageVMStorageList(this);\r\n    }\r\n    return this.workpackageVMStorageList;\r\n  }\r\n  set WorkpackageVMStorageList(v){\r\n    this.workpackageVMStorageList = v;\r\n  \r\n    this.workpackageVMs = util.GetWorkpackageVMs(this);\r\n\r\n    var selectVM = this.WorkpackageSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.workpackageVMs;\r\n  }\r\n\r\n  workpackageSelectVM\r\n  get WorkpackageSelectVM(){\r\n    if (!this.workpackageSelectVM){\r\n      var list = this.WorkpackageVMStorageList ? this.WorkpackageVMStorageList : [];\r\n      var obj = this.workpackageSelectVM = multiSelectVMUtil.get(list, this.WorkpackageVMs);\r\n      obj.Placeholder = 'chọn công tác'\r\n      obj.OnSelectedItemChanged = (v) => this.WorkpackageVMs = v;\r\n    }\r\n    return this.workpackageSelectVM;\r\n  }\r\n\r\n  phases\r\n  get Phases(){\r\n    if (!this.phases){\r\n      this.phases = this.ModelItem.Phases;\r\n    }\r\n    return this.phases;\r\n  }\r\n  set Phases(v){\r\n    this.phases = v;\r\n    this.ModelItem.Phases = v;\r\n  }\r\n\r\n  phaseVMs\r\n  get PhaseVMs(){\r\n    if (!this.phaseVMs){\r\n      this.phaseVMs = util.GetPhaseVMs(this);\r\n    }\r\n    return this.phaseVMs;\r\n  }\r\n  set PhaseVMs(v){\r\n    this.phaseVMs = v;\r\n    this.Phases = v.map(x => x.ModelItem);\r\n  }\r\n\r\n  massItem_Dict\r\n  get MassItem_Dict(){\r\n    if (!this.massItem_Dict){\r\n      this.massItem_Dict = this.ModelItem.MassItem_Dict;\r\n    }\r\n    return this.massItem_Dict;\r\n  }\r\n\r\n  phaseVMStorageList\r\n  get PhaseVMStorageList() {\r\n    return this.phaseVMStorageList;\r\n  }\r\n  set PhaseVMStorageList(v){\r\n    this.phaseVMStorageList = v;\r\n  \r\n    this.phaseVMs = util.GetPhaseVMs(this);\r\n\r\n    var selectVM = this.PhaseSelectVM;\r\n    selectVM.Items = v;\r\n    selectVM.InitialItems = this.phaseVMs;\r\n  }\r\n\r\n  phaseSelectVM\r\n  get PhaseSelectVM(){\r\n    if (!this.phaseSelectVM){\r\n      var list = this.PhaseVMStorageList ? this.PhaseVMStorageList : [];\r\n      var obj = this.phaseSelectVM = multiSelectVMUtil.get(list, this.PhaseVMs);\r\n      obj.Placeholder = 'chọn version'\r\n      obj.OnSelectedItemChanged = (v) => this.PhaseVMs = v;\r\n    }\r\n    return this.phaseSelectVM;\r\n  }\r\n\r\n  CanHavePhase = false\r\n\r\n  isHavePhase = undefined\r\n  get IsHavePhase(){\r\n    if (!this.isHavePhase){\r\n      this.isHavePhase = this.ModelItem.IsHavePhase;\r\n    }\r\n    return this.isHavePhase;\r\n  }\r\n  set IsHavePhase(v){\r\n    this.isHavePhase = v;\r\n    this.ModelItem.IsHavePhase = v;\r\n  }\r\n\r\n  isShowPhaseSelectVM\r\n  get IsShowPhaseSelectVM() {\r\n    if (!this.isShowPhaseSelectVM) {\r\n      var obj = this.isShowPhaseSelectVM\r\n        = checkboxVMUtil.get(\"So sánh các version\", this.IsHavePhase);\r\n\r\n      obj.onCheckChange = (v) => {\r\n        this.IsHavePhase = v;\r\n      };\r\n    }\r\n    return this.isShowPhaseSelectVM;\r\n  }\r\n\r\n  // function\r\n  GetMassData = () => {\r\n    this.ModelItem.GetMassData();\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\result\\MassResultCompView.js",["1039","1040","1041","1042","1043"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport MassResultCompVM from \"./MassResultCompVM\";\r\nimport MultiSelectView from '../../../../select/MultiSelectView'\r\nimport MassTableView from \"../table/MassTableView\";\r\nimport CheckboxView from \"../../../../checkbox/CheckboxView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MassResultCompView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MassResultCompVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Thông tin khối lượng</b>\r\n        </Divider>\r\n        {data.IsShowProjectSelect ?\r\n          <MultiSelectView store={data.ProjectSelectVM} /> : ''}\r\n        <div style={{ marginTop: 10 }}>\r\n          <MultiSelectView store={data.WorkpackageSelectVM} />\r\n        </div>\r\n\r\n        {data.CanHavePhase ?\r\n          <>\r\n            <Divider orientation=\"left\" plain>\r\n              <CheckboxView store={data.IsShowPhaseSelectVM} />\r\n            </Divider>\r\n            {data.IsHavePhase ?\r\n              <MultiSelectView store={data.PhaseSelectVM} /> : ''}\r\n          </>\r\n          : ''\r\n        }\r\n\r\n        <Button style={{ marginTop: 8 }} onClick={data.GetMassData}\r\n          size='middle' type='primary'>GET DATA</Button>\r\n        <div style={{ marginTop: 15 }}>\r\n          <MassTableView store={data.MassItem_Dict.MassTable} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MassResultCompView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\Phase.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\view\\comp1\\CompVM1.js",["1044","1045"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\Workpackage_DictVMUtil.js",["1046"],"import { Workpackage_DictVM } from \"./Workpackage_DictVM\";\r\nimport * as workpackageVMUtil from './WorkpackageVMUtil';\r\nimport * as workpackageInputVMUtil from './WorkpackageInputVMUtil';\r\n\r\nexport const get = (q) => {\r\n  var qI = new Workpackage_DictVM();\r\n  qI.Workpackage_Dict = q;\r\n\r\n  q.OnGetWorkpackagesDone = (v) => {\r\n    var obj = qI.WorkpackageVMs;\r\n    qI.GetItemsDone = true;\r\n  }\r\n\r\n  q.OnAdd = (item) => {\r\n    var itemView = workpackageVMUtil.get(item, qI);\r\n    qI.Add(itemView);\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetWorkpackageVMs = (dictVM) => {\r\n  var wps = dictVM.Workpackage_Dict.Workpackages;\r\n  if (!wps) return undefined;\r\n  return wps.map(x => workpackageVMUtil.get(x, dictVM));\r\n}\r\n\r\nexport const GetWorkpackageInputVM= (dictVM) => {\r\n  var input = dictVM.Workpackage_Dict.WorkpackageInput;\r\n  return workpackageInputVMUtil.get(input, dictVM);\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingData.js",["1047"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\StringFilterType.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingDataUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\NumberFilterType.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\table\\MassCellUtil.js",["1048"],"import Column from \"antd/lib/table/Column\";\r\nimport { PMData } from \"../../../single/model/PMData\";\r\nimport MassCell from \"./MassCell\"\r\nimport * as mif from '../item/MassItemField'\r\nimport * as filterUtil from '../../filter/EntFilterUtil'\r\n\r\nexport const pmData = () => {\r\n  return PMData.Instance;\r\n}\r\n\r\nexport const get = (col, row, dict) => {\r\n  var qI = new MassCell();\r\n  qI.Column = col;\r\n  qI.Row = row;\r\n  qI.Dict = dict;\r\n\r\n  col.Cells.push(qI);\r\n  row.Cells.push(qI);\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetIsHaveVCS_Item = (q) => {\r\n  return q.Dict.ColumnField === mif.Phase \r\n    && pmData().MassResultComp.Phases.length === 2\r\n    && q.ColumnIndex === 1;\r\n}\r\n\r\nexport const GetValueColor = (q) => {\r\n  if (q.IsHaveVCS_Item && q.VCS_Item){\r\n    return '#FFFFFF';\r\n  } else{\r\n    return '#1890ff';\r\n  }\r\n}\r\n\r\nexport const GetTDBgColor = (q) => {\r\n  if (q.IsHaveVCS_Item && q.VCS_Item){\r\n    return q.VCS_Item.Color;\r\n  } else{\r\n    return '#FFFFFF';\r\n  }\r\n}\r\n\r\nexport const GetVCS_Item = (q) => {\r\n  var list = pmData().VersionCompareSetting.Items;\r\n\r\n  var cells = q.Row.Cells;\r\n  var compareIndex = cells.findIndex(x => x.ColumnIndex === 0); \r\n  var compareItem = cells[compareIndex];\r\n  var ratio = q.TotalValue / compareItem.TotalValue;\r\n\r\n  var index = list\r\n    .findIndex(x => filterUtil.IsValid(x.Filter, ratio));\r\n  return index !== -1 ? list[index] : undefined;\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\versionCompare\\VersionCompareSettingUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\phase\\PhaseInputVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\EntFilterView.js",["1049","1050","1051","1052","1053","1054","1055","1056","1057"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\versionCompare\\VCS_Item.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\slider\\SliderView.js",["1058","1059","1060","1061"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\map\\MapItemVMUtil.js",["1062"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\Workpackage_DictView.js",["1063","1064","1065","1066","1067"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Divider, Input, Select } from \"antd\";\r\nimport InputView from \"../../../input/InputView\";\r\nimport { Workpackage_DictVM } from \"./Workpackage_DictVM\";\r\nimport CheckboxView from \"../../../checkbox/CheckboxView\";\r\nimport SelectView from \"../../../select/SelectView\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Workpackage_DictView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Workpackage_DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    var wps = data.WorkpackageVMs;\r\n    var wp = data.CurrentWorkpackageVM = wps[v];\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var wps = data.WorkpackageVMs;\r\n\r\n    var elems = wps ? wps.map((item, index) => {\r\n      var searchName = item.SearchName;\r\n      return <Option key={index} value={index}>{searchName}</Option>\r\n    }) : \"\";\r\n\r\n    var inputVM = data.WorkpackageInputVM;\r\n    var commandVM = inputVM.CommandVM;\r\n\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\" plain>\r\n          <b>Công tác</b>\r\n        </Divider>\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"search công tác\"\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={null}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <InputView store={inputVM.CodeVM} />\r\n          <InputView store={inputVM.NameVM} />\r\n          <InputView store={inputVM.DescriptionVM} />\r\n          <SelectView store={inputVM.SupItemSelectVM} />\r\n          <div>\r\n            <CheckboxView store={inputVM.IsNewVM} />\r\n            <Button style={{ margin: 10 }}\r\n              onClick={inputVM.AddDatabase}>{commandVM.Content}</Button>\r\n            {inputVM.DeleteView}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(Workpackage_DictView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\state\\StateType.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\map\\MapItemVM.js",["1068"],"import { makeObservable, observable, action } from 'mobx';\r\nimport InputView from '../input/InputView';\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\n\r\nexport class MapItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      top: observable,\r\n      left: observable,\r\n      name: observable,\r\n      isShowLocationInput: observable,\r\n      canEdit : observable\r\n    })\r\n  }\r\n\r\n  wrapper\r\n\r\n  top = undefined;\r\n  getTop = () => {\r\n    if (!this.top) {\r\n      this.top = 50\r\n    }\r\n    return this.top;\r\n  }\r\n  setTop = (value) => {\r\n    this.top = value;\r\n\r\n    if (this.data){\r\n      this.data.top = value;\r\n      this.parent.saveData();\r\n    }\r\n  }\r\n\r\n  left = undefined;\r\n  getLeft = () => {\r\n    if (!this.left) {\r\n      this.left = 50\r\n    }\r\n    return this.left;\r\n  }\r\n  setLeft = (value) => {\r\n    this.left = value;\r\n\r\n    if (this.data){\r\n      this.data.left = value;\r\n      this.parent.saveData();\r\n    }\r\n  }\r\n\r\n  name = undefined\r\n  getName = () => {\r\n    return this.name;\r\n  }\r\n  setName = (value) => {\r\n    this.name = value;\r\n\r\n    if (this.data){\r\n      this.data.name = value;\r\n      this.parent.saveData();\r\n    }\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      position: 'absolute',\r\n      top: `${this.getTop()}%`,\r\n      left: `${this.getLeft()}%`\r\n    }\r\n  }\r\n\r\n  isShowLocationInput = false\r\n\r\n  toggleInput = () => {\r\n    this.isShowLocationInput = !this.isShowLocationInput;\r\n  }\r\n\r\n  getShowInputView = () =>{\r\n    return this.isShowLocationInput ? this.getInputView() : '';\r\n  }\r\n\r\n  nameVM\r\n  getNameVM = () => {\r\n    if (!this.nameVM){\r\n      var obj =this.nameVM = textVMUtil.get(this.name);\r\n      obj.onSetContent = (value) => this.setName(value);\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  canEdit = false\r\n\r\n  inputView\r\n  getInputView = () => {\r\n    var leftVM = textVMUtil.get(this.getLeft());\r\n    leftVM.onSetContent = (value) => this.setLeft(value);\r\n\r\n    var topVM = textVMUtil.get(this.getTop());\r\n    topVM.onSetContent = (value) => this.setTop(value);\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ display: 'table', marginTop: 5 }}>\r\n          <span style={{ display: 'table-cell' }}><b>Name:</b></span>\r\n          <span style={{ display: 'table-cell', width: 10 }}></span>\r\n          <InputView store={this.getNameVM()}/>\r\n        </div>\r\n        <div style={{ display: 'table', marginTop: 5 }}>\r\n          <span style={{ display: 'table-cell' }}><b>Left:</b></span>\r\n          <span style={{ display: 'table-cell', width: 10 }}></span>\r\n          <InputView store={leftVM}/>\r\n        </div>\r\n        <div style={{ display: 'table', marginTop: 5 }}>\r\n          <span style={{ display: 'table-cell' }}><b>Top:</b></span>\r\n          <span style={{ display: 'table-cell', width: 10 }}></span>\r\n          <InputView store={topVM}/>\r\n        </div>\r\n      </div>\r\n      )\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\workpackage\\Workpackage_DictVM.js",["1069","1070"],"import { makeObservable, observable, action } from 'mobx';\r\nimport * as workpackageUtil from './WorkpackageUtil'\r\nimport * as util from './Workpackage_DictVMUtil'\r\n\r\nexport class Workpackage_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      workpackageVMs: observable,\r\n    })\r\n  }\r\n\r\n  OnGetItemsDone_Funcs = []\r\n\r\n  set GetItemsDone (v){\r\n    this.OnGetItemsDone_Funcs.forEach(x => x());\r\n  }\r\n\r\n  Workpackage_Dict\r\n\r\n  get M2VM() {\r\n    return this.Workpackage_Dict.M2VM;\r\n  }\r\n  set M2VM(v) {\r\n    this.Workpackage_Dict.M2VM = v;\r\n  }\r\n\r\n  workpackageVMs = undefined\r\n  get WorkpackageVMs() {\r\n    if (!this.workpackageVMs){\r\n      this.workpackageVMs = util.GetWorkpackageVMs(this);\r\n    }\r\n    return this.workpackageVMs;\r\n  }\r\n\r\n  currentWorkpackageVM\r\n  set CurrentWorkpackageVM(v) {\r\n    this.Workpackage_Dict = v;\r\n    this.Workpackage_Dict.CurrentWorkpackage = v.Workpackage;\r\n\r\n    this.WorkpackageInputVM.WorkpackageVM = v;\r\n  }\r\n\r\n  workpackageInputMV\r\n  get WorkpackageInputVM() {\r\n    if (!this.workpackageInputVM){\r\n      this.workpackageInputVM = util.GetWorkpackageInputVM(this);\r\n    }\r\n    return this.workpackageInputVM;\r\n  }\r\n\r\n  Add = (itemView) => {\r\n    this.WorkpackageVMs.push(itemView);\r\n    if (this.OnAdd){\r\n      this.OnAdd(itemView);\r\n    }\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\text\\TextVM.js",["1071"],"import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport class TextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder : observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  get Content(){\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  inputStyle\r\n\r\n  style\r\n  get Style() {\r\n    if (!this.style) {\r\n      this.style = this.inputStyle ? this.inputStyle : {};\r\n\r\n      if (this.wrapper) {\r\n        this.style.position = 'relative';\r\n      }\r\n    }\r\n    return this.style;\r\n  }\r\n}","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\util\\generalUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingInputVM.js",["1072"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\elementFilter\\ElementFilterSettingDataUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\select\\MultiSelectView.js",["1073","1074","1075","1076"],"import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { MultiSelectVM } from \"./MultiSelectVM\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass MultiSelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new MultiSelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndexs = v;\r\n  } \r\n\r\n  render() {\r\n    var data = this.state;\r\n    var {Placeholder, Items, SelectedIndexs, InitialIndexs} = data;\r\n\r\n    if (SelectedIndexs.length === 0){\r\n      SelectedIndexs = InitialIndexs;\r\n      data.InitialIndexs = [];\r\n    }\r\n\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = item.DisplayContent ? item.DisplayContent : `${item}`;\r\n      return <Option key={index} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    return (\r\n      <>\r\n        <Select\r\n          mode=\"multiple\"\r\n          style={{ width: '100%' }}\r\n          placeholder={Placeholder}\r\n          optionFilterProp=\"children\"\r\n          onChange={this.onValueChange}\r\n          value={SelectedIndexs}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {elems}\r\n        </Select>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(MultiSelectView)","D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\versionCompare\\VersionCompareSetting.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massExport\\MassExportSettingInputVM.js",["1077"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\float\\FloatItemVMUtil.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\project\\Project.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\mass\\MassType.js",[],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\setting\\massGroup\\MassGroupSettingDataView.js",["1078","1079","1080","1081","1082","1083","1084","1085","1086","1087"],"D:\\Tai\\CodeProject\\HB\\HBBIM_FrontEnd\\frontend_3\\src\\model\\main\\entity\\filter\\EntFilterVMUtil.js",["1088"],{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1093","line":2,"column":8,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":16},{"ruleId":"1094","replacedBy":"1095"},{"ruleId":"1096","replacedBy":"1097"},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1100","line":4,"column":10,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1101","line":4,"column":18,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1103","line":5,"column":8,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1104","line":6,"column":8,"nodeType":"1091","messageId":"1092","endLine":6,"endColumn":20},{"ruleId":"1089","severity":1,"message":"1093","line":8,"column":8,"nodeType":"1091","messageId":"1092","endLine":8,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1105","line":11,"column":9,"nodeType":"1091","messageId":"1092","endLine":11,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1106","line":4,"column":18,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":21},{"ruleId":"1089","severity":1,"message":"1101","line":4,"column":23,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":30},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":32,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":37},{"ruleId":"1089","severity":1,"message":"1107","line":4,"column":39,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":42},{"ruleId":"1089","severity":1,"message":"1103","line":5,"column":8,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1104","line":6,"column":8,"nodeType":"1091","messageId":"1092","endLine":6,"endColumn":20},{"ruleId":"1089","severity":1,"message":"1105","line":11,"column":9,"nodeType":"1091","messageId":"1092","endLine":11,"endColumn":15},{"ruleId":"1094","replacedBy":"1108"},{"ruleId":"1096","replacedBy":"1109"},{"ruleId":"1094","replacedBy":"1110"},{"ruleId":"1096","replacedBy":"1111"},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1112","line":5,"column":18,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":25},{"ruleId":"1094","replacedBy":"1113"},{"ruleId":"1096","replacedBy":"1114"},{"ruleId":"1089","severity":1,"message":"1106","line":4,"column":10,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":13},{"ruleId":"1089","severity":1,"message":"1107","line":4,"column":15,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":18},{"ruleId":"1094","replacedBy":"1115"},{"ruleId":"1096","replacedBy":"1116"},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1094","replacedBy":"1117"},{"ruleId":"1096","replacedBy":"1118"},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1094","replacedBy":"1119"},{"ruleId":"1096","replacedBy":"1120"},{"ruleId":"1094","replacedBy":"1121"},{"ruleId":"1096","replacedBy":"1122"},{"ruleId":"1089","severity":1,"message":"1123","line":1,"column":8,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":15},{"ruleId":"1094","replacedBy":"1124"},{"ruleId":"1096","replacedBy":"1125"},{"ruleId":"1126","severity":1,"message":"1127","line":5,"column":3,"nodeType":"1128","messageId":"1129","endLine":15,"endColumn":4},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1130","line":3,"column":8,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":18},{"ruleId":"1089","severity":1,"message":"1131","line":7,"column":13,"nodeType":"1091","messageId":"1092","endLine":7,"endColumn":17},{"ruleId":"1126","severity":1,"message":"1127","line":77,"column":5,"nodeType":"1128","messageId":"1129","endLine":84,"endColumn":6},{"ruleId":"1089","severity":1,"message":"1132","line":137,"column":13,"nodeType":"1091","messageId":"1092","endLine":137,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1133","line":6,"column":8,"nodeType":"1091","messageId":"1092","endLine":6,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1134","line":8,"column":10,"nodeType":"1091","messageId":"1092","endLine":8,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1094","replacedBy":"1135"},{"ruleId":"1096","replacedBy":"1136"},{"ruleId":"1089","severity":1,"message":"1137","line":1,"column":8,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":22},{"ruleId":"1089","severity":1,"message":"1138","line":4,"column":8,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1099","line":1,"column":26,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1139","line":115,"column":21,"nodeType":"1091","messageId":"1092","endLine":115,"endColumn":37},{"ruleId":"1089","severity":1,"message":"1140","line":122,"column":9,"nodeType":"1091","messageId":"1092","endLine":122,"endColumn":18},{"ruleId":"1089","severity":1,"message":"1141","line":123,"column":9,"nodeType":"1091","messageId":"1092","endLine":123,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1142","line":124,"column":9,"nodeType":"1091","messageId":"1092","endLine":124,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1143","line":125,"column":9,"nodeType":"1091","messageId":"1092","endLine":125,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1123","line":1,"column":8,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1100","line":4,"column":10,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1106","line":4,"column":18,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":21},{"ruleId":"1089","severity":1,"message":"1101","line":4,"column":23,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":30},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":32,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":37},{"ruleId":"1089","severity":1,"message":"1107","line":4,"column":39,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":42},{"ruleId":"1089","severity":1,"message":"1103","line":5,"column":8,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1104","line":6,"column":8,"nodeType":"1091","messageId":"1092","endLine":6,"endColumn":20},{"ruleId":"1089","severity":1,"message":"1105","line":10,"column":9,"nodeType":"1091","messageId":"1092","endLine":10,"endColumn":15},{"ruleId":"1144","severity":1,"message":"1145","line":30,"column":11,"nodeType":"1146","endLine":31,"endColumn":39},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1147","line":5,"column":13,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1094","replacedBy":"1148"},{"ruleId":"1096","replacedBy":"1149"},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1150","line":9,"column":9,"nodeType":"1091","messageId":"1092","endLine":9,"endColumn":12},{"ruleId":"1089","severity":1,"message":"1123","line":1,"column":8,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":15},{"ruleId":"1094","replacedBy":"1151"},{"ruleId":"1096","replacedBy":"1152"},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1153","line":3,"column":8,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":16},{"ruleId":"1126","severity":1,"message":"1127","line":96,"column":9,"nodeType":"1128","messageId":"1129","endLine":100,"endColumn":10},{"ruleId":"1089","severity":1,"message":"1106","line":3,"column":10,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":13},{"ruleId":"1089","severity":1,"message":"1107","line":3,"column":15,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":18},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1098","line":1,"column":10,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":1,"column":26,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1154","severity":1,"message":"1155","line":12,"column":3,"nodeType":"1156","messageId":"1157","endLine":14,"endColumn":4},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1150","line":10,"column":9,"nodeType":"1091","messageId":"1092","endLine":10,"endColumn":12},{"ruleId":"1089","severity":1,"message":"1098","line":1,"column":10,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":1,"column":26,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1158","line":2,"column":13,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1159","line":3,"column":13,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1161","line":19,"column":3,"nodeType":"1162","messageId":"1163","endLine":19,"endColumn":13},{"ruleId":"1094","replacedBy":"1164"},{"ruleId":"1096","replacedBy":"1165"},{"ruleId":"1166","severity":1,"message":"1167","line":22,"column":13,"nodeType":"1146","endLine":22,"endColumn":69},{"ruleId":"1166","severity":1,"message":"1168","line":24,"column":13,"nodeType":"1146","endLine":24,"endColumn":87},{"ruleId":"1166","severity":1,"message":"1169","line":26,"column":13,"nodeType":"1146","endLine":26,"endColumn":81},{"ruleId":"1166","severity":1,"message":"1170","line":28,"column":13,"nodeType":"1146","endLine":28,"endColumn":79},{"ruleId":"1089","severity":1,"message":"1098","line":1,"column":10,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":1,"column":26,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1098","line":1,"column":10,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":1,"column":26,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1154","severity":1,"message":"1155","line":6,"column":3,"nodeType":"1156","messageId":"1157","endLine":8,"endColumn":4},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1171","line":31,"column":9,"nodeType":"1091","messageId":"1092","endLine":31,"endColumn":11},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1100","line":4,"column":10,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":16},{"ruleId":"1172","severity":1,"message":"1173","line":22,"column":5,"nodeType":"1174","endLine":22,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1172","severity":1,"message":"1173","line":20,"column":5,"nodeType":"1174","endLine":20,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1150","line":10,"column":9,"nodeType":"1091","messageId":"1092","endLine":10,"endColumn":12},{"ruleId":"1089","severity":1,"message":"1112","line":1,"column":10,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1100","line":4,"column":10,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1175","line":7,"column":8,"nodeType":"1091","messageId":"1092","endLine":7,"endColumn":18},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1176","line":3,"column":10,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":24},{"ruleId":"1126","severity":1,"message":"1127","line":165,"column":9,"nodeType":"1128","messageId":"1129","endLine":180,"endColumn":10},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1100","line":4,"column":10,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1103","line":5,"column":8,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1105","line":10,"column":9,"nodeType":"1091","messageId":"1092","endLine":10,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1150","line":10,"column":9,"nodeType":"1091","messageId":"1092","endLine":10,"endColumn":12},{"ruleId":"1089","severity":1,"message":"1098","line":1,"column":10,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":1,"column":26,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1158","line":2,"column":13,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1159","line":3,"column":13,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":27},{"ruleId":"1089","severity":1,"message":"1177","line":4,"column":13,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1123","line":1,"column":8,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1166","severity":1,"message":"1178","line":40,"column":17,"nodeType":"1146","endLine":40,"endColumn":66},{"ruleId":"1089","severity":1,"message":"1150","line":9,"column":9,"nodeType":"1091","messageId":"1092","endLine":9,"endColumn":12},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1100","line":5,"column":10,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1179","line":6,"column":8,"nodeType":"1091","messageId":"1092","endLine":6,"endColumn":21},{"ruleId":"1089","severity":1,"message":"1180","line":7,"column":13,"nodeType":"1091","messageId":"1092","endLine":7,"endColumn":28},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1154","severity":1,"message":"1155","line":4,"column":3,"nodeType":"1156","messageId":"1157","endLine":6,"endColumn":4},{"ruleId":"1089","severity":1,"message":"1181","line":5,"column":9,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1123","line":1,"column":8,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1182","line":3,"column":10,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":18},{"ruleId":"1126","severity":1,"message":"1127","line":30,"column":3,"nodeType":"1128","messageId":"1129","endLine":37,"endColumn":4},{"ruleId":"1126","severity":1,"message":"1127","line":56,"column":3,"nodeType":"1128","messageId":"1129","endLine":102,"endColumn":4},{"ruleId":"1126","severity":1,"message":"1127","line":60,"column":9,"nodeType":"1128","messageId":"1129","endLine":76,"endColumn":10},{"ruleId":"1183","severity":1,"message":"1184","line":81,"column":13,"nodeType":"1091","messageId":"1185","endLine":81,"endColumn":23},{"ruleId":"1126","severity":1,"message":"1127","line":82,"column":9,"nodeType":"1128","messageId":"1129","endLine":99,"endColumn":10},{"ruleId":"1186","severity":1,"message":"1187","line":96,"column":62,"nodeType":"1188","messageId":"1189","endLine":96,"endColumn":64},{"ruleId":"1186","severity":1,"message":"1187","line":97,"column":31,"nodeType":"1188","messageId":"1189","endLine":97,"endColumn":33},{"ruleId":"1190","severity":1,"message":"1191","line":104,"column":3,"nodeType":"1192","messageId":"1193","endLine":105,"endColumn":18},{"ruleId":"1194","severity":1,"message":"1195","line":104,"column":3,"nodeType":"1091","messageId":"1196","endLine":104,"endColumn":5,"fix":"1197"},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1105","line":10,"column":9,"nodeType":"1091","messageId":"1092","endLine":10,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1100","line":1,"column":10,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1093","line":3,"column":8,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1198","line":71,"column":9,"nodeType":"1091","messageId":"1092","endLine":71,"endColumn":10},{"ruleId":"1089","severity":1,"message":"1103","line":5,"column":8,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1199","line":2,"column":8,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1098","line":3,"column":10,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":3,"column":26,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":3,"column":38,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1093","line":6,"column":8,"nodeType":"1091","messageId":"1092","endLine":6,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1176","line":7,"column":10,"nodeType":"1091","messageId":"1092","endLine":7,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1200","line":9,"column":13,"nodeType":"1091","messageId":"1092","endLine":9,"endColumn":21},{"ruleId":"1089","severity":1,"message":"1201","line":10,"column":13,"nodeType":"1091","messageId":"1092","endLine":10,"endColumn":21},{"ruleId":"1089","severity":1,"message":"1103","line":11,"column":8,"nodeType":"1091","messageId":"1092","endLine":11,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1100","line":12,"column":10,"nodeType":"1091","messageId":"1092","endLine":12,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1175","line":8,"column":8,"nodeType":"1091","messageId":"1092","endLine":8,"endColumn":18},{"ruleId":"1089","severity":1,"message":"1171","line":28,"column":9,"nodeType":"1091","messageId":"1092","endLine":28,"endColumn":11},{"ruleId":"1089","severity":1,"message":"1202","line":1,"column":13,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1203","line":15,"column":13,"nodeType":"1091","messageId":"1092","endLine":15,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1204","line":16,"column":13,"nodeType":"1091","messageId":"1092","endLine":16,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1101","line":4,"column":18,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1103","line":5,"column":8,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1104","line":7,"column":8,"nodeType":"1091","messageId":"1092","endLine":7,"endColumn":20},{"ruleId":"1089","severity":1,"message":"1205","line":12,"column":10,"nodeType":"1091","messageId":"1092","endLine":12,"endColumn":27},{"ruleId":"1089","severity":1,"message":"1105","line":14,"column":9,"nodeType":"1091","messageId":"1092","endLine":14,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1105","line":10,"column":9,"nodeType":"1091","messageId":"1092","endLine":10,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1126","severity":1,"message":"1127","line":57,"column":5,"nodeType":"1128","messageId":"1129","endLine":64,"endColumn":6},{"ruleId":"1089","severity":1,"message":"1150","line":10,"column":9,"nodeType":"1091","messageId":"1092","endLine":10,"endColumn":12},{"ruleId":"1089","severity":1,"message":"1123","line":1,"column":8,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1206","line":1,"column":8,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":14},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1100","line":4,"column":10,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1101","line":4,"column":18,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1207","line":7,"column":10,"nodeType":"1091","messageId":"1092","endLine":7,"endColumn":23},{"ruleId":"1089","severity":1,"message":"1105","line":10,"column":9,"nodeType":"1091","messageId":"1092","endLine":10,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1171","line":31,"column":9,"nodeType":"1091","messageId":"1092","endLine":31,"endColumn":11},{"ruleId":"1089","severity":1,"message":"1199","line":3,"column":8,"nodeType":"1091","messageId":"1092","endLine":3,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1098","line":4,"column":10,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":4,"column":26,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":4,"column":38,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":44},{"ruleId":"1183","severity":1,"message":"1208","line":20,"column":7,"nodeType":"1091","messageId":"1185","endLine":20,"endColumn":11},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1171","line":27,"column":9,"nodeType":"1091","messageId":"1092","endLine":27,"endColumn":11},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1209","line":2,"column":13,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":28},{"ruleId":"1089","severity":1,"message":"1090","line":1,"column":38,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1123","line":1,"column":8,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1100","line":4,"column":10,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":16},{"ruleId":"1089","severity":1,"message":"1123","line":1,"column":8,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":15},{"ruleId":"1089","severity":1,"message":"1098","line":2,"column":10,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":24},{"ruleId":"1089","severity":1,"message":"1099","line":2,"column":26,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":2,"column":38,"nodeType":"1091","messageId":"1092","endLine":2,"endColumn":44},{"ruleId":"1089","severity":1,"message":"1102","line":4,"column":27,"nodeType":"1091","messageId":"1092","endLine":4,"endColumn":32},{"ruleId":"1089","severity":1,"message":"1210","line":5,"column":10,"nodeType":"1091","messageId":"1092","endLine":5,"endColumn":26},{"ruleId":"1089","severity":1,"message":"1103","line":6,"column":8,"nodeType":"1091","messageId":"1092","endLine":6,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1104","line":7,"column":8,"nodeType":"1091","messageId":"1092","endLine":7,"endColumn":20},{"ruleId":"1089","severity":1,"message":"1175","line":8,"column":8,"nodeType":"1091","messageId":"1092","endLine":8,"endColumn":18},{"ruleId":"1089","severity":1,"message":"1105","line":12,"column":9,"nodeType":"1091","messageId":"1092","endLine":12,"endColumn":15},{"ruleId":"1166","severity":1,"message":"1211","line":30,"column":14,"nodeType":"1146","endLine":30,"endColumn":49},{"ruleId":"1089","severity":1,"message":"1212","line":1,"column":10,"nodeType":"1091","messageId":"1092","endLine":1,"endColumn":19},"no-unused-vars","'action' is defined but never used.","Identifier","unusedVar","'TextView' is defined but never used.","no-native-reassign",["1213"],"no-negated-in-lhs",["1214"],"'makeObservable' is defined but never used.","'observable' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'InputView' is defined but never used.","'CheckboxView' is defined but never used.","'Option' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.",["1213"],["1214"],["1213"],["1214"],"'message' is defined but never used.",["1213"],["1214"],["1213"],["1214"],["1213"],["1214"],["1213"],["1214"],["1213"],["1214"],"'Setting' is defined but never used.",["1213"],["1214"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'MassColumn' is defined but never used.","'util' is defined but never used.","'col' is assigned a value but never used.","'CompView1' is defined but never used.","'CompVM1' is defined but never used.",["1213"],["1214"],"'SettingInputVM' is defined but never used.","'testUtils' is defined but never used.","'NumberFilterType' is assigned a value but never used.","'valueType' is assigned a value but never used.","'numberFilterType' is assigned a value but never used.","'stringFilterType' is assigned a value but never used.","'values' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'mif' is defined but never used.",["1213"],["1214"],"'obj' is assigned a value but never used.",["1213"],["1214"],"'ColumnVM' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'filterVMUtil' is defined but never used.","'checkboxVMUtil' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",["1213"],["1214"],"react/jsx-pascal-case","Imported JSX component Workpackage_DictView must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component ElementFilterSetting_DictView must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component MassExportSetting_DictView must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component MassGroupSetting_DictView must be in PascalCase or SCREAMING_SNAKE_CASE","'wp' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'SelectView' is defined but never used.","'renderToString' is defined but never used.","'selectVMUtil' is defined but never used.","Imported JSX component Phase_DictView must be in PascalCase or SCREAMING_SNAKE_CASE","'FloatItemView' is defined but never used.","'floatItemVMUtil' is defined but never used.","'valueSettingVMs' is assigned a value but never used.","'reaction' is defined but never used.","no-redeclare","'filterType' is already defined.","redeclared","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'L1:' is defined but never used.","unused",{"range":"1215","text":"1216"},"'x' is assigned a value but never used.","'ReactDOM' is defined but never used.","'viewType' is defined but never used.","'htmlUtil' is defined but never used.","'api' is defined but never used.","'fvt' is defined but never used.","'sft' is defined but never used.","'CloseCircleFilled' is defined but never used.","'Column' is defined but never used.","'MultiSelectVM' is defined but never used.","'data' is already defined.","'workpackageUtil' is defined but never used.","'PlusCircleFilled' is defined but never used.","Imported JSX component MGS_FieldView must be in PascalCase or SCREAMING_SNAKE_CASE","'SettingVM' is defined but never used.","no-global-assign","no-unsafe-negation",[2947,2954],""]